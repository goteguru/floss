
@incollection{aaltonen_influence_2007,
  title = {Influence in the {{Linux}} Kernel Community},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Aaltonen, Timo and Jokinen, Jyke},
  date = {2007},
  pages = {203--208},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_16},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5MMA96SG/chp%3A10.1007%2F978-0-387-72486-7_16.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{aaron_weiss_politics_2001,
  title = {The {{Politics}} of {{Free}} ({{Software}})},
  author = {{Aaron Weiss}},
  date = {2001-09},
  journaltitle = {netWorker},
  volume = {5},
  pages = {26--31},
  issn = {1091-3556},
  doi = {10.1145/383719.383727},
  url = {http://doi.acm.org/10.1145/383719.383727},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W82KRC4P/2001 - The Politics of Free (Software).pdf},
  number = {3}
}

@inproceedings{abate_adoption_2017,
  title = {Adoption of {{Academic Tools}} in {{Open Source Communities}}: {{The Debian Case Study}}},
  shorttitle = {Adoption of {{Academic Tools}} in {{Open Source Communities}}},
  booktitle = {Open {{Source Systems}}: {{Towards Robust Practices}}},
  author = {Abate, Pietro and Cosmo, Roberto Di},
  date = {2017-05-22},
  pages = {139--150},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-57735-7_14},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-57735-7_14},
  urldate = {2018-08-15},
  abstract = {Component repositories play a key role in the open software ecosystem. Managing the evolution of these repositories is a challenging task, and maintainers are confronted with a number of complex issues that need automatic tools to be adressed properly.In this paper, we present an overview of 10 years of research in this field and the process leading to the adoption of our tools in a FOSS community. We focus on the Debian distribution and in particular we look at the issues arising during the distribution lifecycle: ensuring buildability of source packages, detecting packages that cannot be installed and bootstrapping the distribution on a new architecture. We present three tools, distcheck, buildcheck and botch, that we believe of general interest for other open source component repositories.The lesson we have learned during this journey may provide useful guidance for researchers willing to see their tools broadly adopted by the community.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3AHCYYCT/Abate and Cosmo - 2017 - Adoption of Academic Tools in Open Source Communit.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z4S8GD9V/978-3-319-57735-7_14.html},
  isbn = {978-3-319-57734-0 978-3-319-57735-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@article{abate_dependency_2012,
  title = {Dependency Solving: {{A}} Separate Concern in Component Evolution Management},
  shorttitle = {Dependency Solving},
  author = {Abate, Pietro and Di Cosmo, Roberto and Treinen, Ralf and Zacchiroli, Stefano},
  date = {2012-10},
  journaltitle = {Journal of Systems and Software},
  volume = {85},
  pages = {2228--2240},
  issn = {01641212},
  doi = {10.1016/j.jss.2012.02.018},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121212000477},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X2BGTIUV/1-s2.0-S0164121212000477-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {10}
}

@misc{abbadi_security_nodate,
  title = {Security {{Metrics}}- {{What}} Can We Measure},
  author = {Abbadi, Zed},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SV6D9HEE/Security_Metics-_What_can_we_measure-_Zed_Abbadi.pdf}
}

@inproceedings{abdou_replication_2016,
  title = {A Replication Study: Mining a Proprietary Temporal Defect Dataset},
  shorttitle = {A Replication Study},
  booktitle = {Proceedings of the 2nd {{International Workshop}} on {{Software Analytics}}},
  author = {Abdou, Tamer and Erdem, Atakan and Bener, Ayse and Neal, Adam},
  date = {2016-11-13},
  pages = {15--21},
  publisher = {{Association for Computing Machinery}},
  location = {{Seattle, WA, USA}},
  doi = {10.1145/2989238.2989246},
  url = {https://doi.org/10.1145/2989238.2989246},
  urldate = {2020-04-22},
  abstract = {We conduct a replication study to define temporal patterns of activity sequences in a proprietary dataset, and compare them with an open-source dataset. Temporal bug repository data may give many insights in the context of root-cause analysis of defects. Observing activities based on temporal changes enables the formation of temporal activity sequences. We use datasets from an issue tracking system repository of a proprietary and enterprise level software life-cycle management tool. We define the temporal patterns of activity sequences and compare them with Firefox data. On the basis of these analyses, we observe that some activities of the sequences are more critical than the others in the context of proprietary projects. Similarities and differences of the relevant activities are highlighted and explained. Integrating results from various empirical studies helped us in gradually generalizing evidences observed in the original study, and identifying the consistencies between open-source projects and proprietary ones. Comprehending temporal activity sequences assist software quality teams to optimize the allocation of their human resources as well on manage project schedules more efficiently.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7A9TUSSJ/Abdou et al. - 2016 - A replication study mining a proprietary temporal.pdf},
  isbn = {978-1-4503-4395-4},
  keywords = {activity set,bug tracking,defect repository,temporal sequence},
  series = {{{SWAN}} 2016}
}

@article{aberdour_achieving_2007,
  title = {Achieving Quality in Open-Source Software},
  author = {Aberdour, Mark},
  date = {2007},
  journaltitle = {Software, IEEE},
  volume = {24},
  pages = {58--64},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4052554},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UA72GKEJ/04052554.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  number = {1}
}

@misc{abramatic_building_2018,
  title = {Building the Universal Archive of Source Code},
  author = {Abramatic, Jean-François and Di Cosmo, Roberto and Zacchiroli, Stefano},
  date = {2018-09-26},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3183558},
  urldate = {2020-04-22},
  abstract = {A global collaborative project for the benefit of all.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PBJ3PEYT/Abramatic et al. - 2018 - Building the universal archive of source code.pdf}
}

@inproceedings{achilleos_open_2007,
  title = {An Open Source Domain-Specific Tools Framework to Support Model Driven Development of {{OSS}}},
  booktitle = {Model {{Driven Architecture}}-{{Foundations}} and {{Applications}}},
  author = {Achilleos, Achilleas and Georgalas, Nektarios and Yang, Kun},
  date = {2007},
  pages = {1--16},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-72901-3_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/748T2MI4/chp%3A10.1007%2F978-3-540-72901-3_1.pdf}
}

@inproceedings{achuthan_security_2014,
  title = {Security Vulnerabilities in Open Source Projects: {{An India}} Perspective},
  shorttitle = {Security Vulnerabilities in Open Source Projects},
  booktitle = {Information and {{Communication Technology}} ({{ICoICT}}), 2014 2nd {{International Conference}} On},
  author = {Achuthan, Krishnashree and SudhaRavi, Sreekutty and Kumar, Ravindra and Raman, Raghu},
  date = {2014},
  pages = {18--23},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6914033},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TI3VQBKE/06914033.pdf},
  keywords = {_SMS_untagged,Forrás2,nyílt forrás,open source,security,security defects,vulnerability}
}

@unpublished{acs_nyilt_2010,
  title = {Nyílt Forráskódú Pilot Projekt a {{Nemzeti Fejlesztési}} És {{Gazdasági Minisztériumban}}},
  author = {Ács, János},
  year = {2010. április 15.},
  url = {https://mny2.hu/konferencia/downloads/nfgm_szoftver_pilot.pdf},
  urldate = {2013-05-05},
  eventtitle = {Nyílt {{Szoftverek}} a {{Közigazgatásban}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KI66FSCZ/nfgm_szoftver_pilot.pdf},
  venue = {{Budapest}}
}

@incollection{adams_detecting_2008,
  title = {Detecting Agility of Open Source Projects through Developer Engagement},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Adams, Paul J. and Capiluppi, Andrea and de Groot, Adriaan},
  date = {2008},
  pages = {333--341},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_30},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NAHJDD2S/chp%3A10.1007%2F978-0-387-09684-1_30.pdf},
  keywords = {_SMS_untagged,Mintamunka,nyílt forrás,open source,statisztika},
  options = {useprefix=true}
}

@article{adams_empirical_2015,
  title = {An Empirical Study of Integration Activities in Distributions of Open Source Software},
  author = {Adams, Bram and Kavanagh, Ryan and Hassan, Ahmed E. and German, Daniel M.},
  date = {2015-03-31},
  journaltitle = {Empirical Software Engineering},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-015-9371-y},
  url = {http://link.springer.com/10.1007/s10664-015-9371-y},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BFHZA56D/art%3A10.1007%2Fs10664-015-9371-y.pdf},
  keywords = {_SMS_untagged,hivatkozások,integration,nyílt forrás,open source},
  langid = {english}
}

@inproceedings{adanna_ezeala_open_2008,
  title = {Open Source Software Development: Expectations and Experience from a Small Development Project},
  booktitle = {Proceedings of the 46th {{Annual Southeast Regional Conference}} on {{XX}}},
  author = {{Adanna Ezeala} and {Hyunju Kim} and {Loretta A. Moore}},
  date = {2008},
  publisher = {{ACM Press}},
  location = {{New York, N.Y.}},
  url = {http://dx.doi.org/10.1145/1593105},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KJ6ZUFBA/p243-ezeala.pdf},
  isbn = {978-1-60558-105-7},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@article{adat_security_2017,
  title = {Security in {{Internet}} of {{Things}}: Issues, Challenges, Taxonomy, and Architecture},
  shorttitle = {Security in {{Internet}} of {{Things}}},
  author = {Adat, Vipindev and Gupta, B. B.},
  date = {2017-06-13},
  journaltitle = {Telecommunication Systems},
  shortjournal = {Telecommun Syst},
  pages = {1--19},
  issn = {1018-4864, 1572-9451},
  doi = {10.1007/s11235-017-0345-9},
  url = {https://link.springer.com/article/10.1007/s11235-017-0345-9},
  urldate = {2017-08-17},
  abstract = {Internet technology is very pervasive today. The number of devices connected to the Internet, those with a digital identity, is increasing day by day. With the developments in the technology, Internet of Things (IoT) become important part of human life. However, it is not well defined and secure. Now, various security issues are considered as major problem for a full-fledged IoT environment. There exists a lot of security challenges with the proposed architectures and the technologies which make the backbone of the Internet of Things. Some efficient and promising security mechanisms have been developed to secure the IoT environment, however, there is a lot to do. The challenges are ever increasing and the solutions have to be ever improving. Therefore, aim of this paper is to discuss the history, background, statistics of IoT and security based analysis of IoT architecture. In addition, we will provide taxonomy of security challenges in IoT environment and taxonomy of various defense mechanisms. We conclude our paper discussing various research challenges that still exist in the literature, which provides better understanding of the problem, current solution space, and future research directions to defend IoT against different attacks.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WTMQKG6P/Adat és Gupta - 2017 - Security in Internet of Things issues, challenges.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E8B7H5AZ/s11235-017-0345-9.html},
  langid = {english}
}

@article{adewumi_review_2013,
  title = {A {{Review}} of {{Models}} for {{Evaluating Quality}} in {{Open Source Software}}},
  author = {Adewumi, Adewole and Misra, Sanjay and Omoregbe, Nicholas},
  date = {2013},
  journaltitle = {IERI Procedia},
  volume = {4},
  pages = {88--92},
  issn = {22126678},
  doi = {10.1016/j.ieri.2013.11.014},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S2212667813000178},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MWR2E3U2/1-s2.0-S2212667813000178-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@inproceedings{afzali_-git-imate_2018,
  title = {Le-Git-Imate: {{Towards Verifiable Web}}-Based {{Git Repositories}}},
  shorttitle = {Le-Git-Imate},
  booktitle = {Proceedings of the 2018 on {{Asia Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Afzali, Hammad and Torres-Arias, Santiago and Curtmola, Reza and Cappos, Justin},
  date = {2018-05-29},
  pages = {469--482},
  publisher = {{Association for Computing Machinery}},
  location = {{Incheon, Republic of Korea}},
  doi = {10.1145/3196494.3196523},
  url = {https://doi.org/10.1145/3196494.3196523},
  urldate = {2020-04-22},
  abstract = {Web-based Git hosting services such as GitHub and GitLab are popular choices to manage and interact with Git repositories. However, they lack an important security feature - the ability to sign Git commits. Users instruct the server to perform repository operations on their behalf and have to trust that the server will execute their requests faithfully. Such trust may be unwarranted though because a malicious or a compromised server may execute the requested actions in an incorrect manner, leading to a different state of the repository than what the user intended. In this paper, we show a range of high-impact attacks that can be executed stealthily when developers use the web UI of a Git hosting service to perform common actions such as editing files or merging branches. We then propose le-git-imate, a defense against these attacks which provides security guarantees comparable and compatible with Git's standard commit signing mechanism. We implement le-git-imate as a Chrome browser extension. le-git-imate does not require changes on the server side and can thus be used immediately. It also preserves current workflows used in Github/GitLab and does not require the user to leave the browser, and it allows anyone to verify that the server's actions faithfully follow the user's requested actions. Moreover, experimental evaluation using the browser extension shows that le-git-imate has comparable performance with Git's standard commit signature mechanism. With our solution in place, users can take advantage of GitHub/GitLab's web-based features without sacrificing security, thus paving the way towards verifiable web-based Git repositories.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/77QBNLN9/Afzali et al. - 2018 - le-git-imate Towards Verifiable Web-based Git Rep.pdf},
  isbn = {978-1-4503-5576-6},
  keywords = {browser extension,commit signature,github,verification record},
  series = {{{ASIACCS}} '18}
}

@inproceedings{agerfalk_assessing_2005,
  title = {Assessing the Role of Open Source Software in the {{European}} Secondary Software Sector: A Voice from Industry},
  shorttitle = {Assessing the Role of Open Source Software in the {{European}} Secondary Software Sector},
  booktitle = {Proceedings of the 1st {{International Conference}} on {{Open Source Systems}} ({{Scotto}}, {{M}}. and {{Succi}}, {{G}}. {{Eds}}.)},
  author = {Ågerfalk, Pär J. and Deverell, Andrea and Fitzgerald, Brian and Morgan, Lorraine},
  date = {2005},
  pages = {82--87},
  url = {http://www.brian-fitzgerald.com/wp-content/uploads/2011/07/2005_Agerfalk-best-paper.pdf},
  urldate = {2014-05-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SXZPCF45/2005_Agerfalk-best-paper.pdf},
  keywords = {commercial open source,grounded research,open source}
}

@book{agerfalk_open_2010,
  title = {Open Source Software - New Horizons 6th {{International IFIP WG}} 2.13 {{Conference}} on {{Open Source Systems}}, {{OSS}} 2010, {{Notre Dame}}, {{IN}}, {{USA}}, {{May}} 30 - {{June}} 2, 2010 ; Proceedings},
  author = {°Agerfalk, Pär and {International Federation for Information Processing} and {Working Group on Open Source Software} and {International Conference on Open Source Systems}},
  date = {2010},
  publisher = {{Springer}},
  location = {{Berlin ; Heidelberg ; New York, NY}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MFI3EA4I/bookOpen Source Software New Horizons.pdf},
  isbn = {978-3-642-13243-8 3-642-13243-X 978-3-642-13244-5 3-642-13244-8},
  langid = {english}
}

@inproceedings{agrawal_we_2018,
  ids = {agrawal\_we\_2018-1},
  title = {We {{Don}}'t {{Need Another Hero}}?: {{The Impact}} of "{{Heroes}}" on {{Software Development}}},
  shorttitle = {We {{Don}}'t {{Need Another Hero}}?},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice Track}} ({{ICSE}}-{{SEIP}})},
  author = {Agrawal, Amritanshu and Rahman, Akond and Krishna, Rahul and Sobran, Alexander and Menzies, Tim},
  date = {2018-05},
  pages = {245--253},
  abstract = {A software project has "Hero Developers" when 80\% of contributions are delivered by 20\% of the developers. Are such heroes a good idea? Are too many heroes bad for software quality? Is it better to have more/less heroes for different kinds of projects? To answer these questions, we studied 661 open source projects from Public open source software (OSS) Github and 171 projects from an Enterprise Github. We find that hero projects are very common. In fact, as projects grow in size, nearly all project become hero projects. These findings motivated us to look more closely at the effects of heroes on software development. Analysis shows that the frequency to close issues and bugs are not significantly affected by the presence of project type (Public or Enterprise). Similarly, the time needed to resolve an issue/bug/enhancement is not affected by heroes or project type. This is a surprising result since, before looking at the data, we expected that increasing heroes on a project will slow down howfast that project reacts to change. However, we do find a statistically significant association between heroes, project types, and enhancement resolution rates. Heroes do not affect enhancement resolution rates in Public projects. However, in Enterprise projects, heroes increase the rate at which projects complete enhancements. In summary, our empirical results call for a revision of a long-held truism in software engineering. Software heroes are far more common and valuable than suggested by the literature, particularly for medium to large Enterprise developments. Organizations should reflect on better ways to find and retain more of these heroes.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice Track}} ({{ICSE}}-{{SEIP}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9NZXBA4N/Agrawal et al. - 2018 - We Don't Need Another Hero The Impact of Heroes.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QQEDSIXJ/Agrawal et al. - 2018 - We don't need another hero the impact of heroes.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CNMVR47U/8449257.html},
  keywords = {bug,Bug,business data processing,Collaboration,commit,Commit,Computer bugs,core,Core,Data mining,Enterprise projects,github,Github,hero,Hero,Hero Developers,hero projects,issue,Issue,Measurement,medium to large enterprise developments,open source projects,Open source software,productivity,Productivity,program debugging,project management,projects complete enhancements,public domain software,Public open source software Github,Public projects,software development,Software engineering,software heroes,software maintenance,software project,software quality}
}

@article{ahmad_two_2008,
  title = {Two Years of Broken Crypto: Debian's Dress Rehearsal for a Global {{PKI}} Compromise},
  shorttitle = {Two Years of Broken Crypto},
  author = {Ahmad, David},
  date = {2008},
  journaltitle = {Security \& Privacy, IEEE},
  volume = {6},
  pages = {70--73},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4639029},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JS6ZCGB2/04639029.pdf},
  keywords = {_SMS_untagged,crypto,nyílt forrás,open source,security,vulnerability},
  number = {5}
}

@inproceedings{ahmed_case_2017,
  title = {A Case Study of Motivations for Corporate Contribution to {{FOSS}}},
  booktitle = {2017 {{IEEE Symposium}} on {{Visual Languages}} and {{Human}}-{{Centric Computing}} ({{VL}}/{{HCC}})},
  author = {Ahmed, Iftekhar and Forrest, Darren and Jensen, Carlos},
  date = {2017-10},
  pages = {223--231},
  issn = {1943-6106},
  doi = {10.1109/VLHCC.2017.8103471},
  abstract = {Free/Open Source Software developers come from a myriad of different backgrounds, and are driven to contribute to projects for a variety of different reasons, including compensation from corporations or foundations. Motivation can have a dramatic impact on how and what contribution an individual makes, as well as how tenacious they are. These contributions may align with the needs of the developer, the community, the organization funding the developer, or all of the above. Understanding how corporate sponsorship affects the social dynamics and evolution of Free/Open Source code and community is critical to fostering healthy communities. We present a case study of corporations contributing to the Linux Kernel. We find that corporate contributors contribute more code, but are less likely to participate in non-coding activities. This knowledge will help project leaders to better understand the dynamics of sponsorship, and help to steer resources.},
  eventtitle = {2017 {{IEEE Symposium}} on {{Visual Languages}} and {{Human}}-{{Centric Computing}} ({{VL}}/{{HCC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NNTQAJ29/Ahmed et al. - 2017 - A case study of motivations for corporate contribu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ISX422IX/8103471.html},
  keywords = {Bug Reports,Commit Messages,Companies,Computer bugs,corporate contribution,Corporate Participation,corporate sponsorship,Electronic mail,FOSS,free/open source code,free/open source software developers,Kernel,Linux,Mailing list,Mining Software Repositories,public domain software,social dynamics,software engineering,Visualization}
}

@incollection{ahmed_exploration_2014,
  title = {An {{Exploration}} of {{Code Quality}} in {{FOSS Projects}}},
  booktitle = {Open {{Source Software}}: {{Mobile Open Source Technologies}}},
  author = {Ahmed, Iftekhar and Ghorashi, Soroush and Jensen, Carlos},
  date = {2014},
  pages = {181--190},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-55128-4_26},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JHC3SJBB/chp%3A10.1007%2F978-3-642-55128-4_26.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{ain_systematic_2019,
  title = {A {{Systematic Review}} on {{Code Clone Detection}}},
  author = {Ain, Qurat Ul and Butt, Wasi Haider and Anwar, Muhammad Waseem and Azam, Farooque and Maqbool, Bilal},
  date = {2019},
  journaltitle = {IEEE Access},
  volume = {7},
  pages = {86121--86144},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2019.2918202},
  abstract = {Code cloning refers to the duplication of source code. It is the most common way of reusing source code in software development. If a bug is identified in one segment of code, all the similar segments need to be checked for the same bug. Consequently, this cloning process may lead to bug propagation that significantly affects the maintenance cost. By considering this problem, code clone detection (CCD) appears as an active area of research. Consequently, there is a strong need to investigate the latest techniques, trends, and tools in the domain of CCD. Therefore, in this paper, we comprehensively inspect the latest tools and techniques utilized for the detection of code clones. Particularly, a systematic literature review (SLR) is performed to select and investigate 54 studies pertaining to CCD. Consequently, six categories are defined to incorporate the selected studies as per relevance, i.e., textual approaches (12), lexical approaches (8), tree-based approaches (3), metric-based approaches (7), semantic approaches (7), and hybrid approaches (17). We identified and analyzed 26 CCD tools, i.e., 13 existing and 13 proposed/developed. Moreover, 62 open-source subject systems whose source code is utilized for the CCD are presented. It is concluded that there exist several studies to detect type1, type2, type3, and type4 clones individually. However, there is a need to develop novel approaches with complete tool support in order to detect all four types of clones collectively. Furthermore, it is also required to introduce more approaches to simplify the development of a program dependency graph (PDG) while dealing with the detection of the type4 clones.},
  eventtitle = {{{IEEE Access}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ICM7YKEV/Ain et al. - 2019 - A Systematic Review on Code Clone Detection.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q352ZGLE/8719895.html},
  keywords = {bug propagation,CCD,CCD tools,Charge coupled devices,Cloning,code clone detection,code clone types,Computer bugs,Databases,lexical approaches,metric-based approaches,open-source subject systems,PDG,program debugging,program dependency graph,public domain software,semantic approaches,Semantics,SLR,Software,software development,software metrics,software reusability,source code (software),source code reusing,systematic literature review,Tools,tree-based approaches,trees (mathematics)}
}

@book{airmic_risk_2002,
  title = {A {{Risk Management Standard}}},
  author = {{AIRMIC} and {ALARM} and {IRM}},
  date = {2002},
  url = {http://www.ferma.eu/risk-management/standards/risk-management-standard/},
  urldate = {2014-05-10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5WS2CMAI/a-risk-management-standard-english-version.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NIHE29J4/1-Risk_Management_Standard_030820.pdf},
  keywords = {Risk management,Standard}
}

@book{aizuddin_common_2001,
  title = {The Common Criteria {{ISO}}/{{IEC}} 15408–the Insight, Some Thoughts, Questions and Issues},
  author = {Aizuddin, Ariffuddin},
  date = {2001},
  url = {http://www.cybersecurity.my/data/content_files/13/68.pdf},
  urldate = {2015-10-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HFSPJTZ/common-criteria-iso-iec-15408-insight-thoughts-questions-issues-545.pdf},
  keywords = {CC,Forrás2,Security framework}
}

@inproceedings{ajazmoharkan_internet_2017,
  title = {Internet of {{Things}} and Its Applications in {{E}}-Learning},
  booktitle = {2017 3rd {{International Conference}} on {{Computational Intelligence Communication Technology}} ({{CICT}})},
  author = {AjazMoharkan, Z. and Choudhury, T. and Gupta, S. C. and Raj, G.},
  date = {2017-02},
  pages = {1--5},
  doi = {10.1109/CIACT.2017.7977333},
  abstract = {Internet of Things (IoT) refers to technological advancements in the networking with the help of which real world objects can be connected to communicate with each other over the internet. The objects that are connected are known as `things'. This interconnection of various things over the internet with the capability of sending and receiving information has a wide number of applications in almost every field like healthcare, business, transportation, agriculture, management and education. This paper will discuss about the Internet of Things (IoT) in general, some of its applications with particular emphasis on E-learning. Finally the paper gives a model of Smart Learning using the IoT and the gamification technique of E-Learning.},
  eventtitle = {2017 3rd {{International Conference}} on {{Computational Intelligence Communication Technology}} ({{CICT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6DWFR89U/AjazMoharkan és mtsai. - 2017 - Internet of Things and its applications in E-learn.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B9WBRD8E/7977333.html},
  keywords = {agriculture,applications of IoT,business,computer aided instruction,e-learning,Electronic learning,gamification technique,healthcare,Internet of Things,IoT,IoT architecture,Medical services,Monitoring,real world objects,serious games (computing),smart learning,technological advancements,Temperature sensors,transportation,ubiquitous learning}
}

@article{ajila_empirical_2007,
  title = {Empirical Study of the Effects of Open Source Adoption on Software Development Economics},
  author = {Ajila, Samuel A. and Wu, Di},
  date = {2007-09},
  journaltitle = {Journal of Systems and Software},
  volume = {80},
  pages = {1517--1529},
  issn = {01641212},
  doi = {10.1016/j.jss.2007.01.011},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121207000076},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S2QG9MA8/1-s2.0-S0164121207000076-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {9}
}

@article{akatsu_structured_2018,
  title = {Structured Analysis of the Evaluation Process for Adopting Open-Source Software},
  author = {Akatsu, Shinji and Fujita, Yoshikatu and Kato, Takumi and Tsuda, Kazuhiko},
  date = {2018-01-01},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  volume = {126},
  pages = {1578--1586},
  issn = {1877-0509},
  doi = {10.1016/j.procs.2018.08.131},
  url = {http://www.sciencedirect.com/science/article/pii/S1877050918314091},
  urldate = {2020-04-22},
  abstract = {Open-source software (OSS) has been widely used in the software development process to reduce development cost and development period. However, adopting OSS requires crucial decision-making in terms of various aspects including business, technology, and intellectual property management; these may not be mutually independent and may exhibit a complex set of relationships. This research studies the structured analysis to break down the evaluation criterion axis and the contributing factors when adopting OSS and attempts to clarify the structured evaluation criterion map.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KZ6YQLMK/Akatsu et al. - 2018 - Structured analysis of the evaluation process for .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JJVQ9YZE/S1877050918314091.html},
  keywords = {Decision-Making,Evaluation Process,Intellectual Property Management,Management of Technology,Open-Source Software},
  langid = {english},
  series = {Knowledge-{{Based}} and {{Intelligent Information}} \& {{Engineering Systems}}: {{Proceedings}} of the 22nd {{International Conference}}, {{KES}}-2018, {{Belgrade}}, {{Serbia}}}
}

@article{akbarinasaji_predicting_2018,
  title = {Predicting Bug-Fixing Time: {{A}} Replication Study Using an Open Source Software Project},
  shorttitle = {Predicting Bug-Fixing Time},
  author = {Akbarinasaji, Shirin and Caglayan, Bora and Bener, Ayse},
  date = {2018-02-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {136},
  pages = {173--186},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2017.02.021},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121217300365},
  urldate = {2020-04-22},
  abstract = {Background: On projects with tight schedules and limited budgets, it may not be possible to resolve all known bugs before the next release. Estimates of the time required to fix known bugs (the “bug fixing time”) would assist managers in allocating bug fixing resources when faced with a high volume of bug reports. Aim: In this work, we aim to replicate a model for predicting bug fixing time with open source data from Bugzilla Firefox. Method: To perform the replication study, we follow the replication guidelines put forth by Carver [J. C. Carver, Towards reporting guidelines for experimental replications: a proposal, in: 1st International Workshop on Replication in Empirical Software Engineering, 2010.]. Similar to the original study, we apply a Markov-based model to predict the number of bugs that can be fixed monthly. In addition, we employ Monte-Carlo simulation to predict the total fixing time for a given number of bugs. We then use the k-nearest neighbors algorithm to classify fixing times into slow and fast. Result: The results of the replicated study on Firefox are consistent with those of the original study. The results show that there are similarities in the bug handling behaviour of both systems. Conclusion: We conclude that the model that estimates the bug fixing time is robust enough to be generalized, and we can rely on this model for our future research.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FQX9CMVZ/Akbarinasaji et al. - 2018 - Predicting bug-fixing time A replication study us.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UEXTWUDX/S0164121217300365.html},
  keywords = {Bug fixing time,Deferred bugs,Effort estimation,Replication study,Software maintainability},
  langid = {english}
}

@incollection{akkanen_reusing_2007,
  title = {Reusing an Open Source Application—Practical Experiences with a Mobile {{CRM}} Pilot},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Akkanen, Jyrki and Demeter, Hunor and Eppel, Tamás and Ivánfi, Zoltán and Nurminen, Jukka K. and Stenman, Petri},
  date = {2007},
  pages = {217--222},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B8NQAFGW/chp%3A10.1007%2F978-0-387-72486-7_18.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{al_dallal_predicting_2014,
  title = {Predicting Object-Oriented Class Reuse-Proneness Using Internal Quality Attributes},
  author = {Al Dallal, Jehad and Morasca, Sandro},
  date = {2014-08},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {775--821},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-012-9239-3},
  url = {http://link.springer.com/10.1007/s10664-012-9239-3},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R6JBATFZ/art%3A10.1007%2Fs10664-012-9239-3.pdf},
  langid = {english},
  number = {4}
}

@inproceedings{al-ajlan_evolution_2009,
  title = {The {{Evolution}} of {{Open Source Software Using Eclipse Metrics}}},
  author = {Al-Ajlan, Ajlan},
  date = {2009-06},
  pages = {211--218},
  publisher = {{IEEE}},
  doi = {10.1109/NISS.2009.154},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5260641},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P5RXZA9T/05260641.pdf},
  isbn = {978-0-7695-3687-3},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{al-omari_is_2016,
  title = {Is Code Cloning in Games Really Different?},
  booktitle = {Proceedings of the 31st {{Annual ACM Symposium}} on {{Applied Computing}}},
  author = {Al-omari, Farouq and Roy, Chanchal K.},
  date = {2016-04-04},
  pages = {1512--1519},
  publisher = {{Association for Computing Machinery}},
  location = {{Pisa, Italy}},
  doi = {10.1145/2851613.2851792},
  url = {https://doi.org/10.1145/2851613.2851792},
  urldate = {2020-04-22},
  abstract = {Since there are a tremendous number of similar functionalities related to images, 3D graphics, sounds, and script in games software, there is a common wisdom that there might be more cloned code in games compared to traditional software. Also, there might be more cloned code across games since many of these games share similar strategies and libraries. In this study, we attempt to investigate whether such statements are true by conducting a large empirical study using 32 games and 9 non-games software, written in three different programming languages C, Java, and C\#, for the case of both exact and near-miss clones. Using a hybrid clone detection tool NiCad and a visualization tool VisCad, we examine and compare the cloning status in them and compare it to the non-games, and examine the cloned methods across game engines. The results show that code reuse in open source games is much different from that of other software systems. Specifically, in contrast to the common wisdom, there are fewer function clones in game open source comparing to non-game open source software systems. Similar to non-games open source, we observed that cloning status changes between different programming languages of the games. In addition, there are very fewer clones across games and mostly no clones (no code reuse) across different game engines. But clones exist heavily across recreated (cloned) games.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6H4LY24G/Al-omari and Roy - 2016 - Is code cloning in games really different.pdf},
  isbn = {978-1-4503-3739-7},
  keywords = {game clones,open source games,software clones},
  series = {{{SAC}} '16}
}

@article{alam_interoperability_2011,
  title = {Interoperability of {{Security}}-{{Enabled Internet}} of {{Things}}},
  author = {Alam, Sarfraz and Chowdhury, Mohammad M. R. and Noll, Josef},
  date = {2011-12-01},
  journaltitle = {Wireless Personal Communications},
  shortjournal = {Wireless Pers Commun},
  volume = {61},
  pages = {567--586},
  issn = {0929-6212, 1572-834X},
  doi = {10.1007/s11277-011-0384-6},
  url = {https://link.springer.com/article/10.1007/s11277-011-0384-6},
  urldate = {2017-08-17},
  abstract = {The future Internet will embrace the intelligence of Web 3.0 and the omnipresence of every day connected objects. The later was envisioned as the Internet of Things. Security and interoperability concerns are hindering the service innovations using the Internet of Things. This paper addresses secure access provision to Internet of Things-enabled services and interoperability of security attributes between different administrative domains. In this paper we proposed a layered architecture of Internet of Things framework where a semantically enhanced overlay interlink the other layers and facilitate secure access provision to Internet of Things-enabled services. The main element of semantic overlay is security reasoning through ontologies and semantic rules. Finally the interoperability of security aspect is addressed through ontology and a machine-to-machine platform. This paper provides implementation details of security reasoning and the interoperability aspects and discusses crucial challenges in these areas.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FJ4BAPDQ/Alam és mtsai. - 2011 - Interoperability of Security-Enabled Internet of T.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/29NUIFKG/s11277-011-0384-6.html},
  langid = {english},
  number = {3}
}

@inproceedings{alami_how_2020,
  title = {How {{Do FOSS Communities Decide}} to {{Accept Pull Requests}}?},
  booktitle = {Proceedings of the {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Alami, Adam and Cohn, Marisa Leavitt and Wąisowski, Andrzej},
  date = {2020-04-15},
  pages = {220--229},
  publisher = {{Association for Computing Machinery}},
  location = {{Trondheim, Norway}},
  doi = {10.1145/3383219.3383242},
  url = {https://doi.org/10.1145/3383219.3383242},
  urldate = {2020-04-22},
  abstract = {Pull requests are a method to facilitate review and management of contribution in distributed software development. Software developers author commits, and present them in a pull request to be inspected by maintainers and reviewers. The success and sustainability of communities depends on ongoing contributions, but rejections decrease motivation of contributors. We carried out a a qualitative study to understand the mechanisms of evaluating PRs in open source software (FOSS) communities from developers and maintainers perspective. We interviewed 30 participants from five different FOSS communities. The data shows that acceptance of contributions depends not only on technical criteria, but also significantly on social and strategic aspects. This paper identifies three PR governance styles found in the studied communities: (1) protective, (2) equitable and (3) lenient. Each one of these styles has its particularities. While the protective style values trustworthiness and reliability of the contributor, the lenient style believes in creating a positive and welcoming environment where contributors are mentored to evolve contributions until they meet the community standards. Despite the differences, these governance styles have a commonality, they all safeguard the quality of the software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HA5J2IJ8/Alami et al. - 2020 - How Do FOSS Communities Decide to Accept Pull Requ.pdf},
  isbn = {978-1-4503-7731-7},
  keywords = {code review,community management,decision making,FOSS governance,Open source software,pull request},
  series = {{{EASE}} '20}
}

@inproceedings{alami_influencers_2018,
  ids = {alami\_influencers\_2018-1},
  title = {Influencers of {{Quality Assurance}} in an {{Open Source Community}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 11th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  author = {Alami, Adam and Dittrich, Yvonne and Wasowski, Andrzej},
  date = {2018-05},
  pages = {61--68},
  issn = {2574-1837},
  abstract = {ROS (Robot Operating System) is an open source community in robotics that is developing standard robotics operating system facilities such as hardware abstraction, low-level device control, communication middleware, and a wide range of software components for robotics functionality. This paper studies the quality assurance practices of the ROS community. We use qualitative methods to understand how ideology, priorities of the community, culture, sustainability, complexity, and adaptability of the community affect the implementation of quality assurance practices. Our analysis suggests that software engineering practices require social and cultural alignment and adaptation to the community particularities to achieve seamless implementation in open source environments. This alignment should be incorporated into the design and implementation of quality assurance practices in open source communities.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 11th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M9T38MMT/Alami et al. - 2018 - Influencers of Quality Assurance in an Open Source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SLXFAQPF/Alami et al. - 2018 - Influencers of quality assurance in an open source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/L2D3ANFX/8445538.html},
  keywords = {Computer bugs,low-level device control,open source community,open source software,Open Source Software,operating systems (computers),OSS community,OSS Community,public domain software,quality assurance,Quality assurance,Quality Assurance,quality assurance practices,Robot Operating System,robotics functionality,ROS community,Software,Software engineering,software engineering practices,software quality,standard robotics operating system facilities,Standards,Sustainable development,Testing}
}

@inproceedings{alami_why_2019,
  ids = {alami\_why\_2019-1},
  title = {Why {{Does Code Review Work}} for {{Open Source Software Communities}}?},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Alami, Adam and Leavitt Cohn, Marisa and Wąsowski, Andrzej},
  date = {2019-05},
  pages = {1073--1083},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00111},
  abstract = {Open source software communities have demonstrated that they can produce high quality results. The overall success of peer code review, commonly used in open source projects, has likely contributed strongly to this success. Code review is an emotionally loaded practice, with public exposure of reputation and ample opportunities for conflict. We set off to ask why code review works for open source communities, despite this inherent challenge. We interviewed 21 open source contributors from four communities and participated in meetings of ROS community devoted to implementation of the code review process. It appears that the hacker ethic is a key reason behind the success of code review in FOSS communities. It is built around the ethic of passion and the ethic of caring. Furthermore, we observed that tasks of code review are performed with strong intrinsic motivation, supported by many non-material extrinsic motivation mechanisms, such as desire to learn, to grow reputation, or to improve one's positioning on the job market. In the paper, we describe the study design, analyze the collected data and formulate 20 proposals for how what we know about hacker ethics and human and social aspects of code review, could be exploited to improve the effectiveness of the practice in software projects.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HD7FFEWI/Alami et al. - 2019 - Why does code review work for open source software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NUL2674P/Alami et al. - 2019 - Why Does Code Review Work for Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5Z4C4B9V/8812037.html},
  keywords = {code review,code review process,code review work,Ethics,FOSS communities,Guidelines,human factors,Interviews,motivation,nonmaterial extrinsic motivation mechanisms,open source,open source contributors,open source projects,open source software communities,Open Source; Code Review; Motivation,peer code review,public domain software,Robot kinematics,ROS community,Software,software engineering,Standards}
}

@inproceedings{albreem_green_2017,
  title = {Green Internet of Things ({{IoT}}): {{An}} Overview},
  shorttitle = {Green Internet of Things ({{IoT}})},
  booktitle = {2017 {{IEEE}} 4th {{International Conference}} on {{Smart Instrumentation}}, {{Measurement}} and {{Application}} ({{ICSIMA}})},
  author = {Albreem, M. A. M. and El-Saleh, A. A. and Isa, M. and Salah, W. and Jusoh, M. and Azizan, M. M. and Ali, A.},
  date = {2017-11},
  pages = {1--6},
  doi = {10.1109/ICSIMA.2017.8312021},
  abstract = {Internet of Things (IoT) connects everything in the smart world, and thus, energy consumption of IoT technology is a challenge and attractive research area. Motivated by achieving a low power consumption IoT, a green IoT is proposed. This paper provides an overview regarding green IoT. It also discusses the life cycle of green IoT which contains green design, green production, green utilization, and green recycling. Furthermore, green IoT technologies such as green tags, green sensing networks and green internet technologies are discussed. In addition, studies of IoT in 5G and IoT for smart cities are presented. Finally, future research directions and open challenges about green IoT are presented.},
  eventtitle = {2017 {{IEEE}} 4th {{International Conference}} on {{Smart Instrumentation}}, {{Measurement}} and {{Application}} ({{ICSIMA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JAXGJ9F4/8312021.html},
  keywords = {5G,5G mobile communication,Air pollution,Cloud computing,energy efficiency,green IoT,Green products,Internet of Things,Internet of Things (IoT),RFID tags,smart cities,Wireless sensor networks}
}

@inproceedings{aldaeej_towards_2016,
  title = {Towards Promoting Design and {{UML}} Modeling Practices in the Open Source Community},
  booktitle = {Proceedings of the 38th {{International Conference}} on {{Software Engineering Companion}}},
  author = {Aldaeej, Abdullah and Badreddin, Omar},
  date = {2016-05-14},
  pages = {722--724},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2889160.2892649},
  url = {https://doi.org/10.1145/2889160.2892649},
  urldate = {2020-04-22},
  abstract = {Despite the emergence of UML as the defacto modeling and design tool for software engineering, its adoption remains dismal. Software development, particularly in the open source community, remains code-centric. Adoption of UML in open source projects represents a significant lost opportunity. In this paper, we present an approach to encourage upfront design practices and the adoption of UML modeling in open source projects. In particular, we demonstrate the approach for small contributions and bug fixes. The approach relies on integrating UML-level abstractions into the code. This integration means that open source developers can continue to use their familiar text-based tools to manage the source code and contributions, while at the same time benefit from UML added value of abstractions and comprehension. Other benefits of this approach include broadening the boundaries of bug fix contribution by including modelers and end-users, and incrementally add UML model diagrams into open source project's documentation.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DDSYFPIT/Aldaeej and Badreddin - 2016 - Towards promoting design and UML modeling practice.pdf},
  isbn = {978-1-4503-4205-6},
  keywords = {bug fixing,code generation,forward engineering,model oriented programming,open source projects,program comprehension,reserve engineering,software design,UML,umple},
  series = {{{ICSE}} '16}
}

@misc{alejandro_serrano_mena_beginning_nodate,
  title = {Beginning {{Haskell A Project}}-{{Based Approach}}},
  author = {{Alejandro Serrano Mena}},
  publisher = {{Apress}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IEJJXN9B/bok%3A978-1-4302-6251-0.pdf}
}

@inproceedings{alenezi_open_2016,
  title = {Open Source Web Application Security: {{A}} Static Analysis Approach},
  shorttitle = {Open Source Web Application Security},
  booktitle = {2016 {{International Conference}} on {{Engineering MIS}} ({{ICEMIS}})},
  author = {Alenezi, Mamdouh and Javed, Yasir},
  date = {2016-09},
  pages = {1--5},
  doi = {10.1109/ICEMIS.2016.7745369},
  abstract = {In this paper, we have tested several open source web applications against common security vulnerabilities. These vulnerabilities spans from unnecessary data member declaration to leaving gaps for SQL injection. The static security vulnerabilities testing was done in three categories (1) Dodgy code vulnerabilities (2) Malicious code vulnerabilities (3) Security code vulnerabilities on seven (7) different web applications built in Java. It is evident from the obtained results that almost all selected applications have similar kind of vulnerabilities that might have been introduced due to hasty programming or lack of developer knowledge against security vulnerabilities. We recommend to create an intelligent development framework that can provide suggestions for secure development by overcoming common vulnerabilities, can add missing code and can learn from expert developer's practices to overcome the security vulnerabilities.},
  eventtitle = {2016 {{International Conference}} on {{Engineering MIS}} ({{ICEMIS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4MT3SZ8W/Alenezi and Javed - 2016 - Open source web application security A static ana.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EKIXGEPN/7745369.html},
  keywords = {intelligent development,Internet,Java,malicious code vulnerabilities,Malware,Manuals,Open source,open source Web application security,program diagnostics,public domain software,Security,security code vulnerabilities,security of data,Source code,source code (software),SQL,SQL injection,static analysis,Static analysis,static security vulnerability testing,Testing,Web application,Web services}
}

@online{alese_curious_2018,
  title = {The Curious Case of the Vanishing \& Exploding Gradient},
  author = {Alese, Eniola},
  date = {2018-06-10T09:34:15.303Z},
  journaltitle = {Medium},
  url = {https://medium.com/learn-love-ai/the-curious-case-of-the-vanishing-exploding-gradient-bf58ec6822eb},
  urldate = {2020-06-08},
  abstract = {Understanding why gradients explode or vanish and methods for dealing with the problem.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DMVS3JHS/Alese - 2018 - The curious case of the vanishing & exploding grad.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6ADIMD6H/the-curious-case-of-the-vanishing-exploding-gradient-bf58ec6822eb.html},
  langid = {english}
}

@online{alex_armstrong_security_nodate,
  title = {Security by Obscurity - a New Theory},
  author = {{Alex Armstrong}},
  journaltitle = {I programmer},
  url = {http://www.i-programmer.info/news/149-security/3132-security-by-obscurity-a-new-theory.html},
  urldate = {2012-12-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FCM2A3GQ/Security by obscurity - a new theory.pdf}
}

@misc{alexis_oconnor_government_2010,
  title = {Government {{Policies}} on {{Open Source}}},
  author = {{Alexis O’Connor} and {Kian Win Ong} and {Ted Sander} and {Matt Ferlo}},
  date = {2010},
  url = {http://www.cs.washington.edu/education/courses/csep590/04au/clearedprojects/Ferlo.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EZPXVR2P/Ferlo.pdf}
}

@inproceedings{alexopoulos_poster_2019,
  title = {Poster: {{Towards Automated Quantitative Analysis}} and {{Forecasting}} of {{Vulnerability Discoveries}} in {{Debian GNU}}/{{Linux}}},
  shorttitle = {Poster},
  booktitle = {Proceedings of the 2019 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Alexopoulos, Nikolaos and Egert, Rolf and Grube, Tim and Mühlhäuser, Max},
  date = {2019-11-06},
  pages = {2677--2679},
  publisher = {{Association for Computing Machinery}},
  location = {{London, United Kingdom}},
  doi = {10.1145/3319535.3363285},
  url = {https://doi.org/10.1145/3319535.3363285},
  urldate = {2020-04-22},
  abstract = {Quantitative analysis and forecasting of software vulnerability discoveries is important for patching cost and time estimation, and as input to security metrics and risk assessment methodologies. However, as of now, quantitative studies (a) require considerable manual effort, (b) make use of noisy datasets, and (c) are especially challenging to reproduce. In this poster abstract we describe our ongoing work towards quantitative analysis of vulnerabilities in Debian GNU/Linux packages. We focus on the challenges of making the process as automated and reproducible as possible, while collecting good-quality data necessary for the analysis. We then state a number of interesting hypotheses that can be investigated, and present preliminary results.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HRHEQQQW/Alexopoulos et al. - 2019 - Poster Towards Automated Quantitative Analysis an.pdf},
  isbn = {978-1-4503-6747-9},
  keywords = {dataset,open-source software,software security,vulnerabilities},
  series = {{{CCS}} '19}
}

@article{alhadidi_common_2013,
  title = {Common Weaving Approach in Mainstream Languages for Software Security Hardening},
  author = {Alhadidi, Dima and Mourad, Azzam and Kaitouni, Hakim Idrissi and Debbabi, Mourad},
  date = {2013-10},
  journaltitle = {Journal of Systems and Software},
  volume = {86},
  pages = {2654--2674},
  issn = {01641212},
  doi = {10.1016/j.jss.2013.05.044},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121213001325},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/STPHMDTB/1-s2.0-S0164121213001325-main.pdf},
  langid = {english},
  number = {10}
}

@inproceedings{alhazmi_quantitative_2005,
  title = {Quantitative Vulnerability Assessment of Systems Software},
  booktitle = {Proc. Annual Reliability and Maintainability Symposium},
  author = {Alhazmi, Omar H. and Malaiya, Yashwant K.},
  date = {2005},
  pages = {615--620},
  url = {http://sites.google.com/site/woosungwhan/01408432-RAMS2005.pdf},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2VT7H5P6/01408432-RAMS2005.pdf}
}

@incollection{alhazmi_security_2005,
  title = {Security Vulnerabilities in Software Systems: {{A}} Quantitative Perspective},
  shorttitle = {Security Vulnerabilities in Software Systems},
  booktitle = {Data and {{Applications Security XIX}}},
  author = {Alhazmi, Omar and Malaiya, Yashwant and Ray, Indrajit},
  date = {2005},
  pages = {281--294},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11535706_21},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WQPVHAXC/chp%3A10.1007%2F11535706_21.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@book{ali_babar_software_2009,
  title = {Software {{Architecture Knowledge Management}}},
  editor = {Ali Babar, Muhammad and Dingsøyr, Torgeir and Lago, Patricia and van Vliet, Hans},
  date = {2009},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-02374-3},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RUXSPKKV/chp%3A10.1007%2F978-3-642-02374-3_11.pdf},
  isbn = {978-3-642-02373-6 978-3-642-02374-3},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  options = {useprefix=true}
}

@article{aljemabi_empirical_2018,
  title = {Empirical {{Study}} on the {{Evolution}} of {{Developer Social Networks}}},
  author = {Aljemabi, Mohamed Abdelrahman and Wang, Zhongjie},
  date = {2018},
  journaltitle = {IEEE Access},
  volume = {6},
  pages = {51049--51060},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2018.2868427},
  abstract = {Software development is incredibly complex. Specifically, open-source software (OSS) development requires developers to collaborate with each other to conduct their work. Because software systems are evolving with time, collaboration among software developers may affect the quality of evolved software. The OSS developer teams collaborate in various tasks, including communications, coordination, and making various social collaboration in the OSS projects (e.g., bug/issue report, discussion, code revisions, and so on) without access restriction, and all these activities are used to generate an implicit developer social network (DSN). The DSN that is based on a bug tracking system is one of the most important DSNs that reflect the real collaboration between developers. As the software system evolves, the DSN evolves. This paper describes an empirical study of the evolution of DSNs on OSS projects collected from GitHub. Four perspectives were used: social network analysis, DSN as an ecosystem, community evolution patterns, and the core-periphery structure. The results demonstrated the DSNs over time have followed the power law degree distribution with +1\% or more as an increasing rate to be more fitting overtime. DSNs over time are considered a small-world community. DSNs over time exhibits about 55\% diversity with 75\% of evenness between the developers to contribute in different OSS projects in the same environment. Moreover, DSNs over time have a few developers as core members and large developers as peripheral members. Finally, about 10\% of developers changed their positions frequently over time.},
  eventtitle = {{{IEEE Access}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5RLYNBYQ/Aljemabi and Wang - 2018 - Empirical Study on the Evolution of Developer Soci.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2LUXYBMJ/8454243.html},
  keywords = {bug tracking systems,Collaboration,Computer bugs,core-periphery structure,developer social network,DSN,Ecosystems,evolution,GitHub,implicit developer social network,Measurement,open source software,open-source software development,OSS developer teams,OSS projects,power law degree distribution,project management,public domain software,social collaboration,social network analysis,Social network services,social networking (online),Software,software developers,software engineering,Software engineering,software maintenance,software quality,software system,Task analysis}
}

@incollection{allen_three_2010,
  title = {Three Strategies for Open Source Deployment: Substitution, Innovation, and Knowledge Reuse},
  shorttitle = {Three Strategies for Open Source Deployment},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Allen, Jonathan P.},
  date = {2010},
  pages = {308--313},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_24},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HGWD9QHM/chp%3A10.1007%2F978-3-642-13244-5_24.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IASPJFTA/chp%3A10.1007%2F978-3-642-13244-5_24.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{allman_viewing_2003,
  title = {Viewing {{Open Source}} with an {{Open Mind}}},
  author = {Allman, Eric and McKusick, Kirk},
  date = {2003},
  journaltitle = {Queue},
  volume = {1},
  pages = {6--7},
  url = {http://dl.acm.org/citation.cfm?id=945128},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7ZFHPBEU/fromeditors.pdf},
  number = {5}
}

@article{allodi_measuring_2020,
  title = {Measuring the Accuracy of Software Vulnerability Assessments: Experiments with Students and Professionals},
  shorttitle = {Measuring the Accuracy of Software Vulnerability Assessments},
  author = {Allodi, Luca and Cremonini, Marco and Massacci, Fabio and Shim, Woohyun},
  date = {2020-03-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {25},
  pages = {1063--1094},
  issn = {1573-7616},
  doi = {10.1007/s10664-019-09797-4},
  url = {https://doi.org/10.1007/s10664-019-09797-4},
  urldate = {2020-04-21},
  abstract = {Assessing the risks of software vulnerabilities is a key process of software development and security management. This assessment requires to consider multiple factors (technical features, operational environment, involved assets, status of the vulnerability lifecycle, etc.) and may depend from the assessor’s knowledge and skills. In this work, we tackle with an important part of this problem by measuring the accuracy of technical vulnerability assessments by assessors with different level and type of knowledge. We report an experiment to compare how accurately students with different technical education and security professionals are able to assess the severity of software vulnerabilities with the Common Vulnerability Scoring System (v3) industry methodology. Our results could be useful for increasing awareness about the intrinsic subtleties of vulnerability risk assessment and possibly better compliance with regulations. With respect to academic education, professional training and human resources selections our work suggests that measuring the effects of knowledge and expertise on the accuracy of software security assessments is feasible albeit not easy.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WK3Q46CI/Allodi et al. - 2020 - Measuring the accuracy of software vulnerability a.pdf},
  langid = {english},
  number = {2}
}

@article{almarzouq_taxing_2015,
  title = {Taxing the Development Structure of Open Source Communities: {{An}} Information Processing View},
  shorttitle = {Taxing the Development Structure of Open Source Communities},
  author = {AlMarzouq, Mohammad and Grover, Varun and Thatcher, Jason Bennett},
  date = {2015-12},
  journaltitle = {Decision Support Systems},
  volume = {80},
  pages = {27--41},
  issn = {01679236},
  doi = {10.1016/j.dss.2015.09.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923615001815},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AKRRDZP7/1-s2.0-S0167923615001815-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@article{almeida_investigating_2018,
  ids = {almeida\_investigating\_2019},
  title = {Investigating Whether and How Software Developers Understand Open Source Software Licensing},
  author = {Almeida, Daniel A. and Murphy, Gail C. and Wilson, Greg and Hoye, Michael},
  date = {2018-04-27},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  pages = {1--29},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-018-9614-9},
  url = {https://link.springer.com/article/10.1007/s10664-018-9614-9},
  urldate = {2018-08-14},
  abstract = {Software provided under open source licenses is widely used, from forming high-profile stand-alone applications (e.g., Mozilla Firefox) to being embedded in commercial offerings (e.g., network routers). Despite the high frequency of use of open source licenses, there has been little work about whether software developers understand the open source licenses that they use. To help understand whether or not developers understand the open source licenses they use, we conducted a survey that posed development scenarios involving three popular open source licenses (GNU GPL 3.0, GNU LGPL 3.0 and MPL 2.0) both alone and in combination. The 375 respondents to the survey, who were largely developers, gave answers consistent with those of a legal expert’s opinion in 62\% of 42 cases. Although developers clearly understood cases involving one license, they struggled when multiple licenses were involved. To understand the context in which licensing issues arise in practice, we analyzed real-world questions posed by developers about the three licenses considered in the survey on online question-and-answer communities. We also interviewed practicing developers about license interaction problems they have faced. Among several lessons, we learnt that licensing issues can constrain software evolution and that developers are cautious of more restrictive licenses. Our results indicate a need for tool support to help guide developers in understanding the structure of the code and the technical details of a project while taking into account the exact requirements imposed by the licenses involved.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7M2DFF5E/Almeida et al. - 2018 - Investigating whether and how software developers .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CILZ4YJL/Almeida et al. - 2019 - Investigating whether and how software developers .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MTRBCYEZ/s10664-018-9614-9.html},
  langid = {english}
}

@inproceedings{almeida_open_2012,
  title = {Open Source Unified Communications: The New Paradigm to Cut Costs and Extend Productivity},
  shorttitle = {Open Source Unified Communications},
  booktitle = {Proceedings of the {{Workshop}} on {{Open Source}} and {{Design}} of {{Communication}}},
  author = {Almeida, Fernando and Cruz, José},
  date = {2012},
  pages = {11--12},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2316939},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BCKJHNZA/p11-almeida.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{almeida_software_2017,
  ids = {almeida\_software\_2017-1},
  title = {Do {{Software Developers Understand Open Source Licenses}}?},
  booktitle = {2017 {{IEEE}}/{{ACM}} 25th {{International Conference}} on {{Program Comprehension}} ({{ICPC}})},
  author = {Almeida, Daniel A. and Murphy, Gail C. and Wilson, Greg and Hoye, Mike},
  date = {2017-05},
  pages = {1--11},
  doi = {10.1109/ICPC.2017.7},
  abstract = {Software provided under open source licenses is widely used, from forming high-profile stand-alone applications (e.g., Mozilla Firefox) to being embedded in commercial offerings (e.g., network routers). Despite the high frequency of use of open source licenses, there has been little work about whether software developers understand the open source licenses they use. To our knowledge, only one survey has been conducted, which focused on which licenses developers choose and when they encounter problems with licensing open source software. To help fill the gap of whether or not developers understand the open source licenses they use, we conducted a survey that posed development scenarios involving three popular open source licenses (GNU GPL 3.0, GNU LGPL 3.0 and MPL 2.0) both alone and in combination. The 375 respondents to the survey, who were largely developers, gave answers consistent with those of a legal expert's opinion in 62\% of 42 cases. Although developers clearly understood cases involving one license, they struggled when multiple licenses were involved. An analysis of the quantitative and qualitative results of the study indicate a need for tool support to help guide developers in understanding this critical information attached to software components.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 25th {{International Conference}} on {{Program Comprehension}} ({{ICPC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/859UREGJ/Almeida et al. - 2017 - Do software developers understand open source lice.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RJV748YD/Almeida et al. - 2017 - Do Software Developers Understand Open Source Lice.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MCZ5PBNK/7961499.html},
  keywords = {GNU GPL 3.0,GNU LGPL 3.0,Libraries,Licenses,Market research,MPL 2.0,Multiprotocol label switching,open source,open source licenses,open source software,Open source software,public domain software,software components,software developers,software engineering,software licenses,survey,Tools}
}

@inproceedings{almheiri_framework_2018,
  title = {Framework for {{Open Source Software}} Implementation in the {{Government Sector}} of {{Dubai}}},
  booktitle = {2018 {{Fifth HCT Information Technology Trends}} ({{ITT}})},
  author = {AlMheiri, Nawal Harib and Rajan, Amala and Akre, Vishwesh},
  date = {2018-11},
  pages = {71--76},
  doi = {10.1109/CTIT.2018.8649506},
  abstract = {In recent years, Open Source Software (OSS) has gained a popularity in the government sector because of its potential advantages. Developed countries the United States of America, Australia and United Kingdom have adopted OSS in their government sector in an exceptional manner (resource). Though the United Arab Emirates government in general and Dubai government are excelling in every field of the Information Technology and Science, yet it has not utilized this type of software to fullest benefit.},
  eventtitle = {2018 {{Fifth HCT Information Technology Trends}} ({{ITT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V3H2AYDG/AlMheiri et al. - 2018 - Framework for Open Source Software implementation .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/55DX84NN/8649506.html},
  keywords = {Adoption,Australia,Benefits,Dubai government,Dubai Government,government data processing,government policies,government sector,Information Technology and Science,Interviews,Legislation,Open source software,Open Source Software,Open Source Software implementation,OSS,Proprietary Software,public domain software,Soft System Approach,unemployment,United Arab Emirates government,United Kingdom,United States of America}
}

@inproceedings{alnaeli_prevalence_2016,
  title = {On the Prevalence of Function Side Effects in General Purpose Open Source Software Systems},
  booktitle = {2016 {{IEEE}} 14th {{International Conference}} on {{Software Engineering Research}}, {{Management}} and {{Applications}} ({{SERA}})},
  author = {Alnaeli, Saleh M. and Taha, Amanda D. Ali. and Timm, Tyler},
  date = {2016-06},
  pages = {141--148},
  doi = {10.1109/SERA.2016.7516139},
  abstract = {A study that examines the prevalence and distribution of function side effects in general-purpose software systems is presented. The study is conducted on 19 open source systems comprising over 9.8 Million lines of code (MLOC). Each system is analyzed and the number of function side effects is determined. The results show that global variables modification and parameters by reference are the most prevalent side effect types. Thus, conducting accurate program analysis for many adaptive changes processes (e.g., automatic parallelization to improve their parallelizability to better utilize multi-core architectures) becomes very costly or impractical to conduct. Analysis of the historical data over a seven-year period for 10 systems show that there is a relatively large percentage of affected functions over the lifetime of the systems. The trend is flat in general, therefore posing further problems for inter-procedural analysis.},
  eventtitle = {2016 {{IEEE}} 14th {{International Conference}} on {{Software Engineering Research}}, {{Management}} and {{Applications}} ({{SERA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CIZIRK64/Alnaeli et al. - 2016 - On the prevalence of function side effects in gene.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EW9D2IL3/7516139.html},
  keywords = {Algorithm design and analysis,Computer architecture,Context,function calls,function side effect,function side effects,general-purpose open source software system,Inhibitors,Market research,million lines of code,MLOC,Open source software,open source systems,pass by reference,program analysis,program diagnostics,public domain software,software evolution,software maintenance,Software systems,source code (software),static analysis,system maintainability}
}

@inproceedings{alon_invited_2019,
  title = {Invited: {{Open}}-{{Source EDA Tools}} and {{IP}}, {{A View}} from the {{Trenches}}},
  shorttitle = {Invited},
  booktitle = {2019 56th {{ACM}}/{{IEEE Design Automation Conference}} ({{DAC}})},
  author = {Alon, Elad and Asanović, Krste and Bachrach, Jonathan and Nikolić, Borivoje},
  date = {2019-06},
  pages = {1--3},
  issn = {0738-100X},
  abstract = {We describe our experience developing and promoting a set of open-source tools and IP over the last 9 years, including the Chisel hardware construction language, the Rocket Chip SoC generator, and the BAG analog layout generator.},
  eventtitle = {2019 56th {{ACM}}/{{IEEE Design Automation Conference}} ({{DAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q7QSM2MZ/Alon et al. - 2019 - Invited Open-Source EDA Tools and IP, A View from.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8TUBPRPE/8806952.html},
  keywords = {BAG analog layout generator,Chisel,Chisel hardware construction language,electronic design automation,Generators,Hardware,Hardware design languages,industrial property,IP,Open source software,open-source CAD,open-source EDA tools,open-source hardware,public domain software,RISC-V,Rocket Chip SoC generator,Rockets,software tools,system-on-chip,Tools}
}

@inproceedings{alqahtani_enhancing_2017,
  title = {Enhancing {{Trust}} – {{Software Vulnerability Analysis Framework}}},
  booktitle = {2017 {{IEEE International Conference}} on {{Software Testing}}, {{Verification}} and {{Validation}} ({{ICST}})},
  author = {Alqahtani, Sultan S.},
  date = {2017-03},
  pages = {563--564},
  doi = {10.1109/ICST.2017.76},
  abstract = {Open source projects and the globalization of the software industry have been a driving force in reuse of system components across traditional system boundaries. As a result, vulnerabilities and security concerns are no longer only impact individual but now also global software ecosystems. Known vulnerabilities and security concerns are reported in specialized vulnerability databases, which often remain information silos. In my PhD research, I introduce a modeling approach, which eliminates these information silos by linking the security knowledge with other software artifacts to improve traceability and trust in software products.},
  eventtitle = {2017 {{IEEE International Conference}} on {{Software Testing}}, {{Verification}} and {{Validation}} ({{ICST}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YYSSRGSG/Alqahtani - 2017 - Enhancing Trust – Software Vulnerability Analysis .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/59S6MTCI/7983295.html},
  keywords = {Analytical models,database management systems,Databases,DP industry,global software ecosystems,Ontologies,open source projects,program diagnostics,project management,public domain software,Security,security knowledge,security of data,Software,software artifacts,Software engineering,software industry globalization,software products,software vulnerability analysis framework,specialized vulnerability databases,system boundaries,system components,traceability,trust enhancement,trusted computing}
}

@inproceedings{alsharif_exploring_2019,
  title = {Exploring the {{Opportunities}} and {{Challenges}} of {{Open Source Software}} and {{Its Economic Impact}} on the {{Cybersecurity Market}}},
  booktitle = {Smart {{Technologies}} and {{Innovation}} for a {{Sustainable Future}}},
  author = {Alsharif, Ismail and Khelifi, Adel},
  editor = {Al-Masri, Ahmed and Curran, Kevin},
  date = {2019},
  pages = {115--127},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-01659-3_16},
  abstract = {Organizations today face IT security challenges on many fronts. These include controlling user access to systems, resources, and data security issues that encompass secure storage, secure transmission, data authenticity and data integrity. These requirements are met by establishing the right policies, controls, and mechanisms that are put in place to effectively protect sensitive data. Therefore, this research aims to see if open source software has the potential to influence the cybersecurity market that is currently dominated by proprietary software. However, in order to accomplish such a task, certain conditions must be met. Such as understanding of the history behind open source software, the positive and negative influences it carries when dealing with this type of software. As well as compare and contrast current proprietary solutions with open source solutions, in order to grasp the potential economic impact of open source software leading onwards into the future. The ideal findings would be to outline the factors that are holding back open source software, and whether these factors are adjustable or correctable over time. Another aim is to highlight the potential financial benefit that comes from switching to or prioritizing OSS security solutions. As well as come up with any recommendations that would help aid businesses and organizations when it comes to obtaining suitable OSS security solutions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VCZWHJYA/Alsharif and Khelifi - 2019 - Exploring the Opportunities and Challenges of Open.pdf},
  isbn = {978-3-030-01659-3},
  keywords = {Challenges,Cybersecurity,Open source software},
  langid = {english},
  series = {Advances in {{Science}}, {{Technology}} \& {{Innovation}}}
}

@inproceedings{alsmadi_software_2017,
  title = {Software Attributes That Impact Popularity},
  booktitle = {2017 8th {{International Conference}} on {{Information Technology}} ({{ICIT}})},
  author = {Alsmadi, Izzat and Alazzam, Iyad},
  date = {2017-05},
  pages = {205--208},
  doi = {10.1109/ICITECH.2017.8080001},
  abstract = {Marketing schemes of software products involve different types of approaches based on the nature of the software, the target customers, level of complexity, etc. Open source software products in particular, target largely software developers or users with a significant level of technical experience. This drives our project to evaluate the level of popularity for open software products based on internal software attributes or metrics. We collected a dataset of several open source projects. We used the number of downloads as an indicator of software popularity among its target audience or customers. Using different tools, we collected 65 metrics for each software project. Collected software metrics are related to the software size, design quality and complexity. Results showed consistently, that popularity increases when some metrics such as (McCabe Cyclomatic Complexity) increases. Interestingly such metrics usually appear as significant indicators for software complexity and where their high values impact negatively software quality.},
  eventtitle = {2017 8th {{International Conference}} on {{Information Technology}} ({{ICIT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A6DSKRDN/Alsmadi and Alazzam - 2017 - Software attributes that impact popularity.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3J2ZJNZZ/8080001.html},
  keywords = {Complexity theory,customer services,design quality,DP industry,impact popularity,Information technology,internal software attributes,marketing,marketing schemes,Measurement,open source software,Open source software,open source software products,public domain software,software complexity,software development,software metrics,software popularity,Software popularity,software project,software quality,Software quality,Tools}
}

@inproceedings{alves_interaction_2017,
  title = {Interaction {{Design}} in {{Free}}/{{Libre}}/{{Open Source Software Development}}: A Systematic Mapping},
  shorttitle = {Interaction {{Design}} in {{Free}}/{{Libre}}/{{Open Source Software Development}}},
  booktitle = {Proceedings of the {{XVI Brazilian Symposium}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Alves, Daniel Domingos and de Souza Matos, Ecivaldo},
  date = {2017-10-23},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Joinville, Brazil}},
  doi = {10.1145/3160504.3160515},
  url = {https://doi.org/10.1145/3160504.3160515},
  urldate = {2020-04-22},
  abstract = {Approaches for integrating interaction design into software development processes do not consider the specific development characteristics of free/libre/open source software (FLOSS). Researchers know the importance of integrating good practices of interaction design into the software development process. This paper aims to present a summary and analysis of methods, techniques, tools, strategies and approaches (MTTSA) to interaction design that have been proposed/used in the context of FLOSS development. A systematic mapping was performed to identify MTTSAs of interaction design proposed or used for/in the development of FLOSS. The results show that few studies have used MTTSA of interaction design in FLOSS context. No methods or techniques of interaction design proposed specifically for the development of FLOSS have found, and the majority of the selected papers do not present any type of validation through empirical studies. We hope that this paper provides an overview of studies that have used MTTSA of interaction design in FLOSS context, and becomes an initial effort to conduct new research proposals involving interaction design MTTSA and FLOSS development.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7SELRDP2/Alves and de Souza Matos - 2017 - Interaction Design in FreeLibreOpen Source Softw.pdf},
  isbn = {978-1-4503-6377-8},
  keywords = {FLOSS development,Free Software,HCI,Human-Computer Interaction,Interaction Design,Open Source Software},
  options = {useprefix=true},
  series = {{{IHC}} 2017}
}

@inproceedings{aman_health_2017,
  title = {A {{Health Index}} of {{Open Source Projects Focusing}} on {{Pareto Distribution}} of {{Developer}}'s {{Contribution}}},
  booktitle = {2017 8th {{International Workshop}} on {{Empirical Software Engineering}} in {{Practice}} ({{IWESEP}})},
  author = {Aman, Hirohisa and Burhandenny, Aji Ery and Amasaki, Sousuke and Yokogawa, Tomoyuki and Kawahara, Minoru},
  date = {2017-03},
  pages = {29--34},
  doi = {10.1109/IWESEP.2017.14},
  abstract = {Open source software (OSS) products have been broadly utilized for the IT business as well as the personal use in recent years. Software companies can receive much benefit from OSS products in terms of cost to develop and maintain their products. However, there are also risks that products of interest might become no longer being successfully maintained by the OSS developers because a successful maintenance is not obligation of developers. In order to evaluate a project's health from a perspective of a macroscopic trend analysis, this paper focuses on the distribution of the developer's contribution to an OSS project, and analyzes the relationships of distribution features with the quality of products. The empirical analysis with 32 popular OSS projects shows that the length of tail in the Pareto chart can be a health index of an OSS projectin terms of the balance between bug fix and feature upgrade.},
  eventtitle = {2017 8th {{International Workshop}} on {{Empirical Software Engineering}} in {{Practice}} ({{IWESEP}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KMW328ZQ/Aman et al. - 2017 - A Health Index of Open Source Projects Focusing on.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/27J7THHB/7925421.html},
  keywords = {charts,Companies,Computer bugs,developer's contribution,Focusing,health index,IT business,macroscopic trend analysis,Maintenance engineering,Measurement,open source project,open source projects,open source software,OSS developers,OSS products,OSS project,Pareto chart,Pareto distribution,Pareto principle,project management,public domain software,Software,software engineering,software management}
}

@inproceedings{amega-selorm_free_2010,
  title = {Free and {{Open Source Software}} ({{FOSS}}): {{It}}'s {{Significance}} or {{Otherwise}} to the e-{{Governance Process}} in {{Ghana}}},
  shorttitle = {Free and {{Open Source Software}} ({{FOSS}})},
  booktitle = {Proceedings of the 4th {{International Conference}} on {{Theory}} and {{Practice}} of {{Electronic Governance}}},
  author = {Amega-Selorm, Charles and Awotwi, Johanna},
  date = {2010},
  pages = {91--95},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1930321.1930342},
  url = {http://doi.acm.org/10.1145/1930321.1930342},
  urldate = {2015-11-24},
  abstract = {Software plays a very important role in our aspiration as a country to use Information and Communication Technologies (ICTs) as enablers for development. Licensing cost for Proprietary Software (PS) is however expensive and does not offer the freedom to manipulate the source code. Free and Open Source Software (FOSS) emerged as an alternative to Proprietary Software and has since its introduction made inroads onto desktops and servers alike. With FOSS emerged the freedom to run the programs for any purpose, freedom to study and modify the software, freedom to copy the software and share with neighbors and freedom to improve the program and release your improvements to the public, so that the whole community benefits. This paper makes a case for these freedoms. The paper first compares PS and FOSS use in Ghana and proposes a way for government to adopt FOSS. Findings of this case study are a result of field research conducted by the authors, personal interviews and through desk research.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2K6JRB6H/Amega-Selorm és Awotwi - 2010 - Free and Open Source Software (FOSS) It's Signifi.pdf},
  isbn = {978-1-4503-0058-2},
  keywords = {_SMS_untagged,e-governance,free and open source software,nyílt forrás,procurement policy},
  series = {{{ICEGOV}} '10}
}

@incollection{amit_deshpande_total_2008,
  title = {The {{Total Growth}} of {{Open Source}}},
  booktitle = {Proceedings of the {{Fourth Conference}} on {{Open Source Systems}} ({{OSS}} 2008)},
  author = {{Amit Deshpande} and {Dirk Riehle}},
  date = {2008},
  pages = {197--209},
  publisher = {{Springer Verlag}},
  url = {http://dirkriehle.com/publications/2008-2/the-total-growth-of-open-source/},
  urldate = {2014-03-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VUXPGG8V/the-total-growth-of-open-source.html}
}

@incollection{ampatzoglou_investigating_2011,
  title = {Investigating the Use of Object-Oriented Design Patterns in Open-Source Software: {{A}} Case Study},
  shorttitle = {Investigating the Use of Object-Oriented Design Patterns in Open-Source Software},
  booktitle = {Evaluation of {{Novel Approaches}} to {{Software Engineering}}},
  author = {Ampatzoglou, Apostolos and Charalampidou, Sofia and Stamelos, Ioannis},
  date = {2011},
  pages = {106--120},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-23391-3_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QUXHN3IK/chp%3A10.1007%2F978-3-642-23391-3_8.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{an_empirical_2019,
  title = {An Empirical Study of {{DLL}} Injection Bugs in the {{Firefox}} Ecosystem},
  author = {An, Le and Castelluccio, Marco and Khomh, Foutse},
  date = {2019-08-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {24},
  pages = {1799--1822},
  issn = {1573-7616},
  doi = {10.1007/s10664-018-9677-7},
  url = {https://doi.org/10.1007/s10664-018-9677-7},
  urldate = {2020-04-21},
  abstract = {DLL injection is a technique used for executing code within the address space of another process by forcing the load of a dynamic-link library. In a software ecosystem, the interactions between the host and third-party software increase the maintenance challenges of the system and may lead to bugs. In this work, we empirically investigate bugs that were caused by third-party DLL injections into the Mozilla Firefox browser. Among the 103 studied DLL injection bugs, we found that 93 bugs (90.3\%) led to crashes and 57 bugs (55.3\%) were caused by antivirus software. Through a survey with third-party software vendors, we observed that some vendors did not perform any QA with pre-release versions nor intend to use a public API (WebExtensions) but insist on using DLL injection. To reduce DLL injection bugs, host software vendors may strengthen the collaboration with third-party vendors, e.g., build a publicly accessible validation test framework. Host software vendors may also use a whitelist approach to only allow vetted DLLs to inject.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XKGBDLNC/An et al. - 2019 - An empirical study of DLL injection bugs in the Fi.pdf},
  langid = {english},
  number = {4}
}

@inproceedings{an_stack_2017,
  title = {Stack {{Overflow}}: {{A}} Code Laundering Platform?},
  shorttitle = {Stack {{Overflow}}},
  booktitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {An, Le and Mlouki, Ons and Khomh, Foutse and Antoniol, Giuliano},
  date = {2017-02},
  pages = {283--293},
  doi = {10.1109/SANER.2017.7884629},
  abstract = {Developers use Question and Answer (Q\&A) websites to exchange knowledge and expertise. Stack Overflow is a popular Q\&A website where developers discuss coding problems and share code examples. Although all Stack Overflow posts are free to access, code examples on Stack Overflow are governed by the Creative Commons Attribute-ShareAlike 3.0 Unported license that developers should obey when reusing code from Stack Overflow or posting code to Stack Overflow. In this paper, we conduct a case study with 399 Android apps, to investigate whether developers respect license terms when reusing code from Stack Overflow posts (and the other way around). We found 232 code snippets in 62 Android apps from our dataset that were potentially reused from Stack Overflow, and 1,226 Stack Overflow posts containing code examples that are clones of code released in 68 Android apps, suggesting that developers may have copied the code of these apps to answer Stack Overflow questions. We investigated the licenses of these pieces of code and observed 1,279 cases of potential license violations (related to code posting to Stack overflow or code reuse from Stack overflow). This paper aims to raise the awareness of the software engineering community about potential unethical code reuse activities taking place on Q\&A websites like Stack Overflow.},
  eventtitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AP7Q8Z2E/An et al. - 2017 - Stack Overflow A code laundering platform.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U3YSDSD7/7884629.html},
  keywords = {Android (operating system),Android apps,Androids,Cloning,code clones,code examples,code laundering platform,code posting,coding problems,Creative Commons Attribute-ShareAlike 3.0 Unported license,Humanoid robots,Java,Knowledge repository,license violations,Licenses,Mining software repositories,Open source software,Q&A Web-sites,Q&A website,question and answer Web sites,question answering (information retrieval),software engineering community,Software licenses,software reusability,source code (software),stack overflow,Stack Overflow,unethical code reuse activities}
}

@inproceedings{anand_architectural_2018,
  title = {Architectural {{Solutions}} to {{Mitigate Security Vulnerabilities}} in {{Software Systems}}},
  booktitle = {Proceedings of the 13th {{International Conference}} on {{Availability}}, {{Reliability}} and {{Security}}},
  author = {Anand, Priya and Ryoo, Jungwoo},
  date = {2018-08-27},
  pages = {1--5},
  publisher = {{Association for Computing Machinery}},
  location = {{Hamburg, Germany}},
  doi = {10.1145/3230833.3233766},
  url = {https://doi.org/10.1145/3230833.3233766},
  urldate = {2020-04-22},
  abstract = {Security issues emerging out of the constantly evolving software applications became a huge challenge to software security experts. In this paper, we propose a prototype to detect vulnerabilities by identifying their architectural sources and also use security patterns to mitigate the identified vulnerabilities. We emphasize the need to consider architectural relations to introduce an effective security solution. In this research, we focused on the taint-style vulnerabilities that can induce injection-based attacks like XSS, SQLI in web applications. With numerous tools available to detect the taint-style vulnerabilities in the web applications, we scanned for the presence of repetition of a vulnerable code pattern in the software. Very importantly, we attempted to identify the architectural source files or modules by developing a tool named ArT Analyzer. We conducted a case study on a leading health-care software by applying the proposed architectural taint analysis and identified the vulnerable spots. We could identify the architectural roots for those vulnerable spots with the use of our tool ArT Analyzer. We verified the results by sharing it with the lead software architect of the project. By adopting an architectural solution, we avoided changes to be done on 252 different lines of code by merely introducing 2 lines of code changes at the architectural roots. Eventually, this solution was integrated into the latest updated release of the health-care software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UN6QC49Q/Anand and Ryoo - 2018 - Architectural Solutions to Mitigate Security Vulne.pdf},
  isbn = {978-1-4503-6448-5},
  keywords = {Cross-Site Scripting,Security,Security Patterns,Software Architecture,Vulnerability},
  series = {{{ARES}} 2018}
}

@inproceedings{anand_comparative_2018,
  title = {Comparative {{Analysis}} between {{Proprietary Software VS}}. {{Open}}-{{Source Software VS}}. {{Free Software}}},
  booktitle = {2018 {{Fifth International Conference}} on {{Parallel}}, {{Distributed}} and {{Grid Computing}} ({{PDGC}})},
  author = {Anand, Abhineet and Krishna, Anand and Tiwari, Rajeev and Sharma, Robin},
  date = {2018-12},
  pages = {144--147},
  issn = {2573-3079},
  doi = {10.1109/PDGC.2018.8745951},
  abstract = {This analysis mainly focuses on the domain of prime importance of Software which are more prominent for our system. It requires more attention of ours to switch over in Open-Source rather to invest and compete with proprietary software. In this model, we have considered a seesaw model which balances open-source software and proprietary software by a balance beam of free software. We have taken in consideration two fields (i.e) competition and investment to compare the consumer's interest areas and to know about their choices in current scenario. On putting loads of consumers on one side we can also recorded that the beam balance (free software) moves automatically towards the adjacent software and enrich the given software, in both fields whether it is related to competition or in terms of consumer's investment. This model analysis on points of fully covered market and partly covered market, which shows the current trends of consumer's interest and their profit maximization policies.},
  eventtitle = {2018 {{Fifth International Conference}} on {{Parallel}}, {{Distributed}} and {{Grid Computing}} ({{PDGC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IXJWTMCH/Anand et al. - 2018 - Comparative Analysis between Proprietary Software .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S963QZMD/8745951.html},
  keywords = {adjacent software,Analytical models,beam balance,comparative analysis,Competition,Computer science,Conferences,consumer investment,cost-benefit analysis,free software,Free Software,given software,Investment,Licenses,model analysis,Open source software,open-source software,Open-Source Software,profit maximization policies,profitability,proprietary software,Proprietary Software,public domain software,software management}
}

@inproceedings{anbalagan_mining_2009,
  title = {On Mining Data across Software Repositories},
  booktitle = {Mining {{Software Repositories}}, 2009. {{MSR}}'09. 6th {{IEEE International Working Conference}} On},
  author = {Anbalagan, Prasanth and Vouk, Mladen},
  date = {2009},
  pages = {171--174},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5069498},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ASK6BI6D/05069498.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{anbalagan_reliability_2008,
  title = {On {{Reliability Analysis}} of {{Open Source Software}} - {{FEDORA}}},
  author = {Anbalagan, Prasanth and Vouk, Mladen},
  date = {2008-11},
  pages = {325--326},
  publisher = {{IEEE}},
  doi = {10.1109/ISSRE.2008.53},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4700358},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W4BB5KUH/04700358.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{anbalagan_towards_2010,
  title = {Towards a {{Bayesian Approach}} in {{Modeling}} the {{Disclosure}} of {{Unique Security Faults}} in {{Open Source Projects}}},
  author = {Anbalagan, Prasanth and Vouk, Mladen},
  date = {2010-11},
  pages = {101--110},
  publisher = {{IEEE}},
  doi = {10.1109/ISSRE.2010.48},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5635125},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RMHMDV3K/05635125.pdf},
  isbn = {978-1-4244-9056-1},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{anderson_information_2007,
  title = {Information Security Economics–and Beyond},
  booktitle = {Advances in {{Cryptology}}-{{CRYPTO}} 2007},
  author = {Anderson, Ross and Moore, Tyler},
  date = {2007},
  pages = {68--91},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-74143-5_5},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NB7EDZTB/chp%3A10.1007%2F978-3-540-74143-5_5.pdf}
}

@article{anderson_security_2002,
  title = {Security in Open versus Closed Systems—the Dance of {{Boltzmann}}, {{Coase}} and {{Moore}}},
  author = {Anderson, Ross},
  date = {2002},
  journaltitle = {at Open Source Software Economics},
  url = {http://www.cl.cam.ac.uk/~rja14/Papers/toulouse.pdf},
  urldate = {2013-09-19},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JMMI3GQT/toulouse.pdf}
}

@book{andress_cyber_2011,
  title = {Cyber Warfare Techniques, Tactics and Tools for Security Practitioners},
  author = {Andress, Jason and Winterfeld, Steve and Rogers, Russ},
  date = {2011},
  publisher = {{Elsevier/Syngress}},
  location = {{Amsterdam; Boston}},
  url = {http://site.ebrary.com/id/10472794},
  urldate = {2014-03-04},
  abstract = {Cyber Warfare explores the battlefields, participants and the tools and techniques used during today's digital conflicts. The concepts discussed in this book will give those involved in information security at all levels a better idea of how cyber conflicts are carried out now, how they will change in the future and how to detect and defend against espionage, hacktivism, insider threats and non-state actors like organized criminals and terrorists. Every one of our systems is under attack from multiple vectors-our defenses must be ready all the time and our alert systems must detect the threats every time. Provides concrete examples and real-world guidance on how to identify and defend your network against malicious attacks Dives deeply into relevant technical and factual information from an insider's point of view Details the ethics, laws and consequences of cyber war and how computer criminal law may change as a result.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A88BAPF8/Cyber Warfare - tactics technics.pdf},
  isbn = {978-1-59749-637-7 1-59749-637-5 978-1-59749-638-4 1-59749-638-3},
  langid = {english}
}

@online{andrew_binstock_putting_nodate,
  title = {Putting {{Absolutely Everything}} in {{Version Control}}},
  author = {{Andrew Binstock}},
  journaltitle = {Dr. Dobb's},
  url = {http://www.drdobbs.com/tools/putting-absolutely-everything-in-version/240160762},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NSUJBRGK/Putting Absolutely Everything in Version Control — www.drdobbs.pdf},
  keywords = {scm,vcs}
}

@book{andrew_m._st._laurent_understanding_2004,
  title = {Understanding {{Open Source}} and {{Free Software Licensing}}},
  author = {{Andrew M. St. Laurent}},
  date = {2004},
  publisher = {{O'Reilly}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JJS63BPV/ch06.pdf},
  isbn = {978-0-596-15308-3},
  keywords = {FLOSS,license,open source}
}

@book{andrew_s._tanenbaum_distributed_2007,
  title = {Distributed {{Systems}}: {{Principles}} and {{Paradigms}}},
  author = {{Andrew S. Tanenbaum} and {Maarten Van Steen}},
  date = {2007},
  edition = {2nd edition},
  publisher = {{Prentice Hall}},
  isbn = {0-13-239227-5}
}

@unpublished{andy_ozment_milk_2006,
  title = {Milk or {{Wine}}: {{Does Software Security Improve}} with {{Age}}?},
  author = {{Andy Ozment} and {Stuart E. Schechter}},
  date = {2006},
  url = {http://www.andyozment.com/papers/Ozment_and_Schechter-Milk_Or_Wine-Usenix06.pdf},
  abstract = {We examine the code base of the OpenBSD operating system to determine whether its security is increasing over time. We measure the rate at which new code has been introduced and the rate at which vulnerabili- ties have been reported over the last 7.5 years and fifteen versions. We learn that 61\% of the lines of code in today’s OpenBSD are foundational: they were introduced prior to the release of the initial version we studied and have not been altered since. We also learn that 62\% of re- ported vulnerabilities were present when the study began and can also be considered to be foundational. We find strong statistical evidence of a decrease in the rate at which foundational vulnerabilities are being re- ported. However, this decrease is anything but brisk: foundational vulnerabilities have a median lifetime of at least 2.6 years. Finally, we examined the density of vulnerabilities in the code that was altered/introduced in each version. The densities ranged from 0 to 0.033 vulnerabilities reported per thousand lines of code. These densities will increase as more vulnerabilities are reported.},
  eventtitle = {Usenix {{Security Symposium}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6AXEXZ5R/Ozment_and_Schechter-Milk_Or_Wine-Usenix06.pdf},
  venue = {{Vancouver, B.C., Canada}}
}

@online{angel_s._averia_jr._information_2012,
  title = {Information Security: {{Seeking Sun Tzu}}'s Guidance},
  author = {{Angel S. Averia Jr.}},
  date = {2012},
  journaltitle = {TechWorld},
  url = {http://features.techworld.com/security/3413059/information-security-seeking-sun-tzus-guidance/},
  urldate = {2013-05-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3GJNE4FD/cdeoslwb.html}
}

@inproceedings{anggrainingsih_comparison_2016,
  title = {Comparison of Maintainability and Flexibility on Open Source {{LMS}}},
  booktitle = {2016 {{International Seminar}} on {{Application}} for {{Technology}} of {{Information}} and {{Communication}} ({{ISemantic}})},
  author = {Anggrainingsih, Rini and Johannanda, Bara Okta Pratista and Kuswara, Aprilla Paskarika and Wahyuningsih, Daru and Rejekiningsih, Triana},
  date = {2016-08},
  pages = {273--277},
  doi = {10.1109/ISEMANTIC.2016.7873850},
  abstract = {This paper compares the Flexibility and Maintainability factors on open source Learning Management System (LMS) Moodle, Atutor, and ILIAS. This comparison is aimed to find out which LMS has the value maintainability and better flexibility in order to be used by agencies to consider implementation of LMS as well as useful for software developers to provide an overview of the capabilities of the source code for the maintenance source code and flexibility of the LMS. Comparison for Maintainability done by measuring the Maintainability Index value in each LMS with tools phpmterics. As for Flexibility, the comparison is done by measuring the value of Modularity and Simplicity. Measurement of modularity is done by looking at the values of the coupling and cohesion, while simplicity is measured by looking at the value of complexity. Measurement results show that Moodle has Maintainability Index of 89.85, Afferent Coupling of 0.54, Efferent Coupling of 1.81, Cohesion of 2.18, and Complexity of 17.26. ATutor has Maintainability Index of 72.95, Afferent Coupling of 0.95, Efferent Coupling of 2.63, Cohesion of 2.47, and Complexity of 16.84. ILIAS has Maintainability Index of 87.29, Afferent Coupling of 1.49, Efferent Coupling of 5.31, Cohesion of 3.45 and Complexity of 18.15. So it can be inferred that the Moodle source code have an easier maintenance opportunity as well as the modified source code compared to the ATutor and ILIAS.},
  eventtitle = {2016 {{International Seminar}} on {{Application}} for {{Technology}} of {{Information}} and {{Communication}} ({{ISemantic}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RPXX8N2N/Anggrainingsih et al. - 2016 - Comparison of maintainability and flexibility on o.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9JNPJL39/7873850.html},
  keywords = {afferent coupling,Atutor,ATutor,Comparison of open source LMS,Complexity theory,Couplings,efferent coupling,Flexibility,flexibility factor,ILIAS,Indexes,learning management systems,maintainability factor,Maintainability Index,maintainability index value,Maintenance engineering,maintenance opportunity,maintenance source code,Moodle source code,open source learning management system,open source LMS,public domain software,Seminars,Software,software maintenance,source code (software),Standards,tools phpmterics}
}

@incollection{anh_collaborative_2012,
  title = {Collaborative Resolution of Requirements Mismatches When Adopting Open Source Components},
  booktitle = {Requirements {{Engineering}}: {{Foundation}} for {{Software Quality}}},
  author = {Anh, Nguyen Duc and Cruzes, Daniela S. and Conradi, Reidar and Höst, Martin and Franch, Xavier and Ayala, Claudia},
  date = {2012},
  pages = {77--93},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-28714-5_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HSU8WVFS/chp%3A10.1007%2F978-3-642-28714-5_7.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{anh_tuan_nguyen_automatic_2017,
  title = {Automatic {{Categorization}} with {{Deep Neural Network}} for {{Open}}-{{Source Java Projects}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  author = {Anh Tuan Nguyen and Nguyen, Tien N.},
  date = {2017-05},
  pages = {164--166},
  doi = {10.1109/ICSE-C.2017.118},
  abstract = {In this work, we introduce a Deep Neural Network model for automated software categorization. The model is ableto form high-level concepts from low-level code tokens and to distinguish important features such as API calls and identifiers in order to support software categorization. Our empirical evaluation shows that DNN outperformed other machine learning approaches with 15.9-36.4\% higher accuracy in software categorization. We plan to expand further our studies to explore more features and variations of DNN, with different configurations and data sets.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U9QFK9I5/Anh Tuan Nguyen and Nguyen - 2017 - Automatic Categorization with Deep Neural Network .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9RB4Q74N/7965290.html},
  keywords = {API calls,Application Categorization,application program interfaces,automated software categorization,Computational modeling,Conferences,Deep Learning,deep neural network,Deep Neural Network,DNN,Feature extraction,high-level concepts,Java,low-level code tokens,neural nets,Neural networks,open-source Java projects,public domain software,Software,Software Categorization,software engineering,Software engineering}
}

@online{anika_kehrer_linux_nodate,
  title = {Linux Brings over €10 Million Savings for {{Munich}} - {{The H Open}}: {{News}} and {{Features}}},
  author = {{Anika Kehrer}},
  url = {http://www.h-online.com/open/news/item/Linux-brings-over-EUR10-million-savings-for-Munich-1755802.html},
  urldate = {2013-05-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4N9ZGM65/Linux-brings-over-EUR10-million-savings-for-Munich-1755802.html}
}

@inproceedings{anjos_using_2016,
  title = {Using {{Classification Methods}} to {{Reinforce}} the {{Impact}} of {{Social Factors}} on {{Software Success}}},
  booktitle = {Computational {{Science}} and {{Its Applications}} – {{ICCSA}} 2016},
  author = {Anjos, Eudisley and Brasileiro, Jansepetrus and Silva, Danielle and Zenha-Rela, Mário},
  editor = {Gervasi, Osvaldo and Murgante, Beniamino and Misra, Sanjay and Rocha, Ana Maria A.C. and Torre, Carmelo M. and Taniar, David and Apduhan, Bernady O. and Stankova, Elena and Wang, Shangguang},
  date = {2016},
  pages = {187--200},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-42092-9_15},
  abstract = {Define the way of success for software can be an arduous task, especially when dealing with OSS projects. In this case, it is extremely difficult to have control over all stages of the development process. Many researchers have approached ways to identify aspects, whether social or technical, that have some impact on the success or failure of software. Despite the large number of results found, there is still no consensus among which types of attributes have a greater success impact. Thus, after identifying technical and socio-technical factors that influence the success of OSS using data-mining techniques in about 20.000 projects data from GitHub, this study aims to compare them in order to identify those which most influence in determining the success of an OSS project. The results show that it is possible to identify the status (active or dormant) in more than 90 \% of the cases based, mainly, in social attributes of the project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/45GBAB97/Anjos et al. - 2016 - Using Classification Methods to Reinforce the Impa.pdf},
  isbn = {978-3-319-42092-9},
  keywords = {Code Metrics,Decision Table,Programming Language,Programming Paradigm,Rule Base Classifier},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{anota_using_2016,
  title = {Using Free Software Tools: {{Middle}} Education Case in {{Xalapa}}, {{Veracruz}}},
  shorttitle = {Using Free Software Tools},
  booktitle = {2016 {{IEEE International Engineering Summit}}, {{II Cumbre Internacional}} de Las {{Ingenierias}} ({{IE}}-{{Summit}})},
  author = {Anota, Mayra Minerva Mendez and Aguilar, Yosihio Rafael Martinez and Escobar, Alma Delia Otero and Castillo, Jaime Martínez},
  date = {2016-03},
  pages = {1--5},
  doi = {10.1109/IESummit.2016.7459757},
  abstract = {In this article, we discuss the current situation of free software awareness and use in middle education. The established target population is educational institutions in Xalapa, Veracruz, Mexico. The sample is formed by students and teachers from said level and the interest from students on training, usage and distribution of free software is emphasized.},
  eventtitle = {2016 {{IEEE International Engineering Summit}}, {{II Cumbre Internacional}} de Las {{Ingenierias}} ({{IE}}-{{Summit}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JL8PMX82/Anota et al. - 2016 - Using free software tools Middle education case i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RH5F7TD3/7459757.html},
  keywords = {computer aided instruction,Computers,educational institutions,Educational programs,free software,free software awareness,Information technology,Information Technology,Interviews,learning,Mexico,software tools,Software tools,teaching,Veracruz,Xalapa}
}

@misc{anthes_open_2016,
  title = {Open Source Software No Longer Optional},
  author = {Anthes, Gary},
  date = {2016-07-22},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/2949684},
  urldate = {2020-04-22},
  abstract = {Open development and sharing of software gained widespread acceptance 15 years ago, and the practice is accelerating.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AL7X3Z7K/Anthes - 2016 - Open source software no longer optional.pdf}
}

@incollection{antikainen_role_2007,
  title = {The Role of Trust in {{OSS}} Communities—Case {{Linux Kernel}} Community},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Antikainen, Maria and Aaltonen, Timo and Väisänen, Jaani},
  date = {2007},
  pages = {223--228},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_19},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4M54CN9S/chp%3A10.1007%2F978-0-387-72486-7_19.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{anwar_understanding_2018,
  title = {Understanding the {{Hidden Cost}} of {{Software Vulnerabilities}}: {{Measurements}} and {{Predictions}}},
  shorttitle = {Understanding the {{Hidden Cost}} of {{Software Vulnerabilities}}},
  booktitle = {Security and {{Privacy}} in {{Communication Networks}}},
  author = {Anwar, Afsah and Khormali, Aminollah and Nyang, DaeHun and Mohaisen, Aziz},
  editor = {Beyah, Raheem and Chang, Bing and Li, Yingjiu and Zhu, Sencun},
  date = {2018},
  pages = {377--395},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-01701-9_21},
  abstract = {Vulnerabilities have a detrimental effect on end-users and enterprises, both direct and indirect; including loss of private data, intellectual property, the competitive edge, performance, etc. Despite the growing software industry and a push towards a digital economy, enterprises are increasingly considering security as an added cost, which makes it necessary for those enterprises to see a tangible incentive in adopting security. Furthermore, despite data breach laws that are in place, prior studies have suggested that only 4\% of reported data breach incidents have resulted in litigation in federal courts, showing the limited legal ramifications of security breaches and vulnerabilities.In this paper, we study the hidden cost of software vulnerabilities reported in the National Vulnerability Database (NVD) through stock price analysis. Towards this goal, we perform a high-fidelity data augmentation to ensure data reliability and to estimate vulnerability disclosure dates as a baseline for estimating the implication of software vulnerabilities. We further build a model for stock price prediction using the NARX Neural Network model to estimate the effect of vulnerability disclosure on the stock price. Compared to prior work, which relies on linear regression models, our approach is shown to provide better accuracy. Our analysis also shows that the effect of vulnerabilities on vendors varies, and greatly depends on the specific software industry. Whereas some industries are shown statistically to be affected negatively by the release of software vulnerabilities, even when those vulnerabilities are not broadly covered by the media, some others were not affected at all.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PZ6IELBB/Anwar et al. - 2018 - Understanding the Hidden Cost of Software Vulnerab.pdf},
  isbn = {978-3-030-01701-9},
  keywords = {National vulnerability database,Prediction,Vulnerability economics},
  langid = {english},
  series = {Lecture {{Notes}} of the {{Institute}} for {{Computer Sciences}}, {{Social Informatics}} and {{Telecommunications Engineering}}}
}

@book{ao_machine_2010,
  title = {Machine {{Learning}} and {{Systems Engineering}}},
  editor = {Ao, Sio-Iong and Rieger, Burghard and Amouzegar, Mahyar A.},
  date = {2010},
  volume = {68},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://link.springer.com/10.1007/978-90-481-9419-3},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U88JU7FZ/Open Source Software Use in City Government.pdf},
  isbn = {978-90-481-9418-6 978-90-481-9419-3},
  series = {Lecture {{Notes}} in {{Electrical Engineering}}}
}

@inproceedings{aparicio_macroeconomics_2012,
  title = {Macroeconomics Leverage Trough Open Source},
  booktitle = {Proceedings of the {{Workshop}} on {{Open Source}} and {{Design}} of {{Communication}}},
  author = {Aparicio, Manuela and Costa, Carlos J.},
  date = {2012},
  pages = {19--24},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2316941},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SSPPQHEX/p19-aparicio.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{arafat_commenting_2009,
  title = {The Commenting Practice of Open Source},
  booktitle = {Proceedings of the 24th {{ACM SIGPLAN}} Conference Companion on {{Object}} Oriented Programming Systems Languages and Applications},
  author = {Arafat, Oliver and Riehle, Dirk},
  date = {2009},
  pages = {857--864},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1640047},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NUVUC336/p857-arafat.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{arakji_virtual_2007,
  title = {The Virtual Cathedral and the Virtual Bazaar},
  author = {Arakji, Reina Y. and Lang, Karl R.},
  date = {2007},
  journaltitle = {ACM SIGMIS Database},
  volume = {38},
  pages = {32--39},
  url = {http://dl.acm.org/citation.cfm?id=1314242},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DTBKNTGW/p33-arakji.pdf},
  keywords = {_SMS_untagged,game,nyílt forrás,open source,Risk management},
  number = {4}
}

@incollection{arantes_aspects_2011,
  title = {Aspects of an {{Open Source Software Sustainable Life Cycle}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Arantes, Flávia Linhalis and Freire, Fernanda Maria Pereira},
  date = {2011},
  pages = {325--329},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_26},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NUUPH34A/Aspects of an Open Source Software Sustainable Life Cycle.pdf}
}

@incollection{ardagna_adopting_2006,
  title = {Adopting Open Source for Mission-Critical Applications: {{A}} Case Study on Single Sign-On},
  shorttitle = {Adopting Open Source for Mission-Critical Applications},
  booktitle = {Open {{Source Systems}}},
  author = {Ardagna, Claudio Agostino and Damiani, Ernesto and Frati, Fulvio and Reale, Salvatore},
  date = {2006},
  pages = {209--220},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_21},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XAHDRX6D/chp%3A10.1007%2F0-387-34226-5_21.pdf},
  keywords = {_SMS_untagged,evaluation,metrics,nyílt forrás,open source,security}
}

@inproceedings{ardagna_assurance_2009,
  title = {Assurance {{Process}} for {{Large Open Source Code Bases}}},
  author = {Ardagna, Claudio A. and Banzi, Massimo and Damiani, Ernesto and Frati, Fulvio},
  date = {2009},
  pages = {412--417},
  publisher = {{IEEE}},
  doi = {10.1109/CSE.2009.271},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5283228},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XF6DGZ3N/05283228.pdf},
  isbn = {978-1-4244-5334-4},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{ardagna_focse_2007,
  title = {{{FOCSE}}: An {{OWA}}-Based Evaluation Framework for {{OS}} Adoption in Critical Environments},
  shorttitle = {{{FOCSE}}},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Ardagna, Claudio Agostino and Damiani, Ernesto and Frati, Fulvio},
  date = {2007},
  pages = {3--16},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VCDDS3RS/chp%3A10.1007%2F978-0-387-72486-7_1.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{ardagna_implementing_2010,
  title = {Implementing {{Open Source Software Governance}} in {{Real Software Assurance Processes}}},
  booktitle = {Software {{Business}}},
  author = {Ardagna, Claudio A. and Banzi, Massimo and Damiani, Ernesto and Frati, Fulvio},
  date = {2010},
  pages = {103--114},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13633-7_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B4H48QVJ/Implementing Open Source Software Governance in Real Software Assurance Processes.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EPBEB5QJ/chp%3A10.1007%2F978-3-642-13633-7_9.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{ardagna_mapping_2008,
  title = {Mapping Linux Security Targets to Existing Test Suites},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Ardagna, Claudio Agostino and Damiani, Ernesto and El Ioini, Nabil and Frati, Fulvio and Giovannini, Pietro and Tchokpon, Romaric},
  date = {2008},
  pages = {29--45},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_3},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/744PEX5N/chp%3A10.1007%2F978-0-387-09684-1_3.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FRQRT7XV/chp%3A10.1007%2F978-0-387-09684-1_3.pdf},
  keywords = {_SMS_untagged,Forrás2,linux,nyílt forrás,open source,security,security testing,testing}
}

@inproceedings{arima_investigation_2017,
  title = {Investigation and {{Detection}} of {{Split Commit}}},
  booktitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  author = {Arima, Ryo and Higo, Yoshiki and Kusumoto, Shinji},
  date = {2017-07},
  volume = {2},
  pages = {268--269},
  issn = {0730-3157},
  doi = {10.1109/COMPSAC.2017.155},
  abstract = {Each commit in repositories of version control systems should include code changes for only a single task. However, in real repositories, there are many commits for multiple tasks and tasks split into multiple commits. We call the latter split commits. In this research, we firstly investigate how many and what kinds of split commits are included in repositories. Then, we classify the found split commits into three categories. Based on the classification, we propose a new technique to detect split commits automatically. This is the first research that proposes a technique to detect split commits. To evaluate the proposed technique, we apply it to repositories of two open source software. The results show that the proposed technique detects split commits with high accuracy (precision is 0.8 and F-measure is 0.7).},
  eventtitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HAZ5KBE9/Arima et al. - 2017 - Investigation and Detection of Split Commit.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5N2TLETX/8029933.html},
  keywords = {code changes,Conferences,configuration management,Control systems,Couplings,Data mining,History,Open source software,open source software repositories,public domain software,source code (software),Split commit,split commit detection,Version control system,version control systems}
}

@article{arora_empirical_2005,
  title = {An Empirical Analysis of Vendor Response to Software Vulnerability Disclosure},
  author = {Arora, A. and Krishnan, R. and Telang, R. and Yang, Y.},
  date = {2005},
  url = {http://papers.ssrn.com/sol3/papers.cfm?abstract_id=786128},
  urldate = {2012-10-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IT7RUHFT/disclosure_jan_06.pdf},
  keywords = {open source,patch,vulnerability}
}

@inproceedings{arora_empirical_2005-1,
  title = {An {{Empirical Analysis}} of {{Vendor Response}} to {{Disclosure Policy}}.},
  booktitle = {{{WEIS}}},
  author = {Arora, Ashish and Krishnan, Ramayya and Telang, Rahul and Yang, Yubao},
  date = {2005},
  url = {http://infosecon.net/workshop/pdf/41.pdf},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X58K4XCZ/___41.pdf}
}

@article{arora_empirical_2010,
  title = {An {{Empirical Analysis}} of {{Software Vendors}}' {{Patch Release Behavior}}: {{Impact}} of {{Vulnerability Disclosure}}},
  shorttitle = {An {{Empirical Analysis}} of {{Software Vendors}}' {{Patch Release Behavior}}},
  author = {Arora, Ashish and Krishnan, Ramayya and Telang, Rahul and Yang, Yubao},
  date = {2010-03},
  journaltitle = {Information Systems Research},
  volume = {21},
  pages = {115--132},
  issn = {1047-7047, 1526-5536},
  doi = {10.1287/isre.1080.0226},
  url = {http://pubsonline.informs.org/doi/abs/10.1287/isre.1080.0226},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ER5BBTRF/___patching_published_ISR.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XUEGTRZ2/___patching_published_ISR.pdf},
  langid = {english},
  number = {1}
}

@inproceedings{arya_analysis_2019,
  title = {Analysis and {{Detection}} of {{Information Types}} of {{Open Source Software Issue Discussions}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Arya, Deeksha and Wang, Wenting and Guo, Jin L.C. and Cheng, Jinghui},
  date = {2019-05},
  pages = {454--464},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00058},
  abstract = {Most modern Issue Tracking Systems (ITSs) for open source software (OSS) projects allow users to add comments to issues. Over time, these comments accumulate into discussion threads embedded with rich information about the software project, which can potentially satisfy the diverse needs of OSS stakeholders. However, discovering and retrieving relevant information from the discussion threads is a challenging task, especially when the discussions are lengthy and the number of issues in ITSs are vast. In this paper, we address this challenge by identifying the information types presented in OSS issue discussions. Through qualitative content analysis of 15 complex issue threads across three projects hosted on GitHub, we uncovered 16 information types and created a labeled corpus containing 4656 sentences. Our investigation of supervised, automated classification techniques indicated that, when prior knowledge about the issue is available, Random Forest can effectively detect most sentence types using conversational features such as the sentence length and its position. When classifying sentences from new issues, Logistic Regression can yield satisfactory performance using textual features for certain information types, while falling short on others. Our work represents a nontrivial first step towards tools and techniques for identifying and obtaining the rich information recorded in the ITSs to support various software engineering activities and to satisfy the diverse needs of OSS stakeholders.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LCQQU7L9/Arya et al. - 2019 - Analysis and Detection of Information Types of Ope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TTNRWDJ3/8811936.html},
  keywords = {collaborative software engineering,Computer bugs,information types,issue discussion analysis,issue tracking system,ITSs,learning (artificial intelligence),logistic regression,Message systems,Open source software,open source software issue discussions,open source software projects,OSS issue discussions,OSS stakeholders,pattern classification,project management,public domain software,qualitative content analysis,random forest,regression analysis,sentence types,software development management,Software engineering,software engineering activities,software project,Stakeholders,Task analysis}
}

@article{asadollah_concurrency_2017,
  title = {Concurrency Bugs in Open Source Software: A Case Study},
  shorttitle = {Concurrency Bugs in Open Source Software},
  author = {Asadollah, Sara Abbaspour and Sundmark, Daniel and Eldh, Sigrid and Hansson, Hans},
  date = {2017-04-04},
  journaltitle = {Journal of Internet Services and Applications},
  shortjournal = {J Internet Serv Appl},
  volume = {8},
  pages = {4},
  issn = {1869-0238},
  doi = {10.1186/s13174-017-0055-2},
  url = {https://doi.org/10.1186/s13174-017-0055-2},
  urldate = {2020-04-21},
  abstract = {Concurrent programming puts demands on software debugging and testing, as concurrent software may exhibit problems not present in sequential software, e.g., deadlocks and race conditions. In aiming to increase efficiency and effectiveness of debugging and bug-fixing for concurrent software, a deep understanding of concurrency bugs, their frequency and fixing-times would be helpful. Similarly, to design effective tools and techniques for testing and debugging concurrent software, understanding the differences between non-concurrency and concurrency bugs in real-word software would be useful.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RTARUF4K/Abbaspour Asadollah et al. - 2017 - Concurrency bugs in open source software a case s.pdf},
  langid = {english},
  number = {1}
}

@article{asiri_open_2003,
  title = {Open {{Source Software}}},
  author = {Asiri, Sami},
  date = {2003-03},
  journaltitle = {SIGCAS Comput. Soc.},
  volume = {33},
  pages = {2--},
  issn = {0095-2737},
  doi = {10.1145/966498.966501},
  url = {http://doi.acm.org/10.1145/966498.966501},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XUDZMKZG/742.html},
  number = {1}
}

@article{asundi_competitive_2012,
  title = {Competitive Implications of Software Open-Sourcing},
  author = {Asundi, Jai and Carare, Octavian and Dogan, Kutsal},
  date = {2012-12},
  journaltitle = {Decision Support Systems},
  volume = {54},
  pages = {153--163},
  issn = {01679236},
  doi = {10.1016/j.dss.2012.05.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923612001121},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R5BZ983D/1-s2.0-S0167923612001121-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {1}
}

@inproceedings{asundi_need_2005,
  title = {The {{Need}} for {{Effort Estimation Models}} for {{Open Source Software Projects}}},
  booktitle = {Proceedings of the {{Fifth Workshop}} on {{Open Source Software Engineering}}},
  author = {Asundi, Jai},
  date = {2005},
  pages = {1--3},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1082983.1083260},
  url = {http://doi.acm.org/10.1145/1082983.1083260},
  urldate = {2015-11-24},
  abstract = {Open source software(OSS), be it products or tools, are being adopted at a fairly rapid pace in commercial organizations. In fact many firms such as IBM and Sun are even 'opening' up their once proprietary software products and making the source code available. This phenomenon may have a profound effect on the various software engineering methodologies and practices as well as project management activities. Given the difficulty in managing resources in closed source projects, planning and delivery for OSS projects will be an even bigger challenge. In this position paper, we describe the need for new effort estimation models for the development of OSS projects and how this will be required for future project management activities. We outline some of the guidelines to build these cost estimation models and some issues that arise in the verification and validation of these cost models.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RZPBW8FC/Asundi - 2005 - The Need for Effort Estimation Models for Open Sou.pdf},
  isbn = {978-1-59593-127-6},
  keywords = {_SMS_untagged,effort estimation,maintenance,nyílt forrás,Open source software,project management},
  series = {5-{{WOSSE}}}
}

@inproceedings{athanasiades_intrusion_2003,
  title = {Intrusion Detection Testing and Benchmarking Methodologies},
  booktitle = {Information {{Assurance}}, 2003. {{IWIAS}} 2003. {{Proceedings}}. {{First IEEE International Workshop}} On},
  author = {Athanasiades, Nicholas and Abler, Randal and Levine, John and Owen, Henry and Riley, George},
  date = {2003},
  pages = {63--72},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1192459},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FI8BFE5Z/___MANIACS_23.pdf}
}

@online{atwel_f-bomb_2012,
  title = {F-{{Bomb}} Network Spy Device, Collect Data, Hijack Systems, Only \$50 - Element14},
  author = {Atwel, Cabe},
  year = {2012.02.24.},
  journaltitle = {element14.com},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WDBNTK52/F-Bomb network spy device, collect data, hijack systems, only $50 - element14.pdf},
  keywords = {Példa,security}
}

@inproceedings{aurona_gerber_documenting_2010,
  title = {Documenting {{Open Source Migration Processes}} for {{Re}}-Use},
  author = {{Aurona Gerber} and {Onkgopotse Molefe} and {Alta van der Merwe}},
  date = {2010},
  pages = {75--85},
  publisher = {{ACM}},
  location = {{New York, N.Y.}},
  eventtitle = {{{SAICSIT}} '10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IZ9TZFE5/p75-gerber.pdf},
  isbn = {978-1-60558-950-3},
  keywords = {adoption,nyílt forrás},
  langid = {english}
}

@incollection{aversano_applying_2011,
  title = {Applying {{EFFORT}} for Evaluating {{CRM}} Open Source Systems},
  booktitle = {Product-{{Focused Software Process Improvement}}},
  author = {Aversano, Lerina and Tortorella, Maria},
  date = {2011},
  pages = {202--216},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21843-9_17},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C8FZ8XV5/chp%3A10.1007%2F978-3-642-21843-9_17.pdf}
}

@incollection{aversano_evaluating_2011,
  title = {Evaluating the Quality of Free/{{Open}} Source Systems: {{A}} Case Study},
  shorttitle = {Evaluating the Quality of Free/{{Open}} Source Systems},
  booktitle = {Enterprise {{Information Systems}}},
  author = {Aversano, Lerina and Tortorella, Maria},
  date = {2011},
  pages = {119--134},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-19802-1_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VFNUH7UQ/chp%3A10.1007%2F978-3-642-19802-1_9.pdf}
}

@article{aversano_quality_2013,
  title = {Quality Evaluation of Floss Projects: {{Application}} to {{ERP}} Systems},
  shorttitle = {Quality Evaluation of Floss Projects},
  author = {Aversano, Lerina and Tortorella, Maria},
  date = {2013-07},
  journaltitle = {Information and Software Technology},
  volume = {55},
  pages = {1260--1276},
  issn = {09505849},
  doi = {10.1016/j.infsof.2013.01.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584913000311},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7HQUFIAN/1-s2.0-S0950584913000311-main.pdf},
  keywords = {_SMS_untagged,effort estimation,nyílt forrás,open source,quality},
  langid = {english},
  number = {7}
}

@inproceedings{avgerinos_aeg_2011,
  title = {{{AEG}}: {{Automatic Exploit Generation}}.},
  shorttitle = {{{AEG}}},
  booktitle = {{{NDSS}}},
  author = {Avgerinos, Thanassis and Cha, Sang Kil and Hao, Brent Lim Tze and Brumley, David},
  date = {2011},
  volume = {11},
  pages = {59--66},
  url = {http://security.ece.cmu.edu/aeg/aeg-current.pdf},
  urldate = {2015-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RTHDNMKK/aeg-current.pdf},
  keywords = {exploit,security,source,source analysis}
}

@inproceedings{awasthi_openstack-paradigm_2016,
  title = {Openstack-Paradigm Shift to Open Source Cloud Computing Its Integration},
  booktitle = {2016 2nd {{International Conference}} on {{Contemporary Computing}} and {{Informatics}} ({{IC3I}})},
  author = {Awasthi, Shubham and Pathak, Anay and Kapoor, Lovekesh},
  date = {2016-12},
  pages = {112--119},
  doi = {10.1109/IC3I.2016.7917944},
  abstract = {With emergence in cloud computing there was a huge demand for the data center technology and the operating system which can handle the data center. Increasing demand of infrastructure services leading the organizations to move towards Cloud. The aim is to provide an opportunity to the industry to build a hosting architecture, massively scalable which is completely open source, and to provide a solution to manage their on premises datacenters or private cloud and public cloud data centers simultaneously. When we talk about the combination of private as well as public cloud workloads, here term comes into existence i.e. Hybrid Cloud. To build and manage the Hybrid cloud, Openstack is the open source solution available in market. Here we will be discussing the whole concept of OpenStack in detail, It's architecture, functionalities and how we setup it in our environment tested different use cases.},
  eventtitle = {2016 2nd {{International Conference}} on {{Contemporary Computing}} and {{Informatics}} ({{IC3I}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6HEQNBPX/Awasthi et al. - 2016 - Openstack-paradigm shift to open source cloud comp.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QTYPS7AJ/7917944.html},
  keywords = {‘hybrid’ cloud,cloud computing,Cloud computing,Computer architecture,computer centres,data center technology,Databases,Heating systems,hosting architecture,hybrid cloud management,infrastructure services,multi-tenant,Neutrons,open source cloud computing,Openstack open source solution,operating system,Operating systems,operating systems (computers),private cloud data centers,public cloud data centers,public domain software,SDDS,SDN,Servers,software architecture}
}

@online{awesome_open_source_ics_nodate,
  title = {Ics {{Security Tools}}},
  author = {{Awesome Open Source}},
  url = {https://awesomeopensource.com/project/ITI/ICS-Security-Tools},
  urldate = {2020-06-08},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C8B5NS4E/ICS-Security-Tools.html}
}

@incollection{ayala_challenges_2009,
  title = {Challenges of the Open Source Component Marketplace in the Industry},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Ayala, Claudia and Hauge, Øyvind and Conradi, Reidar and Franch, Xavier and Li, Jingyue and Velle, Ketil Sandanger},
  date = {2009},
  pages = {213--224},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_19},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EH6TZMXI/chp%3A10.1007%2F978-3-642-02032-2_19.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{ayala_developing_2013,
  title = {Developing {{Software}} with {{Open Source Software Components}}},
  booktitle = {Finding {{Source Code}} on the {{Web}} for {{Remix}} and {{Reuse}}},
  author = {Ayala, Claudia and Franch, Xavier and Conradi, Reidar and Li, Jingyue and Cruzes, Daniela},
  date = {2013},
  pages = {167--186},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4614-6596-6_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BV46V23P/Developing Software with Open Source Software Components.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XWB7K48J/chp%3A10.1007%2F978-1-4614-6596-6_9.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{ayala_system_2018,
  title = {System Requirements-{{OSS}} Components: Matching and Mismatch Resolution Practices – an Empirical Study},
  shorttitle = {System Requirements-{{OSS}} Components},
  author = {Ayala, Claudia and Nguyen-Duc, Anh and Franch, Xavier and Höst, Martin and Conradi, Reidar and Cruzes, Daniela and Babar, Muhammad Ali},
  date = {2018-03-02},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  pages = {1--56},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-017-9594-1},
  url = {https://link.springer.com/article/10.1007/s10664-017-9594-1},
  urldate = {2018-08-15},
  abstract = {Developing systems by integrating Open Source Software (OSS) is increasingly gaining importance in the software industry. Although the literature claims that this approach highly impacts Requirements Engineering (RE) practices, there is a lack of empirical evidence to demonstrate this statement. To explore and understand problems and challenges of current system requirement–OSS component matching and mismatches resolution practices in software development projects that integrate one or more OSS components into their software products. Semi-structured in-depth interviews with 25 respondents that have performed RE activities in software development projects that integrate OSS components in 25 different software development companies in Spain, Norway, Sweden, and Denmark. The study uncovers 15 observations regarding system requirements-OSS components matching and mismatch resolution practices used in industrial projects that integrate OSS components. The assessed projects focused mainly on pre-release stages of software applications that integrate OSS components in an opportunistic way. The results also provide details of a set of previously unexplored scenarios when solving system requirement–OSS component mismatches; and clarify some challenges and related problems. For instance, although licensing issues and the potential changes in OSS components by their corresponding communities and/or changes in system requirements have been greatly discussed in the RE literature as problems for OSS component integration, they did not appear to be relevant in our assessed projects. Instead, practitioners highlighted the problem of getting suitable OSS component documentation/information.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W3UDQHNV/Ayala et al. - 2018 - System requirements-OSS components matching and m.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q7FAPUV9/s10664-017-9594-1.html},
  langid = {english}
}

@misc{az_europai_kozossegek_bizottsaga_letfontossagu_2004,
  title = {A Létfontosságú Infrastruktúrák Védelme a Terrorizmus Elleni Küzdelemben},
  author = {{Az Európai Közösségek Bizottsága}},
  date = {2004-10-20},
  url = {https://eur-lex.europa.eu/legal-content/HU/TXT/PDF/?uri=CELEX:52004DC0702&from=RO},
  urldate = {2020-09-17},
  annotation = {COM(2004) 702 végleges},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5SK99WP9/PDF.pdf}
}

@misc{az_europai_unio_tanacsa_tanacs_2008,
  title = {A {{TANÁCS}} 2008/114/{{EK IRÁNYELVE}}},
  author = {{Az Európai Unió Tanácsa}},
  date = {2008-12-08},
  url = {https://eur-lex.europa.eu/legal-content/HU/TXT/PDF/?uri=CELEX:32008L0114&from=EN},
  urldate = {2020-09-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X6LTIIIM/PDF.pdf}
}

@inproceedings{azam_preliminary_2008,
  title = {Preliminary Acquisition Information Gathering on Computer Data Storage: Open Source Software ({{OSS}}) vs. {{FIRST DiskImager}}},
  shorttitle = {Preliminary Acquisition Information Gathering on Computer Data Storage},
  booktitle = {Information {{Technology}}, 2008. {{ITSim}} 2008. {{International Symposium}} On},
  author = {Azam, Azril and Ruzila, Raja Mariam},
  date = {2008},
  volume = {1},
  pages = {1--6},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4631577},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3VMR4G9F/04631577.pdf}
}

@inproceedings{bach_designers_2009,
  title = {Designers Wanted: Participation and the User Experience in Open Source Software Development},
  shorttitle = {Designers Wanted},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Bach, Paula M. and DeLine, Robert and Carroll, John M.},
  date = {2009},
  pages = {985--994},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1518852},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9G6MPAHT/p985-bach.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{bach_floss_2009,
  title = {{{FLOSS UX}} Design: {{An}} Analysis of User Experience Design in {{Firefox}} and {{OpenOffice}}. Org},
  shorttitle = {{{FLOSS UX}} Design},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Bach, Paula M. and Carroll, John M.},
  date = {2009},
  pages = {237--250},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_21},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZBBPDJT3/chp%3A10.1007%2F978-3-642-02032-2_21.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{bachmann_software_2009,
  title = {Software {{Process Data Quality}} and {{Characteristics}}: {{A Historical View}} on {{Open}} and {{Closed Source Projects}}},
  shorttitle = {Software {{Process Data Quality}} and {{Characteristics}}},
  booktitle = {Proceedings of the {{Joint International}} and {{Annual ERCIM Workshops}} on {{Principles}} of {{Software Evolution}} ({{IWPSE}}) and {{Software Evolution}} ({{Evol}}) {{Workshops}}},
  author = {Bachmann, Adrian and Bernstein, Abraham},
  date = {2009},
  pages = {119--128},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1595808.1595830},
  url = {http://doi.acm.org/10.1145/1595808.1595830},
  urldate = {2015-11-24},
  abstract = {Software process data gathered from bug tracking databases and version control system log files are a very valuable source to analyze the evolution and history of a project or predict its future. These data are used for instance to predict defects, gather insight into a project's life-cycle, and additional tasks. In this paper we survey five open source projects and one closed source project in order to provide a deeper insight into the quality and characteristics of these often-used process data. Specifically, we first define quality and characteristics measures, which allow us to compare the quality and characteristics of the data gathered for different projects. We then compute the measures and discuss the issues arising from these observation. We show that there are vast differences between the projects, particularly with respect to the quality in the link rate between bugs and commits.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8JIQGGM9/Bachmann és Bernstein - 2009 - Software Process Data Quality and Characteristics.pdf},
  isbn = {978-1-60558-678-6},
  keywords = {_SMS_untagged,bug tracker,case study,closed source,data characteristics,data quality,nyílt forrás,Open Source,version control system},
  series = {{{IWPSE}}-{{Evol}} '09}
}

@incollection{badreddin_modeling_2013,
  title = {Modeling {{Practices}} in {{Open Source Software}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Badreddin, Omar and Lethbridge, Timothy C. and Elassar, Maged},
  date = {2013},
  pages = {127--139},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WPVJ645T/chp%3A10.1007%2F978-3-642-38928-3_9.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@misc{bagoly_nyilt_2009,
  title = {A Nyílt Forráskódú Szoftverek Közigazgatási Alkalmazhatóságának Vizsgálata},
  author = {Bagoly, Zsolt and Balsai, Péter and Dudás, Ágnes and Iványi, Péter and Kósa, Attila and Pandur, Béla and Pázmándi, Kinga and Szegfu, László and Tomka, Gergely and Várady, Géza and Wéninger, Ákos},
  date = {2009},
  publisher = {{Szabad Szoftver Intézet Kht}},
  url = {http://www.odfalliance.hu/doc/h%C3%ADrek/2009/meh-floss.pdf},
  urldate = {2013-04-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T4H6XZA2/meh-floss.pdf},
  keywords = {government,GPL,jog,Magyarország,open source}
}

@article{bahamdain_open_2015,
  title = {Open {{Source Software}} ({{OSS}}) {{Quality Assurance}}: {{A Survey Paper}}},
  shorttitle = {Open {{Source Software}} ({{OSS}}) {{Quality Assurance}}},
  author = {Bahamdain, Salem S.},
  date = {2015},
  journaltitle = {Procedia Computer Science},
  volume = {56},
  pages = {459--464},
  issn = {18770509},
  doi = {10.1016/j.procs.2015.07.236},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1877050915017172},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KT7GX3BV/1-s2.0-S1877050915017172-main.pdf},
  keywords = {secondary research},
  langid = {english}
}

@inproceedings{bahn_liability_2006,
  title = {Liability and {{Control Risks}} with {{Open Source Software}}},
  booktitle = {Information {{Technology}}: {{Research}} and {{Education}}, 2006. {{ITRE}}'06. {{International Conference}} On},
  author = {Bahn, David and Dressel, Dan},
  date = {2006},
  pages = {242--245},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4266334},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K9BZ5W9D/04266334.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{baiocchi_reproducible_2007,
  title = {Reproducible Research in Computational Economics: Guidelines, Integrated Approaches, and Open Source Software},
  shorttitle = {Reproducible Research in Computational Economics},
  author = {Baiocchi, Giovanni},
  date = {2007-06-18},
  journaltitle = {Computational Economics},
  volume = {30},
  pages = {19--40},
  issn = {0927-7099, 1572-9974},
  doi = {10.1007/s10614-007-9084-4},
  url = {http://link.springer.com/10.1007/s10614-007-9084-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TI3AVDDK/art%3A10.1007%2Fs10614-007-9084-4.pdf},
  langid = {english},
  number = {1}
}

@article{bajracharya_sourcerer_2014,
  title = {Sourcerer: {{An}} Infrastructure for Large-Scale Collection and Analysis of Open-Source Code},
  shorttitle = {Sourcerer},
  author = {Bajracharya, Sushil and Ossher, Joel and Lopes, Cristina},
  date = {2014-01},
  journaltitle = {Science of Computer Programming},
  volume = {79},
  pages = {241--259},
  issn = {01676423},
  doi = {10.1016/j.scico.2012.04.008},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016764231200072X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JNU9F46N/1-s2.0-S016764231200072X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{balieiro_facilitating_2008,
  title = {Facilitating Social Network Studies of Floss Using the Ossnetwork Environment},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Balieiro, Marco A. and de Júnior, Samuel F. Sousa and de Souza, Cleidson RB},
  date = {2008},
  pages = {343--350},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_31},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3NA2ZR4K/chp%3A10.1007%2F978-0-387-09684-1_31.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  options = {useprefix=true}
}

@book{balka_open_2011,
  title = {Open {{Source Product Development The Meaning}} and {{Relevance}} of {{Openness}}},
  author = {Balka, Kerstin},
  date = {2011},
  publisher = {{Gabler Verlag / Springer Fachmedien Wiesbaden GmbH, Wiesbaden}},
  location = {{Wiesbaden}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/36I6N5AJ/book_Open Source Product Development.pdf},
  isbn = {978-3-8349-6949-1 3-8349-6949-4 978-3-8349-3153-5 3-8349-3153-5},
  langid = {english}
}

@inproceedings{baltes_no_2018,
  title = {({{No}}) Influence of Continuous Integration on the Commit Activity in {{GitHub}} Projects},
  booktitle = {Proceedings of the 4th {{ACM SIGSOFT International Workshop}} on {{Software Analytics}}},
  author = {Baltes, Sebastian and Knack, Jascha and Anastasiou, Daniel and Tymann, Ralf and Diehl, Stephan},
  date = {2018-11-05},
  pages = {1--7},
  publisher = {{Association for Computing Machinery}},
  location = {{Lake Buena Vista, FL, USA}},
  doi = {10.1145/3278142.3278143},
  url = {https://doi.org/10.1145/3278142.3278143},
  urldate = {2020-04-22},
  abstract = {A core goal of Continuous Integration (CI) is to make small incremental changes to software projects, which are integrated frequently into a mainline repository or branch. This paper presents an empirical study that investigates if developers adjust their commit activity towards the above-mentioned goal after projects start using CI. We analyzed the commit and merge activity in 93 GitHub projects that introduced the hosted CI system Travis CI, but have previously been developed for at least one year before introducing CI. In our analysis, we only found one non-negligible effect, an increased merge ratio, meaning that there were more merging commits in relation to all commits after the projects started using Travis CI. This effect has also been reported in related work. However, we observed the same effect in a random sample of 60 GitHub projects not using CI. Thus, it is unlikely that the effect is caused by the introduction of CI alone. We conclude that: (1) in our sample of projects, the introduction of CI did not lead to major changes in developers' commit activity, and (2) it is important to compare the commit activity to a baseline before attributing an effect to a treatment that may not be the cause for the observed effect.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5UE4T285/Baltes et al. - 2018 - (No) influence of continuous integration on the co.pdf},
  isbn = {978-1-4503-6056-2},
  keywords = {commit activity,continuous integration,mining software repositories,open source software},
  series = {{{SWAN}} 2018}
}

@article{bansal_empirical_2017,
  title = {Empirical Analysis of Search Based Algorithms to Identify Change Prone Classes of Open Source Software},
  author = {Bansal, Ankita},
  date = {2017-01-01},
  journaltitle = {Computer Languages, Systems \& Structures},
  shortjournal = {Computer Languages, Systems \& Structures},
  volume = {47},
  pages = {211--231},
  issn = {1477-8424},
  doi = {10.1016/j.cl.2016.10.001},
  url = {http://www.sciencedirect.com/science/article/pii/S1477842416301397},
  urldate = {2020-04-22},
  abstract = {There are numerous reasons leading to change in software such as changing requirements, changing technology, increasing customer demands, fixing of defects etc. Thus, identifying and analyzing the change-prone classes of the software during software evolution is gaining wide importance in the field of software engineering. This would help software developers to judiciously allocate the resources used for testing and maintenance. Software metrics can be used for constructing various classification models which can be used for timely identification of change prone classes. Search based algorithms which form a subset of machine learning algorithms can be utilized for constructing prediction models to identify change prone classes of software. Search based algorithms use a fitness function to find the best optimal solution among all the possible solutions. In this work, we analyze the effectiveness of hybridized search based algorithms for change prediction. In other words, the aim of this work is to find whether search based algorithms are capable for accurate model construction to predict change prone classes. We have also constructed models using machine learning techniques and compared the performance of these models with the models constructed using Search Based Algorithms. The validation is carried out on two open source Apache projects, Rave and Commons Math. The results prove the effectiveness of hybridized search based algorithms in predicting change prone classes of software. Thus, they can be utilized by the software developers to produce an efficient and better developed software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DLQ7KI5Y/Bansal - 2017 - Empirical analysis of search based algorithms to i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZNCPMZT2/S1477842416301397.html},
  keywords = {Change proneness,Empirical validation,Metrics,Object oriented paradigm,Search based algorithms,Software quality},
  langid = {english}
}

@incollection{banzi_what_2008,
  title = {To {{What Extent Does It Pay}} to {{Approach Open Source Software}} for a {{Big Telco Player}}?},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Banzi, Massimo and Bruno, Guido and Caire, Giovanni},
  date = {2008},
  pages = {307--315},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_27},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CT79G3FE/chp%3A10.1007%2F978-0-387-09684-1_27.pdf},
  keywords = {_SMS_untagged,adoption,integration,nyílt forrás,open source}
}

@article{barana_comparison_2010,
  title = {Comparison between Commercial and Open-Source {{SCADA}} Packages—{{A}} Case Study},
  author = {Barana, O. and Barbato, P. and Breda, M. and Capobianco, R. and Luchetta, A. and Molon, F. and Moressa, M. and Simionato, P. and Taliercio, C. and Zampiva, E.},
  date = {2010-07-01},
  journaltitle = {Fusion Engineering and Design},
  shortjournal = {Fusion Engineering and Design},
  volume = {85},
  pages = {491--495},
  issn = {0920-3796},
  doi = {10.1016/j.fusengdes.2010.02.004},
  url = {http://www.sciencedirect.com/science/article/pii/S092037961000030X},
  urldate = {2020-06-09},
  abstract = {SPIDER (Source for the Production of Ions of Deuterium Extracted from Rf plasma) is a new experimental device under development at Consorzio RFX aimed at providing a full-scale ion source prototype for MITICA (Megavolt ITer Injector and Concept Advance), the experiment devoted at supplying a full-scale prototype of the ITER Heating Neutral Beam Injector (HNB). Both experimental devices will be hosted in a new facility known as PRIMA (Padova Research on Injectors Megavolt Accelerated). The correct operation of SPIDER and MITICA will be guaranteed by process automation and plant monitoring that will be implemented using suitable controllers (cycle time greater than 10ms) in conjunction with appropriate SCADA (Supervisory Control And Data Acquisition) software. This paper presents the tests performed at Consorzio RFX to evaluate commercial and open-source SCADA packages and prepare a technical base for the selection of the SCADA system for SPIDER. Two commercial solutions and two open-source solutions (EPICS and TANGO) were investigated. The typical test-bed was represented by a SCADA system exchanging data with a PLC (Programmable Logic Controller). The case study consisted of: (a) the development of a minimal panel provided with fields for setting parameters and of a trend window; (b) the set-up of two kinds of communication, a direct connection between the SCADA and the PLC and an indirect one by means of an OPC (Object Linking and Embedding for Process Control) server. The communication performance was evaluated measuring the network traffic with a fixed number of data variables exchanged and different polling cycle times. The conclusions show that the final choice of a SCADA package for SPIDER will be between one commercial SCADA and EPICS. This choice will not depend uniquely on the results of the tests, but will be also dictated by the early schedule of the SPIDER operations.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SDDGC8J5/Barana és mtsai. - 2010 - Comparison between commercial and open-source SCAD.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4RMRTH9D/S092037961000030X.html},
  keywords = {Open-source,SCADA,SPIDER},
  langid = {english},
  number = {3},
  series = {Proceedings of the 7th {{IAEA Technical Meeting}} on {{Control}}, {{Data Acquisition}}, and {{Remote Participation}} for {{Fusion Research}}}
}

@inproceedings{barcomb_episodic_2016,
  title = {Episodic Volunteering in Open Source Communities},
  booktitle = {Proceedings of the 20th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Barcomb, Ann},
  date = {2016-06-01},
  pages = {1--3},
  publisher = {{Association for Computing Machinery}},
  location = {{Limerick, Ireland}},
  doi = {10.1145/2915970.2915972},
  url = {https://doi.org/10.1145/2915970.2915972},
  urldate = {2020-04-22},
  abstract = {Episodic volunteers, who prefer short term engagement to habitual contributions, are present in Free/Libre and Open Source Software (FLOSS) communities. Little is known about how they are viewed within their communities, how they view their communities, how community managers are managing them, or even how many episodic volunteers contribute to FLOSS projects and how much they contribute. Knowing more about the prevalence and management of episodic volunteers in FLOSS will help community managers make better decisions for engaging and utilizing these volunteers. My dissertation addresses these questions, providing a picture of what episodic volunteering looks like in the context of FLOSS communities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BWWVADWG/Barcomb - 2016 - Episodic volunteering in open source communities.pdf},
  isbn = {978-1-4503-3691-8},
  keywords = {community management,episodic volunteering,free software,open source,volunteer management,volunteers},
  series = {{{EASE}} '16}
}

@inproceedings{barcomb_how_2015,
  title = {How {{Developers Acquire FLOSS Skills}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Barcomb, Ann and Grottke, Michael and Stauffert, Jan-Philipp and Riehle, Dirk and Jahn, Sabrina},
  date = {2015-05-16},
  pages = {23--32},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-17837-0_3},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-17837-0_3},
  urldate = {2018-08-15},
  abstract = {With the increasing prominence of open collaboration as found in free/libre/open source software projects and other joint production communities, potential participants need to acquire skills. How these skills are learned has received little research attention. This article presents a large-scale survey (5,309 valid responses) in which users and developers of the beta release of a popular file download application were asked which learning styles were used to acquire technical and social skills. We find that the extent to which a person acquired the relevant skills through informal methods tends to be higher if the person is a free/libre/open source code contributor, while being a professional software developer does not have this effect. Additionally, younger participants proved more likely to make use of formal methods of learning. These insights will help individuals, commercial companies, educational institutions, governments and open collaborative projects decide how they promote learning.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5SE45P25/Barcomb et al. - 2015 - How Developers Acquire FLOSS Skills.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GJZQFGVE/978-3-319-17837-0_3.html},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{barcomb_volunteer_2014,
  title = {Volunteer {{Attraction}} and {{Retention}} in {{Open Source Communities}}},
  author = {Barcomb, Ann},
  date = {2014},
  pages = {1--2},
  publisher = {{ACM Press}},
  doi = {10.1145/2641580.2641628},
  url = {http://dl.acm.org/citation.cfm?doid=2641580.2641628},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2GZF5BXX/p40.pdf},
  isbn = {978-1-4503-3016-9},
  langid = {english}
}

@inproceedings{barcomb_why_2019,
  title = {Why {{Do Episodic Volunteers Stay}} in {{FLOSS Communities}}?},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Barcomb, Ann and Stol, Klaas-Jan and Riehle, Dirk and Fitzgerald, Brian},
  date = {2019-05},
  pages = {948--959},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00100},
  abstract = {Successful Free/Libre and Open Source Software (FLOSS) projects incorporate both habitual and infrequent, or episodic, contributors. Using the concept of episodic volunteering (EV) from the general volunteering literature, we derive a model consisting of five key constructs that we hypothesize affect episodic volunteers' retention in FLOSS communities. To evaluate the model we conducted a survey with over 100 FLOSS episodic volunteers. We observe that three of our model constructs (social norms, satisfaction and community commitment) are all positively associated with volunteers' intention to remain, while the two other constructs (psychological sense of community and contributor benefit motivations) are not. Furthermore, exploratory clustering on unobserved heterogeneity suggests that there are four distinct categories of volunteers: satisfied, classic, social and obligated. Based on our findings, we offer suggestions for projects to incorporate and manage episodic volunteers, so as to better leverage this type of contributors and potentially improve projects' sustainability.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3DEXR6PM/Barcomb et al. - 2019 - Why Do Episodic Volunteers Stay in FLOSS Communiti.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YS3YQXJJ/8811892.html},
  keywords = {Analytical models,community commitment,community management,Computer science,episodic contributors,episodic volunteering,Face,FLOSS communities,FLOSS episodic volunteers,free-libre and open source software,general volunteering literature,habitual contributors,open source software,Open source software,Psychology,public domain software,software development management,software quality,Sustainable development,volunteer management}
}

@incollection{barham_emergence_2013,
  title = {The {{Emergence}} of {{Quality Assurance Practices}} in {{Free}}/{{Libre Open Source Software}}: {{A Case Study}}},
  shorttitle = {The {{Emergence}} of {{Quality Assurance Practices}} in {{Free}}/{{Libre Open Source Software}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Barham, Adina},
  date = {2013},
  pages = {271--276},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_21},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BEFTQB9P/chp%3A10.1007%2F978-3-642-38928-3_21.pdf}
}

@incollection{barham_impact_2012,
  title = {The {{Impact}} of {{Formal QA Practices}} on {{FLOSS Communities}}–{{The Case}} of {{Mozilla}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Barham, Adina},
  date = {2012},
  pages = {262--267},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_19},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2K98WJ69/chp%3A10.1007%2F978-3-642-33442-9_19.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{barrachina_free_2012,
  title = {Free Software at the Education Service in Accordance with the Law},
  booktitle = {Global {{Engineering Education Conference}} ({{EDUCON}}), 2012 {{IEEE}}},
  author = {Barrachina, Javier and Garrido, Piedad and Martinez, Francisco J. and Repulles, Fernando},
  date = {2012},
  pages = {1--8},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6201077},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VWGJSXQA/06201077.pdf}
}

@article{barua_what_2014,
  title = {What Are Developers Talking about? {{An}} Analysis of Topics and Trends in {{Stack Overflow}}},
  shorttitle = {What Are Developers Talking About?},
  author = {Barua, Anton and Thomas, Stephen W. and Hassan, Ahmed E.},
  date = {2014-06},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {619--654},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-012-9231-y},
  url = {http://link.springer.com/10.1007/s10664-012-9231-y},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D82IRE54/art%3A10.1007%2Fs10664-012-9231-y.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {3}
}

@article{barzilay_understanding_2014,
  title = {Understanding Reuse of Software Examples: {{A}} Case Study of Prejudice in a Community of Practice},
  shorttitle = {Understanding Reuse of Software Examples},
  author = {Barzilay, Ohad and Urquhart, Cathy},
  date = {2014-12},
  journaltitle = {Information and Software Technology},
  volume = {56},
  pages = {1613--1628},
  issn = {09505849},
  doi = {10.1016/j.infsof.2014.02.013},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584914000664},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4SRFMWGP/1-s2.0-S0950584914000664-main.pdf},
  langid = {english},
  number = {12}
}

@incollection{basu_robust_2006,
  title = {A {{Robust Open Source Exchange}} for {{Open Source Software Development}}},
  booktitle = {Open {{Source Systems}}},
  author = {Basu, Amit},
  date = {2006},
  pages = {99--108},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_10},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UBPBH83R/chp%3A10.1007%2F0-387-34226-5_10.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{batarseh_3_2020,
  title = {3 - {{The}} History and Future Prospects of Open Data and Open Source Software},
  booktitle = {Data {{Democracy}}},
  author = {Batarseh, Feras A. and Kumar, Abhinav and Eisenberg, Sam},
  editor = {Batarseh, Feras A. and Yang, Ruixin},
  date = {2020-01-01},
  pages = {29--43},
  publisher = {{Academic Press}},
  doi = {10.1016/B978-0-12-818366-3.00003-4},
  url = {http://www.sciencedirect.com/science/article/pii/B9780128183663000034},
  urldate = {2020-04-22},
  abstract = {Open data for all New Yorkers is the tagline on New York City's open data website. Open government is being promoted at most countries of the western world. Governments' transparency levels are being measured by the amount of data they share through their online public repositories. Additionally, open source software is promoted at governments, academia, and the industry—this is the new digital story of this century, and the new testament between the Gods of technology and there users; data and software openness will redefine the path forward and aim to rekindle our collective intelligence. Data and software openness can redefine Data Democracy and be the catalyst for its progress. This chapter provides a historical insight into data and software openness, the beginnings, the heroes, prospects for the future, and all things we cannot afford to negotiate or lose.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GSMDK57U/B9780128183663000034.html},
  isbn = {978-0-12-818366-3},
  keywords = {Copyleft,Hacking,Open data,Open source software},
  langid = {english}
}

@book{battelle_search_2005,
  title = {The Search: How {{Google}} and Its Rivals Rewrote the Rules of Business and Transformed Our Culture},
  shorttitle = {The Search},
  author = {Battelle, John},
  date = {2005},
  publisher = {{Portfolio}},
  location = {{New York}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2KEG8PZJ/chp%3A10.1007%2F978-0-387-85895-1_6.pdf},
  isbn = {978-1-59184-088-6},
  keywords = {Google,Google (Firm),Information society,Internet industry,Internet searching,United States,Web search engines},
  pagetotal = {311}
}

@incollection{bayrak_open_2005,
  title = {Open {{Source Software Development}}: {{Structural Tension}} in the {{American Experiment}}},
  shorttitle = {Open {{Source Software Development}}},
  booktitle = {Advances in {{Computers}}},
  author = {Bayrak, Coskun and Davis, Chad},
  date = {2005},
  volume = {64},
  pages = {247--282},
  publisher = {{Elsevier}},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S006524580464006X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FCQ5XJ34/1-s2.0-S006524580464006X-main.pdf},
  isbn = {978-0-12-012164-9},
  keywords = {history,open source,secondary research},
  langid = {english}
}

@article{bayrak_relationship_2003,
  title = {The {{Relationship Between Distributed Systems}} and {{Open Software Development}}},
  author = {Bayrak, Coskun and Davis, Chad},
  date = {2003-12},
  journaltitle = {Commun. ACM},
  volume = {46},
  pages = {99--102},
  issn = {0001-0782},
  doi = {10.1145/953460.953466},
  url = {http://doi.acm.org/10.1145/953460.953466},
  urldate = {2015-11-24},
  abstract = {The behavior and performance of OSD is best appreciated as a distributed system.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RT959FAW/Bayrak és Davis - 2003 - The Relationship Between Distributed Systems and O.pdf},
  number = {12}
}

@article{baytiyeh_open_2010,
  title = {Open Source Software: {{A}} Community of Altruists},
  shorttitle = {Open Source Software},
  author = {Baytiyeh, Hoda and Pfaffman, Jay},
  date = {2010-11},
  journaltitle = {Computers in Human Behavior},
  volume = {26},
  pages = {1345--1354},
  issn = {07475632},
  doi = {10.1016/j.chb.2010.04.008},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0747563210000828},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2XJFA3M5/1-s2.0-S0747563210000828-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {6}
}

@inproceedings{beigbeder_open_2006,
  title = {Open Source Search and Research},
  booktitle = {Proceedings of the 2006 International Workshop on {{Research}} Issues in Digital Libraries},
  author = {Beigbeder, Michel and Buntine, Wray and Yee, Wai Gen},
  date = {2006},
  pages = {5},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1364748},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VBFAVCEC/a5-beigbeder.pdf}
}

@inproceedings{bell_advancing_2017,
  title = {Advancing {{Open Science}} with {{Version Control}} and {{Blockchains}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 12th {{International Workshop}} on {{Software Engineering}} for {{Science}} ({{SE4Science}})},
  author = {Bell, Jonathan and LaToza, Thomas D. and Baldmitsi, Foteini and Stavrou, Angelos},
  date = {2017-05},
  pages = {13--14},
  doi = {10.1109/SE4Science.2017.11},
  abstract = {The scientific community is facing a crisis of reproducibility: confidence in scientific results is damaged by concerns regarding the integrity of experimental data and the analyses applied to that data. Experimental integrity can be compromised inadvertently when researchers overlook some important component of their experimental procedure, or intentionally by researchers or malicious third-parties who are biased towards ensuring a specific outcome of an experiment. The scientific community has pushed for "open science" to add transparency to the experimental process, asking researchers to publicly register their data sets and experimental procedures. We argue that the software engineering community can leverage its expertise in tracking traceability and provenance of source code and its related artifacts to simplify data management for scientists. Moreover, by leveraging smart contract and blockchain technologies, we believe that it is possible for such a system to guarantee end-to-end integrity of scientific data and results while supporting collaborative research.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 12th {{International Workshop}} on {{Software Engineering}} for {{Science}} ({{SE4Science}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VBYVW33L/Bell et al. - 2017 - Advancing Open Science with Version Control and Bl.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CEXRD77S/7964307.html},
  keywords = {blockchain technologies,blockchains,configuration management,Contracts,Control systems,Cryptography,data analysis,Data collection,data integrity,data management,data stewardship,experimental data integrity,experimental process,History,open science,program diagnostics,scientific community,scientific data integrity,smart contract,Software,software engineering,software engineering community,source code (software),source code provenance tracking,source code traceability tracking,Tools,version control}
}

@inproceedings{beller_analyzing_2016,
  title = {Analyzing the {{State}} of {{Static Analysis}}: {{A Large}}-{{Scale Evaluation}} in {{Open Source Software}}},
  shorttitle = {Analyzing the {{State}} of {{Static Analysis}}},
  booktitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  author = {Beller, Moritz and Bholanath, Radjino and McIntosh, Shane and Zaidman, Andy},
  date = {2016-03},
  volume = {1},
  pages = {470--481},
  doi = {10.1109/SANER.2016.105},
  abstract = {The use of automatic static analysis has been a software engineering best practice for decades. However, we still do not know a lot about its use in real-world software projects: How prevalent is the use of Automated Static Analysis Tools (ASATs) such as FindBugs and JSHint? How do developers use these tools, and how does their use evolve over time? We research these questions in two studies on nine different ASATs for Java, JavaScript, Ruby, and Python with a population of 122 and 168,214 open-source projects. To compare warnings across the ASATs, we introduce the General Defect Classification (GDC) and provide a grounded-theory-derived mapping of 1,825 ASAT-specific warnings to 16 top-level GDC classes. Our results show that ASAT use is widespread, but not ubiquitous, and that projects typically do not enforce a strict policy on ASAT use. Most ASAT configurations deviate slightly from the default, but hardly any introduce new custom analyses. Only a very small set of default ASAT analyses is widely changed. Finally, most ASAT configurations, once introduced, never change. If they do, the changes are small and have a tendency to occur within one day of the configuration's initial introduction.},
  eventtitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3UGHMMNN/Beller et al. - 2016 - Analyzing the State of Static Analysis A Large-Sc.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z27WQX3U/7476667.html},
  keywords = {ASAT,ASATs,automated static analysis tools,Automated Static Analysis Tools,Best practices,general defect classification,General Defect Classification,GitHub,grounded-theory-derived mapping,Java,JavaScript,large-scale evaluation,Manuals,open source software,Open source software,open-source projects,Open-Source Software,pattern classification,program diagnostics,public domain software,Python,Ruby,software engineering,Software systems,Standards,state analysis,top-level GDC classes}
}

@inproceedings{beller_modern_2014,
  title = {Modern {{Code Reviews}} in {{Open}}-Source {{Projects}}: {{Which Problems Do They Fix}}?},
  shorttitle = {Modern {{Code Reviews}} in {{Open}}-Source {{Projects}}},
  booktitle = {Proceedings of the 11th {{Working Conference}} on {{Mining Software Repositories}}},
  author = {Beller, Moritz and Bacchelli, Alberto and Zaidman, Andy and Juergens, Elmar},
  date = {2014},
  pages = {202--211},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2597073.2597082},
  url = {http://doi.acm.org/10.1145/2597073.2597082},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G49A5UNH/Beller és mtsai. - 2014 - Modern Code Reviews in Open-source Projects Which.pdf},
  isbn = {978-1-4503-2863-0},
  keywords = {_SMS_untagged,code review,Defects,nyílt forrás,Open source software},
  series = {{{MSR}} 2014}
}

@incollection{bellver_developing_2011,
  title = {Developing {{Secure Agent Infrastructures}} with {{Open Standards}} and {{Open}}-{{Source Technologies}}},
  booktitle = {Highlights in {{Practical Applications}} of {{Agents}} and {{Multiagent Systems}}},
  author = {Bellver, Joan and Such, Jose M. and Espinosa, Agustin and Garcia-Fornes, Ana},
  date = {2011},
  pages = {37--44},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-19917-2_5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2BZU86TP/chp%3A10.1007%2F978-3-642-19917-2_5.pdf}
}

@online{ben_cotton_what_nodate,
  title = {What Are Configuration Management Tools? | {{Opensource}}.Com},
  author = {{Ben Cotton}},
  url = {https://opensource.com/business/16/9/what-are-configuration-management-tools?sc_cid=701600000011jJaAAI},
  urldate = {2016-09-30},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/567FAI96/what-are-configuration-management-tools.html}
}

@inproceedings{ben_othmane_identification_2019,
  title = {Identification of the {{Impacts}} of {{Code Changes}} on the {{Security}} of {{Software}}},
  booktitle = {2019 {{IEEE}} 43rd {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  author = {Ben Othmane, Lotfi and Jamil, Ameerah-Muhsina and Abdelkhalek, Moataz},
  date = {2019-07},
  volume = {2},
  pages = {569--574},
  issn = {0730-3157},
  doi = {10.1109/COMPSAC.2019.10268},
  abstract = {Companies develop their software in versions and iterations. Ensuring the security of each additional version using code review is costly and time consuming. This paper investigates automated tracing of the impacts of code changes on the security of a given software. To this end, we use call graphs to model the software code, and security assurance cases to model the security requirements of the software. Then we relate assurance case elements to code through the entry point methods of the software, creating a map of monitored security functions. This mapping allows to evaluate the security requirements that are affected by code changes. The approach is implemented in a set of tools and evaluated using three open-source ERP/E-commerce software applications. The limited evaluation showed that the approach is effective in identifying the impacts of code changes on the security of the software. The approach promises to considerably reduce the security assessment time of the subsequent releases and iterations of software, keeping the initial security state throughout the software lifetime.},
  eventtitle = {2019 {{IEEE}} 43rd {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NNF2DDJ2/Ben Othmane et al. - 2019 - Identification of the Impacts of Code Changes on t.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EVNCXJF3/8754342.html},
  keywords = {assurance case elements,code change impact,code review,electronic commerce,enterprise resource planning,incremental development,Java,monitored security functions,Monitoring,Open source software,open-source e-commerce software application,open-source ERP software application,public domain software,safety-critical software,Security,security assessment time,security assurance case,security assurance cases,security requirements,security state,software code,software lifetime,software maintenance,Software security,source code (software),Tools,Unified modeling language}
}

@article{ben_othmane_time_2017,
  title = {Time for {{Addressing Software Security Issues}}: {{Prediction Models}} and {{Impacting Factors}}},
  shorttitle = {Time for {{Addressing Software Security Issues}}},
  author = {Ben Othmane, Lotfi and Chehrazi, Golriz and Bodden, Eric and Tsalovski, Petar and Brucker, Achim D.},
  date = {2017-06-01},
  journaltitle = {Data Science and Engineering},
  shortjournal = {Data Sci. Eng.},
  volume = {2},
  pages = {107--124},
  issn = {2364-1541},
  doi = {10.1007/s41019-016-0019-8},
  url = {https://doi.org/10.1007/s41019-016-0019-8},
  urldate = {2020-04-21},
  abstract = {Finding and fixing software vulnerabilities have become a major struggle for most software development companies. While generally without alternative, such fixing efforts are a major cost factor, which is why companies have a vital interest in focusing their secure software development activities such that they obtain an optimal return on this investment. We investigate, in this paper, quantitatively the major factors that impact the time it takes to fix a given security issue based on data collected automatically within SAP’s secure development process, and we show how the issue fix time could be used to monitor the fixing process. We use three machine learning methods and evaluate their predictive power in predicting the time to fix issues. Interestingly, the models indicate that vulnerability type has less dominant impact on issue fix time than previously believed. The time it takes to fix an issue instead seems much more related to the component in which the potential vulnerability resides, the project related to the issue, the development groups that address the issue, and the closeness of the software release date. This indicates that the software structure, the fixing processes, and the development groups are the dominant factors that impact the time spent to address security issues. SAP can use the models to implement a continuous improvement of its secure software development process and to measure the impact of individual improvements. The development teams at SAP develop different types of software, adopt different internal development processes, use different programming languages and platforms, and are located in different cities and countries. Other organizations, may use the results—with precaution—and be learning organizations.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F2YPGQ8I/Ben Othmane et al. - 2017 - Time for Addressing Software Security Issues Pred.pdf},
  langid = {english},
  number = {2}
}

@incollection{berdou_insiders_2006,
  title = {Insiders and Outsiders: Paid Contributors and the Dynamics of Cooperation in Community Led {{F}}/{{OS}} Projects},
  shorttitle = {Insiders and Outsiders},
  booktitle = {Open {{Source Systems}}},
  author = {Berdou, Evangelia},
  date = {2006},
  pages = {201--208},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_20},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PIU54U8K/chp%3A10.1007%2F0-387-34226-5_20.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{bergman_open_2014,
  title = {Open {{Source Textbooks}}: {{A Paradigm Derived}} from {{Open Source Software}}},
  shorttitle = {Open {{Source Textbooks}}},
  author = {Bergman, Seth D.},
  date = {2014-03},
  journaltitle = {Publishing Research Quarterly},
  volume = {30},
  pages = {1--10},
  issn = {1053-8801, 1936-4792},
  doi = {10.1007/s12109-014-9346-7},
  url = {http://link.springer.com/10.1007/s12109-014-9346-7},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2J7R88DC/art%3A10.1007%2Fs12109-014-9346-7.pdf},
  langid = {english},
  number = {1}
}

@incollection{bergquist_historical_2011,
  title = {A {{Historical Account}} of the {{Value}} of {{Free}} and {{Open Source Software}}: {{From Software Commune}} to {{Commercial Commons}}},
  shorttitle = {A {{Historical Account}} of the {{Value}} of {{Free}} and {{Open Source Software}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Bergquist, Magnus and Ljungberg, Jan and Rolandsson, Bertil},
  date = {2011},
  pages = {196--207},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_13},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3UZ4VJND/chp%3A10.1007%2F978-3-642-24418-6_13.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QTSJJKB6/chp%3A10.1007%2F978-3-642-24418-6_13.pdf},
  keywords = {_SMS_untagged,community,history,nyílt forrás,open source}
}

@article{bergstra_about_2007,
  title = {About “Trivial” Software Patents: {{The IsNot}} Case},
  shorttitle = {About “Trivial” Software Patents},
  author = {Bergstra, Jan A. and Klint, Paul},
  date = {2007-02},
  journaltitle = {Science of Computer Programming},
  volume = {64},
  pages = {264--285},
  issn = {01676423},
  doi = {10.1016/j.scico.2006.09.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642306001754},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N78VXDXW/1-s2.0-S0167642306001754-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {3}
}

@online{betridge_four_2012,
  title = {Four Reasons {{I}} like Developing with Open Source Code},
  author = {Betridge, Glen},
  date = {2012},
  journaltitle = {OpenSource.com},
  url = {http://opensource.com/life/12/12/four-reasons-i-developing-open-source-code},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3NQ5A8UR/Four reasons I like developing with open source code — opensource.pdf},
  keywords = {előnyök,open source}
}

@article{bettenburg_management_2015,
  title = {Management of Community Contributions: {{A}} Case Study on the {{Android}} and {{Linux}} Software Ecosystems},
  shorttitle = {Management of Community Contributions},
  author = {Bettenburg, Nicolas and Hassan, Ahmed E. and Adams, Bram and German, Daniel M.},
  date = {2015-02},
  journaltitle = {Empirical Software Engineering},
  volume = {20},
  pages = {252--289},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-013-9284-6},
  url = {http://link.springer.com/10.1007/s10664-013-9284-6},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VEFMZQ4P/art%3A10.1007%2Fs10664-013-9284-6.pdf},
  keywords = {_SMS_untagged,community,development,Forrás2,grounded theory,Mintamunka,nyílt forrás,open source},
  langid = {english},
  number = {1}
}

@article{beyerchen_clausewitz_1992,
  title = {Clausewitz, {{Nonlinearity}} and the {{Unpredictability}} of {{War}}},
  author = {Beyerchen, Alan},
  date = {1992},
  journaltitle = {International security},
  volume = {17},
  pages = {59--90},
  issn = {0162-2889},
  url = {http://www.clausewitz.com/readings/Beyerchen/CWZandNonlinearity.htm},
  urldate = {2012-12-19},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HXZUBEHU/CWZandNonlinearity.html},
  number = {3}
}

@article{bhatt_social_2016,
  title = {Social Innovation with Open Source Software: {{User}} Engagement and Development Challenges in {{India}}},
  shorttitle = {Social Innovation with Open Source Software},
  author = {Bhatt, Punita and Ahmad, Ali J. and Roomi, Muhammad Azam},
  date = {2016-06-01},
  journaltitle = {Technovation},
  shortjournal = {Technovation},
  volume = {52-53},
  pages = {28--39},
  issn = {0166-4972},
  doi = {10.1016/j.technovation.2016.01.004},
  url = {http://www.sciencedirect.com/science/article/pii/S0166497216000055},
  urldate = {2020-04-22},
  abstract = {A diverse range of innovative solutions based on Free-and-Open-Source Software (FOSS) have been developed for marginalized communities in developing countries. It has been suggested that such small-scale and home-grown solutions (e.g. mobile phone apps), usually championed by social enterprises (SEs), are more likely to introduce pro-poor change than infrastructure heavy ICT initiatives designed by state and other international actors. In the Indian context, FOSS-based social innovations (SIs) introduced by SEs are helping poor communities tackle previously thought-to-be unresolvable socio-economic problems. An interesting question, therefore, would be: in what ways is the SE model and approach uniquely equipped to develop FOSS-based SIs that deliver pro-poor change? The empirical component of the research attempts to shed light on this question by uncovering the nuts and bolts of the development methodology deployed by an SE during the coding and launch of an FOSS-based SI. Findings highlight the significant role of the founder's social vision; the challenges of accurately capturing and translating to software developers the nature and nuance of social problems; and, the incumbent issues in putting together a methodology that creates active user engagement throughout the software development process, overcoming difficult barriers such as language and culture.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U86VWUM4/Bhatt et al. - 2016 - Social innovation with open source software User .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7JRC9SIF/S0166497216000055.html},
  keywords = {Developing country,Free software,ICT,India,Open source software,Social change,Social innovation,Technology policy},
  langid = {english}
}

@inproceedings{bird_latent_2008,
  title = {Latent {{Social Structure}} in {{Open Source Projects}}},
  booktitle = {Proceedings of the 16th {{ACM SIGSOFT International Symposium}} on {{Foundations}} of {{Software Engineering}}},
  author = {Bird, Christian and Pattison, David and D'Souza, Raissa and Filkov, Vladimir and Devanbu, Premkumar},
  date = {2008},
  pages = {24--35},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1453101.1453107},
  url = {http://doi.acm.org/10.1145/1453101.1453107},
  urldate = {2015-11-24},
  abstract = {Commercial software project managers design project organizational structure carefully, mindful of available skills, division of labour, geographical boundaries, etc. These organizational "cathedrals" are to be contrasted with the "bazaar-like" nature of Open Source Software (OSS) Projects, which have no pre-designed organizational structure. Any structure that exists is dynamic, self-organizing, latent, and usually not explicitly stated. Still, in large, complex, successful, OSS projects, we do expect that subcommunities will form spontaneously within the developer teams. Studying these subcommunities, and their behavior can shed light on how successful OSS projects self-organize. This phenomenon could well hold important lessons for how commercial software teams might be organized. Building on known well-established techniques for detecting community structure in complex networks, we extract and study latent subcommunities from the email social network of several projects: Apache HTTPD, Python, PostgresSQL, Perl, and Apache ANT. We then validate them with software development activity history. Our results show that subcommunities do indeed spontaneously arise within these projects as the projects evolve. These subcommunities manifest most strongly in technical discussions, and are significantly connected with collaboration behaviour.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I8WTWUKM/Bird és mtsai. - 2008 - Latent Social Structure in Open Source Projects.pdf},
  isbn = {978-1-59593-995-1},
  keywords = {_SMS_untagged,collaboration,nyílt forrás,Open source software,social networks},
  series = {{{SIGSOFT}} '08/{{FSE}}-16}
}

@inproceedings{bjorgvinsson_software_2007,
  title = {Software Development for Governmental Use Utilizing Free and Open Source Software},
  booktitle = {Proceedings of the 1st International Conference on {{Theory}} and Practice of Electronic Governance},
  author = {Björgvinsson, Tryggvi and Thorbergsson, Helgi},
  date = {2007},
  pages = {133--140},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1328087},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZDE9ZV76/p133-bjorgvinsson.pdf},
  keywords = {_SMS_untagged,Forrás1,free software,history,nyílt forrás,open source}
}

@book{black_pharo_2009,
  title = {Pharo by Example},
  author = {Black, Andrew P and , Stéphane, Ducasse and Nierstrasz, Pollet, Damien, Oscar},
  date = {2009},
  publisher = {{Square Bracket Associates}},
  location = {{[Kehrsatz] Switzerland}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UMFIXXAP/PBE1-2009-10-28.pdf},
  isbn = {978-3-9523341-4-0 3-9523341-4-6},
  langid = {english}
}

@inproceedings{black_software_2007,
  title = {Software Assurance with {{SAMATE}} Reference Dataset, Tool Standards, and Studies},
  booktitle = {Digital {{Avionics Systems Conference}}, 2007. {{DASC}}'07. {{IEEE}}/{{AIAA}} 26th},
  author = {Black, Paul E.},
  date = {2007},
  pages = {6--C},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4391957},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SJEIB929/swAssur DASC007.pdf}
}

@article{blankinship_closed_2004,
  title = {Closed Caption, Open Source},
  author = {Blankinship, E. and Smith, B. and Holtzman, H. and Bender, Walter},
  date = {2004},
  journaltitle = {BT Technology Journal},
  volume = {22},
  pages = {151--159},
  url = {http://link.springer.com/article/10.1023/B:BTTJ.0000047594.85806.c9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2CK8FFTI/art%3A10.1023%2FB%3ABTTJ.0000047594.85806.c9.pdf},
  number = {4}
}

@article{blincoe_understanding_2016,
  ids = {blincoe\_understanding\_2016-1},
  title = {Understanding the Popular Users: {{Following}}, Affiliation Influence and Leadership on {{GitHub}}},
  shorttitle = {Understanding the Popular Users},
  author = {Blincoe, Kelly and Sheoran, Jyoti and Goggins, Sean and Petakovic, Eva and Damian, Daniela},
  date = {2016-02},
  journaltitle = {Information and Software Technology},
  volume = {70},
  pages = {30--39},
  issn = {09505849},
  doi = {10.1016/j.infsof.2015.10.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584915001688},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9GBBIBPV/Blincoe et al. - 2016 - Understanding the popular users Following, affili.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QUA3C6XN/1-s2.0-S0950584915001688-main.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7XSCMKZI/S0950584915001688.html},
  keywords = {_SMS_untagged,Following,GitHub,Influence,Leadership,nyílt forrás,Open source software,Social computing},
  langid = {english}
}

@book{bocher_geospatial_2012,
  title = {Geospatial {{Free}} and {{Open Source Software}} in the 21st {{Century}}},
  editor = {Bocher, Erwan and Neteler, Markus},
  date = {2012},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://www.springerlink.com/index/10.1007/978-3-642-10595-1},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P4W2UXKC/chp%3A10.1007%2F978-3-642-10595-1_14.pdf},
  isbn = {978-3-642-10594-4 978-3-642-10595-1},
  series = {Lecture {{Notes}} in {{Geoinformation}} and {{Cartography}}}
}

@article{bocsok_viktor_kritikus_2013,
  title = {Kritikus {{Infrastruktúra}} Üzemeltetés a Jövőben - Törvénytől a Megoldásig},
  author = {{Bocsok Viktor} and {Borbély Zsuzsa}},
  date = {2013},
  journaltitle = {Florian express},
  volume = {22},
  pages = {78--85},
  issn = {1215-492},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H9MX2RIP/Fl-2013-március.pdf},
  number = {3}
}

@incollection{boehm_future_2006,
  title = {The Future of Software Processes},
  booktitle = {Unifying the {{Software Process Spectrum}}},
  author = {Boehm, Barry},
  date = {2006},
  pages = {10--24},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11608035_2},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HRS7GMIT/chp%3A10.1007%2F11608035_2.pdf}
}

@misc{bognar_balazs_bm_2016,
  title = {A {{BM OKF}} Helye, Szerepe a Hazai  Létfontosságú Rendszerek És Létesítmények Védelmében},
  author = {{Bognár Balázs}},
  date = {2016},
  publisher = {{OKF}},
  url = {http://vtki.uni-nke.hu/downloads/tk/IBOT_PILOT/PLENARIS/Dr_Bognar_Balazs.pdf},
  urldate = {2015-05-12}
}

@misc{bognar_balazs_letfontossagu_2014,
  title = {A Létfontosságú Rendszerelemek Azonosításának, Kijelölésének Folyamata, Az {{LRL IBEK}} Működésének Eddigi Eredményei, a {{BM OKF}} Elvárásai Az {{NKE}} Képzésével Kapcsolatban},
  author = {{Bognár Balázs}},
  date = {2014},
  publisher = {{OKF}},
  url = {http://vtki.uni-nke.hu/downloads/tk/IBOT_PILOT/PLENARIS/Dr_Bognar_Balazs.pdf},
  urldate = {2015-05-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2Z3F22NU/Dr_Bognar_Balazs.pdf}
}

@article{bonaccorsi_comparing_2006,
  title = {Comparing Motivations of Individual Programmers and Firms to Take Part in the Open Source Movement: {{From}} Community to Business},
  shorttitle = {Comparing Motivations of Individual Programmers and Firms to Take Part in the Open Source Movement},
  author = {Bonaccorsi, Andrea and Rossi, Cristina},
  date = {2006},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {18},
  pages = {40--64},
  url = {http://link.springer.com/article/10.1007/s12130-006-1003-9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6JS5IE7F/art%3A10.1007%2Fs12130-006-1003-9.pdf},
  number = {4}
}

@inproceedings{bonilla_case_2017,
  title = {A Case for Open-Source Surveys (for Assessing Security Literacy)},
  booktitle = {2017 {{IEEE Global Engineering Education Conference}} ({{EDUCON}})},
  author = {Bonilla, Rafael I.},
  date = {2017-04},
  pages = {1837--1842},
  issn = {2165-9567},
  doi = {10.1109/EDUCON.2017.7943100},
  abstract = {In this position paper we present the novel idea of using an open-source, community-based approach for creating survey instruments. We frame the survey-writing problem in the context of designing survey instruments to assess university students about their attitudes, literacy, readiness, etc., on Information Assurance and Security, but the idea is applicable to any type of collaborative survey writing. The main contributions of this work are: (1) the novel idea of open-source surveys, (2) an analysis of the benefits and requirements of this idea, and (3) the proposal of a process to use current open-source tools to create and maintain a base of questions and surveys.},
  eventtitle = {2017 {{IEEE Global Engineering Education Conference}} ({{EDUCON}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4LBGIU6H/Bonilla - 2017 - A case for open-source surveys (for assessing secu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G6MP8HG7/7943100.html},
  keywords = {Collaboration,collaborative survey,computer literacy,courseware,information assurance and security,Instruments,Open source software,open-source community-based approach,Open-source survey,public domain software,security,Security,security literacy assessment,security of data,student attitudes,student literacy,student readiness,survey instrument design,survey-writing problem,Tools,university students,Writing}
}

@misc{bonnyai_kritikus_2011,
  title = {A {{Kritikus Infrastruktúra Védelem Fogalmi Rendszere}}, {{Hazai}} És {{Nemzetközi Szabályozása}}},
  author = {Bonnyai, Tünde},
  date = {2011},
  publisher = {{Katasztrófavédelmi Tudományos Tanács}},
  url = {http://www.vedelem.hu/letoltes/tanulmany/tan382.pdf},
  urldate = {2013-01-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5DCT9XIT/tan382.pdf}
}

@thesis{bonnyai_tunde_kritikus_2014,
  title = {A Kritikus Infrastruktúra Védelem Elemzése a Lakosságfelkészítés Tükrében},
  author = {{Bonnyai Tünde}},
  date = {2014},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/24KXIIFE/Bonnyai_tunde_phd.pdf}
}

@inproceedings{boonchieng_performance_2014,
  title = {Performance and Security Issue on Open Source Private Cloud},
  booktitle = {Electrical {{Engineering Congress}} ({{iEECON}}), 2014 {{International}}},
  author = {Boonchieng, Ekkarat},
  date = {2014},
  pages = {1--5},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6925941},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D244E76U/06925941.pdf}
}

@inproceedings{bordeleau_fifteen_2019,
  title = {Fifteen {{Years}} of {{Open Source Software Evolution}}},
  booktitle = {Open {{Source Systems}}},
  author = {Bordeleau, Francis and Meirelles, Paulo and Sillitti, Alberto},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {61--67},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_6},
  abstract = {The Open Source Software (OSS) ecosystem and community has evolved enormously from the first edition of the OSS conference that took place in Genoa (Italy) in 2005. Such evolution happened in every aspect of OSS including research, technology, and business pushing its adoption to an unpredictable scale. Nowadays, it is almost impossible for people not using OSS in every interaction they have with technology. This fact is a tremendous success for OSS but such evolution and adoption has not always followed the intended path and some relevant deviations have occurred during such long journey.This paper provide an overview of the evolution of OSS in the three mentioned areas (research, technology, and business) highlighting the main aspects and identifying the current trends that will be the basis for its future evolution.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DLFU6WGE/Bordeleau et al. - 2019 - Fifteen Years of Open Source Software Evolution.pdf},
  isbn = {978-3-030-20883-7},
  keywords = {OSS business,OSS evolution,OSS research,OSS technology},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{borges_understanding_2016,
  title = {Understanding the {{Factors That Impact}} the {{Popularity}} of {{GitHub Repositories}}},
  booktitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Borges, Hudson and Hora, Andre and Valente, Marco Tulio},
  date = {2016-10},
  pages = {334--344},
  doi = {10.1109/ICSME.2016.31},
  abstract = {Software popularity is a valuable information to modern open source developers, who constantly want to know if their systems are attracting new users, if new releases are gaining acceptance, or if they are meeting user's expectations. In this paper, we describe a study on the popularity of software systems hosted at GitHub, which is the world's largest collection of open source software. GitHub provides an explicit way for users to manifest their satisfaction with a hosted repository: the stargazers button. In our study, we reveal the main factors that impact the number of stars of GitHub projects, including programming language and application domain. We also study the impact of new features on project popularity. Finally, we identify four main patterns of popularity growth, which are derived after clustering the time series representing the number of stars of 2,279 popular GitHub repositories. We hope our results provide valuable insights to developers and maintainers, which could help them on building and evolving systems in a competitive software market.},
  eventtitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UWXZSRG6/Borges et al. - 2016 - Understanding the Factors That Impact the Populari.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZJGJUXYN/7816479.html},
  keywords = {Documentation,GitHub,GitHub projects,GitHub Repositories,HTML,Java,Libraries,open source developers,open source software,Open Source software,Organizations,programming language,project popularity,public domain software,Social coding,Software,software acceptance,software market,Software Popularity,software reviews,software system popularity,source code (software),stargazers button,time series}
}

@incollection{bosch_software_2005,
  title = {Software Product Families in {{Nokia}}},
  booktitle = {Software {{Product Lines}}},
  author = {Bosch, Jan},
  date = {2005},
  pages = {2--6},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11554844_2},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PC2ZEPMZ/chp%3A10.1007%2F11554844_2.pdf}
}

@inproceedings{bosu_diversity_2019,
  title = {Diversity and {{Inclusion}} in {{Open Source Software}} ({{OSS}}) {{Projects}}: {{Where Do We Stand}}?},
  shorttitle = {Diversity and {{Inclusion}} in {{Open Source Software}} ({{OSS}}) {{Projects}}},
  booktitle = {2019 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  author = {Bosu, Amiangshu and Sultana, Kazi Zakia},
  date = {2019-09},
  pages = {1--11},
  issn = {1949-3789},
  doi = {10.1109/ESEM.2019.8870179},
  abstract = {Background: As the area of computing has thrived over the years, the participation of women in computing declined. Currently women represent less than 24\% of the computing workforce and that number is declining. On the other hand, the ratios of women in Open Source Software (OSS) projects are even lower.Aims: The primary objective of this study is to determine the level of gender diversity among popular OSS projects and identify the presence of gender biases that may discourage females' participation.Method: On this goal, we mined the code review repositories of ten popular OSS projects. We used a semi-automated approach followed by a manual validation to identify the genders of the active contributors.Results: Our results suggest that lack of gender diversity remains an ongoing issue among all the ten projects as each of the projects had less than 10\% female developers. However, many of the projects also suffer from lack of inclusion of females to leadership positions. Although none of the projects suggest significant differences between male and female developers in terms of productivity based on three different measures, data from three out of the ten projects indicate technical biases against female developers with lower code acceptance rates as well as delayed feedback during code reviews. However, biases against females are not universal as majority of the projects do not discriminate against females. The two projects with the least ratios of female contributors as core developers showed the most biases against females.Conclusion: Based on our findings, we conclude that promoting and mentoring females to leadership positions may be an effective solution to foster gender diversity.},
  eventtitle = {2019 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CD586WXB/Bosu and Sultana - 2019 - Diversity and Inclusion in Open Source Software (O.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DALW6IFR/8870179.html},
  keywords = {code acceptance rates,code review repositories,code reviews,computing workforce,delayed feedback,discrimination,diversity,female contributors,female developers,gender biases,gender diversity,gender issues,inclusion,Industries,Leadership,leadership positions,open source projects,Open source software,Open Source Software projects,OSS projects,Productivity,public domain software,semi-automated approach,Task analysis,technical biases,Tools}
}

@inproceedings{bosu_identifying_2014,
  title = {Identifying the {{Characteristics}} of {{Vulnerable Code Changes}}: {{An Empirical Study}}},
  shorttitle = {Identifying the {{Characteristics}} of {{Vulnerable Code Changes}}},
  booktitle = {Proceedings of the {{22Nd ACM SIGSOFT International Symposium}} on {{Foundations}} of {{Software Engineering}}},
  author = {Bosu, Amiangshu and Carver, Jeffrey C. and Hafiz, Munawar and Hilley, Patrick and Janni, Derek},
  date = {2014},
  pages = {257--268},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2635868.2635880},
  url = {http://doi.acm.org/10.1145/2635868.2635880},
  urldate = {2015-11-24},
  abstract = {To focus the efforts of security experts, the goals of this empirical study are to analyze which security vulnerabilities can be discovered by code review, identify characteristics of vulnerable code changes, and identify characteristics of developers likely to introduce vulnerabilities. Using a three-stage manual and automated process, we analyzed 267,046 code review requests from 10 open source projects and identified 413 Vulnerable Code Changes (VCC). Some key results include: (1) code review can identify common types of vulnerabilities; (2) while more experienced contributors authored the majority of the VCCs, the less experienced contributors' changes were 1.8 to 24 times more likely to be vulnerable; (3) the likelihood of a vulnerability increases with the number of lines changed, and (4) modified files are more likely to contain vulnerabilities than new files. Knowing which code changes are more prone to contain vulnerabilities may allow a security expert to concentrate on a smaller subset of submitted code changes. Moreover, we recommend that projects should: (a) create or adapt secure coding guidelines, (b) create a dedicated security review team, (c) ensure detailed comments during review to help knowledge dissemination, and (d) encourage developers to make small, incremental changes rather than large changes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RF4HPFKV/Bosu és mtsai. - 2014 - Identifying the Characteristics of Vulnerable Code.pdf},
  isbn = {978-1-4503-3056-5},
  keywords = {_SMS_untagged,code review,inspection,nyílt forrás,Open Source,security defects,vulnerability},
  series = {{{FSE}} 2014}
}

@inproceedings{bosu_impact_2014,
  title = {Impact of Developer Reputation on Code Review Outcomes in {{OSS}} Projects: An Empirical Investigation},
  shorttitle = {Impact of Developer Reputation on Code Review Outcomes in {{OSS}} Projects},
  author = {Bosu, Amiangshu and Carver, Jeffrey C.},
  date = {2014},
  pages = {1--10},
  publisher = {{ACM Press}},
  doi = {10.1145/2652524.2652544},
  url = {http://dl.acm.org/citation.cfm?doid=2652524.2652544},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CGGZS68D/a33-bosu.pdf},
  isbn = {978-1-4503-2774-9},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@article{bosu_peer_2014,
  title = {Peer Impressions in Open Source Organizations: {{A}} Survey},
  shorttitle = {Peer Impressions in Open Source Organizations},
  author = {Bosu, Amiangshu and Carver, Jeffrey and Guadagno, Rosanna and Bassett, Blake and McCallum, Debra and Hochstein, Lorin},
  date = {2014-08},
  journaltitle = {Journal of Systems and Software},
  volume = {94},
  pages = {4--15},
  issn = {01641212},
  doi = {10.1016/j.jss.2014.03.061},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121214000818},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P7I5V4UJ/1-s2.0-S0164121214000818-main.pdf},
  keywords = {_SMS_untagged,community,nyílt forrás,open source,trust},
  langid = {english}
}

@article{bosu_process_2017,
  title = {Process {{Aspects}} and {{Social Dynamics}} of {{Contemporary Code Review}}: {{Insights}} from {{Open Source Development}} and {{Industrial Practice}} at {{Microsoft}}},
  shorttitle = {Process {{Aspects}} and {{Social Dynamics}} of {{Contemporary Code Review}}},
  author = {Bosu, Amiangshu and Carver, Jeffrey C. and Bird, Christian and Orbeck, Jonathan and Chockley, Christopher},
  date = {2017-01},
  journaltitle = {IEEE Transactions on Software Engineering},
  volume = {43},
  pages = {56--75},
  issn = {1939-3520},
  doi = {10.1109/TSE.2016.2576451},
  abstract = {Many open source and commercial developers practice contemporary code review, a lightweight, informal, tool-based code review process. To better understand this process and its benefits, we gathered information about code review practices via surveys of open source software developers and developers from Microsoft. The results of our analysis suggest that developers spend approximately 10-15 percent of their time in code reviews, with the amount of effort increasing with experience. Developers consider code review important, stating that in addition to finding defects, code reviews offer other benefits, including knowledge sharing, community building, and maintaining code quality. The quality of the code submitted for review helps reviewers form impressions about their teammates, which can influence future collaborations. We found a large amount of similarity between the Microsoft and OSS respondents. One interesting difference is that while OSS respondents view code review as an important method of impression formation, Microsoft respondents found knowledge dissemination to be more important. Finally, we found little difference between distributed and co-located Microsoft teams. Our findings identify the following key areas that warrant focused research: 1) exploring the non-technical benefits of code reviews, 2) helping developers in articulating review comments, and 3) assisting reviewers' program comprehension during code reviews.},
  eventtitle = {{{IEEE Transactions}} on {{Software Engineering}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SH7SA57N/Bosu et al. - 2017 - Process Aspects and Social Dynamics of Contemporar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G9B6Q57I/7484733.html},
  keywords = {code quality,Code review,Collaboration,commercial projects,contemporary code review,Context,Human factors,Inspection,Instruments,knowledge dissemination,Measurement,Microsoft teams,open source,open source software developers,Organizations,OSS,peer impressions,public domain software,software engineering,software management,software reviews,survey,team working},
  number = {1}
}

@incollection{bosu_when_2014,
  title = {When Are {{OSS}} Developers More Likely to Introduce Vulnerable Code Changes? {{A}} Case Study},
  shorttitle = {When Are {{OSS}} Developers More Likely to Introduce Vulnerable Code Changes?},
  booktitle = {Open {{Source Software}}: {{Mobile Open Source Technologies}}},
  author = {Bosu, Amiangshu and Carver, Jeffrey C. and Hafiz, Munawar and Hilley, Patrick and Janni, Derek},
  date = {2014},
  pages = {234--236},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-55128-4_37},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R5B4ERA7/chp%3A10.1007%2F978-3-642-55128-4_37.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{bouktif_predicting_2014,
  title = {Predicting {{Stability}} of {{Open}}-{{Source Software Systems Using Combination}} of {{Bayesian Classifiers}}},
  author = {Bouktif, Salah and Sahraoui, Houari and Ahmed, Faheem},
  date = {2014-04-01},
  journaltitle = {ACM Transactions on Management Information Systems},
  volume = {5},
  pages = {1--26},
  issn = {2158656X},
  doi = {10.1145/2555596},
  url = {http://dl.acm.org/citation.cfm?doid=2603738.2555596},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N9DTIVVQ/a3-bouktif.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {1}
}

@article{bouras_methodology_2013,
  title = {Methodology for {{Public Administrators}} for Selecting between Open Source and Proprietary Software},
  author = {Bouras, Christos and Kokkinos, Vasileios and Tseliou, Georgia},
  date = {2013-05},
  journaltitle = {Telematics and Informatics},
  volume = {30},
  pages = {100--110},
  issn = {07365853},
  doi = {10.1016/j.tele.2012.03.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S073658531200024X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SVPQF8TE/1-s2.0-S073658531200024X-main.pdf},
  keywords = {Closed source,Forrás2,open source,secondary research},
  langid = {english},
  number = {2}
}

@article{bouras_policy_2014,
  title = {Policy Recommendations for Public Administrators on Free and Open Source Software Usage},
  author = {Bouras, Christos and Filopoulos, Anestis and Kokkinos, Vasileios and Michalopoulos, Sotiris and Papadopoulos, Dimitris and Tseliou, Georgia},
  date = {2014-05},
  journaltitle = {Telematics and Informatics},
  volume = {31},
  pages = {237--252},
  issn = {07365853},
  doi = {10.1016/j.tele.2013.06.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0736585313000361},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JX7FE7P6/1-s2.0-S0736585313000361-main.pdf},
  keywords = {_SMS_untagged,Forrás2,nyílt forrás,open source,policy},
  langid = {english},
  number = {2}
}

@incollection{bourdoucen_free_2019,
  title = {A {{Free}} and {{Libre Open Source Software}} ({{FLOSS}}) {{Initiative}} for a {{Sustainable Deployment}} in {{Oman}}},
  booktitle = {Towards {{Engineering Free}}/{{Libre Open Source Software}} ({{FLOSS}}) {{Ecosystems}} for {{Impact}} and {{Sustainability}}: {{Communications}} of {{NII Shonan Meetings}}},
  author = {Bourdoucen, Hadj and Al Maashri, Ahmed and Ould-Khaoua, Mohamed and Sarrab, Mohamed and Amiri-Kordestani, Mahdi and Al Saidi, Fahad and Al Maawali, Khalil},
  editor = {Fitzgerald, Brian and Mockus, Audris and Zhou, Minghui},
  date = {2019},
  pages = {119--134},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-7099-1_8},
  url = {https://doi.org/10.1007/978-981-13-7099-1_8},
  urldate = {2020-04-21},
  abstract = {Many countries worldwide are strongly encouraging and supporting the adoption of FLOSS in public and private sectors. This has fueled the rapid deployment of FLOSS solutions in numerous industrial sectors due to the benefits offered by FLOSS. These benefits include a high potential for job creation through local software customization, the growth of local SME’s and IT skills, vendor lock-in prevention, improved security, and reduced licensing, installation and running costs. The trend was extending to other areas such as consumer associations, chamber of commerce, stock exchange, management associations, and nongovernmental organizations that are showing an increasing interest in many countries for FLOSS adoption. The Information Technology Authority (ITA) in Oman is the main enabler of FLOSS deployment in the public and private sectors. ITA has done considerable efforts in conjunction with a number of public and academic institutions, such as Sultan Qaboos University (SQU) and other higher educational institutions over the past few years in the FLOSS awareness, infrastructure, and capacity building fronts. However, to ensure the continuity and sustainability of the ongoing efforts, a roadmap for a sustainable FLOSS deployment for the public and private sectors is essential. The establishment of this roadmap for a sustainable deployment in the next 5 years was done based on an extensive study of the international FLOSS plans, the analysis of local FLOSS status in the public and private sectors through surveys and interviews, in addition to the views exchanged with a number of well-known international experts in the FLOSS community. Five deployment domains were identified in the roadmap with a number of initiatives for each domain that will be driven by a Center of Excellence (CoE) to assure the sustainability of the deployment. The CoE has a number of objectives to achieve; namely, transfer of technology, raising awareness on FLOSS in public and private sectors, promoting and implementing FLOSS solutions, formulating policies and guidelines, developing educational and training materials, conducting and supporting R\&D in FLOSS, and working to optimize the overall cost of software licensing in Oman. Different models of this center were discussed and a realistic model was suggested for the implementation in Oman. It is proposed that the center should be funded by a Consortium of ministries.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JJUXBCFM/Bourdoucen et al. - 2019 - A Free and Libre Open Source Software (FLOSS) Init.pdf},
  isbn = {9789811370991},
  langid = {english}
}

@article{boutaba_comprehensive_2018,
  title = {A Comprehensive Survey on Machine Learning for Networking: Evolution, Applications and Research Opportunities},
  shorttitle = {A Comprehensive Survey on Machine Learning for Networking},
  author = {Boutaba, Raouf and Salahuddin, Mohammad A. and Limam, Noura and Ayoubi, Sara and Shahriar, Nashid and Estrada-Solano, Felipe and Caicedo, Oscar M.},
  date = {2018-06-21},
  journaltitle = {Journal of Internet Services and Applications},
  shortjournal = {J Internet Serv Appl},
  volume = {9},
  pages = {16},
  issn = {1869-0238},
  doi = {10.1186/s13174-018-0087-2},
  url = {https://doi.org/10.1186/s13174-018-0087-2},
  urldate = {2020-04-21},
  abstract = {Machine Learning (ML) has been enjoying an unprecedented surge in applications that solve problems and enable automation in diverse domains. Primarily, this is due to the explosion in the availability of data, significant improvements in ML techniques, and advancement in computing capabilities. Undoubtedly, ML has been applied to various mundane and complex problems arising in network operation and management. There are various surveys on ML for specific areas in networking or for specific network technologies. This survey is original, since it jointly presents the application of diverse ML techniques in various key areas of networking across different network technologies. In this way, readers will benefit from a comprehensive discussion on the different learning paradigms and ML techniques applied to fundamental problems in networking, including traffic prediction, routing and classification, congestion control, resource and fault management, QoS and QoE management, and network security. Furthermore, this survey delineates the limitations, give insights, research challenges and future opportunities to advance ML in networking. Therefore, this is a timely contribution of the implications of ML for networking, that is pushing the barriers of autonomic network operation and management.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/96ZJAU4Y/Boutaba et al. - 2018 - A comprehensive survey on machine learning for net.pdf},
  langid = {english},
  number = {1}
}

@incollection{brans_promethee_2005,
  title = {{{PROMETHEE}} Methods},
  booktitle = {Multiple Criteria Decision Analysis: State of the Art Surveys},
  author = {Brans, J. P. and Mareschal, B.},
  date = {2005},
  pages = {163--186},
  url = {http://www.springerlink.com/index/M03V43282U466G36.pdf},
  urldate = {2013-01-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/36GGPZK6/Promethee.pdf},
  isbn = {978-0-387-23081-8}
}

@incollection{bratus_software_2010,
  title = {Software on the Witness Stand: What Should It Take for Us to Trust It?},
  shorttitle = {Software on the Witness Stand},
  booktitle = {Trust and {{Trustworthy Computing}}},
  author = {Bratus, Sergey and Lembree, Ashlyn and Shubina, Anna},
  date = {2010},
  pages = {396--416},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13869-0_29},
  urldate = {2015-11-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/989HJXRM/chp%3A10.1007%2F978-3-642-13869-0_29.pdf}
}

@misc{braught_multi-institutional_2018,
  title = {A {{Multi}}-{{Institutional Perspective}} on {{H}}/{{FOSS Projects}} in the {{Computing Curriculum}}},
  author = {Braught, Grant and Maccormick, John and Bowring, James and Burke, Quinn and Cutler, Barbara and Goldschmidt, David and Krishnamoorthy, Mukkai and Turner, Wesley and Huss-Lederman, Steven and Mackellar, Bonnie and Tucker, Allen},
  date = {2018-07-11},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3145476},
  urldate = {2020-04-22},
  abstract = {Many computer science programs have capstone experiences or project courses that allow students to integrate knowledge from the full breadth of their major. Such capstone projects may be student-designed, instructor-designed, designed in conjunction with outside companies, or integrated with ongoing free and open source (FOSS) projects. The literature shows that the FOSS approach has attracted a great deal of interest, in particular when implemented with projects that have humanitarian goals (HFOSS). In this article, we describe five unique models from five distinct types of institutions for incorporating sustained FOSS or HFOSS (alternatively H/FOSS) project work into capstone experiences or courses. The goal is to provide instructors wishing to integrate open source experiences into their curriculum with additional perspectives and resources to help in adapting this approach to the specific needs and goals of their institution and students. All of the models presented are based on sustained engagement with H/FOSS projects that last at least one semester and often more. Each model is described in terms of its characteristics and how it fits the needs of the institution using the model. Assessment of each model is also presented. We then discuss the themes that are common across the models, such as project selection, team formation, mentoring, and student assessment. We examine the choices made by each model, as well as the challenges faced. We end with a discussion how the models have leveraged institutional initiatives and collaborations with outside organizations to address some of the challenges associated with these projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VLN8VYUV/Braught et al. - 2018 - A Multi-Institutional Perspective on HFOSS Projec.pdf},
  keywords = {capstones,FOSS,HFOSS,humanitarian,Open source,projects}
}

@inproceedings{braunschweig_studying_2012,
  title = {Studying {{Volatility Predictors}} in {{Open Source Software}}},
  booktitle = {Proceedings of the {{ACM}}-{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Braunschweig, Brandt and Dhage, Neha and Viera, Maria Jose and Seaman, Carolyn and Sampath, Sreedevi and Koru, Gunes A.},
  date = {2012},
  pages = {181--190},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2372251.2372286},
  url = {http://doi.acm.org/10.1145/2372251.2372286},
  urldate = {2015-11-24},
  abstract = {Volatile software modules, for the purposes of this work, are defined as those that are significantly more change-prone than other modules in the same system or subsystem. There is significant literature investigating models for predicting which modules in a system will become volatile, and/or are defect-prone. Much of this work focuses on using source code-related characteristics (e.g., complexity metrics) and simple change metrics (e.g., number of past changes) as inputs to the predictive models. Our work attempts to broaden the array of factors considered in such prediction approaches. To this end, we collected data directly from development personnel about the factors they rely on to foresee what parts of a system are going to become volatile. In this paper, we describe a focus group study conducted with the development team of a small but active open source project, in which we asked this very question. The results of the focus group indicate, among other things, that a period of volatility in a particular area of the system is often predicted by a pattern characterized by inactivity in a certain area (resulting in that area becoming less mature than others), increased communication between developers regarding opportunities for improvement in that area, and then the emergence of a champion who takes the initiative to start working on those improvements. The initial changes lead to more changes (both to extend the improvements already made and to fix problems introduced), thus leading to volatility.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2FM5VRXX/Braunschweig és mtsai. - 2012 - Studying Volatility Predictors in Open Source Soft.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2XQRMJTT/Braunschweig és mtsai. - 2012 - Studying Volatility Predictors in Open Source Soft.pdf},
  isbn = {978-1-4503-1056-7},
  keywords = {_SMS_untagged,empirical study,focus group study,nyílt forrás,Open source software,volatility predictors},
  series = {{{ESEM}} '12}
}

@article{breuer_approximate_2008,
  title = {Approximate Verification in an Open Source World},
  author = {Breuer, Peter T. and Pickin, Simon},
  date = {2008-04},
  journaltitle = {Innovations in Systems and Software Engineering},
  volume = {4},
  pages = {87--105},
  issn = {1614-5046, 1614-5054},
  doi = {10.1007/s11334-008-0045-4},
  url = {http://link.springer.com/10.1007/s11334-008-0045-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IGS4XAUT/art%3A10.1007%2Fs11334-008-0045-4.pdf},
  langid = {english},
  number = {1}
}

@article{breuer_open_2014,
  title = {Open Source Verification in an Anonymous Volunteer Network},
  author = {Breuer, Peter T. and Pickin, Simon},
  date = {2014-10},
  journaltitle = {Science of Computer Programming},
  volume = {91},
  pages = {161--187},
  issn = {01676423},
  doi = {10.1016/j.scico.2013.08.010},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642313002037},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H6MFKZQ9/1-s2.0-S0167642313002037-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{brink_critical_2006,
  title = {Critical Success Factors for Migrating to {{OSS}}-on-the-Desktop: Common Themes across Three {{South African}} Case Studies},
  shorttitle = {Critical Success Factors for Migrating to {{OSS}}-on-the-Desktop},
  booktitle = {Open {{Source Systems}}},
  author = {Brink, Daniel and Roos, Llewelyn and Weller, James and Van Belle, Jean-Paul},
  date = {2006},
  pages = {287--293},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_29},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MDT9H67C/chp%3A10.1007%2F0-387-34226-5_29.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{brito_floss_2018,
  title = {{{FLOSS}} in Software Engineering Education: An Update of a Systematic Mapping Study},
  shorttitle = {{{FLOSS}} in Software Engineering Education},
  booktitle = {Proceedings of the {{XXXII Brazilian Symposium}} on {{Software Engineering}}},
  author = {Brito, Moara Sousa and Silva, Fernanda Gomes and G. Chavez, Christina von Flach and Nascimento, Debora C. and Bittencourt, Roberto A.},
  date = {2018-09-17},
  pages = {250--259},
  publisher = {{Association for Computing Machinery}},
  location = {{Sao Carlos, Brazil}},
  doi = {10.1145/3266237.3266249},
  url = {https://doi.org/10.1145/3266237.3266249},
  urldate = {2020-04-22},
  abstract = {Context: Free/Libre/Open Source Software (FLOSS) projects have been used in Software Engineering Education (SEE) to address the need for more realistic settings that reduce the gap between software engineering (SE) courses and industry needs. A systematic mapping study (SMS) performed in 2013 structured the research area on the use of FLOSS projects in SEE. Objective: Update the 2013 SMS with studies published in the last five years, classifying and summarizing them to discuss trends and identify research gaps in the context of the use of FLOSS projects in SEE. Method: We retrieved and analyzed a set of 4132 papers published from 2013 to 2017, from which 33 papers were selected and classified. We analyzed the new results and compared them with those from the previous SMS to confirm or discover trends. Results: The updated mapping summarizes the studies published in the last five years, most of them in conferences. Our analysis confirmed trends previously observed for three facets (SE area, curriculum choice and assessment type) and discovered new trends for other facets. Conclusion: Studies report the use of FLOSS projects in regular, comprehensive SE courses. The prevalence of experience reports over solution proposals in the last five years may indicate that researchers are more concerned with the use and evaluation of existing proposals, although there are still opportunities for more empirical work based on sound educational research methods.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2RGBKR6R/Brito et al. - 2018 - FLOSS in software engineering education an update.pdf},
  isbn = {978-1-4503-6503-1},
  keywords = {FLOSS development model,free software,open source software,systematic literature reviews},
  series = {{{SBES}} '18}
}

@article{brovelli_free_2012,
  title = {Free and Open Source Desktop and {{Web GIS}} Solutions},
  author = {Brovelli, Maria Antonia and Mitasova, Helena and Neteler, Markus and Raghavan, Venkatesh},
  date = {2012-06},
  journaltitle = {Applied Geomatics},
  volume = {4},
  pages = {65--66},
  issn = {1866-9298, 1866-928X},
  doi = {10.1007/s12518-012-0082-4},
  url = {http://link.springer.com/10.1007/s12518-012-0082-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BW7WT8WZ/art%3A10.1007%2Fs12518-012-0082-4.pdf},
  langid = {english},
  number = {2}
}

@article{bruce_oss_2006,
  title = {{{OSS}} Opportunities in Open Source Software—{{CRM}} and {{OSS}} Standards},
  author = {Bruce, G. and Robson, P. and Spaven, R.},
  date = {2006},
  journaltitle = {BT Technology Journal},
  volume = {24},
  pages = {127--140},
  url = {http://link.springer.com/article/10.1007/s10550-006-0028-9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5AQZTSCF/art%3A10.1007%2Fs10550-006-0028-9.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KTNF2HU6/art%3A10.1007%2Fs10550-006-0028-9.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  number = {1}
}

@article{bruce_potential_2005,
  title = {The Potential for Open Source Software in Telecommunications Operational Support Systems},
  author = {Bruce, G. L. and Wittgreffe, J. P. and Potter, J. M. M. and Robson, P.},
  date = {2005},
  journaltitle = {BT technology journal},
  volume = {23},
  pages = {79--95},
  url = {http://link.springer.com/article/10.1007/s10550-005-0033-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6NIPCCF6/art%3A10.1007%2Fs10550-005-0033-2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J2JNEA9D/art%3A10.1007%2Fs10550-005-0033-2.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  number = {3}
}

@inproceedings{brumley_automatic_2008,
  title = {Automatic Patch-Based Exploit Generation Is Possible: {{Techniques}} and Implications},
  shorttitle = {Automatic Patch-Based Exploit Generation Is Possible},
  booktitle = {Security and {{Privacy}}, 2008. {{SP}} 2008. {{IEEE Symposium}} On},
  author = {Brumley, David and Poosankam, Pongsin and Song, Dawn and Zheng, Jiang},
  date = {2008},
  pages = {143--157},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4531150},
  urldate = {2015-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FHW2B9HT/Brumley et al._2008_Automatic Patch-Based Exploit Generation is Possible Techniques and Implications.pdf},
  keywords = {patch,security}
}

@article{brun_early_2013,
  title = {Early {{Detection}} of {{Collaboration Conflicts}} and {{Risks}}},
  author = {Brun, Yuriy and Holmes, Reid and Ernst, Michael D. and Notkin, David},
  date = {2013-10},
  journaltitle = {IEEE Transactions on Software Engineering},
  volume = {39},
  pages = {1358--1375},
  issn = {0098-5589, 1939-3520},
  doi = {10.1109/TSE.2013.28},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6520859},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EHIEH9AZ/06520859.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  number = {10}
}

@unpublished{bruno_cornec_open_2013,
  title = {Open {{Source Governance}}},
  author = {{Bruno Cornec}},
  date = {2013-09-13},
  url = {http://www.slideshare.net/eurolinux/governance-v25},
  urldate = {2014-05-20},
  eventtitle = {{{JDEV}} 2013},
  keywords = {community,governance,open source}
}

@article{bruntink_towards_2015,
  title = {Towards Base Rates in Software Analytics},
  author = {Bruntink, Magiel},
  date = {2015-01},
  journaltitle = {Science of Computer Programming},
  volume = {97},
  pages = {135--142},
  issn = {01676423},
  doi = {10.1016/j.scico.2013.11.023},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642313003079},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4Q96WZRI/1-s2.0-S0167642313003079-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@thesis{budai_balazs_benjamin_e-kozigazgatas_2008,
  title = {E-{{Közigazgatás Axiomatikus}} Megközelítésben},
  author = {{Budai Balázs Benjámin}},
  date = {2008},
  institution = {{Pécsi Tudományegyetem Állam- és Jogtudományi Kar}},
  location = {{Pécs}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WHTJRHEZ/budai_balazs_ertekezes.pdf},
  keywords = {FLOSS,FLOSS történelem,Forrás1,nyílt forrás},
  type = {Doktori értekezés}
}

@inproceedings{buffardi_assessing_2020,
  title = {Assessing {{Individual Contributions}} to {{Software Engineering Projects}} with {{Git Logs}} and {{User Stories}}},
  booktitle = {Proceedings of the 51st {{ACM Technical Symposium}} on {{Computer Science Education}}},
  author = {Buffardi, Kevin},
  date = {2020-02-26},
  pages = {650--656},
  publisher = {{Association for Computing Machinery}},
  location = {{Portland, OR, USA}},
  doi = {10.1145/3328778.3366948},
  url = {https://doi.org/10.1145/3328778.3366948},
  urldate = {2020-04-22},
  abstract = {Software Engineering courses often incorporate large-scale projects with collaboration between students working in teams. However, it is difficult to objectively assess individual students when their projects are a product of collaborative efforts. This study explores measurements of individuals' contributions to their respective teams. I analyzed ten Software Engineering team projects (n=42) and evaluations of individual contributions using automated evaluation of the version control system history (Git logs) and user stories completed on their project management (Kanban) boards. Unique insights from meta-data within the Git history and Kanban board user stories reveal complicated relationships between these measurements and traditional assessments, such as peer review and subjective instructor evaluation. From the results, I suggest supplementing and validating traditional assessments with insights from individuals' commit history and user story contributions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZTQIEWQP/Buffardi - 2020 - Assessing Individual Contributions to Software Eng.pdf},
  isbn = {978-1-4503-6793-6},
  keywords = {git,individual assessment,kanban,performance appraisal,scrum,software engineering,team projects,user stories},
  series = {{{SIGCSE}} '20}
}

@inproceedings{buffardi_comparing_2017,
  title = {Comparing {{Remote}} and {{Co}}-Located {{Interaction}} in {{Free}} and {{Open Source Software Engineering Projects}}},
  booktitle = {Proceedings of the 2017 {{ACM Conference}} on {{Innovation}} and {{Technology}} in {{Computer Science Education}}},
  author = {Buffardi, Kevin},
  date = {2017-06-28},
  pages = {22--27},
  publisher = {{Association for Computing Machinery}},
  location = {{Bologna, Italy}},
  doi = {10.1145/3059009.3059019},
  url = {https://doi.org/10.1145/3059009.3059019},
  urldate = {2020-04-22},
  abstract = {By working on open source software projects, software engineering students can benefit from working on more realistic products than traditional, educational programming assignments. However, careers in software engineering demand learning how to work within a professional environment and how to follow software development processes. We studied the impact of students' interactions with external collaborators on open source projects and found many similar outcomes between those who communicated remotely and those who communicated face-to-face. However, we also discovered that face-to-face interactions with local software professionals following the Localized Free and Open Source (LFOSS) model had particular advantages in teaching Agile methods, holding students accountable, and introducing professional networking opportunities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3VPLMRE8/Buffardi - 2017 - Comparing Remote and Co-located Interaction in Fre.pdf},
  isbn = {978-1-4503-4704-4},
  keywords = {agile,co-located,communication,interaction,localized free and open source software (lfoss),remote,software engineering},
  series = {{{ITiCSE}} '17}
}

@inproceedings{butler_investigation_2018,
  title = {An {{Investigation}} of {{Work Practices Used}} by {{Companies Making Contributions}} to {{Established OSS Projects}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice Track}} ({{ICSE}}-{{SEIP}})},
  author = {Butler, Simon and Gamalielsson, Jonas and Lundell, Björn and Jonsson, Per and Sjöberg, Johan and Mattsson, Anders and Rickö, Niklas and Gustavsson, Tomas and Feist, Jonas and Landemoo, Stefan and Lönroth, Erik},
  date = {2018-05},
  pages = {201--210},
  abstract = {Professionals contribute to open source software (OSS) projects as part of their employment. Previous research has addressed motivations of individuals and the ways they engage with OSS projects. However, there is a lack of research which examines and explains work practices used by companies in their engagement with projects. Work practices used by companies to contribute to five established OSS projects are investigated through examination of the actions of employees in public communication channels and draw on our experiences when analysing engagement with the same projects. We find that companies utilise work practices for contributing which are congruent with the circumstances and their capabilities that support their short and long term needs. We find that companies contribute to OSS projects in different ways, such as employing core project developers, making donations, and joining project steering committees in order to advance strategic interests.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice Track}} ({{ICSE}}-{{SEIP}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RYIABXFP/Butler et al. - 2018 - An Investigation of Work Practices Used by Compani.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FDKD5ZCL/8449251.html},
  keywords = {Communication channels,Companies,company contribution,Computer bugs,core project developers,employees,employment,Open source software,open source software projects,OSS projects,personnel,project steering committees,public communication channels,public domain software,Software engineering,work practices}
}

@article{butler_maintaining_2020,
  title = {Maintaining Interoperability in Open Source Software: {{A}} Case Study of the {{Apache PDFBox}} Project},
  shorttitle = {Maintaining Interoperability in Open Source Software},
  author = {Butler, Simon and Gamalielsson, Jonas and Lundell, Björn and Brax, Christoffer and Mattsson, Anders and Gustavsson, Tomas and Feist, Jonas and Lönroth, Erik},
  date = {2020-01-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {159},
  pages = {110452},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2019.110452},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121219302262},
  urldate = {2020-04-22},
  abstract = {Software interoperability is commonly achieved through the implementation of standards for communication protocols or data representation formats. Standards documents are often complex, difficult to interpret, and may contain errors and inconsistencies, which can lead to differing interpretations and implementations that inhibit interoperability. Through a case study of two years of activity in the Apache PDFBox project we examine day-to-day decisions made concerning implementation of the PDF specifications and standards in a community open source software (OSS) project. Thematic analysis is used to identify semantic themes describing the context of observed decisions concerning interoperability. Fundamental decision types are identified including emulation of the behaviour of dominant implementations and the extent to which to implement the PDF standards. Many factors influencing the decisions are related to the sustainability of the project itself, while other influences result from decisions made by external actors, including the developers of dependencies of PDFBox. This article contributes a fine grained perspective of decision-making about software interoperability by contributors to a community OSS project. The study identifies how decisions made support the continuing technical relevance of the software, and factors that motivate and constrain project activity.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7AX9CYDD/Butler et al. - 2020 - Maintaining interoperability in open source softwa.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9DKQ76N4/S0164121219302262.html},
  keywords = {Community open source software,Portable document format,Software implementation,Software interoperability,Standards},
  langid = {english}
}

@book{buxmann_software_2013,
  title = {The {{Software Industry}}},
  author = {Buxmann, Peter and Diefenbach, Heiner and Hess, Thomas},
  date = {2013},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://www.springerlink.com/index/10.1007/978-3-642-31510-7},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KF8DWK39/open_source_software_chapter.pdf},
  isbn = {978-3-642-31509-1 978-3-642-31510-7},
  langid = {english}
}

@article{cai_reputation_2016,
  title = {Reputation in an Open Source Software Community: {{Antecedents}} and Impacts},
  shorttitle = {Reputation in an Open Source Software Community},
  author = {Cai, Yuanfeng and Zhu, Dan},
  date = {2016-11-01},
  journaltitle = {Decision Support Systems},
  shortjournal = {Decision Support Systems},
  volume = {91},
  pages = {103--112},
  issn = {0167-9236},
  doi = {10.1016/j.dss.2016.08.004},
  url = {http://www.sciencedirect.com/science/article/pii/S0167923616301403},
  urldate = {2018-08-15},
  abstract = {A developer's reputation in the OSS community is determined by all the evaluations received from his or her peers. While a large body of studies focuses on the importance of developers' reputations in their participation motivations, there is still lack of understanding for two issues. First, which factors can lead to a high developer's reputation? Second, how does the overall reputation of the developers' in a project impact project success? In this study, we develop a theoretical model and conduct an empirical analysis in a large online open source community. The results show that a developer's reputation level is determined by his or her 1) coding quality, 2) the deviation of the commitment behavior, 3) community experience, and 4) collaboration experience. In addition, we find that the group with an overall higher level of reputation would achieve a better performance, while the individual reputation level deviation within the group would impair its technical success. The implications of our findings and the future research directions are then discussed.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GHJX37ZI/Cai and Zhu - 2016 - Reputation in an open source software community A.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D3J2Y5NF/S0167923616301403.html},
  keywords = {Open source software,Positive evaluation,Project success,Reputation management}
}

@inproceedings{calefato_developers_2018,
  ids = {calefato\_developers\_2018-1},
  title = {On {{Developers}}' {{Personality}} in {{Large}}-{{Scale Distributed Projects}}: {{The Case}} of the {{Apache Ecosystem}}},
  shorttitle = {On {{Developers}}' {{Personality}} in {{Large}}-{{Scale Distributed Projects}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 13th {{International Conference}} on {{Global Software Engineering}} ({{ICGSE}})},
  author = {Calefato, Fabio and Iaffaldano, Giuseppe and Lanubile, Filippo and Vasilescu, Bogdan},
  date = {2018-05},
  pages = {87--96},
  abstract = {Large-scale distributed projects are typically the results of collective efforts performed by multiple developers, each one having a different personality. The study of developers' personalities has the potential of explaining their' behavior in various contexts. For example, the propensity to trust others, a critical factor to the success of global software engineering - has been found to influence positively the result of code reviews in distributed projects. In this paper, we perform a quantitative analysis of developers' personality in open source software projects, intended as an extreme form of distributed projects in which no single organization controls the project. We mine ecosystem-level data from the code commits and email messages contributed by the developers working on the Apache Software Foundation (ASF) projects, as representative of large scale-distributed projects. We find that developers become over time more conscientious, agreeable, and neurotic. Moreover, personality traits do not vary with their role, membership, and extent of contribution to the projects. We also find evidence that more open and more agreeable developers are more likely to become project contributors.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 13th {{International Conference}} on {{Global Software Engineering}} ({{ICGSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BZ445K2N/Calefato et al. - 2018 - On developers' personality in large-scale distribu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W6LV24DD/Calefato et al. - 2018 - On Developers' Personality in Large-Scale Distribu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PKXHJD8F/8560644.html},
  keywords = {agreeable developers,apache,Apache ecosystem,Apache Software Foundation projects,behavioural sciences,ecosystem-level data mining,ecosystems,global software engineering,large-scale distributed projects,open developers,open source software,open source software projects,personality traits,Personality traits,personnel,project management,public domain software,scale-distributed projects,social and human aspects,software engineering,team working,team-building}
}

@book{camenisch_privacy_2011,
  title = {Privacy and {{Identity Management}} for {{Life}}},
  editor = {Camenisch, Jan and Fischer-Hübner, Simone and Rannenberg, Kai},
  date = {2011},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://www.springerlink.com/index/10.1007/978-3-642-20317-6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FTCA26IZ/Open Source Contributions.pdf},
  isbn = {978-3-642-20316-9 978-3-642-20317-6},
  langid = {english}
}

@inproceedings{camilo_process_2018,
  title = {A Process for Distributed Software Evolution: A Proprietary Software Case Study},
  shorttitle = {A Process for Distributed Software Evolution},
  booktitle = {Proceedings of the 13th {{International Conference}} on {{Global Software Engineering}}},
  author = {Camilo, Joao Ricardo M. and L'Erario, Alexandre and Pagotto, Tiago and Fabri, Jose Augusto},
  date = {2018-05-27},
  pages = {44--53},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3196369.3196376},
  url = {https://doi.org/10.1145/3196369.3196376},
  urldate = {2020-04-22},
  abstract = {Proprietary enterprise software is commonly embedded in multinational organizations and therefore has multiple sources of global or local demand. This type of software is subject to constant evolutions motivated by improvements in the features or by changes in the legal and economic context of its environment. Problems arising from the demand for requirements are associated with the suitability of a particular local requirement to its global context, for example: tax rules are characteristic of a specific country while a business rule can achieve every global structure. In addition, software customization can be implemented by the software producer, external partners, programmers allocated within the customer company, and so on. The coordination of this scenario is considered critical for the productive sector company that uses proprietary enterprise software. If the software does not evolve, the company processes can be temporarily compromised, and the software becomes obsolete. We report a case study of a large proprietary ERP system in a multinational company located in Brazil that is among the three largest exporters in its market segment. As a contribution, we present the current structure of the distributed evolution process of the software in question and how the stakeholder coordination of this scenario occurs.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5K72MAGH/Camilo et al. - 2018 - A process for distributed software evolution a pr.pdf},
  isbn = {978-1-4503-5717-3},
  keywords = {distributed software development,distributed software evolution,software evolution},
  series = {{{ICGSE}} '18}
}

@inproceedings{caneill_debsources_2014,
  title = {Debsources: Live and Historical Views on Macro-Level Software Evolution},
  shorttitle = {Debsources},
  author = {Caneill, Matthieu and Zacchiroli, Stefano},
  date = {2014},
  pages = {1--10},
  publisher = {{ACM Press}},
  doi = {10.1145/2652524.2652528},
  url = {http://dl.acm.org/citation.cfm?doid=2652524.2652528},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QVWRAFJE/a28-caneill.pdf},
  isbn = {978-1-4503-2774-9},
  keywords = {_SMS_untagged,development,metrics,nyílt forrás,open source,tool},
  langid = {english}
}

@article{caneill_debsources_2017,
  title = {The {{Debsources Dataset}}: Two Decades of Free and Open Source Software},
  shorttitle = {The {{Debsources Dataset}}},
  author = {Caneill, Matthieu and Germán, Daniel M. and Zacchiroli, Stefano},
  date = {2017-06-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {22},
  pages = {1405--1437},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-016-9461-5},
  url = {https://link.springer.com/article/10.1007/s10664-016-9461-5},
  urldate = {2018-08-15},
  abstract = {We present the Debsources Dataset: source code and related metadata spanning two decades of Free and Open Source Software (FOSS) history, seen through the lens of the Debian distribution. The dataset spans more than 3 billion lines of source code as well as metadata about them such as: size metrics (lines of code, disk usage), developer-defined symbols (ctags), file-level checksums (SHA1, SHA256, TLSH), file media types (MIME), release information (which version of which package containing which source code files has been released when), and license information (GPL, BSD, etc). The Debsources Dataset comes as a set of tarballs containing deduplicated unique source code files organized by their SHA1 checksums (the source code), plus a portable PostgreSQL database dump (the metadata). A case study is run to show how the Debsources Dataset can be used to easily and efficiently instrument very long-term analyses of the evolution of Debian from various angles (size, granularity, licensing, etc.), getting a grasp of major FOSS trends of the past two decades. The Debsources Dataset is Open Data, released under the terms of the CC BY-SA 4.0 license, and available for download from Zenodo with DOI reference 10.5281/zenodo.61089.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D2SLR59G/Caneill et al. - 2017 - The Debsources Dataset two decades of free and op.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LWGDJ89L/s10664-016-9461-5.html},
  langid = {english},
  number = {3}
}

@book{cao_agents_2014,
  title = {Agents and {{Data Mining Interaction}}},
  editor = {Cao, Longbing and Zeng, Yifeng and Symeonidis, Andreas L. and Gorodetsky, Vladimir and Müller, Jörg P. and Yu, Philip S.},
  date = {2014},
  volume = {8316},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-55192-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KRNBFVHB/chp%3A10.1007%2F978-3-642-55192-5_3.pdf},
  isbn = {978-3-642-55191-8 978-3-642-55192-5},
  keywords = {code quality,community,open source},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{capiluppi_adapting_2007,
  title = {Adapting the "{{Staged Model}} for {{Software Evolution}}" to {{Free}}/{{Libre}}/{{Open Source Software}}},
  booktitle = {Ninth {{International Workshop}} on {{Principles}} of {{Software Evolution}}: {{In Conjunction}} with the 6th {{ESEC}}/{{FSE Joint Meeting}}},
  author = {Capiluppi, Andrea and González-Barahona, Jesús M. and Herraiz, Israel and Robles, Gregorio},
  date = {2007},
  pages = {79--82},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1294948.1294968},
  url = {http://doi.acm.org/10.1145/1294948.1294968},
  urldate = {2015-11-24},
  abstract = {Research into traditional software evolution has been tackled from two broad perspectives: that focused on the how, which looks at the processes, methods and techniques to implement and evolve software; and that focused on the what/why perspective, aiming at achieving an understanding of the drivers and general characteristics of the software evolution phenomenon. The two perspectives are related in various ways: the study of the what/why is for instance essential to achieve an appropriate management of software engineering activities, and to guide innovation in processes, methods and tools, that is, the how. The output of the what/why studies is exemplified by empirical hypotheses, such as the staged model of software evolution. This paper focuses on the commonalities and differences between the evolution and patterns in the lifecycles of traditional commercial systems and free/libre/open source software (FLOSS) systems. The existing staged model for software evolution is therefore revised for its applicability on FLOSS systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PI8ZQMFZ/Capiluppi és mtsai. - 2007 - Adapting the Staged Model for Software Evolution.pdf},
  isbn = {978-1-59593-722-3},
  keywords = {_SMS_untagged,nyílt forrás},
  series = {{{IWPSE}} '07}
}

@incollection{capiluppi_cathedral_2007,
  title = {From the Cathedral to the Bazaar: {{An}} Empirical Study of the Lifecycle of Volunteer Community Projects},
  shorttitle = {From the Cathedral to the Bazaar},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Capiluppi, Andrea and Michlmayr, Martin},
  date = {2007},
  pages = {31--44},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_3},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9VEDQIJ9/chp%3A10.1007%2F978-0-387-72486-7_3.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{capiluppi_effort_2013,
  title = {Effort Estimation of {{FLOSS}} Projects: A Study of the {{Linux}} Kernel},
  shorttitle = {Effort Estimation of {{FLOSS}} Projects},
  author = {Capiluppi, Andrea and Izquierdo-Cortázar, Daniel},
  date = {2013-02},
  journaltitle = {Empirical Software Engineering},
  volume = {18},
  pages = {60--88},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-011-9191-7},
  url = {http://link.springer.com/10.1007/s10664-011-9191-7},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CKGJKVZS/art%3A10.1007%2Fs10664-011-9191-7.pdf},
  keywords = {_SMS_untagged,development,nyílt forrás,open source},
  langid = {english},
  number = {1}
}

@incollection{capiluppi_exploring_2012,
  title = {Exploring the Role of Commercial Stakeholders in Open Source Software Evolution},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Capiluppi, Andrea and Stol, Klaas-Jan and Boldyreff, Cornelia},
  date = {2012},
  pages = {178--200},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_12},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BKT3BBCN/chp%3A10.1007%2F978-3-642-33442-9_12.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QUH6S72A/chp%3A10.1007%2F978-3-642-33442-9_12.pdf},
  keywords = {_SMS_untagged,commercial open source,Forrás2,nyílt forrás,open source}
}

@inproceedings{capiluppi_identifying_2008,
  title = {Identifying and Improving Reusability Based on Coupling Patterns},
  booktitle = {{{ICSR}}},
  author = {Capiluppi, Andrea and Boldyreff, Cornelia and others},
  date = {2008},
  volume = {5030},
  pages = {282--293},
  publisher = {{Springer}},
  url = {http://link.springer.com/content/pdf/10.1007/978-3-540-68073-4.pdf#page=293},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4W9WZ5SK/chp%3A10.1007%2F978-3-540-68073-4_31.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{capiluppi_national_2018,
  title = {National {{Boundaries}} and {{Semantics}} of {{Artefacts}} in {{Open Source Development}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 1st {{International Workshop}} on {{Software Health}} ({{SoHeal}})},
  author = {Capiluppi, Andrea and Ajienka, Nemitari},
  date = {2018-05},
  pages = {33--39},
  abstract = {Global software development has long being recognised as a paradigm shift in modern software development. As an immediate effect, co-location of workers in the same building or office is not seen as necessary any longer. Coordination in distributed socio-technical systems is mostly achieved by means of the artifacts that are produced by the developers part of a project's team. Geographic distance profoundly affects the ability to collaborate. With communication becoming less frequent, the challenge is for it to become more effective. This is especially complex when different nationalities, languages and cultures are part of the same development effort. Open source software is an example of a distributed, multi-lingual development effort. As such, the main resulting artefacts are discussions, and source code. Diverse backgrounds can produce a different semantic corpus if the authors come from the same ethnic and language groups or from different ones. The purpose of this paper is to evaluate the artifacts in the context of their semantics, and how semantic corpora are affected by development and languages. By using a selection of Open Source projects developed within national boundaries, we compare their semantic richness, and how their class content is reflected in their identifiers. We also compare these national projects to a successful, international project. The aim is to discover how national boundaries influence the semantics of the developed code.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 1st {{International Workshop}} on {{Software Health}} ({{SoHeal}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QLR6TWFX/Capiluppi and Ajienka - 2018 - National Boundaries and Semantics of Artefacts in .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PLEEWRF6/8445836.html},
  keywords = {Collaboration,developed code,developers part,distributed socio-technical systems,ethnic language groups,geographic distance,global software development,international project,Java,languages,main resulting artefacts,Measurement,modern software development,multi language teams,multilingual development effort,national boundaries,national projects,open source,Open Source development,Open Source projects,Open source software,paradigm shift,public domain software,semantic corpora,semantic corpus,semantic richness,Semantics,Software,software development management,software engineering,source code,successful project,Terminology,Tools}
}

@article{capiluppi_quality_2009,
  title = {Quality {{Factors}} and {{Coding Standards}} – a {{Comparison Between Open Source Forges}}},
  author = {Capiluppi, Andrea and Boldyreff, Cornelia and Beecher, Karl and Adams, Paul J.},
  date = {2009-03},
  journaltitle = {Electronic Notes in Theoretical Computer Science},
  volume = {233},
  pages = {89--103},
  issn = {15710661},
  doi = {10.1016/j.entcs.2009.02.063},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1571066109000681},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4GQ9Q55N/1-s2.0-S1571066109000681-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás,open source,Software Assurance,statisztika},
  langid = {english}
}

@incollection{capiluppi_reassessing_2009,
  title = {Reassessing {{Brooks}}’ Law for the Free Software Community},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Capiluppi, Andrea and Adams, Paul J.},
  date = {2009},
  pages = {274--283},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_24},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6SQXRTWS/chp%3A10.1007%2F978-3-642-02032-2_24.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{capiluppi_software_2009,
  title = {Software Engineering in Practice: {{Design}} and Architectures of Floss Systems},
  shorttitle = {Software Engineering in Practice},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Capiluppi, Andrea and Knowles, Thomas},
  date = {2009},
  pages = {34--46},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_5},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U4MXAWA2/chp%3A10.1007%2F978-3-642-02032-2_5.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{capiluppi_successful_2011,
  title = {Successful Reuse of Software Components: {{A}} Report from the Open Source Perspective},
  shorttitle = {Successful Reuse of Software Components},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Capiluppi, Andrea and Boldyreff, Cornelia and Stol, Klaas-Jan},
  date = {2011},
  pages = {159--176},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_11},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FCRG3GS9/Successful Reuse of Software Components_ A Report from the Open Source Perspective.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RVQ66HRA/chp%3A10.1007%2F978-3-642-24418-6_11.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{capra_firms_2011,
  title = {Firms’ Involvement in {{Open Source}} Projects: {{A}} Trade-off between Software Structural Quality and Popularity},
  shorttitle = {Firms’ Involvement in {{Open Source}} Projects},
  author = {Capra, Eugenio and Francalanci, Chiara and Merlo, Francesco and Rossi-Lamastra, Cristina},
  date = {2011-01},
  journaltitle = {Journal of Systems and Software},
  volume = {84},
  pages = {144--161},
  issn = {01641212},
  doi = {10.1016/j.jss.2010.09.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016412121000244X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QCNTW7IP/1-s2.0-S016412121000244X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {1}
}

@incollection{capra_framework_2008,
  title = {A Framework for Evaluating Managerial Styles in Open Source Projects},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Capra, Eugenio and Wasserman, Anthony I.},
  date = {2008},
  pages = {1--14},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XQWX45DK/chp%3A10.1007%2F978-0-387-09684-1_1.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{capra_survey_2009,
  title = {A Survey on Firms’ Participation in Open Source Community Projects},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Capra, Eugenio and Francalanci, Chiara and Merlo, Francesco and Lamastra, Cristina Rossi},
  date = {2009},
  pages = {225--236},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_20},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/578PHZKS/chp%3A10.1007%2F978-3-642-02032-2_20.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@book{carayannis_encyclopedia_2013,
  title = {Encyclopedia of {{Creativity}}, {{Invention}}, {{Innovation}} and {{Entrepreneurship}}},
  editor = {Carayannis, Elias G.},
  date = {2013},
  publisher = {{Springer New York}},
  location = {{New York, NY}},
  url = {http://link.springer.com/10.1007/978-1-4614-3858-8},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N9GFG9IR/open_source.pdf},
  isbn = {978-1-4614-3857-1 978-1-4614-3858-8},
  langid = {english}
}

@article{carillo_what_2017,
  ids = {carillo\_what\_2017-1},
  title = {What Makes a Good Contributor? {{Understanding}} Contributor Behavior within Large {{Free}}/{{Open Source Software}} Projects – {{A}} Socialization Perspective},
  shorttitle = {What Makes a Good Contributor?},
  author = {Carillo, Kevin and Huff, Sid and Chawner, Brenda},
  date = {2017-12-01},
  journaltitle = {The Journal of Strategic Information Systems},
  shortjournal = {The Journal of Strategic Information Systems},
  volume = {26},
  pages = {322--359},
  issn = {0963-8687},
  doi = {10.1016/j.jsis.2017.03.001},
  url = {http://www.sciencedirect.com/science/article/pii/S0963868716301196},
  urldate = {2018-08-15},
  abstract = {Attracting new contributors is a necessary but not a sufficient condition, to ensure the survival and long-term success of Free/Open Source Software (FOSS) projects. The well-being of a FOSS project depends on the turning of project newcomers into ‘good contributors’ that is to say into individuals that substantially contribute to the project - but also that perform citizenship behaviors that protect and nurture its community. This study is a mixed-methods investigation of the socialization factors that influence contributor performance in large FOSS projects. A qualitative research component resulted into the development of a FOSS socialization framework as well as into the identification of key FOSS project citizenship behaviors. A conceptual model was then developed and empirically examined with 367 contributors from 12 large FOSS projects. The model hypothesizes the mediating effect of two proximal socialization variables, social identification and social integration, between FOSS newcomer socialization factors and contributor performance (conceptualized as task performance and community citizenship behaviors). The results demonstrate the influence of social identification and social integration in predicting contributor performance, as well as the importance of key socialization factors that are: task segregation, task purposefulness, interaction intensity, and supportiveness. Theoretical and practical implications are discussed.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FSPK79SM/Carillo et al. - 2017 - What makes a good contributor Understanding contr.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K6FM7REI/Carillo et al. - 2017 - What makes a good contributor Understanding contr.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BYXGE8QN/S0963868716301196.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J3EFN3BH/S0963868716301196.html},
  keywords = {Citizenship behaviors,Free/Open Source Software community,Free/Open Source Software project,Mixed-methods,Socialization},
  number = {4}
}

@inproceedings{carlson_open_2019,
  title = {Open {{Source Vulnerability Notification}}},
  booktitle = {Open {{Source Systems}}},
  author = {Carlson, Brandon and Leach, Kevin and Marinov, Darko and Nagappan, Meiyappan and Prakash, Atul},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {12--23},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_2},
  abstract = {The use of third-party libraries to manage software complexity can expose open source software projects to vulnerabilities. However, project owners do not currently have a standard way to enable private disclosure of potential security vulnerabilities. This neglect may be caused in part by having no template to follow for disclosing such vulnerabilities. We analyzed 600 GitHub projects to determine how many projects contained a vulnerable dependency and whether the projects had a process in place to privately communicate security issues. We found that 385 out of 600 open source Java projects contained at least one vulnerable dependency, and only 13 of those 385 projects had a security vulnerability reporting process. That is, 96.6\% of the projects with a vulnerability did not have a security notification process in place to allow for private disclosure. In determining whether the projects even had contact information publicly available, we found that 19.8\% had no contact information publicly available, let alone a security vulnerability reporting process. We suggest two methods to allow for community members to privately disclose potential security vulnerabilities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NSU34EDV/Carlson et al. - 2019 - Open Source Vulnerability Notification.pdf},
  isbn = {978-3-030-20883-7},
  keywords = {Open source,Security disclosure,Vulnerable dependency},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@book{carroll_creativity_2013,
  title = {Creativity and {{Rationale}}},
  editor = {Carroll, John M.},
  date = {2013},
  publisher = {{Springer London}},
  location = {{London}},
  url = {http://www.springerlink.com/index/10.1007/978-1-4471-4111-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X43DV7V8/mining_creativity_res_to_inform_design_rational_in_OS.pdf},
  isbn = {978-1-4471-4110-5 978-1-4471-4111-2}
}

@incollection{carroll_mining_2013,
  title = {Mining {{Creativity Research}} to {{Inform Design Rationale}} in {{Open Source Communities}}},
  booktitle = {Creativity and {{Rationale}}},
  author = {Burleson, Winslow and Tripathi, Priyamvada},
  editor = {Carroll, John M.},
  date = {2013},
  pages = {353--376},
  publisher = {{Springer London}},
  location = {{London}},
  url = {http://link.springer.com/10.1007/978-1-4471-4111-2_17},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/63E39P9P/chp%3A10.1007%2F978-1-4471-4111-2_17.pdf},
  isbn = {978-1-4471-4110-5 978-1-4471-4111-2},
  keywords = {secondary research}
}

@inproceedings{carter_empirically_2018,
  title = {Empirically {{Examining}} the {{Quality}} of {{Source Code}} in {{Engineering Software Systems}}},
  booktitle = {2018 {{IEEE International Conference}} on {{Electro}}/{{Information Technology}} ({{EIT}})},
  author = {Carter, Jens K. and Alnaeli, Saleh M. and Vaz, Warren S.},
  date = {2018-05},
  pages = {0641--0644},
  issn = {2154-0373},
  doi = {10.1109/EIT.2018.8500171},
  abstract = {In Engineering and Scientific computing, a significant number of software systems that are being commonly used by the Engineering community are developed and deployed as Open Source Systems (OSS). This collaborative development model has been widely accepted in both academia and industry. As these systems are typically developed by developers who are experts in their fields (e.g., Engineering), some of those programmers may be lacking an essential skillset today's software quality and engineering concepts (e.g., source code maintainability and analyzability, source code vulnerability, parallelization, etc.). An empirical study is presented that examines some of the source code quality aspects and programming practices (e.g., jumps statements, usage of recursion) from software engineering perspective in ten open source Engineering software systems. The studied systems are written in the C/C++ programming languages and comprised of over ten million lines of code, and present numerous tasks of the engineering community, including computer-aided design, computational fluid dynamics, and finite element analysis. Static analysis methods are applied to each system to determine the number of jump statements (Goto and Break statements) and functions that are recursively invoked. Functions that contain direct or indirect recursive calls are determined and counted. The results show that number of the used jump statements and functions that have recursive calls are significant and thus pose more of a roadblock to effectively and automatically maintain, comprehend, analyze, and re-engineer systems. Lastly, this leads to inefficiencies in a software engineer's ability to accomplish these common tasks. The study showed that issues in source code stemming from the lack of coding standards have increased over time and are prevalent.},
  eventtitle = {2018 {{IEEE International Conference}} on {{Electro}}/{{Information Technology}} ({{EIT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Y9L8UK4F/Carter et al. - 2018 - Empirically Examining the Quality of Source Code i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H7ZEI5YM/8500171.html},
  keywords = {analyzability,coding standards,collaborative development model,computational fluid dynamics,Computational fluid dynamics,Computational modeling,computer-aided design,Design automation,Encoding,engineering community,engineering concepts,engineering software,essential skillset today,Goto,jump commands,jump statements,open source,open source Engineering software systems,Open Source Systems,program diagnostics,Programming,public domain software,quality of programming,re-engineer systems,recursion,recursive calls,scientific computing,Software,software engineer,software engineering,software engineering perspective,software maintenance,software quality,software tools,source code (software),source code maintainability,source code quality aspects,source code vulnerability,Tools}
}

@inproceedings{carvallo_use_2019,
  title = {On the {{Use}} of {{Non}}-Technical {{Requirements}} for the {{Evaluation}} of {{FOSS Software Components}}},
  booktitle = {Quality of {{Information}} and {{Communications Technology}}},
  author = {Carvallo, Juan Pablo and Carvajal, Fabián and Crespo, Esteban and Mendez, Lucia and Torres, María José and Vintimilla, Rosalva},
  editor = {Piattini, Mario and Rupino da Cunha, Paulo and García Rodríguez de Guzmán, Ignacio and Pérez-Castillo, Ricardo},
  date = {2019},
  pages = {64--78},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-29238-6_5},
  abstract = {Modern enterprises rely on Information Systems specifically designed to manage the increasing complexity of their operation. In the usual case, they are built as hybrid systems which integrate several software components of different nature and origins e.g.; legacy systems, web services, commercial components (typically referred as COTS) and, Free and/or Open Source Software (FOSS). The evaluation of individual software components is highly relevant in this kind of system and is usually conducted with the support of software Quality Models. However, these artifacts usually consider only the evaluation of technical quality requirements, in detriment of non-technical ones (e.g. costs, legal and quality of suppliers) which can be just as critical, particularly in the selection of COTS and FOSS. In this paper, we propose an extension to preexisting software Quality Models, intended to deal with technical and non-technical quality requirements in a homogeneous and holistic way. The relevance of the approach is illustrated in relation to four industrial FOSS adoption processes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XT4FUCBC/Carvallo et al. - 2019 - On the Use of Non-technical Requirements for the E.pdf},
  isbn = {978-3-030-29238-6},
  keywords = {FOSS,Free and open source software,Non-technical quality requirements,Quality model,Quality requirements},
  langid = {english},
  series = {Communications in {{Computer}} and {{Information Science}}}
}

@article{castro_open_2019,
  title = {Open {{Design}} Initiatives: An Evaluation of {{CAD Open Source Software}}},
  shorttitle = {Open {{Design}} Initiatives},
  author = {Castro, Hélio and Putnik, Goran and Castro, Alrenice and Bosco Fontana, Rodrigo Dal},
  date = {2019-01-01},
  journaltitle = {Procedia CIRP},
  shortjournal = {Procedia CIRP},
  volume = {84},
  pages = {1116--1119},
  issn = {2212-8271},
  doi = {10.1016/j.procir.2019.08.001},
  url = {http://www.sciencedirect.com/science/article/pii/S2212827119310741},
  urldate = {2020-04-22},
  abstract = {Many of the developments started by social initiatives (bottom-up), others are induced by policies (top-down) or even by both (social and political). Open Design is mainly characterized as a movement generated by and for the community but could also be nourished by private/associative initiatives with the community support, and could be encourage by public entities that perceives Open Design as a flourish method for innovation and leading for a real democratization of the manufacturing. In this paper, three CAD software based on Open Design (rattleCAD, BRL CAD and FreeCAD) are evaluated, according to the number of downloads made in SourceFourge, in order to better understand the usage behavior of these CAD systems. The main findings suggest instability in the short range and stability in the medium and long range, indicating that the communities are active and providing attractive solutions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XYJTN2DW/Castro et al. - 2019 - Open Design initiatives an evaluation of CAD Open.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7HTPSEZH/S2212827119310741.html},
  keywords = {Downloads Analysis,Initiatives,Open Design,Research Programmes,Research Projects},
  langid = {english},
  series = {29th {{CIRP Design Conference}} 2019, 08-10 {{May}} 2019, {{Póvoa}} de {{Varzim}}, {{Portgal}}}
}

@inproceedings{cata_smart_2015,
  title = {Smart University, a New Concept in the {{Internet}} of {{Things}}},
  booktitle = {2015 14th {{RoEduNet International Conference}} - {{Networking}} in {{Education}} and {{Research}} ({{RoEduNet NER}})},
  author = {Caţă, M.},
  date = {2015-09},
  pages = {195--197},
  doi = {10.1109/RoEduNet.2015.7311993},
  abstract = {If the Internet has been one of the most important human creations, the Internet of Things (IoT) will change everything, activities and objects from simple to the most complex, and why not, even us humans. Besides areas as business, transportation, energy, medicine, agriculture and others, the Internet of Things wUl also have a major implication in education. A university campus may represent the ideal place for the creation of a smart environment. The aim of the hereby paper is to describe a new concept called Smart University, starting from needs and advantages and ending with a possible architecture based on smart objects.},
  eventtitle = {2015 14th {{RoEduNet International Conference}} - {{Networking}} in {{Education}} and {{Research}} ({{RoEduNet NER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6ZEZFVZC/Caţă - 2015 - Smart university, a new concept in the Internet of.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FCDAN3PU/7311993.html},
  keywords = {Arduino,cloud,communication,Decision support systems,educational institutions,Internet of Things,IoT,Smart Environment,smart object,smart university,software architecture,system architecture,university campus}
}

@inproceedings{catal_development_2017,
  title = {Development of a {{Software Vulnerability Prediction Web Service Based}} on {{Artificial Neural Networks}}},
  booktitle = {Trends and {{Applications}} in {{Knowledge Discovery}} and {{Data Mining}}},
  author = {Catal, Cagatay and Akbulut, Akhan and Ekenoglu, Ecem and Alemdaroglu, Meltem},
  editor = {Kang, U. and Lim, Ee-Peng and Yu, Jeffrey Xu and Moon, Yang-Sae},
  date = {2017},
  pages = {59--67},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-67274-8_6},
  abstract = {Detecting vulnerable components of a web application is an important activity to allocate verification resources effectively. Most of the studies proposed several vulnerability prediction models based on private and public datasets so far. In this study, we aimed to design and implement a software vulnerability prediction web service which will be hosted on Azure cloud computing platform. We investigated several machine learning techniques which exist in Azure Machine Learning Studio environment and observed that the best overall performance on three datasets is achieved when Multi-Layer Perceptron method is applied. Software metrics values are received from a web form and sent to the vulnerability prediction web service. Later, prediction result is computed and shown on the web form to notify the testing expert. Training models were built on datasets which include vulnerability data from Drupal, Moodle, and PHPMyAdmin projects. Experimental results showed that Artificial Neural Networks is a good alternative to build a vulnerability prediction model and building a web service for vulnerability prediction purpose is a good approach for complex systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XHF6NZ6U/Catal et al. - 2017 - Development of a Software Vulnerability Prediction.pdf},
  isbn = {978-3-319-67274-8},
  keywords = {Artificial neural networks,Machine learning,Prediction model,Vulnerabilities,Vulnerability prediction,Web service},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@online{cc_intergovernmental_2014,
  title = {Intergovernmental {{Organizations}} - {{Creative Commons}}},
  author = {{CC}},
  date = {2014},
  journaltitle = {Creative Commons},
  url = {https://wiki.creativecommons.org/wiki/Intergovernmental_Organizations},
  urldate = {2016-01-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FRJ3G8R6/Intergovernmental_Organizations.html}
}

@article{ceccato_family_2014,
  title = {A Family of Experiments to Assess the Effectiveness and Efficiency of Source Code Obfuscation Techniques},
  author = {Ceccato, Mariano and Di Penta, Massimiliano and Falcarin, Paolo and Ricca, Filippo and Torchiano, Marco and Tonella, Paolo},
  date = {2014-08},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {1040--1074},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-013-9248-x},
  url = {http://link.springer.com/10.1007/s10664-013-9248-x},
  urldate = {2014-05-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/55AKFGB5/family_of_experiments_to_assess_the_effectiveness_of_SC_obfusctaion.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HQ7X77DU/family_of_experiments_to_assess_the_effectiveness_of_SC_obfusctaion.pdf},
  keywords = {Code Obfuscation,Empirikus,Forrás3,open source,source analysis},
  langid = {english},
  number = {4}
}

@inproceedings{celinska_coding_2018,
  title = {Coding Together in a Social Network: Collaboration among {{GitHub}} Users},
  shorttitle = {Coding Together in a Social Network},
  booktitle = {Proceedings of the 9th {{International Conference}} on {{Social Media}} and {{Society}}},
  author = {Celińska, Dorota},
  date = {2018-07-18},
  pages = {31--40},
  publisher = {{Association for Computing Machinery}},
  location = {{Copenhagen, Denmark}},
  doi = {10.1145/3217804.3217895},
  url = {https://doi.org/10.1145/3217804.3217895},
  urldate = {2020-04-22},
  abstract = {In this article we investigate developers involved in the creation of Open Source software to identify which characteristics favor innovation in the Open Source community. The results of the analysis show that higher reputation in the community improves the probability of gaining collaborators to a certain degree, but developers are also driven by reciprocity. This is consistent with the concept of gift economy. A significant network effect exists and emerges from standardization, showing that developers using the most popular programming languages in the service are likely to have more collaborators. Providing additional information (valid URL to developer's homepage) improves the chances of finding coworkers. The results can be generalized for the population of mature users of GitHub.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3PKBIS7P/Celińska - 2018 - Coding together in a social network collaboration.pdf},
  isbn = {978-1-4503-6334-1},
  keywords = {collaboration,forking,gift economy,GitHub,innovations,network externality,Open Source,reciprocity,reputation},
  series = {{{SMSociety}} '18}
}

@online{center_for_history_and_new_media_hasznalati_nodate,
  title = {Használati Útmutató},
  author = {{Center for History and New Media}},
  url = {http://zotero.org/support/quick_start_guide}
}

@book{cerone_information_2012,
  title = {Information {{Technology}} and {{Open Source}}: {{Applications}} for {{Education}}, {{Innovation}}, and {{Sustainability}}},
  shorttitle = {Information {{Technology}} and {{Open Source}}},
  editor = {Cerone, Antonio and Persico, Donatella and Fernandes, Sara and Garcia-Perez, Alexeis and Katsaros, Panagiotis and Shaikh, Siraj Ahmed and Stamelos, Ioannis},
  date = {2012},
  volume = {7991},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-54338-8},
  urldate = {2014-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SMU767RJ/bok%3A978-3-642-54338-8.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VHURTXSG/chp%3A10.1007%2F978-3-642-54338-8_20.pdf},
  isbn = {978-3-642-54337-1 978-3-642-54338-8},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@article{cerri_open_2007,
  title = {Open Standards, Open Formats, and Open Source},
  author = {Cerri, Davide and Fuggetta, Alfonso},
  date = {2007-11},
  journaltitle = {Journal of Systems and Software},
  volume = {80},
  pages = {1930--1937},
  issn = {01641212},
  doi = {10.1016/j.jss.2007.01.048},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121207000581},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7ZQD6IQP/1-s2.0-S0164121207000581-main.pdf},
  keywords = {_SMS_untagged,license,nyílt forrás,open source,Standard},
  langid = {english},
  number = {11}
}

@incollection{cesare_clonewisedetecting_2013,
  title = {Clonewise–{{Detecting Package}}-{{Level Clones Using Machine Learning}}},
  booktitle = {Security and {{Privacy}} in {{Communication Networks}}},
  author = {Cesare, Silvio and Xiang, Yang and Zhang, Jun},
  date = {2013},
  pages = {197--215},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-04283-1_13},
  urldate = {2015-11-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TUWTHHM4/chp%3A10.1007%2F978-3-319-04283-1_13.pdf}
}

@book{chacon_pro_2009,
  title = {Pro {{Git}} - {{Scott Chacon}}},
  author = {Chacon, Scott},
  date = {2009},
  edition = {1},
  publisher = {{Apress}},
  abstract = {Git is the version control system developed by Linus Torvalds for Linux kernel development. It took the open source world by storm since its inception in 2005, and is used by small development shops and giants like Google, Red Hat, and IBM, and of course many open source projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DDVIQNRM/Chacon - 2009 - Pro Git - Scott Chacon.epub},
  isbn = {978-1-4302-1833-3},
  keywords = {computer science,git,software engineering},
  pagetotal = {288}
}

@book{chakrabarti_icord13_2013,
  title = {{{ICoRD}}'13},
  editor = {Chakrabarti, Amaresh and Prakash, Raghu V.},
  date = {2013},
  publisher = {{Springer India}},
  location = {{India}},
  url = {http://www.springerlink.com/index/10.1007/978-81-322-1050-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7RWEDCKK/open_source_hardware.pdf},
  isbn = {978-81-322-1049-8 978-81-322-1050-4},
  series = {Lecture {{Notes}} in {{Mechanical Engineering}}}
}

@incollection{chamarty_authorization_2011,
  title = {An Authorization Scheme for Version Control Systems},
  booktitle = {Proceedings of the 16th {{ACM}} Symposium on {{Access}} Control Models and Technologies},
  author = {Chamarty, Sitaram and Patel, Hiren D. and Tripunitara, Mahesh V.},
  date = {2011},
  volume = {SACMAT '11},
  pages = {123--132},
  publisher = {{ACM}},
  location = {{New York}},
  url = {https://ece.uwaterloo.ca/~hdpatel/uwhtml/publications/pdfs/chamarty_11_git.pdf},
  urldate = {2013-06-28},
  abstract = {We present gitolite, an authorization scheme for Version Control Systems (VCSes). We have implemented it for the Git VCS. A VCS enables versioning, distributed collaboration and several other features, and is an important context for authorization and access control. Our main consideration behind the design of gitolite is the balance between expressive power, correctness and usability in realistic settings. We discuss our design of gitolite, and in particular the four user-classes in its delegation model, and the administrative actions a user at each class performs. We discuss also our ongoing work on expressing gitolite precisely in first-order logic, to thereby give it a precise semantics and establish correctness properties. gitolite has been adopted in open-source software development, university and industry settings. We discuss our experience with these deployments, and present some performance results related to access enforcement from a real deployment.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QEQQW4KB/chamarty_11_git.pdf},
  isbn = {978-1-4503-0688-1}
}

@inproceedings{chang_evaluation_2008,
  title = {Evaluation of Source Code Copy Detection Methods on Freebsd},
  booktitle = {Proceedings of the 2008 International Working Conference on {{Mining}} Software Repositories},
  author = {Chang, Hung-Fu and Mockus, Audris},
  date = {2008},
  pages = {61--66},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1370766},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7BXSD3GK/p61-chang.pdf},
  keywords = {_SMS_untagged,development,nyílt forrás,open source}
}

@book{chapman_project_2003,
  title = {Project Risk Management Processes, Techniques, and Insights},
  author = {Chapman, C. B and Ward, Stephen},
  date = {2003},
  publisher = {{Wiley}},
  location = {{Hoboken, NJ}},
  abstract = {Based on sound conceptual foundations yet developed to meet practical concerns, Project Risk Management has become recognized as a standard work on its subject. It sets out the key issues and concepts involved in effective risk and uncertainty management in a clear and accessible way, providing a comprehensive discussion of risk management processes set firmly in the context of the project management task as a whole and focused on improving performance.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GQHMGGD3/John Wiley & Sons - Project Risk Management - Processes_ Techniques & Insights.pdf},
  isbn = {0-470-87131-8 978-0-470-87131-7 978-1-60119-926-3 1-60119-926-0},
  langid = {english}
}

@article{charles_gold_mitigating_2012,
  title = {Mitigating the {{Risk}} of {{OSS}}-Based {{Development}}},
  author = {{Charles Gold}},
  date = {2012},
  url = {http://www.isaca.org/Journal/Past-Issues/2012/Volume-2/Documents/12v2-Mitigating-the-Risk.pdf},
  urldate = {2015-02-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/75PJI9QT/12v2-Mitigating-the-Risk.pdf}
}

@inproceedings{chatzidimitriou_npm-miner_2018,
  title = {Npm-Miner: An Infrastructure for Measuring the Quality of the Npm Registry},
  shorttitle = {Npm-Miner},
  booktitle = {Proceedings of the 15th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Chatzidimitriou, Kyriakos C. and Papamichail, Michail D. and Diamantopoulos, Themistoklis and Tsapanos, Michail and Symeonidis, Andreas L.},
  date = {2018-05-28},
  pages = {42--45},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3196398.3196465},
  url = {https://doi.org/10.1145/3196398.3196465},
  urldate = {2020-04-22},
  abstract = {As the popularity of the JavaScript language is constantly increasing, one of the most important challenges today is to assess the quality of JavaScript packages. Developers often employ tools for code linting and for the extraction of static analysis metrics in order to assess and/or improve their code. In this context, we have developed npn-miner, a platform that crawls the npm registry and analyzes the packages using static analysis tools in order to extract detailed quality metrics as well as high-level quality attributes, such as maintainability and security. Our infrastructure includes an index that is accessible through a web interface, while we have also constructed a dataset with the results of a detailed analysis for 2000 popular npm packages.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UJE69D24/Chatzidimitriou et al. - 2018 - npm-miner an infrastructure for measuring the qua.pdf},
  isbn = {978-1-4503-5716-6},
  keywords = {javascript,npm,software quality,static analysis},
  series = {{{MSR}} '18}
}

@inproceedings{chawner_community_2012,
  title = {Community {{Matters Most}}: {{Factors That Affect Participant Satisfaction}} with {{Free}}/{{Libre}} and {{Open Source Software Projects}}},
  shorttitle = {Community {{Matters Most}}},
  booktitle = {Proceedings of the 2012 {{iConference}}},
  author = {Chawner, Brenda},
  date = {2012},
  pages = {231--239},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2132176.2132206},
  url = {http://doi.acm.org/10.1145/2132176.2132206},
  urldate = {2015-11-24},
  abstract = {Over the last 20 years, many free/libre and open source software (FLOSS) packages have been developed for library and information management (LIM) applications. These projects usually involve a distributed community of users and developers who jointly determine the software's future development. This paper presents the results of a web-based survey that examined which factors affect participant satisfaction with FLOSS projects. A total of 183 usable responses were received from people in 33 countries, representing over 30 different LIM FLOSS projects. Stepwise hierarchical regression showed that five factors (perceived project openness, perceived developer communication quality, perceived complexity, extent of participation, and perceived product openness) accounted for 44\% of the variance in satisfaction. Community-oriented characteristics had the most influence, suggesting that in a FLOSS context, project participants need to focus on community development and support to increase overall satisfaction with the project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AVD7VJ2R/Chawner - 2012 - Community Matters Most Factors That Affect Partic.pdf},
  isbn = {978-1-4503-0782-6},
  keywords = {_SMS_untagged,felmérés,free/libre and open source software,nyílt forrás,participation,satisfaction,survey},
  series = {{{iConference}} '12}
}

@article{chen_open-source_2004,
  title = {Open-Source Change Logs},
  author = {Chen, Kai and Schach, Stephen R. and Yu, Liguo and Offutt, Jeff and Heller, Gillian Z.},
  date = {2004},
  journaltitle = {Empirical Software Engineering},
  volume = {9},
  pages = {197--210},
  url = {http://link.springer.com/article/10.1023/B:EMSE.0000027779.70556.d0},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/44JBCGPQ/art%3A10.1023%2FB%3AEMSE.0000027779.70556.d0.pdf},
  number = {3}
}

@inproceedings{chen_predicting_2014,
  title = {Predicting the Number of Forks for Open Source Software Project},
  author = {Chen, Fangwei and Li, Lei and Jiang, Jing and Zhang, Li},
  date = {2014},
  pages = {40--47},
  publisher = {{ACM Press}},
  doi = {10.1145/2627508.2627515},
  url = {http://dl.acm.org/citation.cfm?doid=2627508.2627515},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RZSV5WJ7/p40-chen.pdf},
  isbn = {978-1-4503-2965-1},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{chen_survey_2007,
  title = {A Survey of Software Development with Open Source Components in {{Chinese}} Software Industry},
  booktitle = {Software {{Process Dynamics}} and {{Agility}}},
  author = {Chen, Weibing and Li, Jingyue and Ma, Jianqiang and Conradi, Reidar and Ji, Junzhong and Liu, Chunnian},
  date = {2007},
  pages = {208--220},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-72426-1_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KNF37BN2/chp%3A10.1007%2F978-3-540-72426-1_18.pdf},
  keywords = {_SMS_untagged,component reuse,kína,nyílt forrás,open source}
}

@inproceedings{chen_tool_2017,
  title = {Tool {{Support}} for {{Managing Clone Refactorings}} to {{Facilitate Code Review}} in {{Evolving Software}}},
  booktitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  author = {Chen, Zhiyuan and Mohanavilasam, Maneesh and Kwon, Young-Woo and Song, Myoungkyu},
  date = {2017-07},
  volume = {1},
  pages = {288--297},
  issn = {0730-3157},
  doi = {10.1109/COMPSAC.2017.242},
  abstract = {Developers often perform copy-and-paste activities. This practice causes the similar code fragment (aka code clones) to be scattered throughout a code base. Refactoring for clone removal is beneficial, preventing clones from having negative effects on software quality, such as hidden bug propagation and unintentional inconsistent changes. However, recent research has provided evidence that factoring out clones is not always to reduce the risk of introducing defects, and it is often difficult or impossible to remove clones using standard refactoring techniques. To investigate which or how clones can be refactored, developers typically spend a significant amount of their time managing individual clone instances or clone groups scattered across a large code base. To address the problem, this paper presents a technique for managing clone refactorings, Pattern-based clone Refactoring Inspection (PRI), using refactoring pattern templates. By matching the refactoring pattern templates against a code base, it summarizes refactoring changes of clones, and detects the clone instances not consistently factored out as potential anomalies. PRI also provides novel visualization user interfaces specifically designed for inspecting clone refactorings. In the evaluation, PRI analyzes clone instances in six open source projects. It identifies clone refactorings with 94.1\% accuracy and detects inconsistent refactorings with 98.4\% accuracy. Our results show that PRI should help developers effectively inspect evolving clones and correctly apply refactorings to clone groups.},
  eventtitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CHKD66RK/Chen et al. - 2017 - Tool Support for Managing Clone Refactorings to Fa.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RS7F8KEX/8029620.html},
  keywords = {clone instances analysis,clone refactorings management,clone removal,Cloning,code base,code clones,Code clones,code fragment,code review facilitation,Computer bugs,data visualisation,Inspection,maintenance,open source projects,Pattern matching,pattern-based clone refactoring inspection,PRI,public domain software,refactoring pattern templates matching,refactorings,Software,software evolution,software maintenance,software management,software quality,software tools,source code (software),Standards,tool support,Tools,user interfaces,visualization user interfaces}
}

@inproceedings{cheng_activity-based_2019,
  title = {Activity-{{Based Analysis}} of {{Open Source Software Contributors}}: {{Roles}} and {{Dynamics}}},
  shorttitle = {Activity-{{Based Analysis}} of {{Open Source Software Contributors}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 12th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  author = {Cheng, Jinghui and Guo, Jin L.C.},
  date = {2019-05},
  pages = {11--18},
  issn = {2574-1837},
  doi = {10.1109/CHASE.2019.00011},
  abstract = {Contributors to open source software (OSS) communities assume diverse roles to take different responsibilities. One major limitation of the current OSS tools and platforms is that they provide a uniform user interface regardless of the activities performed by the various types of contributors. This paper serves as a non-trivial first step towards resolving this challenge by demonstrating a methodology and establishing knowledge to understand how the contributors' roles and their dynamics, reflected in the activities contributors perform, are exhibited in OSS communities. Based on an analysis of user action data from 29 GitHub projects, we extracted six activities that distinguished four Active roles and five Supporting roles of OSS contributors, as well as patterns in role changes. Through the lens of the Activity Theory, these findings provided rich design guidelines for OSS tools to support diverse contributor roles.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 12th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5QNY24BI/Cheng and Guo - 2019 - Activity-Based Analysis of Open Source Software Co.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QQ4TKK74/8817054.html},
  keywords = {activity theory,activity-based analysis,contributor roles,GitHub projects,open source community,open source software,open source software communities,open source software contributors,OSS communities,OSS contributors,public domain software,role-based OSS tools,software development model,software tools,user interface,user interfaces}
}

@article{cheng_developer_2017,
  title = {Developer {{Role Evolution}} in {{Open Source Software Ecosystem}}: {{An Explanatory Study}} on {{GNOME}}},
  shorttitle = {Developer {{Role Evolution}} in {{Open Source Software Ecosystem}}},
  author = {Cheng, Can and Li, Bing and Li, Zeng-Yang and Zhao, Yu-Qi and Liao, Feng-Ling},
  date = {2017-03-01},
  journaltitle = {Journal of Computer Science and Technology},
  shortjournal = {J. Comput. Sci. Technol.},
  volume = {32},
  pages = {396--414},
  issn = {1860-4749},
  doi = {10.1007/s11390-017-1728-9},
  url = {https://doi.org/10.1007/s11390-017-1728-9},
  urldate = {2020-04-21},
  abstract = {An open source software (OSS) ecosystem refers to an OSS development community composed of many software projects and developers contributing to these projects. The projects and developers co-evolve in an ecosystem. To keep healthy evolution of such OSS ecosystems, there is a need of attracting and retaining developers, particularly project leaders and core developers who have major impact on the project and the whole team. Therefore, it is important to figure out the factors that influence developers’ chance to evolve into project leaders and core developers. To identify such factors, we conducted a case study on the GNOME ecosystem. First, we collected indicators reflecting developers’ subjective willingness to contribute to the project and the project environment that they stay in. Second, we calculated such indicators based on the GNOME dataset. Then, we fitted logistic regression models by taking as independent variables the resulting indicators after eliminating the most collinear ones, and taking as a dependent variable the future developer role (the core developer or project leader). The results showed that part of such indicators (e.g., the total number of projects that a developer joined) of subjective willingness and project environment significantly influenced the developers’ chance to evolve into core developers and project leaders. With different validation methods, our obtained model performs well on predicting developmental core developers, resulting in stable prediction performance (0.770, F-value).},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8CGXQH9A/Cheng et al. - 2017 - Developer Role Evolution in Open Source Software E.pdf},
  langid = {english},
  number = {2}
}

@article{cheng_evasion_2012,
  title = {Evasion {{Techniques}}: {{Sneaking}} through {{Your Intrusion Detection}}/{{Prevention Systems}}},
  shorttitle = {Evasion {{Techniques}}},
  author = {Cheng, Tsung-Huan and Lin, Ying-Dar and Lai, Yuan-Cheng and Lin, Po-Ching},
  date = {0024/2012},
  journaltitle = {IEEE Communications Surveys \& Tutorials},
  volume = {14},
  pages = {1011--1020},
  issn = {1553-877X},
  doi = {10.1109/SURV.2011.092311.00082},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6042389},
  urldate = {2013-09-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IE6D3TED/Evasion_Techniques_Sneaking_through_Your_Intrusion_Detection_Prevention_Systems.pdf},
  number = {4}
}

@misc{chess_metrics_nodate,
  title = {Metrics {{That Matter}}: {{Quantifying Software Security Risk}}},
  author = {Chess, Brian},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T8QE4RN2/Metrics That Matter - Chess.pdf}
}

@inproceedings{cheung_designing_2009,
  title = {Designing for Discovery: Opening the Hood for Open-Source End User Tinkering},
  shorttitle = {Designing for Discovery},
  booktitle = {{{CHI}}'09 {{Extended Abstracts}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Cheung, Gifford and Chilana, Parmit and Kane, Shaun and Pellett, Braden},
  date = {2009},
  pages = {4321--4326},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1520660},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M4WSAH5R/p4321-cheung.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{cheung_s._facilitating_2005,
  title = {Facilitating Information Sharing among Law Enforcement Agencies: Improving the Geospatial Repository for Analysis and Safety Planning},
  booktitle = {Systems and {{Information Engineering Design Symposium}}, 2005 {{IEEE}}},
  author = {{Cheung, S.} and {Daly, Andrew} and {Lam, J.} and {Pan, J.} and {Smith, B.} and {Brown, D.} and {Dalton, J.} and {Wilson, R.}},
  date = {2005},
  pages = {17--23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QZX6WP59/01497126.pdf},
  isbn = {0-9744559-4-6}
}

@inproceedings{choi_exploratory_2009,
  title = {An Exploratory Study on the Two New Trends in Open Source Software: {{End}}-Users and Service},
  shorttitle = {An Exploratory Study on the Two New Trends in Open Source Software},
  booktitle = {System {{Sciences}}, 2009. {{HICSS}}'09. 42nd {{Hawaii International Conference}} On},
  author = {Choi, Namjoo and Chengalur-Smith, Indushobha},
  date = {2009},
  pages = {1--10},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4755631},
  urldate = {2016-01-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WUXCIJCI/04755631.pdf}
}

@article{choi_security_2005,
  title = {A Security Evaluation and Testing Methodology for Open Source Software Embedded Information Security System},
  author = {Choi, Sung-ja and Kang, Yeon-hee and Lee, Gang-soo},
  date = {2005},
  journaltitle = {Computational Science and Its Applications–ICCSA 2005},
  pages = {215--224},
  url = {http://www.springerlink.com/index/HBDQH488PLG2LRX4.pdf},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GEGKKSMW/chp%3A10.1007%2F11424826_23.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{chong_using_2019,
  title = {Using {{Software Metrics}} for {{Predicting Vulnerable Code}}-{{Components}}: {{A Study}} on {{Java}} and {{Python Open Source Projects}}},
  shorttitle = {Using {{Software Metrics}} for {{Predicting Vulnerable Code}}-{{Components}}},
  booktitle = {2019 {{IEEE International Conference}} on {{Computational Science}} and {{Engineering}} ({{CSE}}) and {{IEEE International Conference}} on {{Embedded}} and {{Ubiquitous Computing}} ({{EUC}})},
  author = {Chong, Tai-Yin and Anu, Vaibhav and Sultana, Kazi Zakia},
  date = {2019-08},
  pages = {98--103},
  doi = {10.1109/CSE/EUC.2019.00028},
  abstract = {Software vulnerabilities often remain hidden until an attacker exploits the weak/insecure code. Therefore, testing the software from a vulnerability discovery perspective becomes challenging for developers if they do not inspect their code thoroughly (which is time-consuming). We propose that vulnerability prediction using certain software metrics can support the testing process by identifying vulnerable code-components (e.g., functions, classes, etc.). Once a code-component is predicted as vulnerable, the developers can focus their testing efforts on it, thereby avoiding the time/effort required for testing the entire application. The current paper presents a study that compares how software metrics perform as vulnerability predictors for software projects developed in two different languages (Java vs Python). The goal of this research is to analyze the vulnerability prediction performance of software metrics for different programming languages. We designed and conducted experiments on security vulnerabilities reported for three Java projects (Apache Tomcat 6, Tomcat 7, Apache CXF) and two Python projects (Django and Keystone). In this paper, we focus on a specific type of code component: Functions. We apply Machine Learning models for predicting vulnerable functions. Overall results show that software metrics-based vulnerability prediction is more useful for Java projects than Python projects (i.e., software metrics when used as features were able to predict Java vulnerable functions with a higher recall and precision compared to Python vulnerable functions prediction).},
  eventtitle = {2019 {{IEEE International Conference}} on {{Computational Science}} and {{Engineering}} ({{CSE}}) and {{IEEE International Conference}} on {{Embedded}} and {{Ubiquitous Computing}} ({{EUC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ASFQ6G98/Chong et al. - 2019 - Using Software Metrics for Predicting Vulnerable C.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PECQ4Z94/8919513.html},
  keywords = {code component,code-component,Java,Java projects,Java vulnerable functions,learning (artificial intelligence),public domain software,Python,Python open source projects,Python vulnerable function prediction,safety-critical software,Security,security of data,security vulnerabilities,software metrics,Software metrics,software metrics-based vulnerability prediction,software projects,software security; software metrics; vulnerability prediction; software reliability; machine learning,Testing,vulnerability prediction performance,vulnerability predictors}
}

@article{chopra_free_2007,
  title = {Free {{Software}} and the {{Political Philosophy}} of the {{Cyborg World}}},
  author = {Chopra, S. and Dexter, S.},
  date = {2007-11},
  journaltitle = {SIGCAS Comput. Soc.},
  volume = {37},
  pages = {41--52},
  issn = {0095-2737},
  doi = {10.1145/1327325.1327328},
  url = {http://doi.acm.org/10.1145/1327325.1327328},
  urldate = {2015-11-24},
  abstract = {Our freedoms in cyberspace are those granted by code and the protocols it implements. When man and machine interact, co-exist, and intermingle, cyberspace comes to interpenetrate the real world fully. In this cyborg world, software retains its regulatory role, becoming a language of interaction with our extended cyborg selves. The mediation of our extended selves by closed software threatens individual autonomy. We define a notion of freedom for software that does justice to our conception of it as language, sketching the outlines of a social and political philosophy for a cyborg world. In a cyberspace underwritten by free software, political structures become contingent and flexible: the polity can choose to change the extent and character of its participation. The rejection of opaque power is an old anarchist ideal: free software, by making power transparent, carries the potential to place substantive restrictions on the regulatory power of cyborg government.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UX46NP39/Chopra és Dexter - 2007 - Free Software and the Political Philosophy of the .pdf},
  keywords = {_SMS_untagged,autonomy,cyberspace,cyborg,e-governance,free software,nyílt forrás,political philosophy},
  number = {2}
}

@article{chopra_free_2011,
  title = {Free Software and the Economics of Information Justice},
  author = {Chopra, S. and Dexter, S.},
  date = {2011-09},
  journaltitle = {Ethics and Information Technology},
  volume = {13},
  pages = {173--184},
  issn = {1388-1957, 1572-8439},
  doi = {10.1007/s10676-010-9226-6},
  url = {http://link.springer.com/10.1007/s10676-010-9226-6},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JKX9B8C8/art%3A10.1007%2Fs10676-010-9226-6.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {3}
}

@incollection{christl_free_2008,
  title = {Free Software and Open Source Business Models},
  booktitle = {Open Source Approaches in Spatial Data Handling},
  author = {Christl, Arnulf},
  date = {2008},
  pages = {21--48},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-74831-1_2},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KNVZ4BHK/chp%3A10.1007%2F978-3-540-74831-1_2.pdf},
  keywords = {_SMS_untagged,history,license,life cycle,nyílt forrás,open source}
}

@incollection{christopher_soghoian_certified_2012,
  title = {Certified {{Lies}}: {{Detecting}} and {{Defeating Government Interception Attacks}} against {{SSL}} ({{Short Paper}})},
  booktitle = {Financial {{Cryptography}} and {{Data Security}}},
  author = {{Christopher Soghoian} and {Sid Stamm}},
  date = {2012},
  pages = {250--259},
  publisher = {{Springer Berlin Heidelberg}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NRS6WM5Q/ssl-mitm.pdf},
  isbn = {978-3-642-27575-3},
  keywords = {man in the middle,PKI,SSL},
  number = {7035},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{ciaccio_enabling_2011,
  title = {Enabling Distributed Command and Control with Standards-Based Geospatial Collaboration},
  booktitle = {Technologies for {{Homeland Security}} ({{HST}}), 2011 {{IEEE International Conference}} On},
  author = {Ciaccio, Ray Di and Pullen, Jared and Breimyer, Paul},
  date = {2011},
  pages = {512--517},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6107921},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BBIN22ZW/06107921.pdf}
}

@article{cibrario_bertolotti_modular_2015,
  title = {Modular Design of an Open-Source, Networked Embedded System},
  author = {Cibrario Bertolotti, Ivan and Hu, Tingting},
  date = {2015-01},
  journaltitle = {Computer Standards \& Interfaces},
  volume = {37},
  pages = {41--52},
  issn = {09205489},
  doi = {10.1016/j.csi.2014.05.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0920548914000725},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KSJMJ7KJ/1-s2.0-S0920548914000725-main.pdf},
  langid = {english}
}

@online{cigital_open_2011,
  title = {Open {{Source}} and {{Software Maturity Models}}},
  author = {{Cigital}},
  date = {2011},
  journaltitle = {cigital},
  url = {https://www.cigital.com/justice-league-blog/2011/11/15/open-source-and-software-maturity-models/},
  urldate = {2014-05-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BTBW78R8/open_source_and_software_maturity_models.pdf},
  keywords = {computer security,open source,vulnerability}
}

@online{cioinsight_open_2005,
  title = {Open {{Source Turns Strategic}}},
  author = {CIOinsight},
  date = {2005},
  journaltitle = {CIO Insight},
  url = {http://www.cioinsight.com/c/a/Research/Open-Source-Turns-Strategic/},
  urldate = {2012-10-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BND4MJRA/CIOinsight - 2005 - Open Source Turns Strategic.pdf}
}

@incollection{ciolkowski_towards_2008,
  title = {Towards a Comprehensive Approach for Assessing Open Source Projects},
  booktitle = {Software {{Process}} and {{Product Measurement}}},
  author = {Ciolkowski, Marcus and Soto, Martín},
  date = {2008},
  pages = {316--330},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-89403-2_26},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SHF2TQP2/chp%3A10.1007%2F978-3-540-89403-2_26.pdf},
  keywords = {_SMS_untagged,evaluation,nyílt forrás,open source,QualOSS}
}

@inproceedings{claes_programmers_2018,
  ids = {claes\_programmers\_2018-1},
  title = {Do {{Programmers Work}} at {{Night}} or {{During}} the {{Weekend}}?},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Claes, Maëlick and Mäntylä, Mika V. and Kuutila, Miikka and Adams, Bram},
  date = {2018-05},
  pages = {705--715},
  issn = {1558-1225},
  doi = {10.1145/3180155.3180193},
  abstract = {Abnormal working hours can reduce work health, general well-being, and productivity, independent from a profession. To inform future approaches for automatic stress and overload detection, this paper establishes empirically collected measures of the work patterns of software engineers. To this aim, we perform the first largescale study of software engineers' working hours by investigating the time stamps of commit activities of 86 large open source software projects, both containing hired and volunteer developers. We find that two thirds of software engineers mainly follow typical office hours, empirically established to be from 10h to 18h, and do not usually work during nights and weekends. Large variations between projects and individuals exist. Surprisingly, we found no support that project maturation would decrease abnormal working hours. In the Firefox case study, we found that hired developers work more during office hours while seniority, either in terms of number of commits or job status, did not impact working hours. We conclude that the use of working hours or timestamps of work products for stress detection requires establishing baselines at the level of individuals.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6UY2UTJ3/Claes et al. - 2018 - Do programmers work at night or during the weekend.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NTKNZGE8/Claes et al. - 2018 - Do Programmers Work at Night or During the Weekend.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JAJITCRU/8453143.html},
  keywords = {abnormal working hours,apache,Companies,Computer bugs,Firefox,health care,mozilla,night,occupational health,open source,open source software projects,overload detection,overtime,overwork,Productivity,project management,public domain software,Rhythm,Software,software development management,Software engineering,software engineers,software repository mining,Stress,stress detection,time stamps,weekend,work health,work patterns,work products}
}

@inproceedings{claes_towards_2018,
  ids = {claes\_towards\_2018-1},
  title = {Towards {{Automatically Identifying Paid Open Source Developers}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Claes, Maëlick and Mäntylä, Mika and Kuutila, Miikka and Farooq, Umar},
  date = {2018-05},
  pages = {437--441},
  issn = {2574-3864},
  abstract = {Open source development contains contributions from both hired and volunteer software developers. Identification of this status is important when we consider the transferability of research results to the closed source software industry, as they include no volunteer developers. While many studies have taken the employment status of developers into account, this information is often gathered manually due to the lack of accurate automatic methods. In this paper, we present an initial step towards predicting paid and unpaid open source development using machine learning and compare our results with automatic techniques used in prior work. By relying on code source repository meta-data from Mozilla, and manually collected employment status, we built a dataset of the most active developers, both volunteer and hired by Mozilla. We define a set of metrics based on developers' usual commit time pattern and use different classification methods (logistic regression, classification tree, and random forest). The results show that our proposed method identify paid and unpaid commits with an AUC of 0.75 using random forest, which is higher than the AUC of 0.64 obtained with the best of the previously used automatic methods.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9BEXHYFF/Claes et al. - 2018 - Towards Automatically Identifying Paid Open Source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NQXJ89X6/Claes et al. - 2018 - Towards automatically identifying paid open source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ATTQ4F24/8595227.html},
  keywords = {automatic techniques,closed source software industry,code source repository meta-data,Data mining,developers employment status,DP industry,Electronic mail,employment,Employment,machine learning,Measurement,mozilla,open source,Open source software,paid open source developers,paid software development,personnel,Predictive models,public domain software,random forest,random forests,software repository mining,unpaid open source development,volunteer,volunteer developers}
}

@book{clausewitz_haborurol_nodate,
  title = {A Háborúról},
  author = {Clausewitz, Carl}
}

@video{clay_shirky_how_2012,
  title = {How the {{Internet}} Will (One Day) Transform Government},
  editor = {{Clay Shirky}},
  date = {2012},
  publisher = {{TED talk}},
  url = {https://www.ted.com/talks/clay_shirky_how_the_internet_will_one_day_transform_government},
  editortype = {director}
}

@incollection{cocco_study_2011,
  title = {Study of the {{Competition}} between {{Proprietary Software Firms}} and {{Free}}/{{Libre Open Source Software Firms Using}} a {{Simulation Model}}},
  booktitle = {Software {{Business}}},
  author = {Cocco, Luisanna and Mannaro, Katiuscia and Concas, Giulio and Marchesi, Michele},
  date = {2011},
  pages = {56--69},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21544-5_6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DFW5A65V/chp%3A10.1007%2F978-3-642-21544-5_6.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P5J8CQZJ/chp%3A10.1007%2F978-3-642-21544-5_6.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{coelho_identifying_2018,
  title = {Identifying Unmaintained Projects in Github},
  booktitle = {Proceedings of the 12th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Coelho, Jailton and Valente, Marco Tulio and Silva, Luciana L. and Shihab, Emad},
  date = {2018-10-11},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Oulu, Finland}},
  doi = {10.1145/3239235.3240501},
  url = {https://doi.org/10.1145/3239235.3240501},
  urldate = {2020-04-22},
  abstract = {Background: Open source software has an increasing importance in modern software development. However, there is also a growing concern on the sustainability of such projects, which are usually managed by a small number of developers, frequently working as volunteers. Aims: In this paper, we propose an approach to identify GitHub projects that are not actively maintained. Our goal is to alert users about the risks of using these projects and possibly motivate other developers to assume the maintenance of the projects. Method: We train machine learning models to identify unmaintained or sparsely maintained projects, based on a set of features about project activity (commits, forks, issues, etc). We empirically validate the model with the best performance with the principal developers of 129 GitHub projects. Results: The proposed machine learning approach has a precision of 80\%, based on the feedback of real open source developers; and a recall of 96\%. We also show that our approach can be used to assess the risks of projects becoming unmaintained. Conclusions: The model proposed in this paper can be used by open source users and developers to identify GitHub projects that are not actively maintained anymore.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7UAXJI7Y/Coelho et al. - 2018 - Identifying unmaintained projects in github.pdf},
  isbn = {978-1-4503-5823-1},
  keywords = {github,open source software,unmaintained projects},
  series = {{{ESEM}} '18}
}

@article{coelho_is_2020,
  title = {Is This {{GitHub}} Project Maintained? {{Measuring}} the Level of Maintenance Activity of Open-Source Projects},
  shorttitle = {Is This {{GitHub}} Project Maintained?},
  author = {Coelho, Jailton and Valente, Marco Tulio and Milen, Luciano and Silva, Luciana L.},
  date = {2020-06-01},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {122},
  pages = {106274},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2020.106274},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584920300240},
  urldate = {2020-04-22},
  abstract = {Context GitHub hosts an impressive number of high-quality OSS projects. However, selecting “the right tool for the job” is a challenging task, because we do not have precise information about those high-quality projects. Objective In this paper, we propose a data-driven approach to measure the level of maintenance activity of GitHub projects. Our goal is to alert users about the risks of using unmaintained projects and possibly motivate other developers to assume the maintenance of such projects. Method We train machine learning models to define a metric to express the level of maintenance activity of GitHub projects. Next, we analyze the historical evolution of 2927 active projects in the time frame of one year. Results From 2927 active projects, 16\% become unmaintained in the interval of one year. We also found that Objective-C projects tend to have lower maintenance activity than projects implemented in other languages. Finally, software tools—such as compilers and editors—have the highest maintenance activity over time. Conclusions A metric about the level of maintenance activity of GitHub projects can help developers to select open source projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8W6GUGSP/Coelho et al. - 2020 - Is this GitHub project maintained Measuring the l.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XQFEVMY4/S0950584920300240.html},
  keywords = {GitHub,Open source software,Unmaintained projects},
  langid = {english}
}

@inproceedings{coelho_why_2017,
  title = {Why Modern Open Source Projects Fail},
  booktitle = {Proceedings of the 2017 11th {{Joint Meeting}} on {{Foundations}} of {{Software Engineering}}},
  author = {Coelho, Jailton and Valente, Marco Tulio},
  date = {2017-08-21},
  pages = {186--196},
  publisher = {{Association for Computing Machinery}},
  location = {{Paderborn, Germany}},
  doi = {10.1145/3106237.3106246},
  url = {https://doi.org/10.1145/3106237.3106246},
  urldate = {2020-04-22},
  abstract = {Open source is experiencing a renaissance period, due to the appearance of modern platforms and workflows for developing and maintaining public code. As a result, developers are creating open source software at speeds never seen before. Consequently, these projects are also facing unprecedented mortality rates. To better understand the reasons for the failure of modern open source projects, this paper describes the results of a survey with the maintainers of 104 popular GitHub systems that have been deprecated. We provide a set of nine reasons for the failure of these open source projects. We also show that some maintenance practices---specifically the adoption of contributing guidelines and continuous integration---have an important association with a project failure or success. Finally, we discuss and reveal the principal strategies developers have tried to overcome the failure of the studied projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UXB8QJ48/Coelho and Valente - 2017 - Why modern open source projects fail.pdf},
  isbn = {978-1-4503-5105-8},
  keywords = {GitHub,Open Source Software,Project failure},
  series = {{{ESEC}}/{{FSE}} 2017}
}

@inproceedings{coelho_why_2018,
  ids = {coelho\_why\_2018-1},
  title = {Why {{We Engage}} in {{FLOSS}}: {{Answers}} from {{Core Developers}}},
  shorttitle = {Why {{We Engage}} in {{FLOSS}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 11th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  author = {Coelho, Jailton and Valente, Marco Tulio and Silva, Luciana Lourdes and Hora, André},
  date = {2018-05},
  pages = {114--121},
  issn = {2574-1837},
  abstract = {The maintenance and evolution of Free/Libre Open Source Software (FLOSS) projects demand the constant attraction of core developers. In this paper, we report the results of a survey with 52 developers, who recently became core contributors of popular GitHub projects. We reveal their motivations to assume a key role in FLOSS projects (e.g., improving the projects because they are also using it), the project characteristics that most helped in their engagement process (e.g., a friendly community), and the barriers faced by the surveyed core developers (e.g., lack of time of the project leaders). We also compare our results with related studies about others kinds of open source contributors (casual, one-time, and newcomers).},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 11th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/37WVXA73/Coelho et al. - 2018 - Why we engage in FLOSS answers from core develope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RXBNU5C3/Coelho et al. - 2018 - Why We Engage in FLOSS Answers from Core Develope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S7CTNGHZ/8445550.html},
  keywords = {Computer languages,core developers,Core Developers,engagement process,FLOSS projects,Free/Libre Open Source Software projects,github,GitHub,Libraries,maintenance,Maintenance engineering,open source contributors,open source software,Open source software,Open Source Software,Organizations,popular GitHub projects,public domain software,software maintenance,Tools}
}

@article{colazo_performance_2014,
  title = {Performance Implications of Stage-Wise Lead User Participation in Software Development Problem Solving},
  author = {Colazo, Jorge},
  date = {2014-11},
  journaltitle = {Decision Support Systems},
  volume = {67},
  pages = {100--108},
  issn = {01679236},
  doi = {10.1016/j.dss.2014.08.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016792361400222X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G5KQ56VU/1-s2.0-S016792361400222X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{colin_percival_automated_2003,
  title = {An {{Automated Binary Security Update System}} for {{FreeBSD}}.Pdf},
  booktitle = {Proceedings of {{BSDCon}} ’03},
  author = {{Colin Percival}},
  date = {2003},
  location = {{San Mateo, CA, USA}},
  url = {http://www.usenix.org/events/bsdcon03/tech/full_papers/percival/percival.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9PVVCE4J/An Automated Binary Security Update System for FreeBSD.pdf}
}

@article{comino_government_2005,
  title = {Government {{Policies Supporting Open Source Software}} for the {{Mass Market}}},
  author = {Comino, Stefano and Manenti, Fabio M.},
  date = {2005-03},
  journaltitle = {Review of Industrial Organization},
  volume = {26},
  pages = {217--240},
  issn = {0889-938X, 1573-7160},
  doi = {10.1007/s11151-004-7297-4},
  url = {http://link.springer.com/10.1007/s11151-004-7297-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FJZSSXTN/art%3A10.1007%2Fs11151-004-7297-4.pdf},
  langid = {english},
  number = {2}
}

@misc{comission_of_the_european_communities_directive_2016,
  title = {Directive ({{EU}}) 2016/1148 of the {{European Parliament}} and of the {{Council}}},
  author = {{Comission of the European Communities}},
  date = {2016},
  publisher = {{EU}},
  url = {https://eur-lex.europa.eu/eli/dir/2016/1148/oj},
  urldate = {2020-05-30},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K3XEDF7L/oj.html},
  langid = {english}
}

@misc{comission_of_the_european_communities_green_2005,
  title = {Green {{Paper}} on a {{European Programme}} for {{Critical Inftrastructure Protection}}},
  author = {{Comission of the European Communities}},
  date = {2005},
  publisher = {{EU}},
  url = {https://eur-lex.europa.eu/legal-content/en/TXT/?uri=CELEX:52005DC0576},
  urldate = {2020-06-01},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CT8RE8AI/TXT.html}
}

@online{communication_from_the_commission_to_the_council_and_the_european_parliament_preparedness_2007,
  title = {Preparedness and Consequence Management in the Fight against Terrorism},
  author = {{Communication from the Commission to the Council and the European Parliament}},
  date = {2007-05-02},
  url = {https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=LEGISSUM:l33220},
  urldate = {2020-09-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WM7LECZL/TXT.html}
}

@inproceedings{conklin_collaboration_2005,
  title = {Collaboration Using {{OSSmole}}: A Repository of {{FLOSS}} Data and Analyses},
  shorttitle = {Collaboration Using {{OSSmole}}},
  booktitle = {{{ACM SIGSOFT Software Engineering Notes}}},
  author = {Conklin, Megan and Howison, James and Crowston, Kevin},
  date = {2005},
  volume = {30},
  pages = {1--5},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1083164},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G22W44NG/p22-conklin.pdf},
  keywords = {_SMS_untagged,nyílt forrás,OSSmole,tool}
}

@inproceedings{conklin_software_2011,
  title = {Software {{Assurance}}: {{The Need}} for {{Definitions}}},
  shorttitle = {Software {{Assurance}}},
  booktitle = {System {{Sciences}} ({{HICSS}}), 2011 44th {{Hawaii International Conference}} On},
  author = {Conklin, Wm Arthur},
  date = {2011},
  pages = {1--7},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5718650},
  urldate = {2015-01-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MS5B77AH/04-06-04.pdf},
  keywords = {Definitions,SA,Software Assurance}
}

@inproceedings{cordy_nicad_2011,
  title = {The {{NiCad}} Clone Detector},
  booktitle = {Program {{Comprehension}} ({{ICPC}}), 2011 {{IEEE}} 19th {{International Conference}} On},
  author = {Cordy, James R. and Roy, Chanchal K.},
  date = {2011},
  pages = {219--220},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5970189},
  urldate = {2015-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MAJZZ6VT/CR-NiCad-Tool-ICPC11.pdf},
  keywords = {clone detection,source analysis}
}

@article{corno_how_2020,
  title = {How Is {{Open Source Software Development Different}} in {{Popular IoT Projects}}?},
  author = {Corno, Fulvio and De Russis, Luigi and Sáenz, Juan Pablo},
  date = {2020},
  journaltitle = {IEEE Access},
  volume = {8},
  pages = {28337--28348},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2020.2972364},
  abstract = {From the software point of view, the development of IoT applications differs from other kinds of applications due to the specific features that the former exhibit. In this paper, we investigate how developers contribute to IoT applications in the Open Source Software (OSS) context, to gain a deeper understanding of how their work differs from that of non-IoT applications. To that end, we conducted a quantitative analysis of a broad set of the 60 most popular publicly available IoT and non-IoT projects on GitHub. By comparing how developers contribute to these projects, our analysis provides insight into the purpose and characteristics of the code, the behavior of the contributors, and the maturity of the IoT software development ecosystem. Results reveal significant differences between IoT and non-IoT application development, in terms of how applications are realized, in the diversity of developers' specializations, and in how code is reused. This work provides evidence about some Open Source IoT software development peculiarities to be considered by future research efforts aimed at better satisfying software engineering needs in the IoT scenario.},
  eventtitle = {{{IEEE Access}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TMSN3A2P/Corno et al. - 2020 - How is Open Source Software Development Different .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C4RX7FEZ/8986632.html},
  keywords = {Computer languages,developers,Ecosystems,Internet of Things,IoT applications,IoT projects,IoT scenario,IoT software development ecosystem,nonIoT application development,nonIoT applications,nonIoT projects,open source IoT software development peculiarities,open source software,Open source software,Open Source Software context,Programming,public domain software,publicly available IoT,quantitative analysis,software engineering,software mining,Statistical analysis}
}

@article{cosentino_three_2014,
  title = {Three {{Metrics}} to {{Explore}} the {{Openness}} of {{GitHub}} Projects},
  author = {Cosentino, Valerio and Izquierdo, Javier Luis Canovas and Cabot, Jordi},
  date = {2014},
  journaltitle = {arXiv preprint arXiv:1409.4253},
  url = {http://arxiv.org/abs/1409.4253},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/USQCGUHH/1409.4253.pdf},
  keywords = {community,open source}
}

@inproceedings{cotroneo_prediction_2016,
  title = {Prediction of the {{Testing Effort}} for the {{Safety Certification}} of {{Open}}-{{Source Software}}: {{A Case Study}} on a {{Real}}-{{Time Operating System}}},
  shorttitle = {Prediction of the {{Testing Effort}} for the {{Safety Certification}} of {{Open}}-{{Source Software}}},
  booktitle = {2016 12th {{European Dependable Computing Conference}} ({{EDCC}})},
  author = {Cotroneo, Domenico and Leo, Domenico Di and Natella, Roberto and Pietrantuono, Roberto},
  date = {2016-09},
  pages = {141--152},
  doi = {10.1109/EDCC.2016.22},
  abstract = {The reuse of Open Source Software (OSS) for safety-critical systems is seen with interest by industries, such as automotive, medical, and aerospace, as it enables shorter time-to-market and lower development costs. However, safety certification demands to supply evidence about OSS quality, and a gap analysis is needed to assess if the cost to produce certification evidence is worthwhile. This paper presents an empirical study on an open-source RTOS (RTEMS). The study investigates the relationship between software complexity and the effort to achieve a high test coverage, which is one of the most impacting activity for certification. The objective is to figure out if, and to what extent, it is possible to predict such effort preventively, by looking at software complexity metrics. This would enable a preliminary screening and benchmarking of OSS items, supporting strategic decision making. The study shows that combining metrics with classifiers can achieve a good prediction accuracy.},
  eventtitle = {2016 12th {{European Dependable Computing Conference}} ({{EDCC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RP576JIU/Cotroneo et al. - 2016 - Prediction of the Testing Effort for the Safety Ce.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LFZTJRZY/7780353.html},
  keywords = {Complexity theory,computational complexity,decision making,development costs,Effort prediction,Measurement,open source software,Open source software,Open Source Software,open-source RTOS,open-source software,operating systems (computers),OSS,program testing,public domain software,real-time operating system,Real-Time OS,Real-time systems,RTEMS,Safety,safety certification,Safety Certification,safety certification demands,safety-critical software,safety-critical systems,software complexity metrics,Software Complexity Metrics,software metrics,strategic decision making,Testing,testing effort}
}

@incollection{counsell_empirical_2008,
  title = {An {{Empirical Study}} of {{Potential Vulnerability Faults}} in {{Java Open}}-{{Source Software}}},
  booktitle = {Innovative {{Techniques}} in {{Instruction Technology}}, {{E}}-Learning, {{E}}-Assessment, and {{Education}}},
  author = {Counsell, Steve and Swift, Stephen},
  date = {2008},
  pages = {514--519},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4020-8739-4_91},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ANC6U4GP/chp%3A10.1007%2F978-1-4020-8739-4_91.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{crane_security_2011,
  title = {Security Trustworthiness Assessment of Platforms},
  booktitle = {Digital Privacy},
  author = {Crane, Stephen and Pearson, Siani},
  date = {2011},
  pages = {457--483},
  publisher = {{Springer}},
  url = {http://link.springer.com/content/pdf/10.1007/978-3-642-19050-6_17.pdf},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QSX4XB9S/chp%3A10.1007%2F978-3-642-19050-6_17.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{cravero_multidimensional_2014,
  title = {Multidimensional {{Design Paradigms}} for {{Data Warehouses}}: {{A Systematic Mapping Study}}},
  shorttitle = {Multidimensional {{Design Paradigms}} for {{Data Warehouses}}},
  author = {Cravero, Ania and Sepúlveda, Samuel},
  date = {2014},
  journaltitle = {Journal of Software Engineering and Applications},
  volume = {07},
  pages = {53--61},
  issn = {1945-3116, 1945-3124},
  doi = {10.4236/jsea.2014.71006},
  url = {http://www.scirp.org/journal/PaperDownload.aspx?DOI=10.4236/jsea.2014.71006},
  urldate = {2015-10-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AGA68JJG/JSEA_2014011711303742.pdf},
  number = {01}
}

@inproceedings{croll_supply_2011,
  title = {Supply Chain Risk Management-{{Understanding}} Vulnerabilities in Code You Buy, Build, or Integrate},
  booktitle = {Systems {{Conference}} ({{SysCon}}), 2011 {{IEEE International}}},
  author = {Croll, Paul R.},
  date = {2011},
  pages = {194--200},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5929123},
  urldate = {2015-01-15},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MQXTGFXC/201203-Croll.pdf},
  keywords = {code quality,open source,Risk management}
}

@inproceedings{crowston_effective_2004,
  title = {Effective Work Practices for Software Engineering: Free/Libre Open Source Software Development},
  shorttitle = {Effective Work Practices for Software Engineering},
  booktitle = {Proceedings of the 2004 {{ACM}} Workshop on {{Interdisciplinary}} Software Engineering Research},
  author = {Crowston, Kevin and Annabi, Hala and Howison, James and Masango, Chengetai},
  date = {2004},
  pages = {18--26},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1030003},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XKFEJIXZ/p18-crowston.pdf}
}

@article{crowston_free_2012,
  title = {Free {{Libre}} Open-Source Software Development: {{What}} We Know and What We Do Not Know},
  shorttitle = {Free/{{Libre}} Open-Source Software Development},
  author = {Crowston, Kevin and Wei, Kangning and Howison, James and Wiggins, Andrea},
  date = {2012-02-01},
  journaltitle = {ACM Computing Surveys},
  volume = {44},
  pages = {1--35},
  issn = {03600300},
  doi = {10.1145/2089125.2089127},
  url = {http://dl.acm.org/citation.cfm?doid=2089125.2089127},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GEDV6NDM/a7-crowston.pdf},
  keywords = {Mintamunka,secondary research,systematic review},
  langid = {english},
  number = {2}
}

@article{crowston_hierarchy_2006,
  title = {Hierarchy and Centralization in Free and Open Source Software Team Communications},
  author = {Crowston, Kevin and Howison, James},
  date = {2006},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {18},
  pages = {65--85},
  url = {http://link.springer.com/article/10.1007/s12130-006-1004-8},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8H5WU46F/Hierarchy and centralization in free and open source software team communications.pdf},
  keywords = {community,open source},
  number = {4}
}

@incollection{crowston_lessons_2011,
  title = {Lessons from Volunteering and Free/Libre Open Source Software Development for the Future of Work},
  booktitle = {Researching the {{Future}} in {{Information Systems}}},
  author = {Crowston, Kevin},
  date = {2011},
  pages = {215--229},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21364-9_14},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7UBV3HHE/chp%3A10.1007%2F978-3-642-21364-9_14.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9BW929K7/chp%3A10.1007%2F978-3-642-21364-9_14.pdf},
  keywords = {secondary research}
}

@incollection{crowston_open_2016,
  title = {Open {{Source Technology Development}}},
  booktitle = {Handbook of {{Science}} and {{Technology Convergence}}},
  author = {Crowston, Kevin},
  editor = {Bainbridge, William Sims and Roco, Mihail C.},
  date = {2016},
  pages = {475--486},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-07052-0_29},
  url = {https://doi.org/10.1007/978-3-319-07052-0_29},
  urldate = {2020-04-21},
  abstract = {In this chapter, we introduce the practices of free/libre open source software (FLOSS) development as an instance of the convergence of technological affordances with novel social practices to create a novel mode of work. We then consider how FLOSS software might be used for various scientific applications, perhaps leading to a convergence of current distinct disciplines. We conclude by considering how the technologies and practices of FLOSS development might be applied to other settings, thus leading to further convergence of those settings.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6PHM2RC2/Crowston - 2016 - Open Source Technology Development.pdf},
  isbn = {978-3-319-07052-0},
  keywords = {Free/libre open source software},
  langid = {english}
}

@inproceedings{cuellar_open_2005,
  title = {Open Source License Alternatives for Software Applications: Is It a Solution to Stop Software Piracy?},
  shorttitle = {Open Source License Alternatives for Software Applications},
  booktitle = {Proceedings of the 43rd Annual {{Southeast}} Regional Conference-{{Volume}} 2},
  author = {Cuéllar, Luis E.},
  date = {2005},
  pages = {269--274},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1167314},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9TBHP9ZU/p269-cuellar.pdf},
  keywords = {_SMS_untagged,history,nyílt forrás,open source}
}

@inproceedings{cuevas_is_2010,
  title = {Is Content Publishing in {{BitTorrent}} Altruistic or Profit-Driven?},
  booktitle = {Proceedings of the 6th {{International COnference}}},
  author = {Cuevas, R. and Kryczka, M. and Cuevas, A. and Kaune, S. and Guerrero, C. and Rejaie, R.},
  date = {2010},
  pages = {11},
  url = {http://dl.acm.org/citation.cfm?id=1921183},
  urldate = {2012-12-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H9CAJZNA/Is content publishing in bittorrent altruistic.pdf}
}

@inproceedings{cui_investigating_2019,
  title = {Investigating the {{Impact}} of {{Multiple Dependency Structures}} on {{Software Defects}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Cui, Di and Liu, Ting and Cai, Yuanfang and Zheng, Qinghua and Feng, Qiong and Jin, Wuxia and Guo, Jiaqi and Qu, Yu},
  date = {2019-05},
  pages = {584--595},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00069},
  abstract = {Over the past decades, numerous approaches were proposed to help practitioner to predict or locate defective files. These techniques often use syntactic dependency, history co-change relation, or semantic similarity. The problem is that, it remains unclear whether these different dependency relations will present similar accuracy in terms of defect prediction and localization. In this paper, we present our systematic investigation of this question from the perspective of software architecture. Considering files involved in each dependency type as an individual design space, we model such a design space using one DRSpace. We derived 3 DRSpaces for each of the 117 Apache open source projects, with 643,079 revision commits and 101,364 bug reports in total, and calculated their interactions with defective files. The experiment results are surprising: the three dependency types present significantly different architectural views, and their interactions with defective files are also drastically different. Intuitively, they play completely different roles when used for defect prediction/localization. The good news is that the combination of these structures has the potential to improve the accuracy of defect prediction/localization. In summary, our work provides a new perspective regarding to which type(s) of relations should be used for the task of defect prediction/localization. These quantitative and qualitative results also advance our knowledge of the relationship between software quality and architectural views formed using different dependency types.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9FIAP9KA/Cui et al. - 2019 - Investigating the Impact of Multiple Dependency St.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HR7EKPHR/8812092.html},
  keywords = {Apache open source projects,Computer bugs,defective files,dependency relations,dependency type,design space,DRSpace,History,history co-change relation,multiple dependency structures,Prediction algorithms,program debugging,public domain software,Reverse engineering,semantic similarity,Semantics,Software,software architecture,software defects,software maintenance,Software Maintenance,software quality,Software Quality,Software Structure,syntactic dependency,Syntactics}
}

@book{cusumano_business_2004,
  title = {The Business of Software: What Every Manager, Programmer, and Entrepreneur Must Know to Thrive and Survive in Good Times and Bad},
  shorttitle = {The Business of Software},
  author = {Cusumano, Michael A.},
  date = {2004},
  publisher = {{Free Press}},
  location = {{New York}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V555J7VS/chp%3A10.1007%2F978-0-387-09684-1_34.pdf},
  isbn = {978-0-7432-1580-0},
  keywords = {Computer software industry,Management},
  pagetotal = {334}
}

@inproceedings{czosseck_arms_2011,
  title = {On the Arms Race around Botnets-{{Setting}} up and Taking down Botnets},
  booktitle = {Cyber {{Conflict}} ({{ICCC}}), 2011 3rd {{International Conference}} On},
  author = {Czosseck, Christian and Klein, Gabriel and Leder, Felix},
  date = {2011},
  pages = {1--14},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5954704},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W6GF9C9Q/05954704.pdf}
}

@article{da_silva_replication_2012,
  title = {Replication of Empirical Studies in Software Engineering Research: A Systematic Mapping Study},
  shorttitle = {Replication of Empirical Studies in Software Engineering Research},
  author = {da Silva, Fabio Q. B. and Suassuna, Marcos and França, A. César C. and Grubb, Alicia M. and Gouveia, Tatiana B. and Monteiro, Cleviton V. F. and dos Santos, Igor Ebrahim},
  date = {2012-09-01},
  journaltitle = {Empirical Software Engineering},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-012-9227-7},
  url = {http://link.springer.com/10.1007/s10664-012-9227-7},
  urldate = {2015-10-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/82M2G6GS/art%3A10.1007%2Fs10664-012-9227-7.pdf},
  langid = {english},
  options = {useprefix=true}
}

@article{dahlander_man_2006,
  title = {A Man on the inside: {{Unlocking}} Communities as Complementary Assets},
  shorttitle = {A Man on the Inside},
  author = {Dahlander, Linus and Wallin, Martin W.},
  date = {2006-10},
  journaltitle = {Research Policy},
  volume = {35},
  pages = {1243--1259},
  issn = {00487333},
  doi = {10.1016/j.respol.2006.09.011},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0048733306001387},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NIN5U32A/1-s2.0-S0048733306001387-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {8}
}

@inproceedings{dai_configuration_2010,
  title = {Configuration {{Fuzzing}} for {{Software Vulnerability Detection}}},
  author = {Dai, Huning and Murphy, Christian and Kaiser, Gail},
  date = {2010-02},
  pages = {525--530},
  publisher = {{IEEE}},
  doi = {10.1109/ARES.2010.22},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5438043},
  urldate = {2015-08-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SNW749PU/05438043.pdf},
  isbn = {978-1-4244-5879-0}
}

@incollection{damiani_diffusion_2015,
  title = {The {{Diffusion}} of {{Pastebin Tools}} to {{Enhance Communication}} in {{FLOSS Mailing Lists}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Squire, Megan and Smith, Amber K.},
  editor = {Damiani, Ernesto and Frati, Fulvio and Riehle, Dirk and Wasserman, Anthony I.},
  date = {2015},
  volume = {451},
  pages = {45--57},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-17837-0_5},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3KAHWAP5/chp%3A10.1007%2F978-3-319-17837-0_5.pdf},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{damiani_examining_2015,
  title = {Examining {{Usability Work}} and {{Culture}} in {{OSS}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Rajanen, Mikko and Iivari, Netta},
  editor = {Damiani, Ernesto and Frati, Fulvio and Riehle, Dirk and Wasserman, Anthony I.},
  date = {2015},
  volume = {451},
  pages = {58--67},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-17837-0_6},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4DH9SJGP/chp%3A10.1007%2F978-3-319-17837-0_6.pdf},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  keywords = {community,development,nyílt forrás}
}

@incollection{damiani_long-term_2009,
  title = {Long-Term {{OSS}} Security Certifications: {{An Outlook}}},
  shorttitle = {Long-Term {{OSS}} Security Certifications},
  booktitle = {Open {{Source Systems Security Certification}}},
  author = {Damiani, Ernesto and Ardagna, Claudio Agostino and Ioini, Nabil El},
  date = {2009},
  pages = {1--11},
  publisher = {{Springer US}},
  doi = {10.1007/978-0-387-77324-7_9},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-77324-7_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I42KAFQR/Damiani és mtsai. - 2009 - Long-term OSS security certifications An Outlook.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G4BIDB54/978-0-387-77324-7_9.html},
  isbn = {978-0-387-77323-0 978-0-387-77324-7},
  keywords = {_SMS_untagged,Data Encryption,Data Structures; Cryptology and Information Theory,Information Systems Applications (incl.Internet),nyílt forrás,open source,Programming Languages; Compilers; Interpreters,security,security certification,Software Engineering/Programming and Operating Systems,Systems and Data Security},
  langid = {english}
}

@book{damiani_open_2009,
  title = {Open Source Systems Security Certification},
  author = {Damiani, Ernesto and Ardagna, Claudio Agostino and Ioini, Nabil El},
  date = {2009},
  publisher = {{Springer}},
  location = {{New York}},
  abstract = {This title discusses security certification standards and establishes the need to certify open source tools and applications. It is suitable for researchers and advanced-level students in computer science.--},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JB3X2GP5/bok%3A978-0-387-77324-7.pdf},
  isbn = {978-0-387-77323-0},
  keywords = {Computer security,Forrás1,Online-Publikation,Open Source,Open source software,Previous Work},
  pagetotal = {202}
}

@book{damiani_open_2015,
  title = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  shorttitle = {Open {{Source Systems}}},
  editor = {Damiani, Ernesto and Frati, Fulvio and Riehle, Dirk and Wasserman, Anthony I.},
  date = {2015},
  volume = {451},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-17837-0},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QEXVCWRB/chp%3A10.1007%2F978-3-319-17837-0_15.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SJZVJE8Q/chp%3A10.1007%2F978-3-319-17837-0_2.pdf},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  keywords = {Copyright licenses,license,open source,secondary research},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@incollection{damiani_oss_2009,
  title = {{{OSS}} Security Certification},
  booktitle = {Open {{Source Systems Security Certification}}},
  author = {Damiani, Ernesto and Ardagna, Claudio Agostino and El Ioini, Nabil},
  date = {2009},
  pages = {1--36},
  publisher = {{Springer}},
  url = {http://link.springer.com/content/pdf/10.1007/978-0-387-77324-7_5.pdf},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6I562D75/chp%3A10.1007%2F978-0-387-77324-7_5.pdf},
  keywords = {_SMS_untagged,CC,nyílt forrás,open source,security,security certification,security testing}
}

@incollection{damiani_qualitative_2015,
  title = {A {{Qualitative Study}} on the {{Adoption}} of {{Open Source Software}} in {{Information Technology Outsourcing Organizations}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Ramanathan, Lakshmanan and Iyer, Sundaresan Krishnan},
  editor = {Damiani, Ernesto and Frati, Fulvio and Riehle, Dirk and Wasserman, Anthony I.},
  date = {2015},
  volume = {451},
  pages = {103--113},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-17837-0_10},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IAWPDI7E/chp%3A10.1007%2F978-3-319-17837-0_10.pdf},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{damiani_surveying_2015,
  title = {Surveying the {{Adoption}} of {{FLOSS}} by {{Public Administration Local Organizations}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Tosi, Davide and Lavazza, Luigi and Morasca, Sandro and Chiappa, Marco},
  editor = {Damiani, Ernesto and Frati, Fulvio and Riehle, Dirk and Wasserman, Anthony I.},
  date = {2015},
  volume = {451},
  pages = {114--123},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-17837-0_11},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3I9T7798/chp%3A10.1007%2F978-3-319-17837-0_11.pdf},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  keywords = {adoption,nyílt forrás}
}

@article{damien_challet_microscopic_2005,
  title = {Microscopic Model of Software Bug Dynamics: Closed Source versus Open Source},
  author = {{Damien Challet} and {Yann Le Du}},
  date = {2005},
  journaltitle = {International Journal of Reliability, Quality and Safety Engineering},
  volume = {Vol. 12},
  pages = {521--534},
  issn = {1793-6446},
  abstract = {We introduce a simple microscopic description of software bug dynamics where users, programmers and a maintainer interact through a given program, with a particular emphasis on bug creation, detection and fixing. When the program is written from scratch, the first phase of development is characterized by a fast decline of the number of bugs, followed by a slow phase where most bugs have been fixed, hence, are hard to find. Releasing immediately bug fixes speeds up the debugging process, which substantiates bazaar open-source methodology. We provide a mathematical analysis that supports our numerical simulations. Finally, we apply our model to Linux history and determine the existence of a lower bound to the quality of its programmers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WNJKZCHQ/0306511v5.pdf},
  issue = {No. 06}
}

@article{daniel_sourcing_2018,
  title = {Sourcing Knowledge in Open Source Software Projects: {{The}} Impacts of Internal and External Social Capital on Project Success},
  shorttitle = {Sourcing Knowledge in Open Source Software Projects},
  author = {Daniel, Sherae and Midha, Vishal and Bhattacherhjee, Anol and Singh, Shivendu Pratap},
  date = {2018-09-01},
  journaltitle = {The Journal of Strategic Information Systems},
  shortjournal = {The Journal of Strategic Information Systems},
  volume = {27},
  pages = {237--256},
  issn = {0963-8687},
  doi = {10.1016/j.jsis.2018.04.002},
  url = {http://www.sciencedirect.com/science/article/pii/S0963868716301251},
  urldate = {2020-04-22},
  abstract = {Open source software (OSS) development has become an essential element of IT strategy: many firms seek OSS as a strategic means of unlocking the business value in external developer communities and internal knowledge sources. However, integrating external and internal sources of social capital is challenging and identifying appropriate integration strategies is crucial for the success of such endeavors. This study examines the simultaneous effects of external and internal sources of social capital, in the form of participant and project differences, and examines how they interact to influence OSS project success. We propose a taxonomy of participant differences (language, role, and contribution) and project differences (development environment and connectedness) and postulate their main and moderating effects on project success. Using a four-year panel data set of 329 SourceForge projects, we show that development environment difference has a curvilinear relationship with success and that connectedness reduces the positive impact of role and contribution diversity on project success. We also show that when development environment difference is moderate, the impact of role diversity is the most positive. We present the implications of these findings for theory and practice.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BJDW2XMB/Daniel et al. - 2018 - Sourcing knowledge in open source software project.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RF5GK7P5/S0963868716301251.html},
  keywords = {Connectedness,Development difference,Diversity,Open source projects,Participant difference,Success},
  langid = {english},
  number = {3}
}

@misc{danish_board_of_technology_open-source_2002,
  title = {Open-Source Software in e-Government},
  author = {{DANISH BOARD OF TECHNOLOGY}},
  date = {2002},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/STJ9T74W/p03_opensource_paper_english.pdf}
}

@incollection{dannen_using_2011,
  title = {Using {{Open Source Tools}} and {{Other Goodies}}},
  booktitle = {Beginning {{iOS Apps}} with {{Facebook}} and {{Twitter APIs}}},
  author = {Dannen, Chris and White, Christopher},
  date = {2011},
  pages = {179--209},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4302-3543-9_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5Z5RXUD6/chp%3A10.1007%2F978-1-4302-3543-9_10.pdf}
}

@online{darpa_crowd_2014,
  title = {{{CROWD SOURCED FORMAL VERIFICATION}} ({{CSFV}})},
  author = {{DARPA}},
  date = {2014},
  url = {http://www.darpa.mil/Our_Work/I2O/Programs/Crowd_Sourced_Formal_Verification_(CSFV).aspx},
  urldate = {2014-06-16}
}

@online{darrel_etherington_canonical_2013,
  title = {Canonical {{Is Building A Standardized}}, {{Open}}-{{Source OS Specific To China}}},
  author = {{Darrel Etherington}},
  date = {2013},
  journaltitle = {TechCrunch},
  url = {http://techcrunch.com/2013/03/22/canonical-is-building-a-standardized-open-source-os-specific-to-china/},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7CSGDNTU/Ubuntu_china.pdf}
}

@inproceedings{dashevskyi_security_2016,
  ids = {dashevskyi\_security\_2016-1},
  title = {On the {{Security Cost}} of {{Using}} a {{Free}} and {{Open Source Component}} in a {{Proprietary Product}}},
  booktitle = {Engineering {{Secure Software}} and {{Systems}}},
  author = {Dashevskyi, Stanislav and Brucker, Achim D. and Massacci, Fabio},
  date = {2016-04-06},
  pages = {190--206},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-30806-7_12},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-30806-7_12},
  urldate = {2018-08-15},
  abstract = {The work presented in this paper is motivated by the need to estimate the security effort of consuming Free and Open Source Software (FOSS) components within a proprietary software supply chain of a large European software vendor. To this extent we have identified three different cost models: centralized (the company checks each component and propagates changes to the different product groups), distributed (each product group is in charge of evaluating and fixing its consumed FOSS components), and hybrid (only the least used components are checked individually by each development team). We investigated publicly available factors (e. g., development activity such as commits, code size, or fraction of code size in different programming languages) to identify which one has the major impact on the security effort of using a FOSS component in a larger software product.},
  eventtitle = {International {{Symposium}} on {{Engineering Secure Software}} and {{Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D4ID7JLF/Dashevskyi et al. - 2016 - On the Security Cost of Using a Free and Open Sour.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P5WGZVBN/Dashevskyi et al. - 2016 - On the Security Cost of Using a Free and Open Sour.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JTZIPA2H/978-3-319-30806-7_12.html},
  isbn = {978-3-319-30805-0 978-3-319-30806-7},
  keywords = {Free and open source software usage,Free and open source software vulnerabilities,Security maintenance costs},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@book{datri_information_2010,
  title = {Information {{Systems}}: {{People}}, {{Organizations}}, {{Institutions}}, and {{Technologies}}},
  shorttitle = {Information {{Systems}}},
  editor = {D'Atri, Alessandro and Saccà, Domenico},
  date = {2010},
  publisher = {{Physica-Verlag HD}},
  location = {{Heidelberg}},
  url = {http://www.springerlink.com/index/10.1007/978-3-7908-2148-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PXBHFNKH/chp%3A10.1007%2F978-3-7908-2148-2_17.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TUNGEQU9/chp%3A10.1007%2F978-3-7908-2148-2_14.pdf},
  isbn = {978-3-7908-2147-5 978-3-7908-2148-2},
  langid = {english}
}

@inproceedings{datta_evolutionary_2019,
  title = {Evolutionary {{Trends}} in the {{Collaborative Review Process}} of a {{Large Software System}}},
  booktitle = {Proceedings of the 12th {{Innovations}} on {{Software Engineering Conference}} (Formerly Known as {{India Software Engineering Conference}})},
  author = {Datta, Subhajit and Sarkar, Poulami},
  date = {2019-02-14},
  pages = {1--5},
  publisher = {{Association for Computing Machinery}},
  location = {{Pune, India}},
  doi = {10.1145/3299771.3299792},
  url = {https://doi.org/10.1145/3299771.3299792},
  urldate = {2020-04-22},
  abstract = {In this paper, we study the evolutionary trends in the collaborative review process of a large open source software system. As expected, the number of reviews, the number of reviews commented on, as well as the number of reviewers, and the interactions between them show increasing trends over time. But unexpectedly, levels of clustering between developers in their interaction networks show a decreasing trend, even as connections between them increase. In the context of our study, clustering is an indicator of developer collaboration, whereas connection points to how intensely developers work together. Thus the trends we observe can inform how developer interactions become concentrated around specific units of work as the project progresses. The dichotomy between the simultaneous increase in connection and decrease in clustering also points to the interplay between collective and individual efforts in the review process, and the distinct nature of peer review in the software development life cycle.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9U8MR8U5/Datta and Sarkar - 2019 - Evolutionary Trends in the Collaborative Review Pr.pdf},
  isbn = {978-1-4503-6215-3},
  keywords = {clustering,connection,network science,Peer review},
  series = {{{ISEC}}'19}
}

@incollection{datta_how_2014,
  title = {How {{Many Eyeballs Does}} a {{Bug Need}}? {{An Empirical Validation}} of {{Linus}}’ {{Law}}},
  shorttitle = {How {{Many Eyeballs Does}} a {{Bug Need}}?},
  booktitle = {Agile {{Processes}} in {{Software Engineering}} and {{Extreme Programming}}},
  author = {Datta, Subhajit and Sarkar, Proshanta and Das, Sutirtha and Sreshtha, Sonu and Lade, Prasanth and Majumder, Subhashis},
  date = {2014},
  pages = {242--250},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-06862-6_17},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5TNAD8F6/chp%3A10.1007%2F978-3-319-06862-6_17.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{dauber_poster_2018,
  title = {Poster: {{Git Blame Who}}?: {{Stylistic Authorship Attribution}} of {{Small}}, {{Incomplete Source Code Fragments}}},
  shorttitle = {Poster},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  author = {Dauber, Edwin and Caliskan, Aylin and Harang, Richard and Greenstadt, Rachel},
  date = {2018-05},
  pages = {356--357},
  issn = {2574-1934},
  abstract = {Program authorship attribution has implications for the privacy of programmers who wish to contribute code anonymously. While previous work has shown that complete files that are individually authored can be attributed, these efforts have focused on ideal data sets such as the Google Code Jam data. We explore the problem of attribution "in the wild" examining source code obtained from open source version control systems, and investigate if and how such contributions can be attributed to their authors, either individually or on a per-account basis. In this work we show that accounts belonging to open source contributors containing short, incomplete, and typically uncompilable fragments can be effectively attributed.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R86MUNRT/Dauber et al. - 2018 - Poster Git Blame Who Stylistic Authorship Attri.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P7NQ8A7P/8449576.html},
  keywords = {Calibration,code anonymously,Collaboration,complete files,configuration management,data privacy,Feature extraction,Forestry,Google,Google Code Jam data,ideal data sets,incomplete source Code,machine learning,open source version control systems,program authorship attribution,public domain software,Security,Source code authorship attribution,source coding,source contributors,stylistic authorship attribution,stylometry,typically uncompilable fragments,Vegetation,wild examining source code}
}

@online{david_gewirtz_for_2013,
  title = {For {{China}}, Hacking May Be All about {{Sun Tzu}} and {{World War III}}},
  author = {{David Gewirtz}},
  date = {2013},
  journaltitle = {ZDNet},
  url = {http://www.zdnet.com/for-china-hacking-may-be-all-about-sun-tzu-and-world-war-iii-7000015988/},
  urldate = {2013-05-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3II6S6V3/hdlrjaew.html}
}

@article{dawood_mapping_2019,
  title = {Mapping and {{Analysis}} of {{Open Source Software}} ({{OSS}}) {{Usability}} for {{Sustainable OSS Product}}},
  author = {Dawood, Kareem Abbas and Sharif, Khaironi Yatim and Zaidan, A. A. and Abd Ghani, Abdul Azim and Zulzalil, Hazura Binti and Zaidan, B. B.},
  date = {2019},
  journaltitle = {IEEE Access},
  volume = {7},
  pages = {65913--65933},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2019.2914368},
  abstract = {The increase in the number of open source software (OSS) users have drawn attention to improving usability. Usability is a clear concept that encompassing both task and user characteristics as well as functionality. Usability is an essential factor that affects user acceptance and OSS sustainability, which is considered as the key to the success of the OSS. To some extent, usability is one concern of the larger issue of system acceptability and sustainability. Therefore, usability is an important factor that needs to be considered since the software that is not usable is not going to be sustainable. The objective of this paper is to review researchers' efforts to improve, investigate, and evaluate the usability factor that may affect the OSS acceptability and sustainability and map the research scenery from the articles into a comprehensible structured taxonomy, which would help the researchers to identify different research gaps of this field. A survey of the usability in OSS conducted and 6033 studies identified by a search in four scholarly databases using a query that includes the keywords (usability or learnability or efficiency or satisfaction) and (open source software or OSS). A total of 46 studies are selected. By manually searching in ACM, Springer, and Google Scholar five other studies identified, and thus a total of 51 studies were the final set that includes in this paper. Based on research topics, a taxonomy created and divided into four principal categories which improve OSS usability, analyze OSS usability, evaluate OSS usability, and select and adopt OSS. A comprehensive overview and synthesis of these categories are presented as well. This paper contributes to identifying the possible opportunities and gaps for enabling the participation of interested researchers in this research area. And give possibilities for extending the use of usability research and practices to create more sustainable software. Also, helps in selecting suitable OSS among the alternatives.},
  eventtitle = {{{IEEE Access}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SB5RY5PB/Dawood et al. - 2019 - Mapping and Analysis of Open Source Software (OSS).pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BT3NAH6Z/8704220.html},
  keywords = {Computer bugs,database management systems,Databases,efficiency,learnability,open source software,Open source software,open source software usability,open source software users,OSS acceptability,OSS sustainability,OSS usability,public domain software,query processing,satisfaction,software maintenance,sustainability,Sustainable development,sustainable OSS product,sustainable software,Taxonomy,Usability,usability research}
}

@inproceedings{dawood_system_2017,
  title = {System Architecture for a Distributed Digital Signage System in Developing Countries: {{Leveraging}} Open Hardware, Open Source Software, and Open Standards},
  shorttitle = {System Architecture for a Distributed Digital Signage System in Developing Countries},
  booktitle = {2017 {{Second International Conference}} on {{Informatics}} and {{Computing}} ({{ICIC}})},
  author = {Dawood, Rahmad and Fahmi, Fadhlul and Syaryadhi, Mohd.},
  date = {2017-11},
  pages = {1--5},
  doi = {10.1109/IAC.2017.8280577},
  abstract = {This paper describes the architecture of a distributed digital signage system that is suitable to be deployed in a developing country setting. The design of the system, as much as possible, leverages open hardware, open source software, and open standards in order to reduce the impact from various technical, environmental, and cultural challenges that comparable deployments in developing countries have exhibited. The system comprises of three software elements: a content-management system constructed by repurposing an FTP server, a local content manager coded using a simple scripting language, and a multimedia player that utilizes an ordinary browser. The system is also made up of three major hardware nodes: a server built from a standard desktop computer, an access point procured locally, and a digital signage unit that is constructed from a standard LCD television connected to a single-board computer.},
  eventtitle = {2017 {{Second International Conference}} on {{Informatics}} and {{Computing}} ({{ICIC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DG2BFSTR/Dawood et al. - 2017 - System architecture for a distributed digital sign.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X5W3D32Z/8280577.html},
  keywords = {access point,authoring languages,Browsers,Computer architecture,content management,content-management system,desktop computer,Digital Signage,distributed digital signage system,FTP server,Hardware,ICT4D,LCD television,liquid crystal displays,local content manager,marketing data processing,Multimedia communication,multimedia player,open hardware,open source software,open standards,public domain software,scripting language,server,Servers,single-board computer,Software,Standards,system architecture,Systems Architecture}
}

@inproceedings{de_alwis_why_2009,
  title = {Why Are Software Projects Moving from Centralized to Decentralized Version Control Systems?},
  booktitle = {Cooperative and {{Human Aspects}} on {{Software Engineering}}, 2009. {{CHASE}}'09. {{ICSE Workshop}} On},
  author = {De Alwis, Brian and Sillito, Jonathan},
  date = {2009},
  pages = {36--39},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5071408},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ADJ9BVJ8/chase-2009-dealwis.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D8MBKZMK/05071408.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{de_bassi_measuring_2018,
  title = {Measuring {{Developers}}' {{Contribution}} in {{Source Code}} Using {{Quality Metrics}}},
  booktitle = {2018 {{IEEE}} 22nd {{International Conference}} on {{Computer Supported Cooperative Work}} in {{Design}} (({{CSCWD}}))},
  author = {de Bassi, Patricia Rücker and Wanderley, Gregory Moro Puppi and Banali, Pedro Henrique and Paraiso, Emerson Cabrera},
  date = {2018-05},
  pages = {39--44},
  doi = {10.1109/CSCWD.2018.8465320},
  abstract = {People involved in software development seek better ways of developing quality software. As software development is a collaborative activity dependent on technology and performed by group of people, the quality can be directly linked to the degree of collaboration and commitment of the development team. This research aims to identify and analyze software quality metrics that can measure software development team members' participation regarding their contribution in the project source code. Analyzing such information can contribute with software engineering project managers to conduct and better organize project development teams. To achieve this goal, we defined a set of quality metrics, applied them to open source code and analyzed them in other to evaluate members' contribution. Results show that it is possible to determine whether the team member contribution increase, decrease or had no influence on source code quality.},
  eventtitle = {2018 {{IEEE}} 22nd {{International Conference}} on {{Computer Supported Cooperative Work}} in {{Design}} (({{CSCWD}}))},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5BA5ISPE/de Bassi et al. - 2018 - Measuring Developers' Contribution in Source Code .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QAM393PZ/8465320.html},
  keywords = {Collaboration,collaborative activity,Collaborative Software Development,Complexity theory,Developer Contribution,open source code,Open Source Projects,project development teams,project management,project source code,Quality Metrics,software development management,software development team members participation,software engineering project managers,software metrics,Software metrics,software quality,Software quality,software quality metrics,source code quality,team member contribution,team working},
  options = {useprefix=true}
}

@inproceedings{de_carne_de_carnavalet_challenges_2014,
  title = {Challenges and Implications of Verifiable Builds for Security-Critical Open-Source Software},
  author = {de Carné de Carnavalet, Xavier and Mannan, Mohammad},
  date = {2014},
  pages = {16--25},
  publisher = {{ACM Press}},
  doi = {10.1145/2664243.2664288},
  url = {http://dl.acm.org/citation.cfm?doid=2664243.2664288},
  urldate = {2015-07-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6PS7QXKZ/verifiable-build-acsac2014.pdf},
  isbn = {978-1-4503-3005-3},
  langid = {english},
  options = {useprefix=true}
}

@incollection{de_groot_call_2006,
  title = {Call for Quality: {{Open}} Source Software Quality Observation},
  shorttitle = {Call for Quality},
  booktitle = {Open {{Source Systems}}},
  author = {De Groot, Adriaan and Kügler, Sebastian and Adams, Paul J. and Gousios, Giorgos},
  date = {2006},
  pages = {57--62},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_6},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RBZZCGV5/chp%3A10.1007%2F0-387-34226-5_6.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{de_joode_rethinking_2006,
  title = {Rethinking Free, Libre and Open Source Software},
  author = {de Joode, Ruben van Wendel and Lin, Yuwei and David, Shay},
  date = {2006},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {18},
  pages = {5--16},
  url = {http://link.springer.com/article/10.1007/s12130-006-1001-y},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ICMMXMSH/art%3A10.1007%2Fs12130-006-1001-y.pdf},
  number = {4},
  options = {useprefix=true}
}

@article{de_laat_trusting_2005,
  title = {Trusting {{Virtual Trust}}},
  author = {de Laat, Paul B.},
  date = {2005-09},
  journaltitle = {Ethics and Information Technology},
  volume = {7},
  pages = {167--180},
  issn = {1388-1957, 1572-8439},
  doi = {10.1007/s10676-006-0002-6},
  url = {http://link.springer.com/10.1007/s10676-006-0002-6},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DH4D4946/art%3A10.1007%2Fs10676-006-0002-6.pdf},
  keywords = {_SMS_untagged,internet,nyílt forrás,social network,trust},
  langid = {english},
  number = {3},
  options = {useprefix=true}
}

@incollection{de_pablos_adoption_2010,
  title = {The {{Adoption}} of {{Open Source Systems}} in {{Public Administrations}}},
  booktitle = {{{ENTERprise Information Systems}}},
  author = {de Pablos, Carmen and López, David},
  date = {2010},
  pages = {138--146},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-16402-6_15},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C7RITDUJ/chp%3A10.1007%2F978-3-642-16402-6_15.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D7RVX5WW/The Adoption of Open Source Systems in Public Administrations.pdf},
  keywords = {_SMS_untagged,Forrás2,grounded theory,nyílt forrás,open source},
  options = {useprefix=true}
}

@inproceedings{decan_empirical_2017,
  title = {An Empirical Comparison of Dependency Issues in {{OSS}} Packaging Ecosystems},
  booktitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Decan, Alexandre and Mens, Tom and Claes, Maëlick},
  date = {2017-02},
  pages = {2--12},
  doi = {10.1109/SANER.2017.7884604},
  abstract = {Nearly every popular programming language comes with one or more open source software packaging ecosystem(s), containing a large collection of interdependent software packages developed in that programming language. Such packaging ecosystems are extremely useful for their respective software development community. We present an empirical analysis of how the dependency graphs of three large packaging ecosystems (npm, CRAN and RubyGems) evolve over time. We study how the existing package dependencies impact the resilience of the three ecosystems over time and to which extent these ecosystems suffer from issues related to package dependency updates. We analyse specific solutions that each ecosystem has put into place and argue that none of these solutions is perfect, motivating the need for better tools to deal with package dependency update problems.},
  eventtitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/88TZEAL3/Decan et al. - 2017 - An empirical comparison of dependency issues in OS.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KQBL5H4Q/7884604.html},
  keywords = {Computer languages,CRAN,Data mining,dependency graphs,Ecosystems,interdependent software packages,Metadata,npm,Open source software,open source software packaging ecosystems,OSS packaging ecosystems,package dependency management,Packaging,programming language,programming languages,public domain software,RubyGems,software development community,software distribution,software ecosystem,software engineering,software evolution,software package dependency updates,software packages,software repository mining}
}

@article{decan_gap_2020,
  title = {{{GAP}}: {{Forecasting}} Commit Activity in Git Projects},
  shorttitle = {{{GAP}}},
  author = {Decan, Alexandre and Constantinou, Eleni and Mens, Tom and Rocha, Henrique},
  date = {2020-07-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {165},
  pages = {110573},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2020.110573},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121220300546},
  urldate = {2020-04-22},
  abstract = {Abandonment of active developers poses a significant risk for many open source software projects. This risk can be reduced by forecasting the future activity of contributors involved in such projects. Focusing on the commit activity of individuals involved in git repositories, this paper proposes a practicable probabilistic forecasting model based on the statistical technique of survival analysis. The model is empirically validated on a wide variety of projects accounting for 7528 git repositories and 5947 active contributors. We found that a model based on the last 20 observed days of commit activity per contributor provides the best concordance. We also found that the predictions provided by the model are generally close to actual observations, with slight underestimations for low probability predictions and slight overestimations for higher probability predictions. This model is implemented as part of an open source tool, called GAP, that predicts future commit activity.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NRSDEHRI/Decan et al. - 2020 - GAP Forecasting commit activity in git projects.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AMCCEVCZ/S0164121220300546.html},
  keywords = {Commit activity,Developer abandonment,Distributed software development,Git,Prediction model},
  langid = {english}
}

@inproceedings{decan_impact_2018,
  title = {On the Impact of Security Vulnerabilities in the Npm Package Dependency Network},
  booktitle = {Proceedings of the 15th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Decan, Alexandre and Mens, Tom and Constantinou, Eleni},
  date = {2018-05-28},
  pages = {181--191},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3196398.3196401},
  url = {https://doi.org/10.1145/3196398.3196401},
  urldate = {2020-04-22},
  abstract = {Security vulnerabilities are among the most pressing problems in open source software package libraries. It may take a long time to discover and fix vulnerabilities in packages. In addition, vulnerabilities may propagate to dependent packages, making them vulnerable too. This paper presents an empirical study of nearly 400 security reports over a 6-year period in the npm dependency network containing over 610k JavaScript packages. Taking into account the severity of vulnerabilities, we analyse how and when these vulnerabilities are discovered and fixed, and to which extent they affect other packages in the packaging ecosystem in presence of dependency constraints. We report our findings and provide guidelines for package maintainers and tool developers to improve the process of dealing with security issues.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/63GFQWXT/Decan et al. - 2018 - On the impact of security vulnerabilities in the n.pdf},
  isbn = {978-1-4503-5716-6},
  keywords = {dependency network,security vulnerability,semantic versioning,software ecosystem,software repository mining},
  series = {{{MSR}} '18}
}

@incollection{del_bianco_investigation_2010,
  title = {An {{Investigation}} of the Users’ Perception of {{OSS}} Quality},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Del Bianco, Vieri and Lavazza, Luigi and Morasca, Sandro and Taibi, Davide and Tosi, Davide},
  date = {2010},
  pages = {15--28},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_2},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NWKQINWJ/chp%3A10.1007%2F978-3-642-13244-5_2.pdf}
}

@incollection{del_bianco_quality_2009,
  title = {Quality of Open Source Software: {{The QualiPSo}} Trustworthiness Model},
  shorttitle = {Quality of Open Source Software},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Del Bianco, Vieri and Lavazza, Luigi and Morasca, Sandro and Taibi, Davide},
  date = {2009},
  pages = {199--212},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S6VKGVDR/chp%3A10.1007%2F978-3-642-02032-2_18.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@report{deloitte_exploring_2013,
  title = {Exploring {{Strategic Risk}}},
  author = {{Deloitte}},
  date = {2013},
  url = {http://www.deloitte.com/assets/Dcom-UnitedStates/Local%20Assets/Documents/us_grc_exploring_strategic_risk_093013.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T8GAJTGP/us_grc_exploring_strategic_risk_093013.pdf},
  keywords = {Cyber-Security,felmérés,Risk management}
}

@incollection{den_besten_collaborative_2006,
  title = {Collaborative Maintenance in Large Open-Source Projects},
  booktitle = {Open {{Source Systems}}},
  author = {Den Besten, Matthijs and Dalle, Jean-Michel and Galia, Fabrice},
  date = {2006},
  pages = {233--244},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_23},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HXMFXM5A/chp%3A10.1007%2F0-387-34226-5_23.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{deodhar_hybrid_2012,
  title = {Hybrid {{Business Models}} in {{Software Product Industry}}: {{Patterns}} and {{Challenges}}},
  shorttitle = {Hybrid {{Business Models}} in {{Software Product Industry}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Deodhar, Swanand J. and Saxena, Kulbhushan C. and Ruohonen, Mikko},
  date = {2012},
  pages = {362--367},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_35},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DRX2CTP8/chp%3A10.1007%2F978-3-642-33442-9_35.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{department_of_the_army_fm_1998,
  title = {{{FM}} 100-14 {{Risk Management Field Manual}}},
  author = {{Department of the army}},
  date = {1998},
  url = {https://archive.org/details/milmanual-fm-100-14-risk-management},
  urldate = {2014-05-10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RA3W8VZK/FM 100-14 Risk Management.pdf},
  keywords = {Deprecated,Military,Risk management}
}

@article{department_of_the_army_fm_2006,
  title = {{{FM}} 5-19 {{Composite Risk Management}}},
  author = {{Department of the army}},
  date = {2006},
  url = {http://www.cid.army.mil/documents/Safety/Safety%20References/FM%205-19%20Composite%20Risk%20Management.pdf},
  urldate = {2014-05-10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DWEKV7Z7/FM 5-19 Composite Risk Management.pdf},
  keywords = {Deprecated,Military,Risk management,Standard}
}

@incollection{deprez_comparing_2008,
  title = {Comparing Assessment Methodologies for Free/Open Source Software: {{OpenBRR}} and {{QSOS}}},
  shorttitle = {Comparing Assessment Methodologies for Free/Open Source Software},
  booktitle = {Product-{{Focused Software Process Improvement}}},
  author = {Deprez, Jean-Christophe and Alexandre, Simon},
  date = {2008},
  pages = {189--203},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-69566-0_17},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XXKF3AAQ/chp%3A10.1007%2F978-3-540-69566-0_17.pdf},
  keywords = {_SMS_untagged,nyílt forrás,open source,OpenBRR,QSOS,quality}
}

@incollection{deshpande_continuous_2008,
  title = {Continuous Integration in Open Source Software Development},
  booktitle = {Open Source Development, Communities and Quality},
  author = {Deshpande, Amit and Riehle, Dirk},
  date = {2008},
  pages = {273--280},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_23},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KHVZP2J7/chp%3A10.1007%2F978-0-387-09684-1_23.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{destefanis_software_2014,
  title = {Software {{Metrics}} in {{Agile Software}}: {{An Empirical Study}}},
  shorttitle = {Software {{Metrics}} in {{Agile Software}}},
  booktitle = {Agile {{Processes}} in {{Software Engineering}} and {{Extreme Programming}}},
  author = {Destefanis, Giuseppe and Counsell, Steve and Concas, Giulio and Tonelli, Roberto},
  date = {2014},
  pages = {157--170},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-06862-6_11},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VIC7XWHE/chp%3A10.1007%2F978-3-319-06862-6_11.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{dexter_free_2013,
  title = {Free and Open Source Software ({{FOSS}}) as a Model Domain for Answering Big Questions about Creativity},
  author = {Dexter, Scott and Kozbelt, Aaron},
  date = {2013-06},
  journaltitle = {Mind \& Society},
  volume = {12},
  pages = {113--123},
  issn = {1593-7879, 1860-1839},
  doi = {10.1007/s11299-013-0125-5},
  url = {http://link.springer.com/10.1007/s11299-013-0125-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T7UNSDKI/art%3A10.1007%2Fs11299-013-0125-5.pdf},
  langid = {english},
  number = {1}
}

@article{di_bella_multivariate_2013,
  title = {A Multivariate Classification of Open Source Developers},
  author = {di Bella, Enrico and Sillitti, Alberto and Succi, Giancarlo},
  date = {2013-02},
  journaltitle = {Information Sciences},
  volume = {221},
  pages = {72--83},
  issn = {00200255},
  doi = {10.1016/j.ins.2012.09.031},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S002002551200624X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2TKQJK9A/1-s2.0-S002002551200624X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  options = {useprefix=true}
}

@inproceedings{di_biase_security_2016,
  title = {A {{Security Perspective}} on {{Code Review}}: {{The Case}} of {{Chromium}}},
  shorttitle = {A {{Security Perspective}} on {{Code Review}}},
  booktitle = {2016 {{IEEE}} 16th {{International Working Conference}} on {{Source Code Analysis}} and {{Manipulation}} ({{SCAM}})},
  author = {di Biase, Marco and Bruntink, Magiel and Bacchelli, Alberto},
  date = {2016-10},
  pages = {21--30},
  issn = {2470-6892},
  doi = {10.1109/SCAM.2016.30},
  abstract = {Modern Code Review (MCR) is an established software development process that aims to improve software quality. Although evidence showed that higher levels of review coverage relates to less post-release bugs, it remains unknown the effectiveness of MCR at specifically finding security issues. We present a work we conduct aiming to fill that gap by exploring the MCR process in the Chromium open source project. We manually analyzed large sets of registered (114 cases) and missed (71 cases) security issues by backtracking in the project's issue, review, and code histories. This enabled us to qualify MCR in Chromium from the security perspective from several angles: Are security issues being discussed frequently? What categories of security issues are often missed or found? What characteristics of code reviews appear relevant to the discovery rate? Within the cases we analyzed, MCR in Chromium addresses security issues at a rate of 1\% of reviewers' comments. Chromium code reviews mostly tend to miss language-specific issues (eg C++ issues and buffer overflows) and domain-specific ones (eg such as Cross-Site Scripting), when code reviews address issues, mostly they address those that pertain to the latter type. Initial evidence points to reviews conducted by more than 2 reviewers being more successful at finding security issues.},
  eventtitle = {2016 {{IEEE}} 16th {{International Working Conference}} on {{Source Code Analysis}} and {{Manipulation}} ({{SCAM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I9YRVPQS/di Biase et al. - 2016 - A Security Perspective on Code Review The Case of.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W6DQ65H8/7781793.html},
  keywords = {backtracking,bugs,Chromium,Chromium code reviews,Chromium open source project,code review,Computer bugs,domain-specific ones,empirical software engineering,Inspection,language-specific issues,Manuals,MCR,mining software repositories,modern code review,program debugging,public domain software,safety-critical software,Security,security flaw,security issues,software development process,software quality,Software quality,software quality improvement,software security,source code (software)},
  options = {useprefix=true}
}

@incollection{di_cerbo_tool_2006,
  title = {A Tool to Support the Introduction of {{GNU}}/{{Linux}} Desktop System in a Professional Environment},
  booktitle = {Open {{Source Systems}}},
  author = {Di Cerbo, Francesco and Favara, Daniele and Scotto, Marco and Sillitti, Alberto and Succi, Giancarlo and Vernazza, Tullio},
  date = {2006},
  pages = {253--260},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_25},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9IVDIN54/chp%3A10.1007%2F0-387-34226-5_25.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{di_cosmo_formal_2013,
  title = {Formal {{Aspects}} of {{Free}} and {{Open Source Software Components}}},
  booktitle = {Formal {{Methods}} for {{Components}} and {{Objects}}},
  author = {Di Cosmo, Roberto and Treinen, Ralf and Zacchiroli, Stefano},
  date = {2013},
  pages = {216--239},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-40615-7_8},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/22BUPN8D/chp%3A10.1007%2F978-3-642-40615-7_8.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J3R22VWX/chp%3A10.1007%2F978-3-642-40615-7_8.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{di_cosmo_software_2018,
  title = {Software {{Heritage}}: {{Why}} and {{How We Collect}}, {{Preserve}} and {{Share All}} the {{Software Source Code}}},
  shorttitle = {Software {{Heritage}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Society}} ({{ICSE}}-{{SEIS}})},
  author = {Di Cosmo, Roberto},
  date = {2018-05},
  pages = {2--2},
  abstract = {Software is at the heart of our digital society. It powers our industries, fuels innovation, mediates access to all digital information, is a pillar of modern scientific research, and has enabled the emergence of new forms of social and political organizations-“code is law”, as Lessig said [2]. The source code of this software is a unique form of knowledge: it is designed to be read by humans (the developers), and yet it is ready to be translated into an executable form for a machine. As Len Shustek puts it, “Source code provides a view into the mind of the designer” [3]. Software source code is precious, and embodies a growing part of our scientific, technical and organisational knowledge. Software Heritage is an open, non-profit initiative whose mission is to ensure that this precious body of knowledge will be preserved over time and made available to all.We do this for multiple reasons. To preserve the scientific and technological knowledge embedded in software source code, that is a precious part of our heritage. To allow better software development and reuse for society and industry, by building the largest and open software knowledge database, enabling the development of a broad range of value added applications.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Society}} ({{ICSE}}-{{SEIS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MCXRYAVK/Di Cosmo - 2018 - Software Heritage Why and How We Collect, Preserv.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NBRLRI7F/8445152.html},
  keywords = {Fuels,Heart,History,largest software knowledge database,Law,open software knowledge database,organisational aspects,organisational knowledge,public domain software,scientific knowledge,Software,software development,software engineering,Software engineering,software heritage,software source code,software tools,technical knowledge,Technological innovation,technological knowledge}
}

@article{di_gangi_steal_2009,
  title = {Steal My Idea! {{Organizational}} Adoption of User Innovations from a User Innovation Community: {{A}} Case Study of {{Dell IdeaStorm}}},
  shorttitle = {Steal My Idea! {{Organizational}} Adoption of User Innovations from a User Innovation Community},
  author = {Di Gangi, Paul M. and Wasko, Molly},
  date = {2009-12},
  journaltitle = {Decision Support Systems},
  volume = {48},
  pages = {303--312},
  issn = {01679236},
  doi = {10.1016/j.dss.2009.04.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923609000888},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/24DRIKIE/1-s2.0-S0167923609000888-main.pdf},
  langid = {english},
  number = {1}
}

@incollection{di_giacomo_cots_2005,
  title = {{{COTS}} and Open Source Software Components: Are They Really Different on the Battlefield?},
  shorttitle = {{{COTS}} and Open Source Software Components},
  booktitle = {{{COTS}}-{{Based Software Systems}}},
  author = {Di Giacomo, Piergiorgio},
  date = {2005},
  pages = {301--310},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-30587-3_39},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8NQ5U972/chp%3A10.1007%2F978-3-540-30587-3_39.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{di_penta_exploratory_2010,
  title = {An {{Exploratory Study}} of the {{Evolution}} of {{Software Licensing}}},
  booktitle = {Proceedings of the {{32Nd ACM}}/{{IEEE International Conference}} on {{Software Engineering}} - {{Volume}} 1},
  author = {Di Penta, Massimiliano and German, Daniel M. and Guéhéneuc, Yann-Gaël and Antoniol, Giuliano},
  date = {2010},
  pages = {145--154},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1806799.1806824},
  url = {http://doi.acm.org/10.1145/1806799.1806824},
  urldate = {2015-11-24},
  abstract = {Free and open source software systems (FOSS) are distributed and made available to users under different software licenses, mentioned in FOSS code by means of licensing statements. Various factors, such as changes in the legal landscape, commercial code licensed as FOSS, or code reused from other FOSS systems, lead to evolution of licensing, which may affect the way a system or part thereof can be subsequently used. Therefore, it is crucial to monitor licensing evolution. However, manually tracking the licensing evolution of thousands of files is a daunting task. After presenting several cases of the effects of licensing evolution, we propose an approach to automatically track changes occurring in the licensing terms of a system. Then, we report an empirical study of the licensing evolution of six different FOSS systems. Results show that licensing underwent frequent and substantial changes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MAZ3VDMW/Di Penta és mtsai. - 2010 - An Exploratory Study of the Evolution of Software .pdf},
  isbn = {978-1-60558-719-6},
  keywords = {_SMS_untagged,empirical study,evolution,mining software repositories,nyílt forrás,open source systems,software licenses},
  series = {{{ICSE}} '10}
}

@inproceedings{di_ruscio_ossmeter_2015,
  title = {{{OSSMETER}}: A Software Measurement Platform for Automatically Analysing Open Source Software Projects},
  shorttitle = {{{OSSMETER}}},
  author = {Di Ruscio, Davide and Kolovos, Dimitris S. and Korkontzelos, Ioannis and Matragkas, Nicholas and Vinju, Jurgen J.},
  date = {2015},
  pages = {970--973},
  publisher = {{ACM Press}},
  doi = {10.1145/2786805.2803186},
  url = {http://dl.acm.org/citation.cfm?doid=2786805.2803186},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZCXHEXR3/p970-diruscio.pdf},
  isbn = {978-1-4503-3675-8},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{di_ruscio_supporting_2013,
  title = {Supporting the {{Evolution}} of {{Free}} and {{Open Source Software Distributions}}},
  booktitle = {Software {{Engineering}} for {{Resilient Systems}}},
  author = {Di Ruscio, Davide and Pelliccione, Patrizio},
  date = {2013},
  pages = {56--63},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-40894-6_5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WCHIQ85V/Supporting the Evolution of Free and Open Source Software Distributions.pdf}
}

@inbook{diehl_challenges/goodies_2012,
  title = {Some {{Challenges}}/{{Goodies}}},
  booktitle = {Securing {{Digital Video}}},
  author = {Diehl, Eric},
  date = {2012},
  pages = {229--240},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-17345-5_12},
  urldate = {2015-11-27},
  bookauthor = {Diehl, Eric},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6B3EMA3S/chp%3A10.1007%2F978-3-642-17345-5_12.pdf},
  isbn = {978-3-642-17344-8 978-3-642-17345-5},
  langid = {english}
}

@incollection{diehl_law_2016,
  title = {Law 3: {{No Security Through Obscurity}}},
  shorttitle = {Law 3},
  booktitle = {Ten {{Laws}} for {{Security}}},
  author = {Diehl, Eric},
  date = {2016},
  pages = {67--79},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-42641-9_3},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-42641-9_3},
  urldate = {2018-08-15},
  abstract = {The robustness of a cryptographic system should rely on the secrecy of its key rather than on the secrecy of its algorithm. As such, a strong assumption is that if an attacker knows the algorithm used, she should gain only a minimal advantage.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2KD5PFXJ/Diehl - 2016 - Law 3 No Security Through Obscurity.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S8KNF47U/978-3-319-42641-9_3.html},
  isbn = {978-3-319-42639-6 978-3-319-42641-9},
  langid = {english}
}

@inproceedings{dierker_can_2018,
  title = {Can {{Software Licenses Contribute}} to {{Cyberarms Control}}?},
  booktitle = {Proceedings of the {{New Security Paradigms Workshop}}},
  author = {Dierker, Steve and Roth, Volker},
  date = {2018-08-28},
  pages = {41--51},
  publisher = {{Association for Computing Machinery}},
  location = {{Windsor, United Kingdom}},
  doi = {10.1145/3285002.3285009},
  url = {https://doi.org/10.1145/3285002.3285009},
  urldate = {2020-04-22},
  abstract = {We discuss the potential role that software licenses can play in cyberarms control, the attribution of cyber attacks and the adherence to international humanitarian law and treaties that stipulate that the effects of war on the civilian population shall be minimized. We consider the increasing reliance of civilian and military institutions on FOSS and conduct a thought experiment: what would happen if a fraction of FOSS migrated to a license with non-military use clauses? If this caused civilian and military systems to diverge in design, and exploits and malware reflect their targets, then erroneous targeting of civilian institutions could be ruled out. This idea led us to perform an initial analysis of software dependencies and their relationship to the propagation of copyleft licenses. We analyzed packet manager data for seven different programming languages, based on data from Libraries.io. Among other things we found that a small number of packages accounts for the majority of the dependencies. The number of dependent packages varies from language to language and ranges from 79\% in the case of Cargo to merely 3.9\% in the case of Pypi. We also review existing non-military licenses and identify areas that need further research in order to understand the potential and the applicability of non-military licensing regimes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YHWK5CEE/Dierker and Roth - 2018 - Can Software Licenses Contribute to Cyberarms Cont.pdf},
  isbn = {978-1-4503-6597-0},
  keywords = {arms control,cyberwar,FOSS,Geneva Conventions,Software licenses},
  series = {{{NSPW}} '18}
}

@article{dilmurad_open_2011,
  title = {Open Source Software Usage on Municipalities; a Case Study: {{Çankaya}} Municipality},
  shorttitle = {Open Source Software Usage on Municipalities; a Case Study},
  author = {Dilmurad, Vahabdjanov and Kerem, Erzurumlu and Murat, Çitak and Sami, Solmaz B.},
  date = {2011},
  journaltitle = {Procedia Computer Science},
  volume = {3},
  pages = {805--808},
  issn = {18770509},
  doi = {10.1016/j.procs.2010.12.132},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1877050910005077},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EUZSB3E8/1-s2.0-S1877050910005077-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{dirk_riehle_model_2012,
  title = {A {{Model}} of {{Open Source Developer Foundations}}},
  booktitle = {{{OSS}} 2012, {{IFIP AICT}} 378},
  author = {{Dirk Riehle} and {Sebastian Berschneider}},
  date = {2012},
  pages = {15--28},
  publisher = {{Springer}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  isbn = {978-3-642-33442-9},
  langid = {english}
}

@incollection{dobusch_migration_2008,
  title = {Migration {{Discourse Structures}}: {{Escaping Microsoft}}’s {{Desktop Path}}},
  shorttitle = {Migration {{Discourse Structures}}},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Dobusch, Leonhard},
  editor = {Russo, Barbara and Damiani, Ernesto and Hissam, Scott and Lundell, Björn and Succi, Giancarlo},
  date = {2008-09-07},
  pages = {223--235},
  publisher = {{Springer US}},
  doi = {10.1007/978-0-387-09684-1_18},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_18},
  urldate = {2015-11-27},
  abstract = {Most studies of FOSS organizational migration projects focus solely on technological and economical aspects, neglecting the importance of organizational discourse structures for migration decisions as well as success. In looking at the case of the municipality of Munich this paper uses structuration theory in combination with discourse analysis to explain why and how in this case actors were able to overcome strong barriers to migration in the field of desktop software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G8VJCSRW/Dobusch - 2008 - Migration Discourse Structures Escaping Microsoft.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/32X4GQ46/978-0-387-09684-1_18.html},
  isbn = {978-0-387-09683-4 978-0-387-09684-1},
  keywords = {_SMS_untagged,Computer Systems Organization and Communication Networks,Computers and Society,Discourse Analysis,Information Systems Applications (incl.Internet),Management of Computing and Information Systems,nyílt forrás,Open source software,Path Dependency,Structuration Theory,Technology Adoption,Theory of Computation},
  langid = {english},
  number = {275},
  series = {{{IFIP}} – {{The International Federation}} for {{Information Processing}}}
}

@inproceedings{dodig-crnkovic_scientific_2002,
  title = {Scientific Methods in Computer Science},
  booktitle = {Proceedings of the {{Conference}} for the {{Promotion}} of {{Research}} in {{IT}} at {{New Universities}} and at {{University Colleges}} in {{Sweden}}, {{Skövde}}, {{Suecia}}},
  author = {Dodig-Crnkovic, Gordana},
  date = {2002},
  pages = {126--130},
  url = {http://poincare.math.rs/~vladaf/Courses/Matf%20MNSR/Literatura/Scientific%20Methods%20in%20Computer%20Science.pdf},
  urldate = {2016-01-30},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S859B3RI/0446.pdf}
}

@article{doinea_open_2009,
  title = {Open {{Source Security}}–{{Quality Requests}}},
  author = {Doinea, Mihai},
  date = {2009},
  journaltitle = {Open Source Science Journal},
  volume = {1},
  pages = {126--135},
  issn = {2066-740X},
  url = {http://www.opensourcejournal.ro/2009-Volume01/number01/paper009-fullpaper.pdf},
  abstract = {The basic open source concept is presented. Security is evaluated in the context of open source concept. Ways of increasing security are discussed. Security characteristics are evaluated for open source projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TQD5G9MK/opensource_sec_quality_requests.pdf},
  keywords = {open source,optimization,security},
  number = {1}
}

@article{dolores_gallego_open_2015,
  title = {Open Source Software: {{The}} Effects of Training on Acceptance},
  shorttitle = {Open Source Software},
  author = {Dolores Gallego, M. and Bueno, Salvador and José Racero, F. and Noyes, Jan},
  date = {2015-08},
  journaltitle = {Computers in Human Behavior},
  volume = {49},
  pages = {390--399},
  issn = {07475632},
  doi = {10.1016/j.chb.2015.03.029},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0747563215002198},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J2UVVPQ7/1-s2.0-S0747563215002198-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@inproceedings{dominguez_smart_2017,
  title = {Smart Objects in Education: {{An}} Early Survey to Assess Opportunities and Challenges},
  shorttitle = {Smart Objects in Education},
  booktitle = {2017 {{Fourth International Conference}} on {{eDemocracy eGovernment}} ({{ICEDEG}})},
  author = {Domínguez, F. and Ochoa, X.},
  date = {2017-04},
  pages = {216--220},
  doi = {10.1109/ICEDEG.2017.7962537},
  abstract = {Smart Objects are computationally enhanced versions of everyday objects such as shoes, coffee makers, pens, and more. They have the capacity to process information, sense and act on their environment and interconnect with each other and the Internet, creating an Internet of Things (IoT). IoT and Smart Objects technologies have been adopted in industries such as transportation and healthcare, however few implementations exist in the educational domain. This article presents a survey of Smart Objects applications in learning environments and explores the opportunities that exist in this domain and the main challenges that hinder the adoption of IoT in education.},
  eventtitle = {2017 {{Fourth International Conference}} on {{eDemocracy eGovernment}} ({{ICEDEG}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H26DQP6M/Domínguez és Ochoa - 2017 - Smart objects in education An early survey to ass.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QUUE4U63/7962537.html},
  keywords = {computer aided instruction,Education,educational domain,healthcare,industries,Intelligent sensors,Internet of Things,IoT,learning environments,Mobile handsets,smart objects technologies,transportation,User interfaces,Wireless communication,Wireless sensor networks}
}

@misc{donald_feinberg_state_2015,
  title = {The {{State}} of {{Open}}-{{Source RDBMSs}}, 2015},
  author = {{Donald Feinberg} and {Merv Adrian}},
  date = {2015},
  url = {http://www.gartner.com/technology/reprints.do?id=1-2DTR05J&ct=150421&st=sb},
  abstract = {Open-source relational DBMSs have matured significantly and can be used to replace commercial RDBMSs at a considerable TCO saving. Information leaders, DBAs and application development management can now consider them as a standard choice for deploying applications.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PU53MITE/The State of Open-Source RDBMSs, 2015.pdf},
  keywords = {FLOSS,RDBMS}
}

@article{dong_faster_2019,
  title = {The Faster the Better? {{Innovation}} Speed and User Interest in Open Source Software},
  shorttitle = {The Faster the Better?},
  author = {Dong, John Qi and Wu, Weifang and Zhang, Yixin (Sarah)},
  date = {2019-07-01},
  journaltitle = {Information \& Management},
  shortjournal = {Information \& Management},
  volume = {56},
  pages = {669--680},
  issn = {0378-7206},
  doi = {10.1016/j.im.2018.11.002},
  url = {http://www.sciencedirect.com/science/article/pii/S037872061730229X},
  urldate = {2020-04-22},
  abstract = {It is often believed that for open source software (OSS) projects the faster the release, the better for attracting user interest in the software. Whether this is true, however, is still open to question. There is considerable information asymmetry between OSS projects and potential users as project quality is unobservable to users. We suggest that innovation speed of OSS project can signal the unobservable project quality and attract users’ interest in downloading and using the software. We contextualize innovation speed of OSS projects as initial release speed and update speed and examine their impacts on user interest. Drawing on the signaling theory, we propose a signaling effect through which a higher initial release speed or update speed increases user interest, while the effect diminishes as initial release or update speed increases. Using a large-scale panel data set from 7442 OSS projects on SourceForge between 2007 and 2010, our results corroborate the inverted U-shaped relationships between initial release speed and user downloads and between update speed and user downloads.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ELQQPCLZ/Dong et al. - 2019 - The faster the better Innovation speed and user i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WHIXYP4Q/S037872061730229X.html},
  keywords = {Crowdsourcing,Digital innovation,Innovation speed,Open innovation,Open source software,Signals,Software development},
  langid = {english},
  number = {5}
}

@inproceedings{dong_mining_2017,
  title = {Mining {{Handover Process}} in {{Open Source Development}}: {{An Exploratory Study}}},
  shorttitle = {Mining {{Handover Process}} in {{Open Source Development}}},
  booktitle = {2017 24th {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  author = {Dong, Liming and Liu, Bohan and Li, Zheng and Xue, Bingbing and Chen, Danni and Chen, Tiange},
  date = {2017-12},
  pages = {378--387},
  doi = {10.1109/APSEC.2017.44},
  abstract = {Background: Handover is a common process in all software development projects. It is one of the most complex and diverse processes in software life cycle which could have a negative impact on software quality and progress. In open source software (OSS) development, handover is a more critical task due to poor planning. Objective: The goal of this work is to investigate whether we can automatically identify the handover process in OSS development. Furthermore, we aim to mine the process of handover and identify the factors and their influences on the duration of handover process. Method: We propose an ADC metric and an HDI algorithm to automatically identify the handover process and conduct a brief survey to evaluate it. We apply the Heuristic mining algorithm to discover the process maps of handover by mining Github repositories. To identify the factors from a large set of variables, we employ the Stepwise regression method. Results: We identified 63 pairs of handover within 44 projects from 314 most popular projects using our proposed method. Our survey received 21 responses. Conclusion: This study confirms that handover can be identified automatically. Although handover processes vary, developers follow a common work-flow during handover. The number of lines of code is positively correlated to the duration of handover process.},
  eventtitle = {2017 24th {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2CP2TSLC/Dong et al. - 2017 - Mining Handover Process in Open Source Development.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QEKBUA8H/8305960.html},
  keywords = {Approximation algorithms,data mining,Data mining,exploratory study,Github repositories,Handover,handover process,handover process mining,Heuristic algorithms,Measurement,mining repository,open source development,open source software development,OSS development,OSS project,process maps,project management,public domain software,regression analysis,Software,software development management,software development projects,software engineering,stepwise regression method}
}

@inproceedings{dorodchi_utilizing_2016,
  title = {Utilizing Open Source Software in Teaching Practice-Based Software Engineering Courses},
  booktitle = {2016 {{IEEE Frontiers}} in {{Education Conference}} ({{FIE}})},
  author = {Dorodchi, Mohsen and Dehbozorgi, Nasrin},
  date = {2016-10},
  pages = {1--5},
  doi = {10.1109/FIE.2016.7757683},
  abstract = {Software engineering courses face the challenge of covering all the stages of analysis, development, maintenance, and support while addressing practical issues such as dealing with large codebase. Free and open source software (FOSS) and more specifically humanitarian free and open source software (HFOSS) have been used by many educators to bring many add-ons to computer science education such as innovation and motivation. In addition, FOSS/HFOSS could give a better understanding of real world projects to students. In this work, we are looking at some activities developed for teaching upper division undergraduate and graduate software engineering courses using open source software projects and analyze the impacts of using this approach on students.},
  eventtitle = {2016 {{IEEE Frontiers}} in {{Education Conference}} ({{FIE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZRJNNBEC/Dorodchi and Dehbozorgi - 2016 - Utilizing open source software in teaching practic.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FUQGJLC6/7757683.html},
  keywords = {computer aided instruction,computer science education,Education,educational courses,Hafnium compounds,HFOSS,humanitarian free and open source software,large codebase dealing,Linux,Open Source,Open source software,open source software projects,practice-based software engineering course teaching,public domain software,Software engineering,Software Engineering,teaching,upper division undergraduate teaching}
}

@inproceedings{dorri_blockchain_2017,
  title = {Blockchain for {{IoT}} Security and Privacy: {{The}} Case Study of a Smart Home},
  shorttitle = {Blockchain for {{IoT}} Security and Privacy},
  booktitle = {2017 {{IEEE International Conference}} on {{Pervasive Computing}} and {{Communications Workshops}} ({{PerCom Workshops}})},
  author = {Dorri, A. and Kanhere, S. S. and Jurdak, R. and Gauravaram, P.},
  date = {2017-03},
  pages = {618--623},
  doi = {10.1109/PERCOMW.2017.7917634},
  abstract = {Internet of Things (IoT) security and privacy remain a major challenge, mainly due to the massive scale and distributed nature of IoT networks. Blockchain-based approaches provide decentralized security and privacy, yet they involve significant energy, delay, and computational overhead that is not suitable for most resource-constrained IoT devices. In our previous work, we presented a lightweight instantiation of a BC particularly geared for use in IoT by eliminating the Proof of Work (POW) and the concept of coins. Our approach was exemplified in a smart home setting and consists of three main tiers namely: cloud storage, overlay, and smart home. In this paper we delve deeper and outline the various core components and functions of the smart home tier. Each smart home is equipped with an always online, high resource device, known as “miner” that is responsible for handling all communication within and external to the home. The miner also preserves a private and secure BC, used for controlling and auditing communications. We show that our proposed BC-based smart home framework is secure by thoroughly analysing its security with respect to the fundamental security goals of confidentiality, integrity, and availability. Finally, we present simulation results to highlight that the overheads (in terms of traffic, processing time and energy consumption) introduced by our approach are insignificant relative to its security and privacy gains.},
  eventtitle = {2017 {{IEEE International Conference}} on {{Pervasive Computing}} and {{Communications Workshops}} ({{PerCom Workshops}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/83P4KCGX/Dorri és mtsai. - 2017 - Blockchain for IoT security and privacy The case .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZXNB84AA/7917634.html},
  keywords = {BC-based smart home framework,Blockchain-based approaches,Cloud computing,cloud storage,Conferences,data privacy,home automation,Internet of Things,Internet of Things privacy,Internet of Things security,IoT privacy,IoT security,Online banking,POW,Privacy,proof-of-work,resource-constrained IoT devices,security,smart home setting,Smart homes,storage management}
}

@misc{dravet_cracking_2010,
  title = {Cracking {{Passwords Version}} 1.1},
  author = {Dravet, J.},
  date = {2010-02-15},
  url = {http://tools.question-defense.com/Cracking_Passwords_Guide.pdf},
  urldate = {2012-12-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7WK53DFP/Cracking_Passwords_Guide.pdf}
}

@inproceedings{duan_identifying_2017,
  title = {Identifying {{Open}}-{{Source License Violation}} and 1-Day {{Security Risk}} at {{Large Scale}}},
  booktitle = {Proceedings of the 2017 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Duan, Ruian and Bijlani, Ashish and Xu, Meng and Kim, Taesoo and Lee, Wenke},
  date = {2017-10-30},
  pages = {2169--2185},
  publisher = {{Association for Computing Machinery}},
  location = {{Dallas, Texas, USA}},
  doi = {10.1145/3133956.3134048},
  url = {https://doi.org/10.1145/3133956.3134048},
  urldate = {2020-04-22},
  abstract = {With millions of apps available to users, the mobile app market is rapidly becoming very crowded. Given the intense competition, the time to market is a critical factor for the success and profitability of an app. In order to shorten the development cycle, developers often focus their efforts on the unique features and workflows of their apps and rely on third-party Open Source Software (OSS) for the common features. Unfortunately, despite their benefits, careless use of OSS can introduce significant legal and security risks, which if ignored can not only jeopardize security and privacy of end users, but can also cause app developers high financial loss. However, tracking OSS components, their versions, and interdependencies can be very tedious and error-prone, particularly if an OSS is imported with little to no knowledge of its provenance. We therefore propose OSSPolice, a scalable and fully-automated tool for mobile app developers to quickly analyze their apps and identify free software license violations as well as usage of known vulnerable versions of OSS. OSSPolice introduces a novel hierarchical indexing scheme to achieve both high scalability and accuracy, and is capable of efficiently comparing similarities of app binaries against a database of hundreds of thousands of OSS sources (billions of lines of code). We populated OSSPolice with 60K C/C++ and 77K Java OSS sources and analyzed 1.6M free Google Play Store apps. Our results show that 1) over 40K apps potentially violate GPL/AGPL licensing terms, and 2) over 100K of apps use known vulnerable versions of OSS. Further analysis shows that developers violate GPL/AGPL licensing terms due to lack of alternatives, and use vulnerable versions of OSS despite efforts from companies like Google to improve app security. OSSPolice is available on GitHub.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AWUFNBI2/Duan et al. - 2017 - Identifying Open-Source License Violation and 1-da.pdf},
  isbn = {978-1-4503-4946-8},
  keywords = {application security,code clone detection,license violation},
  series = {{{CCS}} '17}
}

@incollection{duc_impact_2011,
  title = {Impact of Stakeholder Type and Collaboration on Issue Resolution Time in {{OSS Projects}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Duc, Anh Nguyen and Cruzes, Daniela S. and Ayala, Claudia and Conradi, Reidar},
  date = {2011},
  pages = {1--16},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BGJNAICV/chp%3A10.1007%2F978-3-642-24418-6_1.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{ducheneaut_socialization_2005,
  title = {Socialization in an {{Open Source Software Community}}: {{A Socio}}-{{Technical Analysis}}},
  shorttitle = {Socialization in an {{Open Source Software Community}}},
  author = {Ducheneaut, Nicolas},
  date = {2005-08-01},
  journaltitle = {Computer Supported Cooperative Work (CSCW)},
  shortjournal = {Comput Supported Coop Work},
  volume = {14},
  pages = {323--368},
  issn = {0925-9724, 1573-7551},
  doi = {10.1007/s10606-005-9000-1},
  url = {https://link.springer.com/article/10.1007/s10606-005-9000-1},
  urldate = {2018-08-11},
  abstract = {Open Source Software (OSS) development is often characterized as a fundamentally new way to develop software. Past analyses and discussions, however, have treated OSS projects and their organization mostly as a static phenomenon. Consequently, we do not know how these communities of software developers are sustained and reproduced over time through the progressive integration of new members. To shed light on this issue I report on my analyses of socialization in a particular OSS community. In particular, I document the relationships OSS newcomers develop over time with both the social and material aspects of a project. To do so, I combine two mutually informing activities: ethnography and the use of software specially designed to visualize and explore the interacting networks of human and material resources incorporated in the email and code databases of OSS. Socialization in this community is analyzed from two perspectives: as an individual learning process and as a political process. From these analyses it appears that successful participants progressively construct identities as software craftsmen, and that this process is punctuated by specific rites of passage. Successful participants also understand the political nature of software development and progressively enroll a network of human and material allies to support their efforts. I conclude by discussing how these results could inform the design of software to support socialization in OSS projects, as well as practical implications for the future of these projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HRD74CT/s10606-005-9000-1.html},
  langid = {english},
  number = {4}
}

@incollection{durand_oss_2012,
  title = {{{OSS}} in 2012: {{A Long}}-{{Term Sustainable Alternative}} for {{Corporate IT}}},
  shorttitle = {{{OSS}} in 2012},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Durand, Didier and Vuattoux, Jean-Luc and Ditscheid, Pierre-Jean},
  date = {2012},
  pages = {371--376},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_37},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZR4WD7VJ/chp%3A10.1007%2F978-3-642-33442-9_37.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{durumeric_matter_2014,
  title = {The {{Matter}} of {{Heartbleed}}},
  author = {Durumeric, Zakir and Payer, Mathias and Paxson, Vern and Kasten, James and Adrian, David and Halderman, J. Alex and Bailey, Michael and Li, Frank and Weaver, Nicolas and Amann, Johanna and Beekman, Jethro},
  date = {2014},
  pages = {475--488},
  publisher = {{ACM Press}},
  doi = {10.1145/2663716.2663755},
  url = {http://dl.acm.org/citation.cfm?doid=2663716.2663755},
  urldate = {2015-01-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T7849NBB/heartbleed-imc14.pdf},
  isbn = {978-1-4503-3213-2},
  keywords = {heartbleed,open source,security},
  langid = {english}
}

@incollection{dutkevych_t._application_nodate,
  title = {Application {{Features}} of {{Commercial}} and {{Open Source Intrusion Detection Systems}} in the {{High}}-Speed {{Corporate Networks}}},
  booktitle = {Modern {{Problems}} of {{Radio Engineering}}, {{Telecommunications}}, and {{Computer Science}}, 2006. {{TCSET}} 2006. {{International Conference}}},
  author = {{Dutkevych, T.} and {Piskozub, A.}},
  pages = {176--177},
  publisher = {{IEEE}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F5V8RTUF/04404486.pdf},
  isbn = {966-553-507-2}
}

@inproceedings{dwivedi_applying_2019,
  title = {Applying {{Neural Network}} to {{Determine Patterns}} in {{Open Source Software}}},
  booktitle = {2019 {{IEEE}} 5th {{International Conference}} for {{Convergence}} in {{Technology}} ({{I2CT}})},
  author = {Dwivedi, Ashish Kumar and Kumar Rath, Santanu and Satapathy, Shashank Mouli},
  date = {2019-03},
  pages = {1--7},
  doi = {10.1109/I2CT45611.2019.9033766},
  abstract = {Nowadays, various design techniques are proposed for implementing different kinds of solution for the software desired for complex systems. Among them design patterns are frequently used to identify a better solution for the object-oriented software. The recognition of design pattern in open source program enables the maintainability of traditional object-oriented programs. The proposed methodology shows the determination of design patterns in open source program. The process of pattern determination is done by using quality measurement parameters e.g., software metrics. The presented method considers various kind of neural network models to determine the presence of design patterns in open source system. The proposed methodology is evaluated by using a case study e.g., JUnit. Subsequently, a comparative analysis is presented to identify the strengths and weaknesses of selected neural network models.},
  eventtitle = {2019 {{IEEE}} 5th {{International Conference}} for {{Convergence}} in {{Technology}} ({{I2CT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RWLXEYJU/Dwivedi et al. - 2019 - Applying Neural Network to Determine Patterns in O.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UC49L23C/9033766.html},
  keywords = {Bridges,design pattern,Measurement,neural nets,neural network models,Neural Network Models,Neural networks,Object oriented modeling,object-oriented methods,object-oriented programming,object-oriented programs,object-oriented software,open source program,open source software,pattern determination,Production facilities,Program Metrics,public domain software,Software,software metrics,Software Patterns,Unified modeling language}
}

@online{eben_moglen_virtues_nodate,
  title = {Virtues and {{Vices}} of {{Open Source}}},
  author = {{Eben Moglen}},
  journaltitle = {Santa Clara University},
  url = {http://www.scu.edu/ethics/practicing/focusareas/technology/moglen-free-software.html},
  urldate = {2013-05-30},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TF6Q8JB5/n68smlfk.html},
  langid = {english}
}

@online{ec.europa.eu_critical_2015,
  title = {Critical Infrastructure},
  author = {{ec.europa.eu}},
  date = {2015},
  url = {http://ec.europa.eu/dgs/home-affairs/what-we-do/policies/crisis-and-terrorism/critical-infrastructure/index_en.htm},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TX5SW2UF/DGs - Migration and Home Affairs - What we do.pdf}
}

@online{ec.europa.eu_policy_2013,
  title = {Policy on {{Critical Information Infrastructure Protection}} ({{CIIP}})},
  author = {{ec.europa.eu}},
  date = {2013},
  journaltitle = {ec.europa.eu},
  url = {http://ec.europa.eu/digital-agenda/en/news/policy-critical-information-infrastructure-protection-ciip},
  urldate = {2015-06-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C94MFWKA/Policy on Critical Information Infrastructure Protection (CIIP) _ Digital Agenda for Europe _ European Commission.pdf}
}

@inproceedings{eckert_how_2017,
  title = {How Are {{Open Source Practices Possible}} within a {{Medical Diagnostics Company}}? {{Developing}} and {{Testing}} a {{Maturity Model}} of {{Inner Source Implementation}}},
  shorttitle = {How Are {{Open Source Practices Possible}} within a {{Medical Diagnostics Company}}?},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration}}},
  author = {Eckert, Remo and Meyer, Sathya Kay and Stuermer, Matthias},
  date = {2017-08-23},
  pages = {1--8},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3125433.3125447},
  url = {https://doi.org/10.1145/3125433.3125447},
  urldate = {2020-04-22},
  abstract = {Open Source Software (OSS) development has seen a considerable increase in attention over the last few years. The success of various OSS projects, such as Linux and Apache, is now widely recognized. Many organizations have shown interest not only in using OSS, but also in applying the underlying collaborative practices within their internal software development activities; this phenomenon is known as Inner Source. By combining best practices of OSS development from the current Inner Source literature, we develop a new model that allows us to rate an organization's maturity level regarding the adoption of Inner Source. By testing our model within a medical diagnostics corporation, we present various insights on Inner Source efforts and how Inner Source can improve software development.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YIF3A9ES/Eckert et al. - 2017 - How are Open Source Practices Possible within a Me.pdf},
  isbn = {978-1-4503-5187-4},
  keywords = {Inner Source,Maturity Model,Open Source Software,Software Development},
  series = {{{OpenSym}} '17}
}

@inproceedings{edwards_historical_2012,
  title = {An {{Historical Examination}} of {{Open Source Releases}} and {{Their Vulnerabilities}}},
  booktitle = {Proceedings of the 2012 {{ACM Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Edwards, Nigel and Chen, Liqun},
  date = {2012},
  pages = {183--194},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2382196.2382218},
  url = {http://doi.acm.org/10.1145/2382196.2382218},
  urldate = {2015-11-24},
  abstract = {This paper examines historical releases of Sendmail, Postfix, Apache httpd and OpenSSL by using static source code analysis and the entry-rate in the Common Vulnerabilities and Exposures dictionary (CVE) for a release, which we take as a measure of the rate of discovery of exploitable bugs. We show that the change in number and density of issues reported by the source code analyzer is indicative of the change in rate of discovery of exploitable bugs for new releases --- formally we demonstrate a statistically significant correlation of moderate strength. The strength of the correlation is an artifact of other factors such as the degree of scrutiny: the number of security analysts investigating the software. This also demonstrates that static source code analysis can be used to make some assessment of risk even when constraints do not permit human review of the issues identified by the analysis. We find only a weak correlation between absolute values measured by the source code analyzer and rate of discovery of exploitable bugs, so in general it is unsafe to use absolute values of number of issues or issue densities to compare different applications or software. Our results demonstrate that software quality, as measured by the number of issues, issue density or number of exploitable bugs, does not always improve with each new release. However, generally the rate of discovery of exploitable bugs begins to drop three to five years after the initial release.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ASKDT2SX/___AnHistoricalExaminationOfOpenSourceReleasesAndTheirVulnerabilities_NigelEdwards_CCS_Oct12.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FWER7QSD/Edwards és Chen - 2012 - An Historical Examination of Open Source Releases .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GG2F4A44/HPL-2012-63R1.pdf},
  isbn = {978-1-4503-1651-4},
  keywords = {_SMS_untagged,nyílt forrás,Open source software,risk analysis,security,static analysis},
  series = {{{CCS}} '12}
}

@article{ehie_understanding_2020,
  title = {Understanding the Influence of {{IT}}/{{OT Convergence}} on the Adoption of {{Internet}} of {{Things}} ({{IoT}}) in Manufacturing Organizations: {{An}} Empirical Investigation},
  shorttitle = {Understanding the Influence of {{IT}}/{{OT Convergence}} on the Adoption of {{Internet}} of {{Things}} ({{IoT}}) in Manufacturing Organizations},
  author = {Ehie, Ike C. and Chilton, Michael A.},
  date = {2020-02-01},
  journaltitle = {Computers in Industry},
  shortjournal = {Computers in Industry},
  volume = {115},
  pages = {103166},
  issn = {0166-3615},
  doi = {10.1016/j.compind.2019.103166},
  url = {http://www.sciencedirect.com/science/article/pii/S0166361519307663},
  urldate = {2020-06-08},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CIVSXB6K/S0166361519307663.html},
  langid = {english}
}

@incollection{el_ioini_open_2013,
  title = {An {{Open Source Monitoring Framework}} for {{Enterprise SOA}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {El Ioini, Nabil and Garibbo, Alessandro and Sillitti, Alberto and Succi, Giancarlo},
  date = {2013},
  pages = {182--193},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_13},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZAS4MH2F/An Open Source Monitoring Framework for Enterprise SOA.pdf}
}

@article{el-emam_ethics_2001,
  title = {Ethics and Open Source},
  author = {El-Emam, Khaled},
  date = {2001},
  journaltitle = {Empirical Software Engineering},
  volume = {6},
  pages = {291--292},
  url = {http://www.springerlink.com/index/T203568116366694.pdf},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A2RVTW47/art%3A10.1023%2FA%3A1011962213685.pdf},
  number = {4}
}

@inproceedings{elferink_comparing_2005,
  title = {Comparing Software Development Models: {{Structural}} Problems in the Cathedral and Bazaar Metaphors},
  shorttitle = {Comparing Software Development Models},
  booktitle = {Open {{Source}} for {{Education}} in {{Europe}}, {{Research}} \& {{Practise}}},
  author = {Elferink, R. and Griffiths, D. and Zondergeld, S.},
  editor = {de Vries, Fred and Attwell, Graham},
  date = {2005},
  pages = {91--96},
  publisher = {{Open University of the Netherlands}},
  location = {{Heerlen}},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.100.8208&rep=rep1&type=pdf},
  urldate = {2012-10-27},
  abstract = {This paper builds on Levesque’s identification of five issues holding back the Open Source Software (OSS) movement, and proposes that increased involvement by users in the development process can help address them. Metaphors have a valuable role in explaining to users what OSS is, and what their role involves. The dominant metaphors are the Cathedral and the Bazaar, proposed by Raymond. These metaphors have been valuable in identifying two approaches to software development. The metaphors also generate confusion, in part because of widely differing interpretations. A more structural reason for confusion is the use of vehicles which are not assigned to the same domain in the two metaphors. The negative consequences of this regarding comparison of approaches to software development are described. Adapted metaphors are proposed which facilitate comparison: the process which constitutes and maintains a Bazaar as an institution, and the process which constitutes and maintains a Shopping Mall.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6HUQZBT3/comparing_cathedral_and_bazaar.pdf},
  isbn = {90 358 2318 4}
}

@book{elleithy_advanced_2010,
  title = {Advanced {{Techniques}} in {{Computing Sciences}} and {{Software Engineering}}},
  editor = {Elleithy, Khaled},
  date = {2010},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://www.springerlink.com/index/10.1007/978-90-481-3660-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GEJKTUST/chp%3A10.1007%2F978-90-481-3660-5_17.pdf},
  isbn = {978-90-481-3659-9 978-90-481-3660-5},
  langid = {english}
}

@inproceedings{ellis_open_2009,
  title = {Open Source Software Adoption by {{South African MSEs}}: Barriers and Enablers},
  shorttitle = {Open Source Software Adoption by {{South African MSEs}}},
  booktitle = {Proceedings of the 2009 {{Annual Conference}} of the {{Southern African Computer Lecturers}}' {{Association}}},
  author = {Ellis, Jason and Van Belle, Jean-Paul},
  date = {2009},
  pages = {41--49},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1562746},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6Q445N9D/p41-ellis.pdf},
  keywords = {_SMS_untagged,KKV,nyílt forrás,open source,OSS adoption,south africa}
}

@article{elohazi_anonimitas_2006,
  title = {Anonimitás Az {{Interneten}}},
  author = {Előházi, János},
  date = {2006},
  journaltitle = {Hadmérnök},
  volume = {1},
  pages = {18--24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JMSPNHBN/Hadmernok_06_2_elohazi.pdf},
  keywords = {anonim kommunikáció,Anonimitás,chaum-mix,internet},
  number = {2}
}

@inproceedings{endo_survey_2010,
  title = {A Survey on Open-Source Cloud Computing Solutions},
  booktitle = {Brazilian {{Symposium}} on {{Computer Networks}} and {{Distributed Systems}}},
  author = {Endo, Patrícia Takako and Gon\textbackslash ccalves, Glauco Estácio and Kelner, Judith and Sadok, Djamel},
  date = {2010},
  url = {http://www.researchgate.net/publication/228719828_A_Survey_on_Open-source_Cloud_Computing_Solutions/file/9fcfd507ec923b5b4f.pdf},
  urldate = {2014-01-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZS79GVIS/oscloud.pdf}
}

@inproceedings{erb_clarmor_2018,
  title = {{{clARMOR}}: {{A Dynamic Buffer Overflow Detector}} for {{OpenCL Kernels}}},
  shorttitle = {{{clARMOR}}},
  booktitle = {Proceedings of the {{International Workshop}} on {{OpenCL}}},
  author = {Erb, Christopher and Greathouse, Joseph L.},
  date = {2018-05-14},
  pages = {1--2},
  publisher = {{Association for Computing Machinery}},
  location = {{Oxford, United Kingdom}},
  doi = {10.1145/3204919.3204934},
  url = {https://doi.org/10.1145/3204919.3204934},
  urldate = {2020-04-22},
  abstract = {Buffer overflows are a common source of program crashes, data corruption, and security exploits. While many tools exist to find these issues in CPU programs, buffer overflows are also problematic in heterogeneous systems serviced by languages such as OpenCL™. Existing buffer overflow detectors for heterogeneous systems are either limited to particular vendors or require heavyweight instrumentation that results in large runtime overheads. This work describes clARMOR, an open source buffer overflow detector for OpenCL kernels and APIs. clARMOR is vendor and device neutral; we demonstrate its operation on multiple device types from a variety of vendors. Rather than requiring heavyweight kernel instrumentation, clARMOR uses canary regions to quickly tell if data is written outside of any global memory buffer. Rather than analyzing every memory access, clARMOR instead verifies that the canary regions have not been modified after each user kernel finishes. In some cases, clARMOR uses the target device to check these canary regions, further reducing the overheads. We show experiments demonstrating that, across 143 open source OpenCL benchmarks, clARMOR causes an average slowdown of 9.6\% while still finding multiple real kernel buffer overflows.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B9NIL47J/Erb and Greathouse - 2018 - clARMOR A Dynamic Buffer Overflow Detector for Op.pdf},
  isbn = {978-1-4503-6439-3},
  keywords = {Buffer Overflow Detection,GPGPU,Open Source Software,OpenCL},
  series = {{{IWOCL}} '18}
}

@unpublished{erdei_minositesi_2010,
  title = {Minősítési Kritériumok, Open Source Alkalmazások a Közigazgatási Intézményekben},
  author = {Erdei, Csaba and Mátó, Péter},
  date = {2010},
  url = {https://mny2.hu/konferencia/downloads/maszat.pdf},
  urldate = {2013-05-05},
  eventtitle = {Nyílt  {{Szoftverek}} a {{Közigazgatásban}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6SJRAFAR/maszat.pdf},
  keywords = {Magyar}
}

@inproceedings{erturk_case_2012,
  title = {A Case Study in Open Source Software Security and Privacy: {{Android}} Adware},
  shorttitle = {A Case Study in Open Source Software Security and Privacy},
  booktitle = {Internet {{Security}} ({{WorldCIS}}), 2012 {{World Congress}} On},
  author = {Erturk, Emre},
  date = {2012},
  pages = {189--191},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6280226},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P4PXUNMD/06280226.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@report{european_comission_flossmetrics_2010,
  title = {{{FLOSSMetrics Final Report}}},
  author = {{European Comission}},
  date = {2010},
  pages = {34},
  institution = {{European Comission}},
  url = {http://flossmetrics.org/docs/fm3-final-report_en.pdf},
  urldate = {2012-10-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TEGDBNZN/fm3-final-report_en.pdf},
  number = {FP6-033982}
}

@online{evgeny_morozov_walled_nodate,
  title = {A {{Walled Wide Web}} for {{Nervous Autocrats}}},
  author = {{Evgeny Morozov}},
  journaltitle = {The Wall Street Journal},
  url = {http://online.wsj.com/article/SB10001424052748704415104576065641376054226.html},
  urldate = {2012-10-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SIF3D9EA/A Walled Wide Web for Nervous Autocrats - WSJ.pdf}
}

@inproceedings{eyben_openearintroducing_2009,
  title = {{{OpenEAR}}—Introducing the {{Munich}} Open-Source Emotion and Affect Recognition Toolkit},
  booktitle = {Affective {{Computing}} and {{Intelligent Interaction}} and {{Workshops}}, 2009. {{ACII}} 2009. 3rd {{International Conference}} On},
  author = {Eyben, Florian and Wollmer, Martin and Schuller, Björn},
  date = {2009},
  pages = {1--6},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5349350},
  urldate = {2013-05-30},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QCX42VTR/26-TUM-Tools-openEAR.pdf}
}

@article{eyolfson_correlations_2014,
  title = {Correlations between Bugginess and Time-Based Commit Characteristics},
  author = {Eyolfson, Jon and Tan, Lin and Lam, Patrick},
  date = {2014-08},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {1009--1039},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-013-9245-0},
  url = {http://link.springer.com/10.1007/s10664-013-9245-0},
  urldate = {2014-05-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KDDNWSU2/correlations_between_buggines_and_time-based_commit.pdf},
  keywords = {bug detection,Empirikus,open source,source analysis},
  langid = {english},
  number = {4}
}

@online{f-secure_labs_classification/threat_2013,
  title = {Classification/{{Threat Types}}},
  author = {{F-Secure Labs}},
  date = {2013},
  url = {http://www.f-secure.com/en/web/labs_global/threat-types},
  urldate = {2013-10-10}
}

@article{fadakar_alghalandis_adfne_2017,
  title = {{{ADFNE}}: {{Open}} Source Software for Discrete Fracture Network Engineering, Two and Three Dimensional Applications},
  shorttitle = {{{ADFNE}}},
  author = {Fadakar Alghalandis, Younes},
  date = {2017-05-01},
  journaltitle = {Computers \& Geosciences},
  shortjournal = {Computers \& Geosciences},
  volume = {102},
  pages = {1--11},
  issn = {0098-3004},
  doi = {10.1016/j.cageo.2017.02.002},
  url = {http://www.sciencedirect.com/science/article/pii/S0098300416304551},
  urldate = {2020-04-22},
  abstract = {Rapidly growing topic, the discrete fracture network engineering (DFNE), has already attracted many talents from diverse disciplines in academia and industry around the world to challenge difficult problems related to mining, geothermal, civil, oil and gas, water and many other projects. Although, there are few commercial software capable of providing some useful functionalities fundamental for DFNE, their costs, closed code (black box) distributions and hence limited programmability and tractability encouraged us to respond to this rising demand with a new solution. This paper introduces an open source comprehensive software package for stochastic modeling of fracture networks in two- and three-dimension in discrete formulation. Functionalities included are geometric modeling (e.g., complex polygonal fracture faces, and utilizing directional statistics), simulations, characterizations (e.g., intersection, clustering and connectivity analyses) and applications (e.g., fluid flow). The package is completely written in Matlab scripting language. Significant efforts have been made to bring maximum flexibility to the functions in order to solve problems in both two- and three-dimensions in an easy and united way that is suitable for beginners, advanced and experienced users.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T6XJZX2G/Fadakar Alghalandis - 2017 - ADFNE Open source software for discrete fracture .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C7LXNJQH/S0098300416304551.html},
  keywords = {DFN,Fluid flow,Fracture networks,Matlab,Open source,Simulations,Stochastic modeling},
  langid = {english}
}

@inproceedings{fagerholm_role_2014,
  title = {The {{Role}} of {{Mentoring}} and {{Project Characteristics}} for {{Onboarding}} in {{Open Source Software Projects}}},
  booktitle = {Proceedings of the 8th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Fagerholm, Fabian and Guinea, Alejandro S. and Münch, Jürgen and Borenstein, Jay},
  date = {2014},
  pages = {55:1--55:10},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2652524.2652540},
  url = {http://doi.acm.org/10.1145/2652524.2652540},
  urldate = {2015-11-24},
  abstract = {Context: Onboarding is a process that helps newcomers become integrated members of their organisation. Successful onboarding programs can result in increased performance in conventional organisations, but there is little guidance on how to onboard new developers in Open Source Software (OSS) projects. Goal: In this study, we examine how mentoring and project characteristics influence the effectiveness and efficiency of the onboarding process. We study a collaboration program involving a total of nine Open Source Software projects and more than 120 students from different universities around the world as part of Facebook's Education Modernization Program. Method: We use quantitative measurements of source code repositories, issue tracking systems, and discussion fora to examine how newcomers become contributing members of their OSS projects. Results: We found that developers receiving deliberate onboarding support through mentoring were more active at an earlier stage than developers entering projects through conventional means. Also, we found that project size and lifetime influenced onboarding. Conclusion: Empirical decision support can contribute to a more effective onboarding process in OSS projects. Mentor support in critical stages can accelerate the process, but project maturity is also a significant factor that increases the effect of onboarding.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZWMWJHX6/Fagerholm és mtsai. - 2014 - The Role of Mentoring and Project Characteristics .pdf},
  isbn = {978-1-4503-2774-9},
  keywords = {_SMS_untagged,case study,distributed development,mentoring,nyílt forrás,onboarding,Open source software,organisational socialisation,software teams},
  series = {{{ESEM}} '14}
}

@online{fahmida_y._rashid_hps_nodate,
  title = {{{HP}}'s {{Malware}}-{{Laden Switches Illustrate Supply Chain Risks}}},
  author = {{Fahmida Y. Rashid}},
  url = {http://securitywatch.pcmag.com/pc-hardware/296547-hp-s-malware-laden-switches-illustrate-supply-chain-risks}
}

@article{faldetta_content_2002,
  title = {The Content of Freedom in Resources: {{The}} Open Source Model},
  shorttitle = {The Content of Freedom in Resources},
  author = {Faldetta, Guglielmo},
  date = {2002},
  journaltitle = {Journal of Business Ethics},
  volume = {39},
  pages = {179--188},
  url = {http://link.springer.com/article/10.1023/A:1016312908050},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W8XIB3DH/art%3A10.1023%2FA%3A1016312908050.pdf},
  number = {1-2}
}

@article{fang_understanding_2009,
  title = {Understanding {{Sustained Participation}} in {{Open Source Software Projects}}},
  author = {Fang, Yulin and Neufeld, Derrick},
  date = {2009-04-01},
  journaltitle = {Journal of Management Information Systems},
  volume = {25},
  pages = {9--50},
  issn = {0742-1222},
  doi = {10.2753/MIS0742-1222250401},
  url = {http://mesharpe.metapress.com/openurl.asp?genre=article&id=doi:10.2753/MIS0742-1222250401},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GUF8EW7D/04Fang.pdf},
  number = {4}
}

@misc{federal_financial_institutions_examination_council_risk_nodate,
  title = {Risk {{Management}} of {{Free}} and {{Open Source Software}}},
  author = {{Federal Financial Institutions Examination Council}},
  publisher = {{FFIEC}},
  url = {http://www.federalreserve.gov/boarddocs/srletters/2004/SR0417a1.pdf‎},
  urldate = {2014-05-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WQ2GQHRP/Risk_management_of_OS_software.pdf},
  keywords = {Risk management}
}

@article{fekete_csanad_kiberhadviseles_2015,
  title = {A {{Kiberhadviselés}} Fejlődese És Az Ukrán Válság},
  author = {{Fekete Csanád}},
  date = {2015},
  journaltitle = {Biztonságpolitika},
  issn = {2062-4379},
  url = {http://biztonsagpolitika.hu/publikaciok-2015/fekete-csanad-a-kiberhadviseles-fejlodese-es-az-ukran-valsag-2},
  urldate = {2015-10-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JUHKMSU6/Fekete_Csanad_A_kiberhadviseles_fejlodese_es_az_ukran_valsag_2015.pdf}
}

@misc{feller_understanding_2001,
  title = {Understanding {{Open Source Software Development}}.},
  author = {Feller, Joseph and Fitzgerald, Brian},
  date = {2001},
  publisher = {{Addison-Wesley Professional}}
}

@inproceedings{felt_survey_2011,
  title = {A Survey of Mobile Malware in the Wild},
  booktitle = {Proceedings of the 1st {{ACM}} Workshop on {{Security}} and Privacy in Smartphones and Mobile Devices},
  author = {Felt, Adrienne Porter and Finifter, Matthew and Chin, Erika and Hanna, Steve and Wagner, David},
  date = {2011},
  pages = {3--14},
  url = {http://dl.acm.org/citation.cfm?id=2046618},
  urldate = {2013-10-09},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q3VA4M2N/mobilemalware.pdf}
}

@inproceedings{feng_open-source_2019,
  title = {Open-{{Source License Violations}} of {{Binary Software}} at {{Large Scale}}},
  booktitle = {2019 {{IEEE}} 26th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Feng, Muyue and Mao, Weixuan and Yuan, Zimu and Xiao, Yang and Ban, Gu and Wang, Wei and Wang, Shiyang and Tang, Qian and Xu, Jiahuan and Su, He and Liu, Binghong and Huo, Wei},
  date = {2019-02},
  pages = {564--568},
  issn = {1534-5351},
  doi = {10.1109/SANER.2019.8667977},
  abstract = {Open-source licenses are widely used in open-source projects. However, developers using or modifying the source code of open-source projects do not always strictly follow the licenses. GPL and AGPL, two of the most popular copyleft licenses, are most likely to be violated, because they require developers to open-source the entire project if any code under GPL/AGPL protection is included whether modified or not. There are few license violation detectors focusing on binary software, owning to the challenge of mapping binary code to source code efficiently and accurately at large scale. In this paper, we propose a scalable and fully-automated system to check open-source license violation of binary software at large scale. We match source code to binary code by analyzing file attributes of executable files and code features that are not affected by compilation and could vary between projects. Moreover, to break the barrier of large-scale analysis, we introduce an automatic extractor to parse executable files from installation packages that are broadly available in software download sites. In empirical experiments of binary-to-source mapping, we have got a remarkable high accuracy of 99.5\% and recall of 95.6\% without significant loss of precision. Besides, 2270 pairs of binary-to-source mapping relationships are discovered, with 110 license violations of GPL and AGPL licenses related to 7.2\% of the 1000 real-world binary software projects.},
  eventtitle = {2019 {{IEEE}} 26th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V8LPI9WE/Feng et al. - 2019 - Open-Source License Violations of Binary Software .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PYUBZ98X/8667977.html},
  keywords = {Arrays,binary code,Binary codes,copyleft licenses,data protection,Feature extraction,GPL/AGPL protection,installation packages,Libraries,Licenses,Open source software,open-source license violation,open-source projects,project management,public domain software,software engineering,software management,software packages,source code,source code (software)}
}

@inproceedings{fernandes_applying_2016,
  title = {Applying the {{3C Model}} to {{FLOSS Communities}}},
  booktitle = {Collaboration and {{Technology}}},
  author = {Fernandes, Sara and Barbosa, Luis Soares},
  editor = {Yuizono, Takaya and Ogata, Hiroaki and Hoppe, Ulrich and Vassileva, Julita},
  date = {2016},
  pages = {139--150},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-44799-5_11},
  abstract = {How learning occurs within Free/Libre Open Source (FLOSS) communities and what is the dynamics of such projects (e.g. the life cycle of such projects) are very relevant questions when considering the use of FLOSS projects in a formal education setting. This paper introduces an approach based on the 3C collaboration model (communication, coordination and cooperation) to represent the collaborative learning dynamics within FLOSS communities. To explore the collaborative learning potential of FLOSS communities a number of questionnaires and interviews to selected FLOSS contributors were run. From this study a 3C collaborative model applicable to FLOSS communities was designed and discussed.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2JFIFPLQ/Fernandes and Barbosa - 2016 - Applying the 3C Model to FLOSS Communities.pdf},
  isbn = {978-3-319-44799-5},
  keywords = {3C collaboration model,FLOSS,Learning},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{fernandez-ramil_what_2009,
  title = {What Does It Take to Develop a Million Lines of Open Source Code?},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Fernandez-Ramil, Juan and Izquierdo-Cortazar, Daniel and Mens, Tom},
  date = {2009},
  pages = {170--184},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_16},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NT8X6WSX/chp%3A10.1007%2F978-3-642-02032-2_16.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{ferreira_longitudinal_2019,
  title = {A {{Longitudinal Study}} on the {{Maintainers}}' {{Sentiment}} of a {{Large Scale Open Source Ecosystem}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 4th {{International Workshop}} on {{Emotion Awareness}} in {{Software Engineering}} ({{SEmotion}})},
  author = {Ferreira, Isabella and Stewart, Kate and German, Daniel and Adams, Bram},
  date = {2019-05},
  pages = {17--22},
  doi = {10.1109/SEmotion.2019.00011},
  abstract = {Software development is a collaborative activity in which feelings and emotions can affect the developer's productivity, creativity, and contribution satisfaction. For example, the Linux Kernel Mailing List (LKML), which is used by subsystem maintainers to review patches sent by contributors, is known for its direct communication style, which is sometimes blamed as having a negative impact on contributors. In September 28, 2018, the kernel's lead maintainer, Linus Torvalds, announced that he would take a temporary break from the community, which led numerous members of the kernel community and observers from other communities to wonder to what extent this unexpected event could raise awareness about respectful interactions between community members. This paper performs an exploratory study in which we use an off-the-shelf sentiment mining tool to assess whether the maintainers' sentiment changed after Linus Torvalds' temporary break from his maintainer role. Based on the data available thus far, we did not find any high-level changes in maintainer sentiment. In future work, we will perform more fine-grained sentiment analysis.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 4th {{International Workshop}} on {{Emotion Awareness}} in {{Software Engineering}} ({{SEmotion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PEEIVPUR/Ferreira et al. - 2019 - A Longitudinal Study on the Maintainers' Sentiment.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2Z3KUBPV/8825084.html},
  keywords = {collaborative activity,configuration management,data mining,Data mining,developer contribution satisfaction,developer creativity,developer productivity,direct communication style,Electronic mail,fine-grained sentiment analysis,kernel community,Linux,linux kernel,Linux Kernel Mailing List,mailing lists,maintainer role,maintainer sentiment,mining software repositories,Open source software,operating system kernels,public domain software,scale open source ecosystem,sentiment analysis,Sentiment analysis,sentiment mining tool,software development,software development management,Software development management,Software maintainence,software maintenance,subsystem maintainers}
}

@inproceedings{ferreira_study_2017,
  title = {Study of Barriers to Contribute with {{Brazilian}} Public Software Projects},
  booktitle = {2017 12th {{Iberian Conference}} on {{Information Systems}} and {{Technologies}} ({{CISTI}})},
  author = {Ferreira, Camila and Meirelles, Paulo and Neri, Kilmer},
  date = {2017-06},
  pages = {1--6},
  doi = {10.23919/CISTI.2017.7975772},
  abstract = {Brazilian public software projects are based on the principles and characteristics of free and open source software projects such as security, collaborative development models, technological independence, audibility, and free licenses. In this work, we try to understand the difficulty to start to contribute with a Brazilian public software via its development process and rules for this kind of projects. This paper aims to verify the barriers already proposed in the literature and investigates specific barriers in the context of Brazilian public software projects. For that, we performed a research with Brazilian public software communities and we elaborate a new model of barriers to contribute with Brazilian public software projects.},
  eventtitle = {2017 12th {{Iberian Conference}} on {{Information Systems}} and {{Technologies}} ({{CISTI}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SEZ7TT8E/Ferreira et al. - 2017 - Study of barriers to contribute with Brazilian pub.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3XPBCQ2W/7975772.html},
  keywords = {Adaptation models,Barriers,Biological system modeling,Brazilian public software projects,free software projects,Free/Libre/Open Source Software,Internet,Licenses,Newcomers,Open source software,open source software projects,Portals,project management,public domain software,Public Software,public software development,Software Communities,software engineering,software management}
}

@article{fershtman_open_2007,
  title = {Open Source Software: {{Motivation}} and Restrictive Licensing},
  shorttitle = {Open Source Software},
  author = {Fershtman, Chaim and Gandal, Neil},
  date = {2007-08-21},
  journaltitle = {International Economics and Economic Policy},
  volume = {4},
  pages = {209--225},
  issn = {1612-4804, 1612-4812},
  doi = {10.1007/s10368-007-0086-4},
  url = {http://link.springer.com/10.1007/s10368-007-0086-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZB29RXCB/art%3A10.1007%2Fs10368-007-0086-4.pdf},
  langid = {english},
  number = {2}
}

@incollection{filetti_concept_2011,
  title = {A {{Concept}} of a {{Virtual Research Environment}} for {{Long}}-{{Term Ecological Projects}} with {{Free}} and {{Open Source Software}}},
  booktitle = {Environmental {{Software Systems}}. {{Frameworks}} of {{eEnvironment}}},
  author = {Filetti, Mirko and Gnauck, Albrecht},
  date = {2011},
  pages = {235--244},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-22285-6_26},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G4FF956G/chp%3A10.1007%2F978-3-642-22285-6_26.pdf}
}

@book{filipe_web_2012,
  title = {Web {{Information Systems}} and {{Technologies}}},
  editor = {Filipe, Joaquim and Cordeiro, José},
  date = {2012},
  volume = {101},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-28082-5},
  urldate = {2015-11-26},
  editorb = {van der Aalst, Wil and Mylopoulos, John and Rosemann, Michael and Shaw, Michael J. and Szyperski, Clemens},
  editorbtype = {redactor},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VZ75X6MH/bok%3A978-3-642-28082-5.pdf},
  isbn = {978-3-642-28081-8 978-3-642-28082-5},
  options = {useprefix=true},
  series = {Lecture {{Notes}} in {{Business Information Processing}}}
}

@inproceedings{filippova_mudslinging_2015,
  title = {Mudslinging and {{Manners}}: {{Unpacking Conflict}} in {{Free}} and {{Open Source Software}}},
  shorttitle = {Mudslinging and {{Manners}}},
  author = {Filippova, Anna and Cho, Hichang},
  date = {2015},
  pages = {1393--1403},
  publisher = {{ACM Press}},
  doi = {10.1145/2675133.2675254},
  url = {http://dl.acm.org/citation.cfm?doid=2675133.2675254},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NVD9NGZ2/p1393-filippova.pdf},
  isbn = {978-1-4503-2922-4},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@article{fischer_rethinking_2008,
  title = {Rethinking Software Design in Participation Cultures},
  author = {Fischer, Gerhard},
  date = {2008-12},
  journaltitle = {Automated Software Engineering},
  volume = {15},
  pages = {365--377},
  issn = {0928-8910, 1573-7535},
  doi = {10.1007/s10515-008-0030-z},
  url = {http://link.springer.com/10.1007/s10515-008-0030-z},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/428T3NWR/art%3A10.1007%2Fs10515-008-0030-z.pdf},
  langid = {english},
  number = {3-4}
}

@incollection{fitzgerald_journeys_2017,
  title = {The Journeys},
  booktitle = {Scaling a {{Software Business}}},
  author = {Fitzgerald, Brian and Stol, Klaas-Jan and Minör, Sten and Cosmo, Henrik},
  date = {2017},
  pages = {56--235},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-53116-8_2},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-53116-8_2},
  urldate = {2018-08-15},
  abstract = {The Open Source movement is several decades old, but it wasn’t until the turn of the millennium that major companies entered the game. Traditional business wisdom had suggested that source code, which was seen as a “crown jewel” of a software company represented valuable intellectual property that should remain closed to maximize profit.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JNTACKID/Fitzgerald et al. - 2017 - The journeys.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M38YY7NB/978-3-319-53116-8_2.html},
  isbn = {978-3-319-53115-1 978-3-319-53116-8},
  langid = {english}
}

@article{fitzgerald_transformation_2006,
  title = {The {{Transformation}} of {{Open Source Software}}},
  author = {Fitzgerald, Brian},
  date = {2006},
  journaltitle = {Mis Quarterly},
  volume = {30},
  pages = {587--598},
  issn = {2162-9730},
  abstract = {A frequent characterization of open source software is the somewhat outdated, mythical one of a collective of supremely talented software hackers freely volunteering their services to produce uniformly high-quality software. I contend that the open source software phenomenon has metamorphosed into a more mainstream and commercially viable form, which I label as OSS 2.0. I illustrate this transformation using a framework of process and product factors, and discuss the shift in the application of the bazaar metaphor from the development process to the product delivery and support process. Overall the OSS 2.0 phenomenon is significantly different from its free software antecedent. Its emergence accentuates the fundamental alteration of the basic ground-rules in the software landscape, signifying the end of the proprietary-driven model that has prevailed for the past 20 years or so. Thus, a clear understanding of the characteristics of the emergent OSS 2.0 phenomenon is required to address key challenges for research and practice.},
  eprint = {10.2307/25148740},
  eprinttype = {jstor},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N55DT6NJ/brian.misq.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V547NRQP/Fitzgerald - 2006 - The transformation of open source software.pdf},
  keywords = {free software,open source},
  number = {3}
}

@thesis{fleiner_rita_az_2011,
  title = {Az Adatbázis-Biztonság Szerepe És Megvalósításának Feladatai a Kritikus Információs Infrastruktúrák Védelmében},
  author = {{Fleiner Rita}},
  date = {2011},
  institution = {{ZMNE KMDI}},
  location = {{Budapest}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F23IB4RQ/adatbázis_fleiner_rita.pdf}
}

@inproceedings{foo_sgl_2018,
  title = {{{SGL}}: {{A Domain}}-{{Specific Language}} for {{Large}}-{{Scale Analysis}} of {{Open}}-{{Source Code}}},
  shorttitle = {{{SGL}}},
  booktitle = {2018 {{IEEE Cybersecurity Development}} ({{SecDev}})},
  author = {Foo, Darius and Ang, Ming Yi and Yeo, Jason and Sharma, Asankhaya},
  date = {2018-09},
  pages = {61--68},
  doi = {10.1109/SecDev.2018.00016},
  abstract = {The following topics are dealt with: security of data; public domain software; program diagnostics; software engineering; software development management; formal verification; formal specification; operating systems (computers); cryptography; risk management.},
  eventtitle = {2018 {{IEEE Cybersecurity Development}} ({{SecDev}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LCEUKE8F/Foo et al. - 2018 - SGL A Domain-Specific Language for Large-Scale An.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4FA5BSJR/8543388.html},
  keywords = {cryptography,Databases,domain specific language,DSL,formal specification,formal verification,Libraries,Open source software,operating systems (computers),program analysis,program diagnostics,public domain software,risk management,security,Security,security of data,software development management,software engineering,Syntactics}
}

@incollection{forrest_exploring_2012,
  title = {Exploring the Role of Outside Organizations in Free/Open Source Software Projects},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Forrest, Darren and Jensen, Carlos and Mohan, Nitin and Davidson, Jennifer},
  date = {2012},
  pages = {201--215},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_13},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/79FFKJ96/Exploring the Role of Outside Organizations in Free Open Source Software Projects.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GKPASXUT/chp%3A10.1007%2F978-3-642-33442-9_13.pdf},
  isbn = {978-3-642-33442-9},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{forte_all_2012,
  title = {Some of All Human Knowledge: Gender and Participation in Peer Production},
  shorttitle = {Some of All Human Knowledge},
  booktitle = {Proceedings of the {{ACM}} 2012 Conference on {{Computer Supported Cooperative Work Companion}}},
  author = {Forte, Andrea and Antin, Judd and Bardzell, Shaowen and Honeywell, Leigh and Riedl, John and Stierch, Sarah},
  date = {2012},
  pages = {33--36},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2141530},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GHIRJ2TR/p33-forte.pdf}
}

@inproceedings{foulonneau_analyzing_2013,
  title = {Analyzing the Open Source Communities' Lifecycle with Communication Data},
  booktitle = {Proceedings of the {{Fifth International Conference}} on {{Management}} of {{Emergent Digital EcoSystems}}},
  author = {Foulonneau, Muriel and Pawelzik, Rolf and Grégoire, Bertrand and Donak, Ortwin},
  date = {2013},
  pages = {340--344},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2536183},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MVCMTPVV/p340-foulonneau.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{fox_open_2006,
  title = {Open Source},
  author = {Fox, Dirk},
  date = {2006},
  journaltitle = {Datenschutz und Datensicherheit-DuD},
  volume = {30},
  pages = {371--371},
  url = {http://www.springerlink.com/index/2m445867j10655mh.pdf},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9I39AHT7/art%3A10.1007%2Fs11623-006-0110-9.pdf},
  number = {6}
}

@incollection{francalanci_empirical_2008,
  title = {Empirical Analysis of the Bug Fixing Process in Open Source Projects},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Francalanci, Chiara and Merlo, Francesco},
  date = {2008},
  pages = {187--196},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_15},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PXW49TS4/chp%3A10.1007%2F978-0-387-09684-1_15.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{franch_risk_2016,
  ids = {franch\_risk\_2016-1},
  title = {Risk {{Assessment}} in {{Open Source Systems}}},
  booktitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  author = {Franch, Xavier and Susi, Angelo},
  date = {2016-05},
  pages = {896--897},
  abstract = {Adopting Open Source Software (OSS) components offers many advantages to organizations but also introduces risks related to the intrinsic fluidity of the OSS development projects. Choosing the right components is a critical decision, as it could contribute to the success of any adoption process. Making the right decision requires to evaluate the technical capabilities of the components and also related strategic aspects, including possible impacts on high level objectives. This can be achieved through a portfolio of risk assessment and mitigation methods. In this briefing we introduce the basic concepts related to OSS ecosystems and to risk representation and reasoning. We illustrate how risk management activities in OSS can benefit from the large amount of data available from OSS repositories and how they can be connected to business goals for strategic decision-making. The concepts are illustrated with a software platform developed in the context of the EU FP7 project RISCOSS.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6QU82UUU/Franch and Susi - 2016 - Risk assessment in open source systems.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JEN7D6NA/Franch and Susi - 2016 - Risk Assessment in Open Source Systems.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/76HCTZLI/7883433.html},
  keywords = {Biological system modeling,Cognition,conceptual modelling,Conceptual modelling,Ecosystems,EU FP7 project RISCOSS,mitigation methods,open source software,Open source software,Open Source Software,open source software components,open source systems,Organizations,OSS development projects,portfolio,project management,public domain software,risk assessment,Risk assessment,risk management,Risk management,risk reasoning,risk representation,software management,strategic decision making}
}

@inproceedings{franch_software_2016,
  title = {Software {{Release Planning}}},
  booktitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  author = {Franch, Xavier and Ruhe, Guenther},
  date = {2016-05},
  pages = {894--895},
  abstract = {One of the most critical activities in software product development is the decisional process that assigns features to subsequent releases under technical, resource, risk, and budget constraints. This decision-centric process is referred to as software release planning (SRP).This briefing will expose a state of the art on SRP. A survey of the most relevant approaches will be presented. Emphasis will be made on their applicability (concerning e.g. type of development process - being more predictive versus more adaptive, type of system - commercial, open source product or mobile app), tool support and degree of validation in industry. One of these approaches, EVOLVE, will be analysed in detail.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NUGNNRI5/Franch and Ruhe - 2016 - Software Release Planning.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9FLNQWGW/7883432.html},
  keywords = {Adaptive systems,budget constraints,decision theory,decision-centric process,EVOLVE approach,Industries,Mobile communication,Planning,Product development,program verification,resource constraints,risk constraints,risk management,Software,software cost estimation,software development management,Software engineering,Software evolution,software product development,software release planning,Software release planning,software tools,software validation,SRP,technical constraints,tool support}
}

@article{franck_reconciling_2003,
  title = {Reconciling Rent-Seekers and Donators–{{The}} Governance Structure of Open Source},
  author = {Franck, Egon and Jungwirth, Carola},
  date = {2003},
  journaltitle = {Journal of Management and Governance},
  volume = {7},
  pages = {401--421},
  url = {http://link.springer.com/article/10.1023/A:1026261005092},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5UWKP8RQ/art%3A10.1023%2FA%3A1026261005092.pdf},
  number = {4}
}

@inproceedings{franco-bedoya_measuring_2014,
  title = {Measuring the {{Quality}} of {{Open Source Software Ecosystems Using QuESo}}},
  booktitle = {Software {{Technologies}}},
  author = {Franco-Bedoya, Oscar and Ameller, David and Costal, Dolors and Franch, Xavier},
  date = {2014-08-29},
  pages = {39--62},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-25579-8_3},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-25579-8_3},
  urldate = {2018-08-15},
  abstract = {Open source software has witnessed an exponential growth in the last two decades and it is playing an increasingly important role in many companies and organizations leading to the formation of open source software ecosystems. In this paper we present a quality model that will allow the evaluation of those ecosystems in terms of their relevant quality characteristics such as health or activeness. To design this quality model we started by analysing the quality measures found during the execution of a systematic literature review on open source software ecosystems and, then, we classified and reorganized the set of measures in order to build a solid quality model. Finally, we test the suitability of the constructed quality model using the GNOME ecosystem.},
  eventtitle = {International {{Conference}} on {{Software Technologies}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HVTGDGXP/Franco-Bedoya et al. - 2014 - Measuring the Quality of Open Source Software Ecos.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A64FGIRK/978-3-319-25579-8_3.html},
  isbn = {978-3-319-25578-1 978-3-319-25579-8},
  langid = {english},
  series = {Communications in {{Computer}} and {{Information Science}}}
}

@article{franco-bedoya_open_2017,
  ids = {franco-bedoya\_open\_2017-1},
  title = {Open Source Software Ecosystems: {{A Systematic}} Mapping},
  shorttitle = {Open Source Software Ecosystems},
  author = {Franco-Bedoya, Oscar and Ameller, David and Costal, Dolors and Franch, Xavier},
  date = {2017-11-01},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {91},
  pages = {160--185},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2017.07.007},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584917304512},
  urldate = {2018-08-15},
  abstract = {Context: Open source software (OSS) and software ecosystems (SECOs) are two consolidated research areas in software engineering. OSS influences the way organizations develop, acquire, use and commercialize software. SECOs have emerged as a paradigm to understand dynamics and heterogeneity in collaborative software development. For this reason, SECOs appear as a valid instrument to analyze OSS systems. However, there are few studies that blend both topics together. Objective: The purpose of this study is to evaluate the current state of the art in OSS ecosystems (OSSECOs) research, specifically: (a) what the most relevant definitions related to OSSECOs are; (b) what the particularities of this type of SECO are; and (c) how the knowledge about OSSECO is represented. Method: We conducted a systematic mapping following recommended practices. We applied automatic and manual searches on different sources and used a rigorous method to elicit the keywords from the research questions and selection criteria to retrieve the final papers. As a result, 82 papers were selected and evaluated. Threats to validity were identified and mitigated whenever possible. Results: The analysis allowed us to answer the research questions. Most notably, we did the following: (a) identified 64 terms related to the OSSECO and arranged them into a taxonomy; (b) built a genealogical tree to understand the genesis of the OSSECO term from related definitions; (c) analyzed the available definitions of SECO in the context of OSS; and (d) classified the existing modelling and analysis techniques of OSSECOs. Conclusion: As a summary of the systematic mapping, we conclude that existing research on several topics related to OSSECOs is still scarce (e.g., modelling and analysis techniques, quality models, standard definitions, etc.). This situation calls for further investigation efforts on how organizations and OSS communities actually understand OSSECOs.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J8KDPHXP/Franco-Bedoya et al. - 2017 - Open source software ecosystems A Systematic mapp.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LPSF66MS/Franco-Bedoya et al. - 2017 - Open source software ecosystems A Systematic mapp.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/88JH9U6T/S0950584917304512.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NKDM79GD/S0950584917304512.html},
  keywords = {Literature review,Open source software,OSS,OSSECO,SECO,Software ecosystem,Systematic mapping}
}

@misc{frazelle_open_2019,
  title = {Open Source Firmware},
  author = {Frazelle, Jessie},
  date = {2019-09-24},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3343042},
  urldate = {2020-04-22},
  abstract = {Step into the world behind the kernel.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UP8XVCPX/Frazelle - 2019 - Open source firmware.pdf}
}

@incollection{friedman_development_2006,
  title = {Development of a Privacy Addendum for Open Source Licenses: {{Value Sensitive Design}} in Industry},
  shorttitle = {Development of a Privacy Addendum for Open Source Licenses},
  booktitle = {{{UbiComp}} 2006: {{Ubiquitous Computing}}},
  author = {Friedman, Batya and Smith, Ian and Kahn Jr, Peter H. and Consolvo, Sunny and Selawski, Jaina},
  date = {2006},
  pages = {194--211},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11853565_12},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MIR3JVUI/chp%3A10.1007%2F11853565_12.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{fu_expert_2017,
  title = {Expert Recommendation in Oss Projects Based on Knowledge Embedding},
  booktitle = {2017 {{International Workshop}} on {{Complex Systems}} and {{Networks}} ({{IWCSN}})},
  author = {Fu, Chenbo and Zhou, Mingming and Xuan, Qi and Hu, Hong-Xiang},
  date = {2017-12},
  pages = {149--155},
  doi = {10.1109/IWCSN.2017.8276520},
  abstract = {Modern Open Source Software (OSS) projects depend on the globally-distributed and synchronized software development. The online collaboration promotes more and more developers to join in OSS projects, while on the other hand, integrating new developers with teams is challenging and pivotal to the success of a project. In this paper, we propose a novel expert recommendation method, based on knowledge embedding, that realizes real-time recommendation for working developers. To capture structural information of source files in call graph, we use node2vec algorithm to convert file entities within projects into knowledge mappings within low-dimensional space, based on which we further propose four features to capture the work status and social relationship of developers. We then design a recommender system using random forest method to recommend appropriate experts for the developers. Experiments on 20 Apache OSS projects show that, compared with the baseline methods, our approach behaves significantly better in terms of a series of performance metrics.},
  eventtitle = {2017 {{International Workshop}} on {{Complex Systems}} and {{Networks}} ({{IWCSN}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/954PKH47/Fu et al. - 2017 - Expert recommendation in oss projects based on kno.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DHZRUQBR/8276520.html},
  keywords = {Apache OSS projects,Computer bugs,Electronic mail,expert recommendation,expert recommendation method,knowledge embedding,learning (artificial intelligence),machine learning,node2vec,node2vec algorithm,online collaboration,open source software,Open source software,open source software projects,performance metrics,Professional communication,project management,public domain software,random forest method,Receivers,recommender system,recommender systems,software development,software engineering,Software engineering}
}

@inproceedings{fu_revisiting_2017,
  title = {Revisiting Unsupervised Learning for Defect Prediction},
  booktitle = {Proceedings of the 2017 11th {{Joint Meeting}} on {{Foundations}} of {{Software Engineering}}},
  author = {Fu, Wei and Menzies, Tim},
  date = {2017-08-21},
  pages = {72--83},
  publisher = {{Association for Computing Machinery}},
  location = {{Paderborn, Germany}},
  doi = {10.1145/3106237.3106257},
  url = {https://doi.org/10.1145/3106237.3106257},
  urldate = {2020-04-22},
  abstract = {Collecting quality data from software projects can be time-consuming and expensive. Hence, some researchers explore "unsupervised" approaches to quality prediction that does not require labelled data. An alternate technique is to use "supervised" approaches that learn models from project data labelled with, say, "defective" or "not-defective". Most researchers use these supervised models since, it is argued, they can exploit more knowledge of the projects. At FSE-16, Yang et al. reported startling results where unsupervised defect predictors outperformed supervised predictors for effort-aware just-in-time defect prediction. If confirmed, these results would lead to a dramatic simplification of a seemingly complex task (data mining) that is widely explored in the software engineering literature. This paper repeats and refutes those results as follows. (1) There is much variability in the efficacy of the Yang et al. predictors so even with their approach, some supervised data is required to prune weaker predictors away. (2) Their findings were grouped across N projects. When we repeat their analysis on a project-by-project basis, supervised predictors are seen to work better. Even though this paper rejects the specific conclusions of Yang et al., we still endorse their general goal. In our our experiments, supervised predictors did not perform outstandingly better than unsupervised ones for effort-aware just-in-time defect prediction. Hence, they may indeed be some combination of unsupervised learners to achieve comparable performance to supervised ones. We therefore encourage others to work in this promising area.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HNDLMMF7/Fu and Menzies - 2017 - Revisiting unsupervised learning for defect predic.pdf},
  isbn = {978-1-4503-5105-8},
  keywords = {data analytics for software engineering,defect prediction,empirical studies,software repository mining},
  series = {{{ESEC}}/{{FSE}} 2017}
}

@incollection{fukami_specification_2010,
  title = {Specification {{Patent Management}} for {{Web Application Platform Ecosystem}}},
  booktitle = {E-Business {{Technology}} and {{Strategy}}},
  author = {Fukami, Yoshiaki and Isshiki, Masao and Takeda, Hideaki and Ohmukai, Ikki and Kokuryo, Jiro},
  date = {2010},
  pages = {269--280},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-16397-5_25},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A55XISKB/chp%3A10.1007%2F978-3-642-16397-5_25.pdf}
}

@inproceedings{fukuyori_approach_2017,
  title = {An {{Approach Based}} on {{Structural Differences}} to {{Expedite Applying OSS Updates}} to {{Products}}},
  booktitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  author = {Fukuyori, Masahiro and Umekawa, Ryuichi and Fujino, Hiroshi and Yamaguchi, Junya and Ariyama, Kota},
  date = {2017-07},
  volume = {2},
  pages = {445--450},
  issn = {0730-3157},
  doi = {10.1109/COMPSAC.2017.51},
  abstract = {Open source software (OSS)-based product development takes advantage of feature updates and bug fixes from OSS communities. However, when we customize the OSS and do not return the changes back to the OSS communities, our customization and the updates sometimes conflict. That makes it difficult to apply forthcoming OSS updates since we need to grasp the software changes appropriately. We propose a method to visualize software's structural differences using call graph. We have applied the method to a product development process and found that our method helps developers to speed up the application of OSS updates and reduce update errors. We have also found that solely providing call graph is insufficient for them to check the differences. They need more detailed information, e.g. data flow, as well as a guide to utilize the difference information to resolve the conflicts.},
  eventtitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/35RA8PPJ/Fukuyori et al. - 2017 - An Approach Based on Structural Differences to Exp.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KJCKQG5C/8029971.html},
  keywords = {Androids,bug fixes,call graph,data visualisation,feature updates,graph theory,Humanoid robots,open source software,OSS,OSS customization,OSS updates,product development,Product development,program debugging,public domain software,Smart phones,Software,software changes,software maintenance,software structural differences,software updates,static analysis,Tools,visualisation method,Visualization}
}

@article{gallego_user_2008,
  title = {User Acceptance Model of Open Source Software},
  author = {Gallego, M. Dolores and Luna, Paula and Bueno, Salvador},
  date = {2008-09},
  journaltitle = {Computers in Human Behavior},
  volume = {24},
  pages = {2199--2216},
  issn = {07475632},
  doi = {10.1016/j.chb.2007.10.006},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0747563207001604},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F2VGRFK3/1-s2.0-S0747563207001604-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {5}
}

@inproceedings{galster_exploring_2013,
  title = {Exploring Possibilities to Analyse Microblogs for Dependability Information in Variability-Intensive Open Source Software Systems},
  booktitle = {Software {{Reliability Engineering Workshops}} ({{ISSREW}}), 2013 {{IEEE International Symposium}} On},
  author = {Galster, Matthias and Tofan, Dan},
  date = {2013},
  pages = {321--325},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6688914},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3X2W7VDR/06688914.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{gamalielsson_licensing_2017,
  title = {On Licensing and Other Conditions for Contributing to Widely Used Open Source Projects: An Exploratory Analysis},
  shorttitle = {On Licensing and Other Conditions for Contributing to Widely Used Open Source Projects},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration}}},
  author = {Gamalielsson, Jonas and Lundell, Björn},
  date = {2017-08-23},
  pages = {1--14},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3125433.3125456},
  url = {https://doi.org/10.1145/3125433.3125456},
  urldate = {2020-04-22},
  abstract = {Open source software (OSS) projects are provided under different open source licenses and some projects use other conditions (in addition to licensing terms) for contributors to adhere to. Licensing terms and conditions may affect community involvement and contributions, and are perceived differently by different stakeholders in different OSS projects. The study reports from an exploratory analysis of licensing terms and other conditions for 200 widely used OSS projects, and an investigation of the relationship between licensing terms and other conditions for contributing. We find that strong copyleft licenses are most common and are used in the majority of the projects. Further, a clear majority of the OSS projects use no specific other condition for contributing in addition to the license terms. However, a clear majority of the OSS projects supported by foundations use other conditions for contributing in addition to the license terms. Finally, use of no specific other conditions in addition to the license terms is more common for projects using strong copyleft licensing compared to projects using non-copyleft licensing.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YBSQGL8Y/Gamalielsson and Lundell - 2017 - On licensing and other conditions for contributing.pdf},
  isbn = {978-1-4503-5187-4},
  keywords = {agreements,conditions,licensing,open source},
  series = {{{OpenSym}} '17}
}

@incollection{gamalielsson_long-term_2012,
  title = {Long-Term Sustainability of {{Open Source}} Software Communities beyond a Fork: A Case Study of {{LibreOffice}}},
  shorttitle = {Long-Term Sustainability of {{Open Source}} Software Communities beyond a Fork},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Gamalielsson, Jonas and Lundell, Björn},
  date = {2012},
  pages = {29--47},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_3},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EV9F8D7E/chp%3A10.1007%2F978-3-642-33442-9_3.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JVME53GF/chp%3A10.1007%2F978-3-642-33442-9_3.pdf}
}

@incollection{gamalielsson_open_2011,
  title = {Open {{Source Software}} for {{Model Driven Development}}: {{A Case Study}}},
  shorttitle = {Open {{Source Software}} for {{Model Driven Development}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Gamalielsson, Jonas and Lundell, Björn and Mattsson, Anders},
  date = {2011},
  pages = {348--367},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_30},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HHTF653P/chp%3A10.1007%2F978-3-642-24418-6_30.pdf}
}

@article{gamalielsson_organisational_2015,
  title = {On Organisational Influences in Software Standards and Their Open Source Implementations},
  author = {Gamalielsson, Jonas and Lundell, Björn and Feist, Jonas and Gustavsson, Tomas and Landqvist, Fredric},
  date = {2015-11},
  journaltitle = {Information and Software Technology},
  volume = {67},
  pages = {30--43},
  issn = {09505849},
  doi = {10.1016/j.infsof.2015.06.006},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S095058491500110X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/97HJ6EFK/1-s2.0-S095058491500110X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@article{gamalielsson_sustainability_2014,
  title = {Sustainability of {{Open Source}} Software Communities beyond a Fork: {{How}} and Why Has the {{LibreOffice}} Project Evolved?},
  shorttitle = {Sustainability of {{Open Source}} Software Communities beyond a Fork},
  author = {Gamalielsson, Jonas and Lundell, Björn},
  date = {2014-03},
  journaltitle = {Journal of Systems and Software},
  volume = {89},
  pages = {128--145},
  issn = {01641212},
  doi = {10.1016/j.jss.2013.11.1077},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121213002744},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KNM6355E/1-s2.0-S0164121213002744-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{gamalielsson_towards_2013,
  title = {Towards a {{Reference Model}} on {{How}} to {{Utilise Open Standards}} in {{Open Source Projects}}: {{Experiences Based}} on {{Drupal}}},
  shorttitle = {Towards a {{Reference Model}} on {{How}} to {{Utilise Open Standards}} in {{Open Source Projects}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Gamalielsson, Jonas and Lundell, Björn and Grahn, Alexander and Andersson, Stefan and Feist, Jonas and Gustavsson, Tomas and Strindberg, Henrik},
  date = {2013},
  pages = {257--263},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_19},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6N8VNZFJ/chp%3A10.1007%2F978-3-642-38928-3_19.pdf}
}

@inproceedings{gandhi_estimating_2017,
  title = {Estimating Reliability for {{OSS}}: {{An}} Approach with Change-Point in Operational Phase},
  shorttitle = {Estimating Reliability for {{OSS}}},
  booktitle = {2017 6th {{International Conference}} on {{Reliability}}, {{Infocom Technologies}} and {{Optimization}} ({{Trends}} and {{Future Directions}}) ({{ICRITO}})},
  author = {Gandhi, Neha and Neha and Aggarwal, Anu G. and Tandon, Abhishek},
  date = {2017-09},
  pages = {248--253},
  doi = {10.1109/ICRITO.2017.8342433},
  abstract = {Software reliability growth models (SRGMs) proposed on the foundations of Non-Homogenous Poisson Process (NHPP) have been the most accepted way to analyze reliability growth of a software since 1970's. Henceforth, Literature witnesses the evolution of SRGMs in terms of different assumptions, parameters, performance etc. This study is an attempt to model reliability growth phenomenon for Open Source Software (OSS). As the development process followed by OSS significantly differs from proprietary software, traditional software engineering SDLC models can't be followed for its development. OSS development procedure does not incorporate a dedicated testing phase and therefore negligible effort expenditure is done on testing of software prior its release. The volume of volunteer participation in its operational phase thus becomes a significant criterion in the representation of its reliability growth. Also, the impact of sudden changes in fault detection process (change-point) due to several reasons like variations in fault density, irregular team size, volunteer expertise etc is captured in proposed SRGM. This paper suggests a reliability model based on user growth with the concept of change point to better cater the heterogeneity in software failure process. Failure data of GNOME 2.0 is used in this paper reliability growth analysis. Unknown parameters are estimated using Least Square Estimation regression technique. Performance inspection of proposed SRGM is carried out using goodness-of-fit criteria like Mean square error (MSE), Coefficient of Determination (R2), Predictive Ratio Risk (PRR), and Predictive Power (PP). The study recommends that introduction of the change-point in SRGM improves prediction capability of the model and hence establishes an evidence of its applicability.},
  eventtitle = {2017 6th {{International Conference}} on {{Reliability}}, {{Infocom Technologies}} and {{Optimization}} ({{Trends}} and {{Future Directions}}) ({{ICRITO}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KJUWAVY4/Gandhi et al. - 2017 - Estimating reliability for OSS An approach with c.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PQTECGES/8342433.html},
  keywords = {change point,change-point,Change-point,development process,Fault detection,fault detection process,Least square estimation,Least Square Estimation regression technique,least squares approximations,Mathematical model,model reliability growth phenomenon,NonHomogenous Poisson Process,Open Source Software,Open Source Software Development,operational phase,OSS development procedure,proprietary software,public domain software,regression analysis,reliability growth analysis,reliability model,Software,software engineering SDLC models,software failure process,Software failure process,software reliability,Software reliability,Software Reliability Growth Model,Software reliability growth models,SRGMs,stochastic processes,Technological innovation,Testing,user growth}
}

@inproceedings{gandhi_open_2018,
  title = {Open {{Data Standards}} for {{Open Source Software Risk Management Routines}}: {{An Examination}} of {{SPDX}}},
  shorttitle = {Open {{Data Standards}} for {{Open Source Software Risk Management Routines}}},
  booktitle = {Proceedings of the 2018 {{ACM Conference}} on {{Supporting Groupwork}}},
  author = {Gandhi, Robin and Germonprez, Matt and Link, Georg J.P.},
  date = {2018-01-07},
  pages = {219--229},
  publisher = {{Association for Computing Machinery}},
  location = {{Sanibel Island, Florida, USA}},
  doi = {10.1145/3148330.3148333},
  url = {https://doi.org/10.1145/3148330.3148333},
  urldate = {2020-04-22},
  abstract = {As the organizational use of open source software (OSS) increases, it requires the adjustment of organizational routines to manage new OSS risk. These routines may be influenced by community-developed open data standards to explicate, analyze, and report OSS risks. Open data standards are co-created in open communities for unifying the exchange of information. The SPDX® specification is such an open data standard to explicate and share OSS risk information. The development and subsequent adoption of SPDX raises the questions of how organizations make sense of SPDX when improving their own risk management routines, and of how a community benefits from the experiential knowledge that is contributed back by organizational adopters. To explore these questions, we conducted a single case, multi-component field study, connecting with members of organizations that employed SPDX. The results of this study contribute to understanding the development and adoption of open data standards within open source environments.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HPF4Z44T/Gandhi et al. - 2018 - Open Data Standards for Open Source Software Risk .pdf},
  isbn = {978-1-4503-5562-9},
  keywords = {case study,interviews,open source software,practice theory,risk management,routines,standardization},
  series = {{{GROUP}} '18}
}

@incollection{gangadharan_free_2012,
  title = {Free and {{Open Source Software Adoption}} in {{Emerging Markets}}: {{An Empirical Study}} in the {{Education Sector}}},
  shorttitle = {Free and {{Open Source Software Adoption}} in {{Emerging Markets}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Gangadharan, G. R. and Butler, Martin},
  date = {2012},
  pages = {244--249},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_16},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NTU3ANJN/Free and Open Source Software Adoption in Emerging Markets - An Empirical Study in the Education Sector.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W3G548ZJ/chp%3A10.1007%2F978-3-642-33442-9_16.pdf},
  isbn = {978-3-642-33442-9},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{gangadharan_managing_2012,
  title = {Managing License Compliance in Free and Open Source Software Development},
  author = {Gangadharan, G. R. and D’Andrea, Vincenzo and Paoli, Stefano and Weiss, Michael},
  date = {2012-04},
  journaltitle = {Information Systems Frontiers},
  volume = {14},
  pages = {143--154},
  issn = {1387-3326, 1572-9419},
  doi = {10.1007/s10796-009-9180-1},
  url = {http://link.springer.com/10.1007/s10796-009-9180-1},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5CUAGKQW/Managing license compliance in free and open source software development.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J6SMR5GJ/art%3A10.1007%2Fs10796-009-9180-1.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {2}
}

@inproceedings{garcia_role_2013,
  title = {The {{Role}} of {{Emotions}} in {{Contributors Activity}}: {{A Case Study}} on the {{GENTOO Community}}},
  shorttitle = {The {{Role}} of {{Emotions}} in {{Contributors Activity}}},
  author = {Garcia, David and Zanetti, Marcelo Serrano and Schweitzer, Frank},
  date = {2013-09},
  pages = {410--417},
  publisher = {{IEEE}},
  doi = {10.1109/CGC.2013.71},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6686063},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/47EN59XD/06686063.pdf},
  isbn = {978-0-7695-5114-2},
  keywords = {_SMS_untagged,community,Forrás1,nyílt forrás}
}

@online{gartner_inc._nyilt_nodate,
  title = {A Nyílt Forráskódú Eszközök a Vállalati Informatikai Vezető Szemszögéből},
  author = {Gartner Inc.},
  journaltitle = {eGov},
  url = {http://hirlevel.egov.hu/2011/05/09/gartner-inc-a-nyilt-forraskodu-eszkozok-a-vallalati-informatikai-vezeto-szemszogebol/},
  urldate = {2013-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FT7JSNM5/gartner-inc-a-nyilt-forraskodu-eszkozok-a-vallalati-informatikai-vezeto-szemszogebol.html}
}

@book{garvey_analytical_2009,
  title = {Analytical Methods for Risk Management: A Systems Engineering Perspective},
  shorttitle = {Analytical Methods for Risk Management},
  author = {Garvey, Paul R},
  date = {2009},
  publisher = {{CRC Press}},
  location = {{Boca Raton}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NNKQ76BB/Analytical Methods for Risk Management A Systems Engineering Perspective.pdf},
  isbn = {978-1-58488-637-2 1-58488-637-4},
  keywords = {Analysis,Risk management},
  langid = {english}
}

@article{gary_a._messenbrink_linux_2001,
  title = {Linux Irányítja {{San Francisco}} Közlekedését},
  author = {{Gary A. Messenbrink} and {Frank Ruffa}},
  date = {2001},
  journaltitle = {Linuxvilág},
  volume = {II. évf},
  pages = {12},
  issn = {1586-5002},
  issue = {5.}
}

@unpublished{gary_hein_open_2004,
  title = {Open {{Source Software}}: {{Risks}} and {{Rewards}}},
  author = {{Gary Hein}},
  date = {2004},
  url = {www.educause.edu/ir/library/pdf/ECR0405.pdf},
  urldate = {2014-05-18},
  eventtitle = {{{ECAR Symposium}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KPDT22IP/ECR0405.pdf},
  keywords = {free software,open source}
}

@misc{gary_stoneburner_nist_nodate,
  title = {{{NIST Special Publication}} 800-27 {{Rev A}}},
  author = {{Gary Stoneburner} and {Clark Hayden} and {Alexis Feringa}},
  url = {http://csrc.nist.gov/publications/nistpubs/800-27A/SP800-27-RevA.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C9K9VPDB/NIST-SP800-27-RevA.pdf},
  keywords = {information security}
}

@incollection{gasser_towards_2008,
  title = {Towards a Global Research Infrastructure for Multidisciplinary Study of Free/Open Source Software Development},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Gasser, Les and Scacchi, Walt},
  date = {2008},
  pages = {143--158},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZHZ5FBT6/chp%3A10.1007%2F978-0-387-09684-1_12.pdf},
  keywords = {empirical study,Forrás2,OSS,secondary research}
}

@misc{gastil_digital_2020,
  title = {Digital {{Democracy}}: {{Episode IV}}—{{A New Hope}}*: {{How}} a {{Corporation}} for {{Public Software Could Transform Digital Engagement}} for {{Government}} and {{Civil Society}}},
  shorttitle = {Digital {{Democracy}}},
  author = {Gastil, John and Davies, Todd},
  date = {2020-02-18},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3342194},
  urldate = {2020-04-22},
  abstract = {Although successive generations of digital technology have become increasingly powerful in the past 20 years, digital democracy has yet to realize its potential for deliberative transformation. The undemocratic exploitation of massive social media systems continued this trend, but it only worsened an existing problem of modern democracies, which were already struggling to develop deliberative infrastructure independent of digital technologies. There have been many creative conceptions of civic tech, but implementation has lagged behind innovation. This article argues for implementing one such vision of digital democracy through the establishment of a public corporation. Modeled on the Corporation for Public Broadcasting in the United States, this entity would foster the creation of new digital technology by providing a stable source of funding to nonprofit technologists, interest groups, civic organizations, government, researchers, private companies, and the public. Funded entities would produce and maintain software infrastructure for public benefit. The concluding sections identify what circumstances might create and sustain such an entity.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NKW5EHNU/Gastil and Davies - 2020 - Digital Democracy Episode IV—A New Hope How a C.pdf},
  keywords = {Civic engagement,deliberative democracy,government consultation,nonprofit technology,political participation,public media}
}

@incollection{gediya_7_2019,
  title = {7 - {{Open}}-{{Source Software}}},
  booktitle = {Software {{Engineering}} for {{Embedded Systems}} ({{Second Edition}})},
  author = {Gediya, Jagdish and Singh, Jaswinder and Kushwaha, Prabhakar and Srivastava, Rajan and Wang, Zening},
  editor = {Oshana, Robert and Kraeling, Mark},
  date = {2019-01-01},
  pages = {207--244},
  publisher = {{Newnes}},
  doi = {10.1016/B978-0-12-809448-8.00007-2},
  url = {http://www.sciencedirect.com/science/article/pii/B9780128094488000072},
  urldate = {2020-04-22},
  abstract = {In the last 2 decades, open-source software has been adopted widely by many companies due to its significant advantages over proprietary alternatives. Many companies use open-source software to build commercial products and services because it helps achieve faster times to market and reduces development costs. Open-source software is reliable and secure because the global community has contributed to its development and thorough review. This chapter covers open-source operating systems like “Linux” and “FreeRTOS” as well as the open-source boot loader “U-Boot.” Linux is an open-source operating system that is widely used in embedded system as well as servers, desktops, and mobile devices. U-Boot is an open-source boot loader widely used in embedded systems, supporting a number of architectures. FreeRTOS is an open-source real-time kernel developed for small embedded systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Y8C6MWC6/B9780128094488000072.html},
  isbn = {978-0-12-809448-8},
  keywords = {Architecture,Embedded system,Linux,Open source,Operating systems,Router,Security},
  langid = {english}
}

@article{gehring_institutionalization_2006,
  title = {The Institutionalization of {{Open Source}}},
  author = {Gehring, Robert A.},
  date = {2006-03},
  journaltitle = {Poiesis \& Praxis},
  volume = {4},
  pages = {54--73},
  issn = {1615-6609, 1615-6617},
  doi = {10.1007/s10202-005-0012-1},
  url = {http://link.springer.com/10.1007/s10202-005-0012-1},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6URC8N7U/art%3A10.1007%2Fs10202-005-0012-1.pdf},
  langid = {english},
  number = {1}
}

@incollection{gencer_forking_2012,
  title = {Forking the {{Commons}}: {{Developmental Tensions}} and {{Evolutionary Patterns}} in {{Open Source Software}}},
  shorttitle = {Forking the {{Commons}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Gençer, Mehmet and Özel, Bülent},
  date = {2012},
  pages = {310--315},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_27},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/35DWPH2J/Forking the Commons.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DS8JXGUA/chp%3A10.1007%2F978-3-642-33442-9_27.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{gendreau_process_2013,
  title = {A Process Practice to Validate the Quality of Reused Component Documentation: A Case Study Involving Open-Source Components},
  shorttitle = {A Process Practice to Validate the Quality of Reused Component Documentation},
  booktitle = {Proceedings of the 2013 {{International Conference}} on {{Software}} and {{System Process}}},
  author = {Gendreau, Olivier and Robillard, Pierre N.},
  date = {2013},
  pages = {61--69},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2486059},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JT4BHDGS/p61-gendreau.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{geng_social_2014,
  title = {Social Preferences and Open Source Software Development},
  author = {Geng, Xianjun and Lin, Lihui and Peng, Gang},
  date = {2014},
  url = {http://aisel.aisnet.org/cgi/viewcontent.cgi?article=1385&context=pacis2014},
  urldate = {2014-12-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GGQU7ZNU/SOCIAL PREFERENCES AND OPEN SOURCE SOFTWARE  DEVELOPMENT.pdf},
  keywords = {community,OSS}
}

@inproceedings{georgas_raging_2005,
  title = {Raging {{Incrementalism}}: {{Harnessing Change}} with {{Open}}-Source {{Software}}},
  shorttitle = {Raging {{Incrementalism}}},
  booktitle = {Proceedings of the {{Fifth Workshop}} on {{Open Source Software Engineering}}},
  author = {Georgas, John C. and Gorlick, Michael M. and Taylor, Richard N.},
  date = {2005},
  pages = {1--6},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1082983.1083263},
  url = {http://doi.acm.org/10.1145/1082983.1083263},
  urldate = {2015-11-24},
  abstract = {Change is a bitter fact of life for system developers and, to a large extent, conventional practices are aimed at arresting change and minimizing its effects. We take the opposite view and are exploring system engineering practices that harness the forces of change for the ongoing, incremental improvement of systems---a view we name raging incrementalism. We harness three powerful forces to ride the waves of change: open-source software, commodity hardware, and web-like, representational state transfer architectures. This paper describes an early experiment in applying raging incrementalism to a complex system: large-scale digital video capture, distribution, and archival for launch range operations. We outline the methodology of raging incrementalism, describe the vital role open-source plays in system development and construction, and offer insights on the programmatic consequences of embracing open-source software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z8BVBIVR/Georgas és mtsai. - 2005 - Raging Incrementalism Harnessing Change with Open.pdf},
  isbn = {978-1-59593-127-6},
  keywords = {_SMS_untagged,nyílt forrás,Open Source,raging incrementalism,representational state transfer},
  series = {5-{{WOSSE}}}
}

@book{george_coulouris_distributed_2011,
  title = {Distributed {{Systems}}: {{Concepts}} and {{Design}}},
  author = {{George Coulouris} and {Jean Dollimore} and {Tim Kindberg} and {Gordon Blair}},
  date = {2011},
  edition = {5th Edition},
  publisher = {{Addison Wesley}},
  isbn = {0-13-214301-1}
}

@article{georgios_gousios_exploratory_2013,
  title = {An {{Exploratory Study}} of the {{Pull}}-Based {{Software Development Model}}},
  author = {{Georgios Gousios} and {Martin Pinzger} and {Arie van Deursen}},
  date = {2013},
  journaltitle = {Delft University of Technology Software Engineering Research Group Technical Report Series},
  issn = {1872-5392},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FGDZDRPD/TUD-SERG-2013-010.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TTKKXAMC/pullreqs.pdf}
}

@book{gerard_blokdijk_risk_2007,
  title = {Risk {{Management}} 100 {{Success Secrets}}},
  author = {{Gerard Blokdijk}},
  date = {2007},
  publisher = {{Emereo Publishing}},
  abstract = {There has never been a Risk Management manual like this. 100 Success Secrets is not about the ins and outs of the Risk Management. Instead, it answers the top 100 questions that we are asked and those we come across in forums, our consultancy and education programs. It tells you exactly how to deal with those questions, with tips that have never before been offered in print. This book is also not about a Risk Management's best practice and standards details. Instead it introduces everything you want to know to be successful with and in Risk Management.},
  isbn = {978-0-9804599-3-7},
  keywords = {Risk management}
}

@online{gerberding_nist_2017,
  title = {{{NIST}}, {{CIS}}/{{SANS}} 20, {{ISO}} 27001: {{What}}'s the Difference?},
  shorttitle = {{{NIST}}, {{CIS}}/{{SANS}} 20, {{ISO}} 27001},
  author = {Gerberding, Katharina},
  date = {2017-09-05T09:01:06-04:00},
  journaltitle = {Hitachi Systems Security | Managed Security Services Provider},
  url = {https://www.hitachi-systems-security.com/blog/nist-cissans-20-iso-27001-simplifying-security-control-assessments/},
  urldate = {2018-09-17},
  abstract = {A simple explanation of the most common security control frameworks to understand the complex world of compliance and security controls.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TTYJAST3/nist-cissans-20-iso-27001-simplifying-security-control-assessments.html},
  langid = {american}
}

@article{german_continuously_2015,
  title = {Continuously Mining Distributed Version Control Systems: An Empirical Study of How {{Linux}} Uses {{Git}}},
  shorttitle = {Continuously Mining Distributed Version Control Systems},
  author = {German, Daniel M. and Adams, Bram and Hassan, Ahmed E.},
  date = {2015-03-07},
  journaltitle = {Empirical Software Engineering},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-014-9356-2},
  url = {http://link.springer.com/10.1007/s10664-014-9356-2},
  urldate = {2015-11-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FN9RHUPB/art%3A10.1007%2Fs10664-014-9356-2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TTCNUVPN/art%3A10.1007%2Fs10664-014-9356-2.pdf},
  keywords = {_SMS_untagged,Forrás3,nyílt forrás},
  langid = {english}
}

@incollection{german_empirical_2009,
  title = {An Empirical Study of the Reuse of Software Licensed under the {{GNU General Public License}}},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {German, Daniel M. and González-Barahona, Jesús M.},
  date = {2009},
  pages = {185--198},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_17},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2XVAPDMA/chp%3A10.1007%2F978-3-642-02032-2_17.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{german_sentence-matching_2010,
  title = {A Sentence-Matching Method for Automatic License Identification of Source Code Files},
  booktitle = {Proceedings of the {{IEEE}}/{{ACM}} International Conference on {{Automated}} Software Engineering},
  author = {German, Daniel M. and Manabe, Yuki and Inoue, Katsuro},
  date = {2010},
  pages = {437--446},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1859088},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2PUWWF2E/p437-german.pdf},
  keywords = {_SMS_untagged,Copyright licenses,license,nyílt forrás,open source}
}

@inproceedings{german_was_2018,
  ids = {german\_was\_2018-1},
  title = {"{{Was My Contribution Fairly Reviewed}}?" {{A Framework}} to {{Study}} the {{Perception}} of {{Fairness}} in {{Modern Code Reviews}}},
  shorttitle = {"{{Was My Contribution Fairly Reviewed}}?},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {German, Daniel M. and Robles, Gregorio and Poo-Caamaño, Germán and Yang, Xin and Iida, Hajimu and Inoue, Katsuro},
  date = {2018-05},
  pages = {523--534},
  issn = {1558-1225},
  doi = {10.1145/3180155.3180217},
  abstract = {Modern code reviews improve the quality of software products. Although modern code reviews rely heavily on human interactions, little is known regarding whether they are performed fairly. Fairness plays a role in any process where decisions that affect others are made. When a system is perceived to be unfair, it affects negatively the productivity and motivation of its participants. In this paper, using fairness theory we create a framework that describes how fairness affects modern code reviews. To demonstrate its applicability, and the importance of fairness in code reviews, we conducted an em-pirical study that asked developers of a large industrial open source ecosystem (OpenStack) what their perceptions are regarding fairness in their code reviewing process. Our study shows that, in general, the code review process in OpenStack is perceived as fair; however, a significant portion of respondents perceive it as unfair. We also show that the variability in the way they prioritize code reviews signals a lack of consistency and the existence of bias (potentially increasing the perception of unfairness). The contributions of this paper are: (1) we propose a framework-based on fairness theory-for studying and managing social behaviour in modern code reviews, (2) we provide support for the framework through the results of a case study on a large industrial-backed open source project, (3) we present evidence that fairness is an issue in the code review process of a large open source ecosystem, and, (4) we present a set of guidelines for practitioners to address unfairness in modern code reviews.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4PN3T4HY/German et al. - 2018 - Was my contribution fairly reviewed a framewor.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZTQFH7KE/German et al. - 2018 - Was My Contribution Fairly Reviewed A Framework.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4FGFSC5H/8453118.html},
  keywords = {code review process,code review signals,Code Reviews,Ecosystems,fairness,Fairness,Guidelines,human and social aspects,industrial open source ecosystem,modern code review,modern code reviews,open source software,Open source software,OpenStack,organisational aspects,Organizations,Process control,public domain software,software development,Software Development,software product quality,software quality,Software reviews,Standards organizations,transparency}
}

@misc{germonprez_eight_2018,
  title = {Eight {{Observations}} and 24 {{Research Questions About Open Source Projects}}: {{Illuminating New Realities}}},
  shorttitle = {Eight {{Observations}} and 24 {{Research Questions About Open Source Projects}}},
  author = {Germonprez, Matt and Link, Georg J.P. and Lumbard, Kevin and Goggins, Sean},
  date = {2018-11-01},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3274326},
  urldate = {2020-04-22},
  abstract = {The rapid acceleration of corporate engagement with open source projects is drawing out new ways for CSCW researchers to consider the dynamics of these projects. Research must now consider the complex ecosystems within which open source projects are situated, including issues of for-profit motivations, brokering foundations, and corporate collaboration. Localized project considerations cannot reveal broader workings of an open source ecosystem, yet much empirical work is constrained to a local context. In response, we present eight observations from our eight-year engaged field study about the changing nature of open source projects. We ground these observations through 24 research questions that serve as primers to spark research ideas in this new reality of open source projects. This paper contributes to CSCW in social and crowd computing by delivering a rich and fresh look at corporately-engaged open source projects with a call for renewed focus and research into newly emergent areas of interest.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2D929A8Z/Germonprez et al. - 2018 - Eight Observations and 24 Research Questions About.pdf},
  keywords = {corporate-communal engagement,open source,tales from the field}
}

@inproceedings{gezici_quality_2019,
  title = {Quality and {{Success}} in {{Open Source Software}}: {{A Systematic Mapping}}},
  shorttitle = {Quality and {{Success}} in {{Open Source Software}}},
  booktitle = {2019 45th {{Euromicro Conference}} on {{Software Engineering}} and {{Advanced Applications}} ({{SEAA}})},
  author = {Gezici, Bahar and Özdemir, Nurseda and Yılmaz, Nebi and Coşkun, Evren and Tarhan, Ayça and Chouseinoglou, Oumout},
  date = {2019-08},
  pages = {363--370},
  doi = {10.1109/SEAA.2019.00062},
  abstract = {As the number of available Open Source Software (OSS) and the interest they attract are increasing, numerous product attributes are provided to developers and users for evaluating the quality and success of an OSS. Accordingly, various articles in the literature assess the quality and success of OSS, by using different quality attributes and metrics and different approaches. Though this variety can be considered as a positive indicator of research interest and maturation on one side, it creates a kind of jungle in defining and understanding the terms 'quality' and 'success' on the other side. Based on this challenge, in this study, we targeted a systematic mapping (SM) of the articles on quality and success of OSS. More than 474 articles have appeared in this area between the years 2002 and 2017, and the final pool of 128 articles is obtained by defining and applying inclusion and exclusion criteria. SM was employed to develop a classification scheme and categorized the existing body of articles with respect to five research questions (RQs) on: contribution and research types, quality criteria and metrics, success criteria and metrics, the relation of quality and success, and demographics. We observed that the majority of the articles assess the concept of quality as 'code quality', whereas the concept of success is mostly perceived as 'market success' and/or 'developer activity'. Moreover, the metrics of 'contributing developers/users', and the quality attribute of 'functionality' are the quality criteria most employed in the assessment of success.},
  eventtitle = {2019 45th {{Euromicro Conference}} on {{Software Engineering}} and {{Advanced Applications}} ({{SEAA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AQNTJZPU/Gezici et al. - 2019 - Quality and Success in Open Source Software A Sys.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SAD3JBZ6/8906786.html},
  keywords = {open source; software; OSS; quality; success; systematic mapping; software metrics}
}

@misc{ghaffarian_software_2017,
  title = {Software {{Vulnerability Analysis}} and {{Discovery Using Machine}}-{{Learning}} and {{Data}}-{{Mining Techniques}}: {{A Survey}}},
  shorttitle = {Software {{Vulnerability Analysis}} and {{Discovery Using Machine}}-{{Learning}} and {{Data}}-{{Mining Techniques}}},
  author = {Ghaffarian, Seyed Mohammad and Shahriari, Hamid Reza},
  date = {2017-08-25},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3092566},
  urldate = {2020-04-22},
  abstract = {Software security vulnerabilities are one of the critical issues in the realm of computer security. Due to their potential high severity impacts, many different approaches have been proposed in the past decades to mitigate the damages of software vulnerabilities. Machine-learning and data-mining techniques are also among the many approaches to address this issue. In this article, we provide an extensive review of the many different works in the field of software vulnerability analysis and discovery that utilize machine-learning and data-mining techniques. We review different categories of works in this domain, discuss both advantages and shortcomings, and point out challenges and some uncharted territories in the field.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2Y4HSTH4/Ghaffarian and Shahriari - 2017 - Software Vulnerability Analysis and Discovery Usin.pdf},
  keywords = {data-mining,machine-learning,review,software security,Software vulnerability analysis,software vulnerability discovery,survey}
}

@article{ghapanchi_competency_2012,
  title = {Competency Rallying in Electronic Markets: Implications for Open Source Project Success},
  shorttitle = {Competency Rallying in Electronic Markets},
  author = {Ghapanchi, Amir Hossein and Aurum, Aybuke},
  date = {2012-06},
  journaltitle = {Electronic Markets},
  volume = {22},
  pages = {117--127},
  issn = {1019-6781, 1422-8890},
  doi = {10.1007/s12525-012-0088-0},
  url = {http://link.springer.com/10.1007/s12525-012-0088-0},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2CHGHGWP/Competency rallying in electronic markets implications for open source project success.pdf},
  langid = {english},
  number = {2}
}

@inproceedings{gharehyazie_here_2017,
  title = {Some from Here, Some from There: Cross-Project Code Reuse in {{GitHub}}},
  shorttitle = {Some from Here, Some from There},
  booktitle = {Proceedings of the 14th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Gharehyazie, Mohammad and Ray, Baishakhi and Filkov, Vladimir},
  date = {2017-05-20},
  pages = {291--301},
  publisher = {{IEEE Press}},
  location = {{Buenos Aires, Argentina}},
  doi = {10.1109/MSR.2017.15},
  url = {https://doi.org/10.1109/MSR.2017.15},
  urldate = {2020-04-22},
  abstract = {Code reuse has well-known benefits on code quality, coding efficiency, and maintenance. Open Source Software (OSS) programmers gladly share their own code and they happily reuse others'. Social programming platforms like GitHub have normalized code foraging via their common platforms, enabling code search and reuse across different projects. Removing project borders may facilitate more efficient code foraging, and consequently faster programming. But looking for code across projects takes longer and, once found, may be more challenging to tailor to one's needs. Learning how much code reuse goes on across projects, and identifying emerging patterns in past cross-project search behavior may help future foraging efforts. To understand cross-project code reuse, here we present an in-depth study of cloning in GitHub. Using Deckard, a clone finding tool, we identified copies of code fragments across projects, and investigate their prevalence and characteristics using statistical and network science approaches, and with multiple case studies. By triangulating findings from different methods, we find that cross-project cloning is prevalent in GitHub, ranging from cloning few lines of code to whole project repositories. Some of the projects serve as popular sources of clones, and others seem to contain more clones than their fair share. Moreover, we find that ecosystem cloning follows an onion model: most clones come from the same project, then from projects in the same application domain, and finally from projects in different domains. Our results show directions for new tools that can facilitate code foraging and sharing within GitHub.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NNE9FXW3/Gharehyazie et al. - 2017 - Some from here, some from there cross-project cod.pdf},
  isbn = {978-1-5386-1544-7},
  series = {{{MSR}} '17}
}

@inproceedings{gharehyazie_social_2013,
  title = {Social Activities Rival Patch Submission for Prediction of Developer Initiation in Oss Projects},
  booktitle = {Software {{Maintenance}} ({{ICSM}}), 2013 29th {{IEEE International Conference}} On},
  author = {Gharehyazie, Mohammad and Posnett, Daryl and Filkov, Vladimir},
  date = {2013},
  pages = {340--349},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6676905},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9AK527RZ/___socialvspatch.pdf}
}

@article{gharibi_studying_2011,
  title = {Studying and {{Classification}} of the {{Most Significant Malicious Software}}},
  author = {Gharibi, Wajeb},
  date = {2011},
  journaltitle = {arXiv preprint arXiv:1106.0853},
  url = {http://arxiv.org/abs/1106.0853},
  urldate = {2013-09-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BRCAZHNV/1106.0853.pdf}
}

@article{ghocze_tudomanyos_2011,
  title = {A {{TUDOMÁNYOS KUTATÁS MÖDSZEREI}}.},
  author = {G\textbackslash HOCZE, István},
  date = {2011},
  journaltitle = {Military Science Review/Hadtudományi Szemle},
  volume = {4},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NGVECNHW/2011_3_alt_gocze_istvan_157_166.pdf},
  number = {3}
}

@incollection{gilbert_codesaw_2007,
  title = {{{CodeSaw}}: {{A}} Social Visualization of Distributed Software Development},
  shorttitle = {{{CodeSaw}}},
  booktitle = {Human-{{Computer Interaction}}–{{INTERACT}} 2007},
  author = {Gilbert, Eric and Karahalios, Karrie},
  date = {2007},
  pages = {303--316},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-74800-7_25},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TFB4RU95/chp%3A10.1007%2F978-3-540-74800-7_25.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{gkantouna_mining_2013,
  title = {Mining the {{Conceptual Model}} of {{Open Source CMS Using}} a {{Reverse Engineering Approach}}},
  booktitle = {Engineering {{Applications}} of {{Neural Networks}}},
  author = {Gkantouna, Vassiliki and Sioutas, Spyros and Sourla, Georgia and Tsakalidis, Athanasios and Tzimas, Giannis},
  date = {2013},
  pages = {119--128},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-41016-1_13},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QDWH6QGB/chp%3A10.1007%2F978-3-642-41016-1_13.pdf}
}

@inproceedings{gkortzis_double-edged_2019,
  title = {A {{Double}}-{{Edged Sword}}? {{Software Reuse}} and {{Potential Security Vulnerabilities}}},
  shorttitle = {A {{Double}}-{{Edged Sword}}?},
  booktitle = {Reuse in the {{Big Data Era}}},
  author = {Gkortzis, Antonios and Feitosa, Daniel and Spinellis, Diomidis},
  editor = {Peng, Xin and Ampatzoglou, Apostolos and Bhowmik, Tanmay},
  date = {2019},
  pages = {187--203},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-22888-0_13},
  abstract = {Reuse is a common and often-advocated software development practice. Significant efforts have been invested into facilitating it, leading to advancements such as software forges, package managers, and the widespread integration of open source components into proprietary software systems. Reused software can make a system more secure through its maturity and extended vetting, or increase its vulnerabilities through a larger attack surface or insecure coding practices. To shed more light on this issue, we investigate the relationship between software reuse and potential security vulnerabilities, as assessed through static analysis. We empirically investigated 301 open source projects in a holistic multiple-case methods study. In particular, we examined the distribution of potential vulnerabilities between the native code created by a project’s development team and external code reused through dependencies, as well as the correlation between the ratio of reuse and the density of vulnerabilities. The results suggest that the amount of potential vulnerabilities in both native and reused code increases with larger project sizes. We also found a weak-to-moderate correlation between a higher reuse ratio and a lower density of vulnerabilities. Based on these findings it appears that code reuse is neither a frightening werewolf introducing an excessive number of vulnerabilities nor a silver bullet for avoiding them.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SSXNQYM5/Gkortzis et al. - 2019 - A Double-Edged Sword Software Reuse and Potential.pdf},
  isbn = {978-3-030-22888-0},
  keywords = {Case study,Security vulnerabilities,Software reuse},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{gkortzis_vulinoss_2018,
  title = {{{VulinOSS}}: {{A Dataset}} of {{Security Vulnerabilities}} in {{Open}}-{{Source Systems}}},
  shorttitle = {{{VulinOSS}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Gkortzis, Antonios and Mitropoulos, Dimitris and Spinellis, Diomidis},
  date = {2018-05},
  pages = {18--21},
  issn = {2574-3864},
  abstract = {Examining the different characteristics of open-source software in relation to security vulnerabilities, can provide the research community with findings that can lead to the development of more secure systems. We present a dataset where the reported vulnerabilities of 8694 open-source project versions, can be correlated with the corresponding source code and a number of software metrics. The metrics were obtained by analyzing the project's source code via well-established tools. Apart from commonly used metrics (e.g. loc), we also provide data related to modern development trends such as continuous integration and testing. We outline motivational examples based on the dataset we describe.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5NT3XSUL/Gkortzis et al. - 2018 - VulinOSS A Dataset of Security Vulnerabilities in.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SXRJSG3G/8595169.html},
  keywords = {Computer languages,Continuous Integration,corresponding source code,Databases,Measurement,modern development trends,Open source software,open-source project versions,open-source software,Open-source Software,open-source systems,program testing,public domain software,reported vulnerabilities,research community,secure systems,Security,security of data,security vulnerabilities,Security Vulnerabilities,software maintenance,software metrics,Testing,VulinOSS}
}

@incollection{gkoutzelis_web_2010,
  title = {Web {{Server Security}} on {{Open Source Environments}}},
  booktitle = {Next {{Generation Society}}. {{Technological}} and {{Legal Issues}}},
  author = {Gkoutzelis, Dimitrios X. and Sardis, Manolis S.},
  date = {2010},
  pages = {236--247},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-11631-5_22},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5NJW92AH/chp%3A10.1007%2F978-3-642-11631-5_22.pdf},
  keywords = {Forrás2,open source,security}
}

@inproceedings{gligoric_regression_2014,
  title = {Regression Test Selection for Distributed Software Histories},
  booktitle = {Computer {{Aided Verification}}},
  author = {Gligoric, Milos and Majumdar, Rupak and Sharma, Rohan and Eloussi, Lamyaa and Marinov, Darko},
  date = {2014},
  pages = {293--309},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-08867-9_19},
  urldate = {2015-11-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4IPR26F9/chp%3A10.1007%2F978-3-319-08867-9_19.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FZQJXPB3/chp%3A10.1007%2F978-3-319-08867-9_19.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@online{globalinforesearch_hadoop_2017,
  title = {Hadoop {{Market Size}}, {{Share And Forecast To}} 2022},
  author = {{GlobalInfoResearch}},
  date = {2017},
  journaltitle = {MarketWatch},
  url = {https://www.marketwatch.com/press-release/hadoop-market-size-share-and-forecast-to-2022-2018-06-27},
  urldate = {2018-08-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DHWN6BH3/hadoop-market-size-share-and-forecast-to-2022-2018-06-27.html},
  langid = {american}
}

@online{globalstats_mobile_nodate,
  title = {Mobile {{Operating System Market Share Worldwide}}},
  author = {{GlobalStats}},
  journaltitle = {StatCounter Global Stats},
  url = {http://gs.statcounter.com/os-market-share/mobile/worldwide},
  urldate = {2018-09-07},
  abstract = {This graph shows the market share of mobile operating systems worldwide based on over 10 billion monthly page views.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LRYAU3RX/worldwide.html},
  langid = {english}
}

@online{globalstats_mobile_nodate-1,
  title = {Mobile {{Operating System Market Share Asia}}},
  author = {{GlobalStats}},
  journaltitle = {StatCounter Global Stats},
  url = {http://gs.statcounter.com/os-market-share/mobile/asia},
  urldate = {2018-09-07},
  abstract = {This graph shows the market share of mobile operating systems in Asia based on over 10 billion monthly page views.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6MNCVSZD/asia.html},
  langid = {english}
}

@incollection{gnesi_mining_2014,
  title = {Mining the {{Categorized Software Repositories}} to {{Improve}} the {{Analysis}} of {{Security Vulnerabilities}}},
  booktitle = {Fundamental {{Approaches}} to {{Software Engineering}}},
  author = {{Alireza Sadeghi} and {Naeem Esfahani} and {Sam Malek}},
  editor = {Gnesi, Stefania and Rensink, Arend},
  date = {2014},
  volume = {8411},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-54804-8},
  urldate = {2014-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W8KXZTNJ/bok%3A978-3-642-54804-8.pdf},
  isbn = {978-3-642-54803-1 978-3-642-54804-8},
  keywords = {software engineering,source analysis},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{goduguluri_kommgame_2011,
  title = {Kommgame: {{A}} Reputation Environment for Teaching Open Source Software},
  shorttitle = {Kommgame},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Goduguluri, Veerakishore and Kilamo, Terhi and Hammouda, Imed},
  date = {2011},
  pages = {312--315},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_23},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IIJ2U9HQ/KommGame- A Reputation Environment for Teaching Open Source Software.pdf}
}

@article{goeminne_comparison_2013,
  title = {A Comparison of Identity Merge Algorithms for Software Repositories},
  author = {Goeminne, Mathieu and Mens, Tom},
  date = {2013-08},
  journaltitle = {Science of Computer Programming},
  volume = {78},
  pages = {971--986},
  issn = {01676423},
  doi = {10.1016/j.scico.2011.11.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642311002048},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NVPBIRZF/1-s2.0-S0167642311002048-main.pdf},
  keywords = {vcs,version control system},
  langid = {english},
  number = {8}
}

@report{goertzel_software_2007,
  title = {Software {{Security Assurance}}: {{A State}}-of-{{Art Report}} ({{SOAR}})},
  author = {Goertzel, Karen Mercedes and Winograd, Theodore and McKinley, Holly Lynne and Oh, Lyndon and Colon, Michael and McGibbon, Thomas and Fedchak, Elaine and Vienneau, Robert},
  date = {2007},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AHKPS98V/33274.pdf},
  keywords = {Forrás1,Forrásgyűjtemény,security}
}

@incollection{gokturk_out_2007,
  title = {Out of Box Experience Issues of Free and Open Source Software},
  booktitle = {Human-{{Computer Interaction}}. {{Interaction Design}} and {{Usability}}},
  author = {Göktürk, Mehmet and Çetin, Görkem},
  date = {2007},
  pages = {774--783},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-73105-4_85},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SVF4PHWB/chp%3A10.1007%2F978-3-540-73105-4_85.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{golubitsky_toward_2005,
  title = {Toward an Automated Vulnerability Comparison of Open Source {{IMAP}} Servers},
  booktitle = {Proceedings of the 19th Conference on {{Large Installation System Administration Conference}}},
  author = {Golubitsky, Chaos},
  date = {2005},
  volume = {19},
  pages = {2--2},
  url = {https://www.usenix.org/legacy/events/lisa05/tech/golubitsky/golubitsky_html/},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8VKSGBAX/_golubitsky.pdf}
}

@inproceedings{gonzalez_testex_2016,
  title = {{{TestEX}}: {{A Search Tool}} for {{Finding}} and {{Retrieving Example Unit Tests}} from {{Open Source Projects}}},
  shorttitle = {{{TestEX}}},
  booktitle = {2016 {{IEEE International Symposium}} on {{Software Reliability Engineering Workshops}} ({{ISSREW}})},
  author = {Gonzalez, Danielle and Popovich, Andrew and Mirakhorli, Mehdi},
  date = {2016-10},
  pages = {153--159},
  doi = {10.1109/ISSREW.2016.41},
  abstract = {Software testing as a means of early fault detection is increasingly practiced and integrated into software development activities. Despite its importance, many junior developers lack sufficient testing education and expertise. When faced with a task they are unfamiliar with, developers often use online resources to find code for adaptation or reference. Code search engines and repository mining tools have been created to assist developers, particularly less experienced ones, with finding solutions to common coding problems. However, many of these search engines lack the capability to facilitate test case searches. This has prevented developers from taking advantage of the massive analytical knowledge embodied in test cases written by other developers. In this paper we introduce TestEX, a web-based test case search engine designed to make finding useful test cases easier for developers. The strength of TestEX is the combination of three unique strategies for providing developers with useful and relevant test cases: (i) test-case identification within source code, (ii) test case categorization, and (iii) semantic mapping to the concern being searched via TestEX. Through the paper we present TestEX's Architecture, features and potential use cases. Furthermore, we report a study which was conducted to evaluate the effectiveness of our test case search engine. Tool: http://juno.main.ad.rit.edu:8081/TestEX/.},
  eventtitle = {2016 {{IEEE International Symposium}} on {{Software Reliability Engineering Workshops}} ({{ISSREW}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HAPKEDMC/Gonzalez et al. - 2016 - TestEX A Search Tool for Finding and Retrieving E.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5XPS28L2/7789395.html},
  keywords = {code search engines,Computer architecture,data mining,Data mining,early fault detection,Indexes,information retrieval,Internet,Java,online resources,open source,open source projects,program testing,public domain software,repository mining tools,search engine,search engines,Search engines,semantic mapping,Software,software development activities,software testing,source code,source code (software),test case categorization,test case search engine,test reuse,test-case identification,TestEX architecture,Testing,unit test}
}

@incollection{gonzalez-barahona_code_2014,
  title = {Code {{Review Analytics}}: {{WebKit}} as {{Case Study}}},
  shorttitle = {Code {{Review Analytics}}},
  booktitle = {Open {{Source Software}}: {{Mobile Open Source Technologies}}},
  author = {González-Barahona, Jesús M. and Izquierdo-Cortázar, Daniel and Robles, Gregorio and Gallegos, Mario},
  date = {2014},
  pages = {1--10},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-55128-4_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2FNIFNSE/chp%3A10.1007%2F978-3-642-55128-4_1.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{goode_something_2005,
  title = {Something for Nothing: Management Rejection of Open Source Software in {{Australia}}’s Top Firms},
  shorttitle = {Something for Nothing},
  author = {Goode, Sigi},
  date = {2005-07},
  journaltitle = {Information \& Management},
  volume = {42},
  pages = {669--681},
  issn = {03787206},
  doi = {10.1016/j.im.2004.01.011},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720604000783},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3DRFR53F/1-s2.0-S0378720604000783-main.pdf},
  keywords = {_SMS_untagged,Elfogadottság,Forrás2,nyílt forrás},
  langid = {english},
  number = {5}
}

@online{goodin_massive_2013,
  title = {Massive Espionage Malware Targeting Governments Undetected for 5 Years},
  author = {Goodin, Dan},
  date = {2013-01-26},
  journaltitle = {Ars Technica},
  url = {http://arstechnica.com/security/2013/01/red-october-computer-espionage-network-may-have-stolen-terabytes-of-data/},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8A7VI64D/Massive espionage malware targeting governments undetected for 5 years _ Ars Technica.pdf}
}

@inproceedings{gopal_attributes_2016,
  title = {Attributes of {{Open Source Software Requirements}} – {{The Effect}} of the {{External Environment}} and {{Internal Social Structure}}},
  booktitle = {2016 49th {{Hawaii International Conference}} on {{System Sciences}} ({{HICSS}})},
  author = {Gopal, Deepa and Lindberg, Aron and Lyytinen, Kalle},
  date = {2016-01},
  pages = {4982--4991},
  issn = {1530-1605},
  doi = {10.1109/HICSS.2016.618},
  abstract = {Popularity of open source software (OSS) projects has spiked an interest in the requirements engineering (RE) practices of such communities that are starkly different from those in traditional software development projects. Past work has focused on characterizing the main differences between OSS and traditional forms of software RE. In this effort we focus on differences in RE activity in OSS. RE is characterized as a socio-technical distributed cognitive (DCog) activity where multiple actors deploy artifacts to 'compute' requirements. To uncover how OSS projects configure the socio-technical distribution of cognitive processes to respond to varying attributes of incoming requirements we conduct a comparative analysis of four successful OSS projects. We observe that the volume of requirements faced by an OSS group dictates largely the nature of its social formation while the volatility experienced in the requirements dictates the overlap the project exhibits with the larger external community. Finally the velocity of change in technological requirements influence the project's documentation practices of requirements with the level of design consistency desired in the end product influencing the decision-making channels used in the development endeavor.},
  eventtitle = {2016 49th {{Hawaii International Conference}} on {{System Sciences}} ({{HICSS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A4WLRHMI/Gopal et al. - 2016 - Attributes of Open Source Software Requirements – .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M4EEXDIP/7427805.html},
  keywords = {Cognition,cognitive process,comparative analysis,comparative case study,Complexity theory,DCog activity,decision making,decision-making channel,design consistency,development endeavor,distributed cognition,Documentation,end product,external environment,formal specification,Information processing,internal social structure,Interviews,Open source software,open source software project,open source software requirement,OSS project,project documentation practice,project management,qualitative,Rails,requirement attributes,requirements engineering practice,social distribution,social formation,socio-technical distributed cognitive activity,socio-technical distribution,Software,software development management,software development project,software RE,structural distribution}
}

@inproceedings{gopstein_prevalence_2018,
  title = {Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild},
  shorttitle = {Prevalence of Confusing Code in Software Projects},
  booktitle = {Proceedings of the 15th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Gopstein, Dan and Zhou, Hongwei Henry and Frankl, Phyllis and Cappos, Justin},
  date = {2018-05-28},
  pages = {281--291},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3196398.3196432},
  url = {https://doi.org/10.1145/3196398.3196432},
  urldate = {2020-04-22},
  abstract = {Prior work has shown that extremely small code patterns, such as the conditional operator and implicit type conversion, can cause considerable misunderstanding in programmers. Until now, the real world impact of these patterns - known as 'atoms of confusion' - was only speculative. This work uses a corpus of 14 of the most popular and influential open source C and C++ projects to measure the prevalence and significance of these small confusing patterns. Our results show that the 15 known types of confusing micro patterns occur millions of times in programs like the Linux kernel and GCC, appearing on average once every 23 lines. We show there is a strong correlation between these confusing patterns and bug-fix commits as well as a tendency for confusing patterns to be commented. We also explore patterns at the project level showing the rate of security vulnerabilities is higher in projects with more atoms. Finally, we examine real code examples containing these atoms, including ones that were used to find and fix bugs in our corpus. In total this work demonstrates that beyond simple misunderstanding in the lab setting, atoms of confusion are both prevalent - occurring often in real projects, and meaningful - being removed by bug-fix commits at an elevated rate.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8G9AVS4V/Gopstein et al. - 2018 - Prevalence of confusing code in software projects.pdf},
  isbn = {978-1-4503-5716-6},
  keywords = {program understanding,programming languages},
  series = {{{MSR}} '18}
}

@article{goseva-popstojanova_capability_2015,
  title = {On the Capability of Static Code Analysis to Detect Security Vulnerabilities},
  author = {Goseva-Popstojanova, Katerina and Perhinschi, Andrei},
  date = {2015-12},
  journaltitle = {Information and Software Technology},
  volume = {68},
  pages = {18--33},
  issn = {09505849},
  doi = {10.1016/j.infsof.2015.08.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584915001366},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N3RA3T9E/1-s2.0-S0950584915001366-main.pdf},
  langid = {english}
}

@inproceedings{gote_git2net_2019,
  ids = {gote\_git2net\_2019-1},
  title = {Git2net - {{Mining Time}}-{{Stamped Co}}-{{Editing Networks}} from {{Large}} Git {{Repositories}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 16th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Gote, Christoph and Scholtes, Ingo and Schweitzer, Frank},
  date = {2019-05},
  pages = {433--444},
  issn = {2574-3864},
  doi = {10.1109/MSR.2019.00070},
  abstract = {Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication, from the commit history of projects. Most of the studied networks are based on the co-authorship of software artefacts defined at the level of files, modules, or packages. While this approach has led to insights into the social aspects of software development, it neglects detailed information on code changes and code ownership, e.g. which exact lines of code have been authored by which developers, that is contained in the commit log of software projects. Addressing this issue, we introduce git2net, a scalable python software that facilitates the extraction of fine-grained co-editing networks in large git repositories. It uses text mining techniques to analyse the detailed history of textual modifications within files. This information allows us to construct directed, weighted, and time-stamped networks, where a link signifies that one developer has edited a block of source code originally written by another developer. Our tool is applied in case studies of an Open Source and a commercial software project. We argue that it opens up a massive new source of high-resolution data on human collaboration patterns.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 16th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2EQWB3ZX/Gote et al. - 2019 - git2net mining time-stamped co-editing networks f.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TPVJD7T3/Gote et al. - 2019 - git2net - Mining Time-Stamped Co-Editing Networks .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9JEWZEAT/8816744.html},
  keywords = {co editing networks,code changes,collaboration network,commercial software project,commit log,data analysis,data mining,empirical software engineering,fine-grained co-editing networks,git,git repositories,git2net,network analysis,open source,Python,repository mining,repository mining literature,scalable Python software,social aspects,social networks,software artefacts,software development,software engineering processes,software maintenance,software repositories,source code,source code (software),temporal networks,text analysis,text mining techniques,time-stamped co-editing networks,time-stamped networks}
}

@article{gousios_conducting_2014,
  title = {Conducting Quantitative Software Engineering Studies with {{Alitheia Core}}},
  author = {Gousios, Georgios and Spinellis, Diomidis},
  date = {2014-08},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {885--925},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-013-9242-3},
  url = {http://link.springer.com/10.1007/s10664-013-9242-3},
  urldate = {2014-05-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NDNDN4IF/conducting_quantitative_software_engineering_studies_with_alitheia_core.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XP9PUCWH/conducting_quantitative_software_engineering_studies_with_alitheia_core.pdf},
  langid = {english},
  number = {4}
}

@inproceedings{gousios_streaming_2016,
  title = {Streaming Software Analytics},
  booktitle = {Proceedings of the 2nd {{International Workshop}} on {{BIG Data Software Engineering}}},
  author = {Gousios, Georgios and Safaric, Dominik and Visser, Joost},
  date = {2016-05-14},
  pages = {8--11},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2896825.2896832},
  url = {https://doi.org/10.1145/2896825.2896832},
  urldate = {2020-04-22},
  abstract = {In this paper we present a novel software analytics infrastructure supporting for a combination of three requirements to serve software practitioners in utilising data-driven decision making: (1) Real-time insight: streaming software analytics unify static historical and current event-stream data enabling for immediate, nearly real-time insight into software quality, processes and users; (2) Query model: streaming software analytics substantiate for the lack of an integrated event-stream data extraction method by utilising a sophisticated, yet easy to use query Domain Specific Language; (3) Data summarisation: streaming software analytics allow for high level event-stream data summarisation in respect to distinct stakeholder groups. We expect that streaming software analytics will encourage software practitioners to move beyond information toward actionable insight, and enable for the use of analytics as a feedback and decision-support instrument, thus allowing them for an increase in quality of software systems, processes and delivery.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R9QKUTHT/Gousios et al. - 2016 - Streaming software analytics.pdf},
  isbn = {978-1-4503-4152-3},
  keywords = {data mining,software analytics,streaming},
  series = {{{BIGDSE}} '16}
}

@inproceedings{gousios_work_2016,
  title = {Work Practices and Challenges in Pull-Based Development: The Contributor's Perspective},
  shorttitle = {Work Practices and Challenges in Pull-Based Development},
  booktitle = {Proceedings of the 38th {{International Conference}} on {{Software Engineering}}},
  author = {Gousios, Georgios and Storey, Margaret-Anne and Bacchelli, Alberto},
  date = {2016-05-14},
  pages = {285--296},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2884781.2884826},
  url = {https://doi.org/10.1145/2884781.2884826},
  urldate = {2020-04-22},
  abstract = {The pull-based development model is an emerging way of contributing to distributed software projects that is gaining enormous popularity within the open source software (OSS) world. Previous work has examined this model by focusing on projects and their owners---we complement it by examining the work practices of project contributors and the challenges they face. We conducted a survey with 645 top contributors to active OSS projects using the pull-based model on GitHub, the prevalent social coding site. We also analyzed traces extracted from corresponding GitHub repositories. Our research shows that: contributors have a strong interest in maintaining awareness of project status to get inspiration and avoid duplicating work, but they do not actively propagate information; communication within pull requests is reportedly limited to low-level concerns and contributors often use communication channels external to pull requests; challenges are mostly social in nature, with most reporting poor responsiveness from integrators; and the increased transparency of this setting is a confirmed motivation to contribute. Based on these findings, we present recommendations for practitioners to streamline the contribution process and discuss potential future research directions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YGHBL5G9/Gousios et al. - 2016 - Work practices and challenges in pull-based develo.pdf},
  isbn = {978-1-4503-3900-1},
  keywords = {distributed software development,GitHub,open source contribution,pull request,pull-based development},
  series = {{{ICSE}} '16}
}

@inproceedings{grammel_attracting_2010,
  title = {Attracting the {{Community}}'s {{Many Eyes}}: {{An Exploration}} of {{User Involvement}} in {{Issue Tracking}}},
  shorttitle = {Attracting the {{Community}}'s {{Many Eyes}}},
  booktitle = {Human {{Aspects}} of {{Software Engineering}}},
  author = {Grammel, Lars and Schackmann, Holger and Schröter, Adrian and Treude, Christoph and Storey, Margaret-Anne},
  date = {2010},
  pages = {3:1--3:6},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1938595.1938601},
  url = {http://doi.acm.org/10.1145/1938595.1938601},
  urldate = {2015-11-24},
  abstract = {A community of users who report bugs and request features provides valuable feedback that can be used in product development. We compare the community involvement in issue tracker usage between the open source project Eclipse and the closed source project IBM Jazz to evaluate if publicly accessible issue trackers work as well in closed source projects. We find that IBM Jazz successfully receives user feedback through this channel. We then explore the differences in work item processing in IBM Jazz between team members, project members and externals. We conclude that making public issue trackers available in closed source projects is a useful approach for eliciting feedback from the community, but that work items created by team members are processed differently from work items created by project members and externals.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D44Q4W8Z/Grammel és mtsai. - 2010 - Attracting the Community's Many Eyes An Explorati.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZGAVZMPR/Grammel és mtsai. - 2010 - Attracting the Community's Many Eyes An Explorati.pdf},
  isbn = {978-1-4503-0543-3},
  keywords = {_SMS_untagged,community,issue tracking,nyílt forrás,open commercial,Open Source,users},
  series = {{{HAoSE}} '10}
}

@inproceedings{green_leveraging_2009,
  title = {Leveraging Open-Source Software in the Design and Development Process},
  booktitle = {{{CHI}}'09 {{Extended Abstracts}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Green, Collin and Tollinger, Irene and Ratterman, Christian and Pyrzak, Guy and Eiser, Alex and Castro, Lanie and Vera, Alonso},
  date = {2009},
  pages = {3061--3074},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1520433},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IAMSFRXC/p3061-green.pdf},
  keywords = {_SMS_untagged,Forrás3,nyílt forrás}
}

@incollection{gregorio_robles_comprehensive_2012,
  title = {A {{Comprehensive Study}} of {{Software Forks}}: {{Dates}}, {{Reasons}} and {{Outcomes}}},
  booktitle = {{{OSS}} 2012, {{IFIP AICT}} 378},
  author = {{Gregorio Robles} and {Jesus M. González-Barahona}},
  date = {2012},
  pages = {1--14},
  publisher = {{Springer}},
  location = {{Berlin; New York}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  abstract = {In general it is assumed that a software product evolves within the authoring company or group of developers that develop the project. However, in some cases different groups of developers make the software evolve in different directions, a situation which is commonly known as a fork. In the case of free software, although forking is a practice that is considered as a last resort, it is inherent to the four freedoms. This paper tries to shed some light on the practice of forking. Therefore, we have identified significant forks, several hundreds in total, and have studied them in depth. Among the issues that have been analyzed for each fork is the date when the forking occurred, the reason of the fork, and the outcome of the fork, i.e., if the original or the forking project are still developed. Our investigation shows, among other results, that forksoccur in every software domain, that they have become more frequent in recent years, and that very few forks merge with the original project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AQZ9XE2D/forks.txt},
  isbn = {978-3-642-33442-9},
  keywords = {community,FLOSS,forking,open source},
  langid = {english}
}

@book{greve_organizational_2012,
  title = {Organizational Burnout das versteckte Phänomen ausgebrannter Organisationen},
  author = {Greve, Gustav},
  date = {2012},
  publisher = {{Springer Gabler}},
  location = {{Wiesbaden}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3QAU8PF7/art%3A10.1007%2Fs11623-014-0096-7.pdf},
  isbn = {978-3-8349-4106-0 3-8349-4106-9 978-3-8349-4107-7 3-8349-4107-7},
  langid = {german}
}

@inproceedings{grobert_software_2009,
  title = {Software Distribution as a Malware Infection Vector},
  booktitle = {Internet {{Technology}} and {{Secured Transactions}}, 2009. {{ICITST}} 2009. {{International Conference}} For},
  author = {Grobert, F. and Sadeghi, A.-R. and Winandy, Marcel},
  date = {2009},
  pages = {1--6},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5402538},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BX63SG88/05402538.pdf},
  isbn = {978-1-4244-5648-2},
  keywords = {_SMS_untagged,nyílt forrás,security}
}

@book{group_fair_2010,
  title = {{{FAIR}} – {{ISO}}/{{IEC}} 27005 {{Cookbook}}},
  author = {Group, The Open},
  date = {2010},
  url = {http://www.opengroup.org/subjectareas/security/risk},
  urldate = {2014-05-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H2MTUHT2/FAIR - ISO_IEC_27005 Cookbook.pdf},
  isbn = {1-931624-87-9},
  keywords = {Audit,Risk management,Security framework}
}

@inproceedings{groven_security_2010,
  title = {Security {{Measurements Within}} the {{Framework}} of {{Quality Assessment Models}} for {{Free}}/{{Libre Open Source Software}}},
  booktitle = {Proceedings of the {{Fourth European Conference}} on {{Software Architecture}}: {{Companion Volume}}},
  author = {Groven, Arne-Kristian and Haaland, Kirsten and Glott, Ruediger and Tannenberg, Anna},
  date = {2010},
  pages = {229--235},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1842752.1842796},
  url = {http://doi.acm.org/10.1145/1842752.1842796},
  urldate = {2015-11-24},
  abstract = {This article, presents a comparison of a first generation software quality assessment model (OpenBRR) and a second generation model (QualOSS) by applying them to the case of Asterisk, a FLOSS implementation of a telephone private branch exchange (PBX, VoIP). The key trend in the evolution of FLOSS quality assessment models is the movement from manual and descriptive to more automated and analytical models, and from the involvement of a few metrics to hundreds of metrics. Concerning the security measurements, they are much more sophisticated in QualOSS than in OpenBRR. Where OpenBRR have only three security metrics, QualOSS has nine security indicator with altogether 30-40 security metrics. This article shows how security are measured in the two assessment models, putting it into the overall context of the two approaches.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DGIM5D9U/Groven és mtsai. - 2010 - Security Measurements Within the Framework of Qual.pdf},
  isbn = {978-1-4503-0179-4},
  keywords = {_SMS_untagged,asterisk,FLOSS,Forrás1,free libre open source software,metrics,nyílt forrás,OpenBRR,QualOSS,security,software quality assessment models},
  series = {{{ECSA}} '10}
}

@online{gruber_spray-usability_nodate,
  title = {Spray-{{On Usability}}},
  author = {Gruber, John},
  journaltitle = {Daring Fireball},
  url = {http://daringfireball.net/2004/04/spray_on_usability},
  urldate = {2013-05-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2KWXJ5ZZ/spray_on_usability.html}
}

@incollection{guido_schryen_increasing_2010,
  title = {Increasing {{Software Security}} through {{Open Source}} or {{Closed Source Development}}? {{Empirics Suggest}} That {{We}} Have {{Asked}} the {{Wrong Question}}},
  booktitle = {{{HICSS}} '10 {{Proceedings}} of the 2010 43rd {{Hawaii International Conference}} on {{System Sciences}}},
  author = {{Guido Schryen} and {Eliot Rich}},
  date = {2010},
  pages = {1--10},
  location = {{Stuttgart}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/THP9FKVK/__Schyren_comprehensive_patching.txt},
  isbn = {978-0-7695-3869-3}
}

@inproceedings{guido_schryen_open_2009,
  title = {Open Source vs. Closed Source Software: {{Towards}} Measuring Security},
  booktitle = {Proceedings of the 2009 {{ACM}} Symposium on {{Applied Computing}}},
  author = {{Guido Schryen} and {Rouven Kadura}},
  date = {2009},
  pages = {2016--2023},
  publisher = {{ACM}},
  doi = {10.1145/1529282.1529731},
  eventtitle = {{{SAC}} '09},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KMEWD3QR/opensource09.pdf},
  isbn = {978-1-60558-166-8}
}

@online{gunnar_hellekson_history_nodate,
  title = {History of Open Source in Government},
  author = {{Gunnar Hellekson}},
  journaltitle = {OpenSource.com},
  url = {http://opensource.com/government/12/5/history-open-source-government},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GH8FWP8S/History of open source in government — opensource.pdf}
}

@incollection{gupta_empirical_2008,
  title = {An Empirical Investigation of Defect Management in Free/Open Source Software Projects},
  booktitle = {Advances in {{Computer}} and {{Information Sciences}} and {{Engineering}}},
  author = {Gupta, Anu and Singla, Ravinder Kumar},
  date = {2008},
  pages = {68--73},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4020-8741-7_13},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3JA6TRVR/chp%3A10.1007%2F978-1-4020-8741-7_13.pdf},
  keywords = {_SMS_untagged,bug characteristics,bug tracker,data mining,nyílt forrás,open source}
}

@inproceedings{gupta_nirikshan_2014,
  title = {Nirikshan: Mining Bug Report History for Discovering Process Maps, Inefficiencies and Inconsistencies},
  shorttitle = {Nirikshan},
  author = {Gupta, Monika and Sureka, Ashish},
  date = {2014},
  pages = {1--10},
  publisher = {{ACM Press}},
  doi = {10.1145/2590748.2590749},
  url = {http://dl.acm.org/citation.cfm?doid=2590748.2590749},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/52BZ68F7/a1-gupta.pdf},
  isbn = {978-1-4503-2776-3},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@inproceedings{gurbani_case_2005,
  title = {A Case Study of Open Source Tools and Practices in a Commercial Setting},
  booktitle = {{{ACM SIGSOFT Software Engineering Notes}}},
  author = {Gurbani, Vijay K. and Garvert, Anita and Herbsleb, James D.},
  date = {2005},
  volume = {30},
  pages = {1--6},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1083264},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NRTEZXCH/p6-gurbani.pdf}
}

@inproceedings{gurbani_case_2006,
  title = {A {{Case Study}} of a {{Corporate Open Source Development Model}}},
  booktitle = {Proceedings of the 28th {{International Conference}} on {{Software Engineering}}},
  author = {Gurbani, Vijay K. and Garvert, Anita and Herbsleb, James D.},
  date = {2006},
  pages = {472--481},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1134285.1134352},
  url = {http://doi.acm.org/10.1145/1134285.1134352},
  urldate = {2015-11-24},
  abstract = {Open source practices and tools have proven to be highly effective for overcoming the many problems of geographically distributed software development. We know relatively little, however, about the range of settings in which they work. In particular, can corporations use the open source development model effectively for software projects inside the corporate domain? Or are these tools and practices incompatible with development environments, management practices, and market-driven schedule and feature decisions typical of a commercial software house? We present a case study of open source software development methodology adopted by a significant commercial software project in the telecommunications domain. We extract a number of lessons learned from the experience, and identify open research questions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XP3IIP2I/Gurbani és mtsai. - 2006 - A Case Study of a Corporate Open Source Developmen.pdf},
  isbn = {978-1-59593-375-1},
  keywords = {_SMS_untagged,architecture,nyílt forrás,Open Source,session initiation protocol,software development},
  series = {{{ICSE}} '06}
}

@inproceedings{gustav_lindstrom_meeting_2012,
  title = {Meeting the {{Cyber Security Challenge}}},
  shorttitle = {The {{Global Puzzle}}},
  author = {{Gustav Lindstrom}},
  date = {2012},
  publisher = {{Geneva Centre for Security Policy}},
  url = {https://www.academia.edu/9005401/Meeting_the_Cyber_Security_Challenge},
  urldate = {2015-01-01},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BETNP63C/download-libre.pdf}
}

@incollection{gutscher_trust_2007,
  title = {A Trust Model for an Open, Decentralized Reputation System},
  booktitle = {Trust {{Management}}},
  author = {Gutscher, Andreas},
  date = {2007},
  pages = {285--300},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-73655-6_19},
  urldate = {2015-11-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KE3ZHKIV/chp%3A10.1007%2F978-0-387-73655-6_19.pdf}
}

@article{gwebu_adoption_2011,
  title = {Adoption of {{Open Source Software}}: {{The}} Role of Social Identification},
  shorttitle = {Adoption of {{Open Source Software}}},
  author = {Gwebu, Kholekile L. and Wang, Jing},
  date = {2011-04},
  journaltitle = {Decision Support Systems},
  volume = {51},
  pages = {220--229},
  issn = {01679236},
  doi = {10.1016/j.dss.2010.12.010},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923610002435},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2BEVMKN4/1-s2.0-S0167923610002435-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {1}
}

@article{gwebu_seeing_2010,
  title = {Seeing Eye to Eye? {{An}} Exploratory Study of Free Open Source Software Users’ Perceptions},
  shorttitle = {Seeing Eye to Eye?},
  author = {Gwebu, Kholekile L. and Wang, Jing},
  date = {2010-11},
  journaltitle = {Journal of Systems and Software},
  volume = {83},
  pages = {2287--2296},
  issn = {01641212},
  doi = {10.1016/j.jss.2010.07.011},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121210001822},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PWIUK7RR/1-s2.0-S0164121210001822-main.pdf},
  keywords = {_SMS_untagged,Forrás2,market,nyílt forrás},
  langid = {english},
  number = {11}
}

@thesis{gyanyi_sandor_az_2011,
  title = {Az Információs Terrorizmus Által Alkalmazott Támadási Módszerek És a Velük Szemben Alkalmazható Védelem},
  author = {{Gyányi Sándor}},
  date = {2011},
  institution = {{Zrínyi Miklós Nemzetvédelmi Egyetem}},
  location = {{Budapest}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WD5NUVP6/Gyanyi_Sandor_PhD_ert_tervezet (1).pdf}
}

@inproceedings{haaland_free/libre_2010,
  title = {Free/{{Libre Open Source Quality Models}}-a Comparison between Two Approaches},
  booktitle = {4th {{FLOS International Workshop}} on {{Free}}/{{Libre}}/{{Open Source Software}}},
  author = {Haaland, K. and Groven, A. K. and Regnesentral, N. and Glott, R. and Tannenberg, A. and FreeCode, A. S.},
  date = {2010},
  url = {http://www.floss.uni-jena.de/flossmedia/dokumente/Papers/Haaland+Groven+Glott+Free+Libre+Open+Source+Quality+Models+Quality-p-45.pdf},
  urldate = {2012-11-01},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T4RNIR77/Haaland Groven Glott Free Libre Open Source Quality Models Quality.pdf}
}

@article{hafiz_game_2016,
  title = {Game of Detections: How Are Security Vulnerabilities Discovered in the Wild?},
  shorttitle = {Game of Detections},
  author = {Hafiz, Munawar and Fang, Ming},
  date = {2016-10-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {21},
  pages = {1920--1959},
  issn = {1573-7616},
  doi = {10.1007/s10664-015-9403-7},
  url = {https://doi.org/10.1007/s10664-015-9403-7},
  urldate = {2020-04-21},
  abstract = {There is little or no information available on what actually happens when a software vulnerability is detected. We performed an empirical study on reporters of the three most prominent security vulnerabilities: buffer overflow, SQL injection, and cross site scripting vulnerabilities. The goal was to understand the methods and tools used during the discovery and whether the community of developers exploring one security vulnerability differs—in their approach—from another community of developers exploring a different vulnerability. The reporters were featured in the SecurityFocus repository for twelve month periods for each vulnerability. We collected 127 responses. We found that the communities differ based on the security vulnerability they target; but within a specific community, reporters follow similar approaches. We also found a serious problem in the vulnerability reporting process that is common for all communities. Most reporters, especially the experienced ones, favor full-disclosure and do not collaborate with the vendors of vulnerable software. They think that the public disclosure, sometimes supported by a detailed exploit, will put pressure on vendors to fix the vulnerabilities. But, in practice, the vulnerabilities not reported to vendors are less likely to be fixed. Ours is the first study on vulnerability repositories that targets the reporters of the most common security vulnerabilities, thus concentrating on the people involved in the process; previous works have overlooked this rich information source. The results are valuable for beginners exploring how to detect and report security vulnerabilities and for tool vendors and researchers exploring how to automate and fix the process.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7P7XZGPJ/Hafiz and Fang - 2016 - Game of detections how are security vulnerabiliti.pdf},
  langid = {english},
  number = {5}
}

@incollection{haider_open_2010,
  title = {Open {{Source Software}}: {{Development}} for {{Asset Lifecycle Management}}},
  shorttitle = {Open {{Source Software}}},
  booktitle = {Engineering {{Asset Lifecycle Management}}},
  author = {Haider, Abrar},
  date = {2010},
  pages = {207--213},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-85729-320-6_24},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IRM78KJN/Open Source Software Development for Asset Lifecycle Management.pdf}
}

@article{haig_cyberter_nodate,
  title = {A cybertér és a cyberhadviselés értelmezése},
  author = {Haig, Zsolt and Várhegyi, István},
  journaltitle = {Hadtudomány},
  volume = {XVIII. évf.},
  url = {http://mhtt.eu/hadtudomany/2008/2008_elektronikus/2008_e_2.pdf},
  urldate = {2013-03-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CTS45GDW/cyberhadviseles.pdf},
  issue = {Elektronikus szám (2008)},
  langid = {magyar}
}

@misc{haig_kitikus_2009,
  title = {A Kitikus Informacios Infrastrukturák Meghatározásának Modszertana},
  author = {Haig, Zsolt and Hajnal, Béla and Kovács, László and Muha, Lajos and Sik, Zoltán Nándor},
  date = {2009},
  publisher = {{ENO Advisory Kft}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R3HWDBFK/a_kritikus_informacios_infrastrukturak_meghatarozasanak_modszertana.pdf}
}

@report{haig_kritikus_2012,
  title = {Kritikus Infrastruktúrák És Kritikus Információs Infrastruktúrák},
  author = {Haig, Zsolt and Kovács, László},
  date = {2012},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TZGASDPM/KOVASZ_KII_Tanulmany_FINAL.pdf},
  number = {TÁMOP 4.2.2/B-10/1-2010-0001}
}

@article{haig_szamitogep-halozati_2006,
  title = {Számítógép-Hálózati Hadviselés Rendszere Az Információs Műveletekben},
  author = {Haig, Zsolt},
  date = {2006},
  journaltitle = {Bolyai Szemle},
  volume = {XV. évf},
  pages = {54--73},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/78EEIN94/06_Haig_Zsolt.pdf},
  number = {1}
}

@book{haig_zsolt_az_2013,
  title = {Az Infokommunikációs Technológia Hatása a Hadtudományokra},
  author = {{Haig Zsolt} and {Kovács László} and {Munk Sándor} and {Ványa László}},
  date = {2013},
  publisher = {{Nemzeti Közszolgálati Egyetem}},
  location = {{Budapest}},
  isbn = {978-615-5305-02-3},
  pagetotal = {173}
}

@book{haig_zsolt_informacio_2015,
  title = {Információ – Társadalom – Biztonság},
  author = {{Haig Zsolt}},
  date = {2015},
  publisher = {{NKE Szolgáltató Kft.}},
  location = {{Budapest}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2P3QVTFV/Haig_ITB_konyv.pdf},
  isbn = {978-615-5527-08-1}
}

@book{hakken_proceedings_2008,
  title = {Proceedings of the {{Tenth Anniversary Conference}} on {{Participatory Design}} 2008},
  author = {Hakken, David and {ACM Digital Library} and {ACM Special Interest Group on Computer Graphics and Interactive Techniques} and {ACM Special Interest Group on Computer-Human Interaction}},
  date = {2008},
  publisher = {{Indiana University}},
  location = {{Indianapolis, IN}},
  url = {http://dl.acm.org/citation.cfm?id=1795234},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HFUKSCUV/p238-twidale.pdf},
  isbn = {978-0-9818561-0-0},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@inproceedings{hale_secu_2015,
  title = {Secu {{Wear}}: {{An Open Source}}, {{Multi}}-Component {{Hardware}}/{{Software Platform}} for {{Exploring Wearable Security}}},
  shorttitle = {Secu {{Wear}}},
  booktitle = {2015 {{IEEE International Conference}} on {{Mobile Services}}},
  author = {Hale, M. L. and Ellis, D. and Gamble, R. and Waler, C. and Lin, J.},
  date = {2015-06},
  pages = {97--104},
  doi = {10.1109/MobServ.2015.23},
  abstract = {Wearables are the next big development in the mobile internet of things. Operating in a body area network around a smartphone user they serve a variety of commercial, medical, and personal uses. Whether used for fitness tracking, mobile health monitoring, or as remote controllers, wearable devices can include sensors that collect a variety of data and actuators that provide hap tic feedback and unique user interfaces for controlling software and hardware. Wearables are typically wireless and use Bluetooth LE (low energy) to transmit data to a waiting smartphone app. Frequently, apps forward this data onward to online web servers for tracking. Security and privacy concerns abound when wearables capture sensitive data or provide critical functionality. This paper develops a platform, called SecuWear, for conducting wearable security research, collecting data, and identifying vulnerabilities in hardware and software. SecuWear combines open source technologies to enable researchers to rapidly prototype security vulnerability test cases, evaluate them on actual hardware, and analyze the results to understand how best to mitigate problems. The paper includes two types of evaluation in the form of a comparative analysis and empirical study. The results reveal how several passive observation attacks present themselves in wearable applications and how the SecuWear platform can capture the necessary information needed to identify and combat such attacks.},
  eventtitle = {2015 {{IEEE International Conference}} on {{Mobile Services}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DNM5ZGCI/Hale és mtsai. - 2015 - Secu Wear An Open Source, Multi-component Hardwar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DFTUEXA4/7226677.html},
  keywords = {Biomedical monitoring,Bluetooth,Bluetooth LE,Bluetooth low energy,body area network,body area networks,Hardware,Internet of Things,man-in-the-middle,Mobile communication,mobile computing,mobile Internet of Things,online Web servers,open source multicomponent hardware-software platform,security,security of data,security vulnerability test cases,SecuWear platform,Sensors,smartphone user,Trade agreements,vulnerability discovery,wearable security,wearables}
}

@inproceedings{hammouda_open_2010,
  title = {Open Source Legality Patterns: Architectural Design Decisions Motivated by Legal Concerns},
  shorttitle = {Open Source Legality Patterns},
  booktitle = {Proceedings of the 14th {{International Academic MindTrek Conference}}: {{Envisioning Future Media Environments}}},
  author = {Hammouda, Imed and Mikkonen, Tommi and Oksanen, Ville and Jaaksi, Ari},
  date = {2010},
  pages = {207--214},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1930533},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T7CXZ3FH/p207-hammouda.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@book{hampton_fundamentals_2009,
  title = {Fundamentals of Enterprise Risk Management How Top Companies Assess Risk, Manage Exposures, and Seize Opportunities},
  author = {Hampton, John J},
  date = {2009},
  publisher = {{American Management Association}},
  location = {{New York}},
  abstract = {After the devastation experienced by AIG, Bear Stearns, Lehman Brothers, and other financial institutions, the need for effective, comprehensive enterprise risk management (ERM) systems has never been more stark or immediate.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PTT9524W/Fundamentals of Enterprise Risk Management.pdf},
  isbn = {978-0-8144-1492-7},
  keywords = {mitigation,Risk management},
  langid = {english}
}

@inproceedings{hannebauer_motivation_2016,
  title = {Motivation of {{Newcomers}} to {{FLOSS Projects}}},
  booktitle = {Proceedings of the 12th {{International Symposium}} on {{Open Collaboration}}},
  author = {Hannebauer, Christoph and Gruhn, Volker},
  date = {2016-08-17},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Berlin, Germany}},
  doi = {10.1145/2957792.2957793},
  url = {https://doi.org/10.1145/2957792.2957793},
  urldate = {2020-04-22},
  abstract = {While the motivations of Free/Libre and Open Source Software (FLOSS) developers have been the subject of extensive research, the motivations for their initial contribution to a FLOSS project has received only little attention. This survey of 94 newcomers to the FLOSS projects Mozilla and GNOME identifies the motivations for the modification of the FLOSS components and for the submission of these modifications back to the FLOSS project. With the responses, we test a hypothesis based on the previous qualitative research on newcomer motivations: Most newcomers modify a component because they need the modification for themselves. Surprisingly, this is not the case for our respondents, who have a variety of primary modification motivations. Newcomer occupation is discussed as a reason for this difference to previous results.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JCRPXBLD/Hannebauer and Gruhn - 2016 - Motivation of Newcomers to FLOSS Projects.pdf},
  isbn = {978-1-4503-4451-7},
  keywords = {FLOSS,Motivation,Newcomers,Open Source,Survey},
  series = {{{OpenSym}} '16}
}

@inproceedings{hannebauer_relationship_2017,
  title = {On the {{Relationship}} between {{Newcomer Motivations}} and {{Contribution Barriers}} in {{Open Source Projects}}},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration}}},
  author = {Hannebauer, Christoph and Gruhn, Volker},
  date = {2017-08-23},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3125433.3125446},
  url = {https://doi.org/10.1145/3125433.3125446},
  urldate = {2020-04-22},
  abstract = {There has been extensive research on the the factors that motivate software developers to contribute to an Open Source Software (OSS) project. Contribution barriers are the counter-side to motivations and prevent newcomers from joining the OSS project. This study searches for relations between motivations and contribution barriers with a web-based survey of 117 developers who had recently contributed their first patch to either Mozilla or GNOME. The results substantiate the hypothesis that newcomers' motivations mirror their mental models of the OSS project they are going to contribute to, and that the mental model determines the impact of contribution barriers. More generally, we propose a new model for the joining process to an OSS project that takes social properties, motivations, and contribution barriers into account.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NE5YVWYG/Hannebauer and Gruhn - 2017 - On the Relationship between Newcomer Motivations a.pdf},
  isbn = {978-1-4503-5187-4},
  keywords = {Contribution Barriers,Newcomers,Open Source,Survey},
  series = {{{OpenSym}} '17}
}

@article{hanninen_cowlog_2009,
  title = {{{CowLog}}: {{Open}}-Source Software for Coding Behaviors from Digital Video},
  shorttitle = {{{CowLog}}},
  author = {Hänninen, Laura and Pastell, Matti},
  date = {2009-05},
  journaltitle = {Behavior Research Methods},
  volume = {41},
  pages = {472--476},
  issn = {1554-351X, 1554-3528},
  doi = {10.3758/BRM.41.2.472},
  url = {http://www.springerlink.com/index/10.3758/BRM.41.2.472},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D3NMPFP4/art%3A10.3758%2FBRM.41.2.472.pdf},
  langid = {english},
  number = {2}
}

@inproceedings{hanoglu_empirical_2019,
  title = {An {{Empirical Study}} on the {{Relationship}} between {{Open Source Software Success}} and {{Test Effort}}},
  booktitle = {2019 4th {{International Conference}} on {{Computer Science}} and {{Engineering}} ({{UBMK}})},
  author = {Hanoğlu, Ebru and Tarhan, Ayça},
  date = {2019-09},
  pages = {688--692},
  doi = {10.1109/UBMK.2019.8907012},
  abstract = {Open source software is gaining popularity and significance in recent years. Similarly, testability is a residual software property which the developers and users no longer ignore. This is because if the testability of software is high, the test effort and development cost decrease proportionally. This is the case because test effort is highly affected by testability. In this paper, we investigate the relationship between test effort and success of the open source software by employing source codes and easily accessible parameters from the repository. Moreover, the proposed methods are empirically examined by analyzing 17 open source software projects. According to the empirical results, a meaningful positive correlation is obtained between test effort and success. This implies the importance of preparing test scenarios and codes to obtain successful open source software project.},
  eventtitle = {2019 4th {{International Conference}} on {{Computer Science}} and {{Engineering}} ({{UBMK}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WQK5472U/Hanoğlu and Tarhan - 2019 - An Empirical Study on the Relationship between Ope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RRCFEVS7/8907012.html},
  keywords = {Open Source Software,open source software projects,program testing,project management,public domain software,residual software property,software engineering,Software Quality,source codes,Success,test effort,Test Effort}
}

@inproceedings{hao_study_2008,
  title = {The {{Study}} on {{Innovation Mechanism}} of {{Open Source Software Community}}},
  booktitle = {Wireless {{Communications}}, {{Networking}} and {{Mobile Computing}}, 2008. {{WiCOM}}'08. 4th {{International Conference}} On},
  author = {Hao, Xu and Zhengang, Zhang and Chunpei, Lin and Zhuo, Ding},
  date = {2008},
  pages = {1--5},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4681217},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6ZVXI3VU/04681217.pdf},
  keywords = {_SMS_untagged,Forrás2,nyílt forrás}
}

@inproceedings{haraty_online_2017,
  title = {Online {{Customization Sharing Ecosystems}}: {{Components}}, {{Roles}}, and {{Motivations}}},
  shorttitle = {Online {{Customization Sharing Ecosystems}}},
  booktitle = {Proceedings of the 2017 {{ACM Conference}} on {{Computer Supported Cooperative Work}} and {{Social Computing}}},
  author = {Haraty, Mona and McGrenere, Joanna and Bunt, Andrea},
  date = {2017-02-25},
  pages = {2359--2371},
  publisher = {{Association for Computing Machinery}},
  location = {{Portland, Oregon, USA}},
  doi = {10.1145/2998181.2998289},
  url = {https://doi.org/10.1145/2998181.2998289},
  urldate = {2020-04-22},
  abstract = {The rise of open platforms and public APIs has enabled more users of customizable software to customize by installing plugins or add-ons that are created and shared by others. Despite the prevalence of online customization sharing, we know little about how and why online customizations are shared. Through interviews with 20 users of four diverse systems who have extensive experience with sharing their customizations, we reveal the concept of customization sharing ecosystems. These ecosystems include multiple components for hosting customizations, discussing, and managing them; the ecosystems are sustained through users acting in a diverse set of roles (e.g., sharers, re-users, reviewers, problem reporters, requesters, helpers, publicizers, and packers). Our interviews also reveal motivations for creating and sharing customizations online which overlap considerably with those in open source software. Our findings highlight tradeoffs and design considerations in these ecosystems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GKJE6JAI/Haraty et al. - 2017 - Online Customization Sharing Ecosystems Component.pdf},
  isbn = {978-1-4503-4335-0},
  keywords = {customization,customization sharing,ecosystems},
  series = {{{CSCW}} '17}
}

@inproceedings{hardin_building_2019,
  title = {Building Bridges to Customer Needs in Open Source Documentation},
  booktitle = {Proceedings of the 37th {{ACM International Conference}} on the {{Design}} of {{Communication}}},
  author = {Hardin, Ashley R.},
  date = {2019-10-04},
  pages = {1--3},
  publisher = {{Association for Computing Machinery}},
  location = {{Portland, Oregon}},
  doi = {10.1145/3328020.3353917},
  url = {https://doi.org/10.1145/3328020.3353917},
  urldate = {2020-04-22},
  abstract = {The Red Hat OpenShift documentation repository is situated in a unique open source environment in which anybody with a GitHub account can contribute directly to the documentation set. One of the primary contributors to the documentation repository are developers, which presents a challenge. The technical writers on the Red Hat OpenShift documentation team who collaboratively write, edit, and merge these contributions are faced with the challenge of maintaining user-centered rather than engineering- centered documentation. Furthermore, the technical writers lack direct interaction with external customers. Considering these challenges, this industry insight report discusses several methods that can be employed to maintain a customer-centric focus and improve the documentation set: focus on user stories, network with internal customers and stakeholders who work closest with external customers, and seek opportunities to work on customer cases.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SUE7WUP9/Hardin - 2019 - Building bridges to customer needs in open source .pdf},
  isbn = {978-1-4503-6790-5},
  keywords = {agile software development,collaborative writing,open source documentation,user stories},
  series = {{{SIGDOC}} '19}
}

@incollection{hardy_industry_2010,
  title = {Industry {{Regulation}} through {{Open Source Software}}: {{A Strategic Ownership Proposal}}},
  shorttitle = {Industry {{Regulation}} through {{Open Source Software}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Hardy, Jean-Lucien},
  date = {2010},
  pages = {322--329},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_26},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T4ZI689Q/chp%3A10.1007%2F978-3-642-13244-5_26.pdf},
  keywords = {_SMS_untagged,Forrás2,nyílt forrás}
}

@book{harkins_managing_2013,
  title = {Managing Risk and Information Security Protect to Enable},
  author = {Harkins, Malcolm},
  date = {2013},
  publisher = {{Apress : Distributed to the book trade worldwide by Springer Science+Business Media}},
  location = {{[New York]}},
  url = {http://proquest.safaribooksonline.com/?fpi=9781430251132},
  urldate = {2014-05-05},
  abstract = {Managing Risk and Information Security: Protect to Enable, an ApressOpen title, describes the changing risk environment and why a fresh approach to information security is needed. Because almost every aspect of an enterprise is now dependent on technology, the focus of IT security must shift from locking down assets to enabling the business while managing and surviving risk. This compact book discusses business risk from a broader perspective, including privacy and regulatory considerations. It describes the increasing number of threats and vulnerabilities, but also offers strategies for developing solutions. These include discussions of how enterprises can take advantage of new and emerging technologies - such as social media and the huge proliferation of Internet-enabled devices - while minimizing risk. With ApressOpen, content is freely available through multiple online distribution channels and electronic formats with the goal of disseminating professionally edited and technically reviewed content to the worldwide community. Here are some of the responses from reviewers of this exceptional work: "Managing Risk and Information Security is a perceptive, balanced, and often thought-provoking exploration of evolving information risk and security challenges within a business context.? Harkins clearly connects the needed, but often-overlooked linkage and dialog between the business and technical worlds and offers actionable strategies.?? The book contains eye-opening security insights that are easily understood, even by the curious layman." Fred Wettling, Bechtel Fellow, IS\&T Ethics \& Compliance Officer, Bechtel ? ? "As disruptive technology innovations and escalating cyber threats continue to create enormous information security challenges, Managing Risk and Information Security: Protect to Enable provides a much-needed perspective. This book compels information security professionals to think differently about concepts of risk management in order to be more effective. The specific and practical guidance offers a fast-track formula for developing information security strategies which are lock-step with business priorities." Laura Robinson, Principal, Robinson Insight Chair, Security for Business Innovation Council (SBIC) Program Director, Executive Security Action Forum (ESAF) "The mandate of the information security function is being completely rewritten. Unfortunately most heads of security haven't picked up on the change, impeding their companies' agility and ability to innovate. This book makes the case for why security needs to change, and shows how to get started. It will be regarded as marking the turning point in information security for years to come." Dr. Jeremy Bergsman, Practice Manager, CEB ? ? "The world we are responsible to protect is changing dramatically and at an accelerating pace. Technology is pervasive in virtually every aspect of our lives. Clouds, virtualization and mobile are redefining computing - and they are just the beginning of what is to come. Your security perimeter is defined by wherever your information and people happen to be. We are attacked by professional adversaries who are better funded than we will ever be. We in the information security profession must change as dramatically as the environment we protect. We need new skills and new strategies to do our jobs effectively. We literally need to change the way we think. ? Written by one of the best in the business, Managing Risk and Information Security challenges traditional security theory with clear examples of the need for change. It also provides expert advice on how to dramatically increase the success of your security strategy and methods - from dealing with the misperception of risk to how to become a Z-shaped CISO. ? Managing Risk and Information Security is the ultimate treatise on how to deliver effective security to the world we live in for the next 10 years. It is absolute must reading for anyone in our profession - and should be on the desk of every CISO in the world." ? Dave Cullinane, CISSP CEO Security Starfish, LLC "In this overview, Malcolm Harkins delivers an insightful survey of the trends, threats, and tactics shaping information risk and security. From regulatory compliance to psychology to the changing threat context, this work provides a compelling introduction to an important topic and trains helpful attention on the effects of changing technology and management practices." Dr. Mariano-Florentino Cuľlar Professor, Stanford Law School Co-Director, Stanford Center for International Security and Cooperation (CISAC), Stanford University ? ? "Malcolm Harkins gets it. In his new book Malcolm outlines the major forces changing the information security risk landscape from a big picture perspective, and then goes on to offer effective methods of managing that risk from a practitioner's viewpoint. The combination makes this book unique and a must read for anyone interested in IT risk." Dennis Devlin AVP, Information Security and Compliance, The George Washington University ?? "Managing Risk and Information Security is the first-to-read, must-read book on information security for C-Suite executives.? It is accessible, understandable and actionable. No sky-is-falling scare tactics, no techno-babble - just straight talk about a critically important subject. There is no better primer on the economics, ergonomics and psycho-behaviourals of security than this." Thornton May, Futurist, Executive Director \& Dean, IT Leadership Academy ? ? "Managing Risk and Information Security is a wake-up call for information security executives and a ray of light for business leaders.? It equips organizations with the knowledge required to transform their security programs from a "culture of no" to one focused on agility, value and competitiveness. Unlike other publications, Malcolm provides clear and immediately applicable solutions to optimally balance the frequently opposing needs of risk reduction and business growth. This book should be required reading for anyone currently serving in, or seeking to achieve, the role of Chief Information Security Officer." Jamil Farshchi, Senior Business Leader of Strategic Planning and Initiatives, VISA?? ? "For too many years, business and security - either real or imagined - were at odds. In Managing Risk and Information Security: Protect to Enable, you get what you expect - real life practical ways to break logjams, have security actually enable business, and marries security architecture and business architecture. Why this book? ?It's written by a practitioner, and not just any practitioner, one of the leading minds in Security today." John Stewart, Chief Security Officer, Cisco ? ? "This book is an invaluable guide to help security professionals address risk in new ways in this alarmingly fast changing environment. Packed with examples which makes it a pleasure to read, the book captures practical ways a forward thinking CISO can turn information security into a competitive advantage for their business.? ? This book provides a new framework for managing risk in an entertaining and thought provoking way. This will change the way security professionals work with their business leaders, and help get products to market faster. ? The 6 irrefutable laws of information security should be on a stone plaque on the desk of every security professional." Steven Proctor, VP, Audit \& Risk Management, Flextronics.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CN2ZCMWQ/bok%3A978-1-4302-5114-9.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K3XGA4TE/bok%3A978-1-4302-5114-9.pdf},
  isbn = {978-1-4302-5114-9 1-4302-5114-X 1-4302-5113-1 978-1-4302-5113-2},
  keywords = {information security,Risk management},
  langid = {english}
}

@article{harman_why_2010,
  title = {Why {{Source Code Analysis}} and {{Manipulation Will Always}} Be {{Important}}},
  author = {Harman, Mark},
  date = {2010-09},
  journaltitle = {2010 10th IEEE Working Conference on Source Code Analysis and Manipulation},
  pages = {7--19},
  issn = {978-1-4244-8655-7},
  doi = {10.1109/SCAM.2010.28},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5601835},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N8RU7F8D/Harman - 2010 - Why Source Code Analysis and Manipulation Will Alw.pdf}
}

@incollection{harrer_open_2013,
  title = {Open {{Source}} versus {{Proprietary Software}} in {{Service}}-{{Orientation}}: {{The Case}} of {{BPEL Engines}}},
  shorttitle = {Open {{Source}} versus {{Proprietary Software}} in {{Service}}-{{Orientation}}},
  booktitle = {Service-{{Oriented Computing}}},
  author = {Harrer, Simon and Lenhard, Jörg and Wirtz, Guido},
  date = {2013},
  pages = {99--113},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-45005-1_8},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NISJ3NPD/Open Source versus Proprietary Software in Service-Orientation.pdf}
}

@inproceedings{harrison_architectural_2016,
  title = {Architectural {{Decision}}-{{Making}} in {{Open}}-{{Source Systems}} – {{Preliminary Observations}}},
  booktitle = {2016 1st {{International Workshop}} on {{Decision Making}} in {{Software ARCHitecture}} ({{MARCH}})},
  author = {Harrison, Neil B. and Gubler, Erich and Skinner, Danielle},
  date = {2016-04},
  pages = {16--21},
  doi = {10.1109/MARCH.2016.7},
  abstract = {Participants in open-source software projects are often geographically dispersed, and may work in different companies, and have different visions of the software. These present special challenges to creating unified architectural decisions. Yet open-source projects are often successful. We studied architectural documentation of forty-four open-source (OSS) projects, and found some evidence of how architectural decisions were made. It appears that the decision making process is not significantly different from that in traditional software projects. In particular, it was characterized by careful, intentional software design, with attention to quality attributes. In general, the architectural decisions tended to be controlled by a very small team or a single individual.},
  eventtitle = {2016 1st {{International Workshop}} on {{Decision Making}} in {{Software ARCHitecture}} ({{MARCH}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6P6KYEK6/Harrison et al. - 2016 - Architectural Decision-Making in Open-Source Syste.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E9PZQR53/7496441.html},
  keywords = {architectural decision-making,architectural decisions,architectural documentation,Architecture,Chaos,Computer architecture,decision making,Decision making,decision making process,Documentation,Evolution,Open source software,open-source projects,open-source software projects,open-source systems,Open-Source Systems,OSS projects,preliminary observations,public domain software,rchitectural Decisions,software architecture,unified architectural decisions}
}

@inproceedings{harrison_open_2011,
  title = {Open Government and E-Government: {{Democratic}} Challenges from a Public Value Perspective},
  shorttitle = {Open Government and E-Government},
  booktitle = {Proceedings of the 12th {{Annual International Digital Government Research Conference}}: {{Digital Government Innovation}} in {{Challenging Times}}},
  author = {Harrison, Teresa M. and Guerrero, Santiago and Burke, G. Brian and Cook, Meghan and Cresswell, Anthony and Helbig, Natalie and Hrdinová, Jana and Pardo, Theresa},
  date = {2011},
  pages = {245--253},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2037597},
  urldate = {2015-06-08},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AZ27BNWS/dgo2011_opengov.pdf}
}

@inproceedings{harrison_software_2016,
  title = {Software {{Architecture Pattern Morphology}} in {{Open}}-{{Source Systems}}},
  booktitle = {2016 13th {{Working IEEE}}/{{IFIP Conference}} on {{Software Architecture}} ({{WICSA}})},
  author = {Harrison, Neil B. and Gubler, Erich and Skinner, Danielle},
  date = {2016-04},
  pages = {91--98},
  doi = {10.1109/WICSA.2016.8},
  abstract = {Architecture patterns are commonly used to specify, understand, and document software architectures. As a system evolves, its architecture patterns are affected. In some cases, the patterns themselves may change. We studied the architectural documentation of a large number of open-source systems to learn how the architecture patterns change as the systems evolve. In some cases, the existing patterns accommodate the system evolution without changing, such as adding layers to a layered architecture. In other cases, new patterns are added where no patterns existed. In some cases, new patterns were added to existing architecture patterns. And in a few cases, a pattern changed to a different architecture pattern. We observed instances of each type of change. In most cases, there was a logical structural evolutionary path to the new pattern. Typically, the architecture documentation also explained the important quality attributes that motivated the changes. We propose this work as a foundation for the study of how architecture patterns change as system architectures evolve.},
  eventtitle = {2016 13th {{Working IEEE}}/{{IFIP Conference}} on {{Software Architecture}} ({{WICSA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MIFMGBT9/Harrison et al. - 2016 - Software Architecture Pattern Morphology in Open-S.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MMNQIFNR/7516815.html},
  keywords = {architectural documentation,Architecture Patterns,Computer architecture,document software architectures,Documentation,Evolution,evolutionary computation,layered architecture,logical structural evolutionary path,Morphology,Open source software,open-source systems,Open-Source Systems,public domain software,Servers,software architecture,software architecture pattern morphology,system documentation,system evolution}
}

@inproceedings{harutyunyan_getting_2019,
  title = {Getting Started with Open Source Governance and Compliance in Companies},
  booktitle = {Proceedings of the 15th {{International Symposium}} on {{Open Collaboration}}},
  author = {Harutyunyan, Nikolay and Riehle, Dirk},
  date = {2019-08-20},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Skövde, Sweden}},
  doi = {10.1145/3306446.3340815},
  url = {https://doi.org/10.1145/3306446.3340815},
  urldate = {2020-04-22},
  abstract = {Commercial use of open source software is on the rise as more companies realize the benefits of using FLOSS components in their products. At the same time, the ungoverned use of such components can result in legal, financial, intellectual property, and other risks. To mitigate these risks, companies must govern their use of open source through appropriate processes. This paper presents an initial theory of industry best practices on getting started with open source governance and compliance. Through a qualitative survey, we conducted and analyzed 15 expert interviews in companies with advanced capabilities in open source governance. We also studied practitioner reports on existing practices for introducing FLOSS governance processes. We cast our resulting initial theory in the actionable format of best practice patterns that, when combined, form a practical handbook of getting started with FLOSS governance in companies.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VXRXBMR5/Harutyunyan and Riehle - 2019 - Getting started with open source governance and co.pdf},
  isbn = {978-1-4503-6319-8},
  keywords = {commercial use of open source,FLOSS,FOSS,industry best practice,introduction of FLOSS in companies,open source governance,open source software,qualitative survey},
  series = {{{OpenSym}} '19}
}

@inproceedings{harutyunyan_industry_2019,
  title = {Industry Best Practices for Open Source Governance and Component Reuse},
  booktitle = {Proceedings of the 24th {{European Conference}} on {{Pattern Languages}} of {{Programs}}},
  author = {Harutyunyan, Nikolay and Riehle, Dirk},
  date = {2019-07-03},
  pages = {1--14},
  publisher = {{Association for Computing Machinery}},
  location = {{Irsee, Germany}},
  doi = {10.1145/3361149.3361170},
  url = {https://doi.org/10.1145/3361149.3361170},
  urldate = {2020-04-22},
  abstract = {Corporate use of open source in software products is on the rise. While this brings a number of technological and business benefits to companies, it also comes with potential legal and financial risks caused by license non-compliance and ungoverned use of open source components. Companies address these threats with free/libre and open source software (FLOSS) governance - internal guidelines and processes for using open source components in products. An essential aspect of FLOSS governance is component reuse and component repository, which enable efficient governance for the previously used components by the company's developers. In our study, we aimed to identify the current industry best practices for FLOSS governance and component reuse. We conducted 15 expert interviews in companies with high governance maturity, analyzed these interviews and derived 19 best practices cast in the pattern format of context-problem-solution. The format was inspired by design patterns and enables higher applicability of our research results by practitioners. The 19 best practices form a handbook on FLOSS governance and component reuse that also includes workflows connecting the individual practices into process templates.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UCEXQHZJ/Harutyunyan and Riehle - 2019 - Industry best practices for open source governance.pdf},
  isbn = {978-1-4503-6206-1},
  keywords = {best practice,commercial use of open source,component repository,component reuse,FLOSS,introduction of FLOSS in companies,open source components,open source governance,open source software,pattern,pattern language},
  series = {{{EuroPLop}} '19}
}

@article{harutyunyan_industry_2019-1,
  title = {Industry Requirements for {{FLOSS}} Governance Tools to Facilitate the Use of Open Source Software in Commercial Products},
  author = {Harutyunyan, Nikolay and Bauer, Andreas and Riehle, Dirk},
  date = {2019-12-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {158},
  pages = {110390},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2019.08.001},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121219301578},
  urldate = {2020-04-22},
  abstract = {Virtually all software products incorporate free/libre and open source software (FLOSS) components. However, ungoverned use of FLOSS components can result in legal and financial risks, and risks to a firm’s intellectual property. To avoid these risks, companies must govern their FLOSS use through open source governance processes and by following industry best practices. A particular challenge is license compliance. To manage the complexity of governance and compliance, companies should use tools and well-defined processes. This paper investigates and presents industry requirements for FLOSS governance tools, followed by an evaluation of the suggested requirements. We chose eleven companies with an advanced understanding of open source governance and interviewed their FLOSS governance experts to derive a theory of industry requirements for tooling. We extended our previous work adding the requirement category on the architecture model for software products. We then analyzed the features of leading governance tools and used this analysis to evaluate two categories of our theory: FLOSS license scanning and FLOSS components in product bills of materials. The result is a list of FLOSS governance requirements. For practical relevance, we cast our theory as a requirements specification for FLOSS governance tools.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YVAA35RY/Harutyunyan et al. - 2019 - Industry requirements for FLOSS governance tools t.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LAC52TV3/S0164121219301578.html},
  keywords = {Company requirements for FLOSS tools,FLOSS,FLOSS governance tools,FOSS,Open source governance,Open source software},
  langid = {english}
}

@inproceedings{harutyunyan_understanding_2018,
  ids = {harutyunyan\_understanding\_2018-1},
  title = {Understanding {{Industry Requirements}} for {{FLOSS Governance Tools}}},
  booktitle = {Open {{Source Systems}}: {{Enterprise Software}} and {{Solutions}}},
  author = {Harutyunyan, Nikolay and Bauer, Andreas and Riehle, Dirk},
  date = {2018-06-08},
  pages = {151--167},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-92375-8_13},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-92375-8_13},
  urldate = {2018-08-15},
  abstract = {Almost all software products today incorporate free/libre, and open source software (FLOSS) components. Companies must govern their FLOSS use to avoid potential risks to their intellectual property resulting from the use of FLOSS components. A particular challenge is license compliance. To manage the complexity of license compliance, companies should use tools and well-defined processes to perform these tasks time and cost efficiently. This paper investigates and presents common industry requirements for FLOSS governance tools, followed by an evaluation of the suggested requirements by matching them with the features of existing tools.We chose 10 industry leading companies through polar theoretical sampling and interviewed their FLOSS governance experts to derive a theory of industry needs and requirements for tooling. We then analyzed the features of a governance tools sample and used this analysis to evaluate two categories of our theory: FLOSS license scanning and FLOSS in product bills of materials. The result is a list of FLOSS governance requirements based on our qualitative study of the industry, evaluated using the existing governance tool features. For higher practical relevance, we cast our theory as a requirements specification for FLOSS governance tools.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FB2R4IUL/Harutyunyan et al. - 2018 - Understanding Industry Requirements for FLOSS Gove.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QHWVWGNP/Harutyunyan et al. - 2018 - Understanding Industry Requirements for FLOSS Gove.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YSQJDQII/978-3-319-92375-8_13.html},
  isbn = {978-3-319-92374-1 978-3-319-92375-8},
  keywords = {Company requirements for FLOSS tools,FLOSS,FLOSS governance tools,FOSS,Open source governance,Open source software},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@article{haruvy_harvesting_2003,
  title = {Harvesting Altruism in Open-Source Software Development},
  author = {Haruvy, Ernan and Prasad, Ashutosh and Sethi, Suresh P.},
  date = {2003},
  journaltitle = {Journal of Optimization Theory and Applications},
  volume = {118},
  pages = {381--416},
  url = {http://link.springer.com/article/10.1023/A:1025455523489},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GDE4HRNJ/art%3A10.1023%2FA%3A1025455523489.pdf},
  number = {2}
}

@article{harzl_can_2017,
  title = {Can {{FOSS}} Projects Benefit from Integrating {{Kanban}}: A Case Study},
  shorttitle = {Can {{FOSS}} Projects Benefit from Integrating {{Kanban}}},
  author = {Harzl, Annemarie},
  date = {2017-06-06},
  journaltitle = {Journal of Internet Services and Applications},
  shortjournal = {J Internet Serv Appl},
  volume = {8},
  pages = {7},
  issn = {1869-0238},
  doi = {10.1186/s13174-017-0058-z},
  url = {https://doi.org/10.1186/s13174-017-0058-z},
  urldate = {2020-04-21},
  abstract = {Free and Open Source Software (FOSS) and Agile Software Development (ASD) have both been recognized as important software development methods; they have many success stories and share some similarities. However, there is a lack of research regarding the comprehensive integration of the two. This work presents a single case of a hybrid student FOSS project where ASD and FOSS were combined and reports if this combination benefits the contributors. We conducted Action Research (AR) with one sub-team of a large hybrid student FOSS project, and performed three AR cycles based on the Kanban method. The Kanban practices visualize the workflow, make policies explicit and implement feedback loops were examined during the AR cycles. They are discussed in detail in this paper, which has two main contributions: first, it describes a real world situation, where Kanban is applied to a hybrid student FOSS project, and second, it determines that the combination is experienced as beneficial by contributors. Study participants report a positive effect on communication with other teams and stakeholders due to the use of the Kanban and regard their time acquiring knowledge about Kanban practices as well spent.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HYGSWN2K/Harzl - 2017 - Can FOSS projects benefit from integrating Kanban.pdf},
  langid = {english},
  number = {1}
}

@inproceedings{haskel_whats_2016,
  title = {Whats {{GNU}} Got to Do with It? Participatory Design, Infrastructuring and Free/Open Source Software},
  shorttitle = {Whats {{GNU}} Got to Do with It?},
  booktitle = {Proceedings of the 14th {{Participatory Design Conference}}: {{Short Papers}}, {{Interactive Exhibitions}}, {{Workshops}} - {{Volume}} 2},
  author = {Haskel, Lisa and Graham, Paula},
  date = {2016-08-15},
  pages = {17--20},
  publisher = {{Association for Computing Machinery}},
  location = {{Aarhus, Denmark}},
  doi = {10.1145/2948076.2948090},
  url = {https://doi.org/10.1145/2948076.2948090},
  urldate = {2020-04-22},
  abstract = {In this paper we link Participatory Design (PD) to Free and Open Source Software (FOSS) via Infrastructuring. We describe the characteristics of FOSS focusing on extensibility, generativity and their communities of practice. We discuss how FOSS products and communities provide valuable resources to PD projects beyond the design phase. We use evidence from our long-running, community based PD project to show how FOSS provides essential elements of infrastructure that contribute to the sustainability of this project and suggest that the mutual learning outcomes of PD, together with FOSS resources, can support users' participation after design. We contribute to PD by providing a point of view from developers and facilitators, who combine FOSS and PD, that furthers an understanding of how these two areas are related.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KTV26DDQ/Haskel and Graham - 2016 - Whats GNU got to do with it participatory design,.pdf},
  isbn = {978-1-4503-4136-3},
  keywords = {Drupal,free and open source software,infrastructuring,participatory design,sustainability},
  series = {{{PDC}} '16}
}

@article{hauge_adoption_2010,
  title = {Adoption of Open Source Software in Software-Intensive Organizations – {{A}} Systematic Literature Review},
  author = {Hauge, Øyvind and Ayala, Claudia and Conradi, Reidar},
  date = {2010},
  journaltitle = {Information and Software Technology},
  volume = {52},
  pages = {1133--1154},
  issn = {09505849},
  doi = {10.1016/j.infsof.2010.05.008},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584910000972},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CRNBWB7Z/9fcfd50b88f2858628.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IDG8678X/1-s2.0-S0950584910000972-main.pdf},
  keywords = {adoption,hivatkozások,literature review,open source,secondary research,systematic review},
  langid = {english},
  number = {11}
}

@incollection{hauge_providing_2009,
  title = {Providing {{Commercial Open Source Software}}: {{Lessons Learned}}},
  shorttitle = {Providing {{Commercial Open Source Software}}},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Hauge, Øyvind and Ziemer, Sven},
  date = {2009},
  pages = {70--82},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ENGVQWGR/chp%3A10.1007%2F978-3-642-02032-2_8.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{hauge_risks_2010,
  title = {Risks and Risk Mitigation in Open Source Software Adoption: {{Bridging}} the Gap between Literature and Practice},
  shorttitle = {Risks and Risk Mitigation in Open Source Software Adoption},
  booktitle = {Open Source Software: New Horizons},
  author = {Hauge, Øyvind and Cruzes, Daniela Soares and Conradi, Reidar and Velle, Ketil Sandanger and Skarpenes, Tron André},
  date = {2010},
  pages = {105--118},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SX4PSDU6/chp%3A10.1007%2F978-3-642-13244-5_9.pdf},
  keywords = {adoption,Forrás2,nyílt forrás,open source,risk}
}

@incollection{hauge_surveying_2007,
  title = {Surveying Industrial Roles in Open Source Software Development},
  booktitle = {Open Source Development, Adoption and Innovation},
  author = {Hauge, Øyvind and Sørensen, Carl-Fredrik and Røsdal, Andreas},
  date = {2007},
  pages = {259--264},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_25},
  urldate = {2014-12-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8NFDVCQ6/chp%3A10.1007%2F978-0-387-72486-7_25.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S5EZBFWM/0deec51f42602be75d000000.pdf},
  keywords = {Commercial relations,development,nyílt forrás,OSS}
}

@article{hawkins_economics_2004,
  title = {The Economics of Open Source Software for a Competitive Firm},
  author = {Hawkins, Richard E.},
  date = {2004},
  journaltitle = {NETNOMICS: Economic Research and Electronic Networking},
  volume = {6},
  pages = {103--117},
  url = {http://link.springer.com/article/10.1007/s11066-004-2717-z},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F2G5FGW9/art%3A10.1007%2Fs11066-004-2717-z.pdf},
  number = {2}
}

@incollection{hawthorne_software_2006,
  title = {Software Engineering Education in the Era of Outsourcing, Distributed Development, and Open Source Software: Challenges and Opportunities},
  shorttitle = {Software Engineering Education in the Era of Outsourcing, Distributed Development, and Open Source Software},
  booktitle = {Software {{Engineering Education}} in the {{Modern Age}}},
  author = {Hawthorne, Matthew J. and Perry, Dewayne E.},
  date = {2006},
  pages = {166--185},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11949374_11},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QPUSQA7B/chp%3A10.1007%2F11949374_11.pdf},
  keywords = {development,nyílt forrás}
}

@inproceedings{hayashi_why_2013,
  title = {Why Is Collaboration Needed in {{OSS}} Projects? A Case Study of Eclipse Project},
  shorttitle = {Why Is Collaboration Needed in {{OSS}} Projects?},
  author = {Hayashi, Hironori and Ihara, Akinori and Monden, Akito and Matsumoto, Ken-ichi},
  date = {2013},
  pages = {17--20},
  publisher = {{ACM Press}},
  doi = {10.1145/2501535.2501539},
  url = {http://dl.acm.org/citation.cfm?doid=2501535.2501539},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NA8KXC2E/p17-hayashi.pdf},
  isbn = {978-1-4503-2313-0},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@incollection{hayden_specifying_2012,
  title = {Specifying and Verifying the Correctness of Dynamic Software Updates},
  booktitle = {Verified {{Software}}: {{Theories}}, {{Tools}}, {{Experiments}}},
  author = {Hayden, Christopher M. and Magill, Stephen and Hicks, Michael and Foster, Nate and Foster, Jeffrey S.},
  date = {2012},
  pages = {278--293},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-27705-4_22},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MJTMP7KI/___dsu-correct-vstte12.pdf}
}

@inproceedings{he_learning_2013,
  title = {Learning from {{Open}}-{{Source Projects}}: {{An Empirical Study}} on {{Defect Prediction}}},
  shorttitle = {Learning from {{Open}}-{{Source Projects}}},
  author = {He, Zhimin and Peters, Fayola and Menzies, Tim and Yang, Ye},
  date = {2013-10},
  pages = {45--54},
  publisher = {{IEEE}},
  doi = {10.1109/ESEM.2013.20},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6681337},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W5PRX6V5/06681337.pdf},
  isbn = {978-0-7695-5056-5},
  keywords = {development,nyílt forrás,source}
}

@book{headquarters_department_of_the_army_atp_2014,
  title = {{{ATP}} 5-19 {{Risk Management}}},
  author = {{Headquarters, Department of the Army}},
  date = {2014-04},
  location = {{Washington, DC}},
  url = {http://armypubs.army.mil/doctrine/DR_pubs/dr_a/pdf/atp5_19.pdf},
  urldate = {2014-05-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AG2V9NB2/atp5_19.pdf},
  keywords = {Military,Risk management,Standard}
}

@inproceedings{hebig_quest_2016,
  title = {The Quest for Open Source Projects That Use {{UML}}: Mining {{GitHub}}},
  shorttitle = {The Quest for Open Source Projects That Use {{UML}}},
  booktitle = {Proceedings of the {{ACM}}/{{IEEE}} 19th {{International Conference}} on {{Model Driven Engineering Languages}} and {{Systems}}},
  author = {Hebig, Regina and Quang, Truong Ho and Chaudron, Michel R. V. and Robles, Gregorio and Fernandez, Miguel Angel},
  date = {2016-10-02},
  pages = {173--183},
  publisher = {{Association for Computing Machinery}},
  location = {{Saint-malo, France}},
  doi = {10.1145/2976767.2976778},
  url = {https://doi.org/10.1145/2976767.2976778},
  urldate = {2020-04-22},
  abstract = {Context: While industrial use of UML was studied intensely, little is known about UML use in Free/Open Source Software (FOSS) projects. Goal: We aim at systematically mining GitHub projects to answer the question when models, if used, are created and updated throughout the whole project's life-span. Method: We present a semi-automated approach to collect UML stored in images, .xmi, and .uml files and scanned ten percent of all GitHub projects (1.24 million). Our focus was on number and role of contributors that created/updated models and the time span during which this happened. Results: We identified and studied 21 316 UML diagrams within 3 295 projects. Conclusion: Creating/updating of UML happens most often during a very short phase at the project start. For 12\% of the models duplicates were found, which are in average spread across 1.88 projects. Finally, we contribute a list of GitHub projects that include UML files.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VQYQIW9S/Hebig et al. - 2016 - The quest for open source projects that use UML m.pdf},
  isbn = {978-1-4503-4321-3},
  keywords = {free software,GitHub,mining software repositories,open source,UML},
  series = {{{MODELS}} '16}
}

@incollection{heckman_emergent_2007,
  title = {Emergent Decision-Making Practices in Free/Libre Open Source Software ({{FLOSS}}) Development Teams},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Heckman, Robert and Crowston, Kevin and Eseryel, U. Yeliz and Howison, James and Allen, Eileen and Li, Qing},
  date = {2007},
  pages = {71--84},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_6},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RR2AEQSD/chp%3A10.1007%2F978-0-387-72486-7_6.pdf},
  keywords = {community,development,nyílt forrás}
}

@book{heli_ikonen_controlling_2010,
  title = {Controlling the {{Use}} of {{Collaboration Tools}} in {{Open Source Software Development}}},
  shorttitle = {{{NordiCHI}} 2010},
  author = {Heli Ikonen, Ebba T and {Netta Iivari} and {Henrik Hedberg}},
  date = {2010},
  url = {http://dl.acm.org/citation.cfm?id=1868914},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CMRFAZZS/p236-ikonen.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@article{hendry_public_2008,
  title = {Public Participation in Proprietary Software Development through User Roles and Discourse},
  author = {Hendry, David G.},
  date = {2008-07},
  journaltitle = {International Journal of Human-Computer Studies},
  volume = {66},
  pages = {545--557},
  issn = {10715819},
  doi = {10.1016/j.ijhcs.2007.12.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S107158190700170X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U4GTCMA2/1-s2.0-S107158190700170X-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {7}
}

@incollection{henttonen_libre_2011,
  title = {Libre {{Software}} as an {{Innovation Enabler}} in {{India Experiences}} of a {{Bangalorian Software SME}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Henttonen, Katja},
  date = {2011},
  pages = {220--232},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_15},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q9WCQC3W/chp%3A10.1007%2F978-3-642-24418-6_15.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{heredia_software_2015,
  title = {Software {{Business Models}} from a {{Distribution Perspective}}: {{A Systematic Mapping Study}}},
  shorttitle = {Software {{Business Models}} from a {{Distribution Perspective}}},
  author = {Heredia, Alberto and Colomo-Palacios, Ricardo and de Amescua, Antonio},
  date = {2015},
  journaltitle = {Procedia Computer Science},
  volume = {64},
  pages = {395--402},
  issn = {18770509},
  doi = {10.1016/j.procs.2015.08.516},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1877050915026514},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AKJC97FP/1-s2.0-S1877050915026514-main.pdf},
  keywords = {systematic mapping},
  langid = {english},
  options = {useprefix=true}
}

@article{heron_open_2013,
  title = {Open Source and Accessibility: Advantages and Limitations},
  shorttitle = {Open Source and Accessibility},
  author = {Heron, Michael and Hanson, Vicki L. and Ricketts, Ian},
  date = {2013},
  journaltitle = {Journal of Interaction Science},
  volume = {1},
  pages = {1--10},
  url = {http://link.springer.com/article/10.1186/2194-0827-1-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ADHZSRSX/art%3A10.1186%2F2194-0827-1-2.pdf},
  number = {1}
}

@inproceedings{herraiz_flossmetrics_2009,
  title = {Flossmetrics: {{Free}}/Libre/Open Source Software Metrics},
  shorttitle = {Flossmetrics},
  booktitle = {Software {{Maintenance}} and {{Reengineering}}, 2009. {{CSMR}}'09. 13th {{European Conference}} On},
  author = {Herraiz, Israel and Izquierdo-Cortazar, Daniel and Rivas-Hernández, Francisco and Gonzalez-Barahona, Jesús and Robles, Gregorio and Duenas-Dominguez, S. and Garcia-Campos, Carlos and Gato, Juan Francisco and Tovar, Liliana},
  date = {2009},
  pages = {281--284},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4812771},
  urldate = {2015-06-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WUXDPUDD/flossmetrics_csmr.pdf}
}

@inproceedings{herraiz_managing_2008,
  title = {Managing {{Libre Software Distributions}} under a {{Product Line Approach}}},
  author = {Herraiz, Israel and Robles, Gregorio and Capilla, Rafael and Gonzalez-Barahona, Jesus M.},
  date = {2008},
  pages = {1221--1225},
  publisher = {{IEEE}},
  doi = {10.1109/COMPSAC.2008.45},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4591754},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VWBRZDQ2/04591754.pdf},
  isbn = {978-0-7695-3262-2},
  keywords = {development,nyílt forrás,repository}
}

@article{hertel_motivating_2007,
  title = {Motivating Job Design as a Factor in Open Source Governance},
  author = {Hertel, Guido},
  date = {2007-06-26},
  journaltitle = {Journal of Management \& Governance},
  volume = {11},
  pages = {129--137},
  issn = {1385-3457, 1572-963X},
  doi = {10.1007/s10997-007-9023-8},
  url = {http://link.springer.com/10.1007/s10997-007-9023-8},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UK5IHD32/Motivating job design as a factor in open source governance.pdf},
  langid = {english},
  number = {2}
}

@article{hertel_motivation_2003,
  title = {Motivation of Software Developers in {{Open Source}} Projects: An {{Internet}}-Based Survey of Contributors to the {{Linux}} Kernel},
  author = {Hertel, Guido and Niedner, Sven and Herrmann, Stefanie},
  date = {2003-07},
  journaltitle = {Research Policy},
  volume = {32},
  pages = {1159--1177},
  issn = {00487333},
  doi = {10.1016/S0048-7333(03)00047-7},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0048733303000477},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q2DXKZSZ/Hertel et al. - 2003 - Motivation of software developers in Open Source p.pdf},
  keywords = {linux,motivation,open source,virtual teams,vist model},
  number = {7}
}

@misc{herzog_open-source_2001,
  title = {Open-Source Security Testing Methodology Manual},
  author = {Herzog, Pete},
  editor = {Simonis, Drew (simonis@myself.com) and Hawthorn, K. Emily (ekh@mitre.org) and Barrachina, Jordi Martinez i (jordi.martinez-barrachina@db.com)},
  date = {2001},
  url = {http://www.selfsecurity.org/unclassified/mgmt/osstmm.pdf},
  urldate = {2012-10-10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7S958UV9/Herzog - 2001 - Open-source security testing methodology manual.pdf},
  keywords = {open source,security testing,software development}
}

@inproceedings{hewapathirana_open_2017,
  title = {Open {{Source Software Ecosystems}} in {{Health Sector}}: {{A Case Study}} from {{Sri Lanka}}},
  shorttitle = {Open {{Source Software Ecosystems}} in {{Health Sector}}},
  booktitle = {Information and {{Communication Technologies}} for {{Development}}},
  author = {Hewapathirana, Roshan and Amarakoon, Pamod and Braa, Jørn},
  date = {2017-05-22},
  pages = {71--80},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-59111-7_7},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-59111-7_7},
  urldate = {2018-08-15},
  abstract = {A software ecosystem consists of a software platform, a set of internal and external developers and domain experts in service to a community of users that compose relevant solution elements to satisfy their needs. Open source is well-known for its potential to frame software ecosystems with its networking tendency and provision for further customization with access to software source code. Open source is increasingly becoming the choice for health information system implementations in low resource settings.This longitudinal case study was designed to study the research question, how a software ecosystem is being built around an open source health information system implementation. Empirically the study was positioned in a multi-sector initiative identifying and support nutritionally at-risk households to eliminating malnutrition. The discussion reveals how new dependencies between health and non-health sector actors were created with the emerging software ecosystem based on an open source framework and supplementary custom-built web and mobile components.},
  eventtitle = {International {{Conference}} on {{Social Implications}} of {{Computers}} in {{Developing Countries}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4832JS5R/Hewapathirana et al. - 2017 - Open Source Software Ecosystems in Health Sector .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2BBFVBBL/978-3-319-59111-7_7.html},
  isbn = {978-3-319-59110-0 978-3-319-59111-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{higashi_clustering_2016,
  title = {Clustering {{OSS License Statements}} toward {{Automatic Generation}} of {{License Rules}}},
  booktitle = {2016 7th {{International Workshop}} on {{Empirical Software Engineering}} in {{Practice}} ({{IWESEP}})},
  author = {Higashi, Yunosuke and Manabe, Yuki and Ohira, Masao},
  date = {2016-03},
  pages = {30--35},
  doi = {10.1109/IWESEP.2016.20},
  abstract = {Reusing open source software (OSS) components for own software products has become common in the modarn software development. Automated license identification tools has been proposed to help developers identify OSS licenses, since a large number of licenses sometimes must be checked to be reused. Of the existing tools, Ninka can most correctly identify licenses of each source file by using regular expressions. In case Ninka does not have license identification rules for unknown licenses, Ninka reports they are "unknown licenses" which must be checked by developers manually. Since completely-new or derived OSS licenses appear nearly every year, a license identification tool should be appropriately maintained by adding regular expressions corresponding to the new licenses. The final goal of our study is to construct a method to automatically create candidates of regular expressions to be added to a license identification tool such as Ninka. Toward achieving the goal, files identified as unknown licenses must be classified by license. In this paper, we propose a hierarchical clustering which divides unknown licenses into clusters of the same licenses. We conduct a case study to confirm the usefulness of our clustering method when it is applied for classifying 2,838 unknown license files of Debian v7.8.0. As a result, it is confirmed that our method can create clusters which are suitable as candidates for generating license rules automatically.},
  eventtitle = {2016 7th {{International Workshop}} on {{Empirical Software Engineering}} in {{Practice}} ({{IWESEP}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P9LDL2EV/Higashi et al. - 2016 - Clustering OSS License Statements toward Automatic.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YLCAHQRE/7464549.html},
  keywords = {automated license identification tools,automatic generation,Clustering methods,Electronic mail,hierarchical clustering,hierarchical clustering method,license files,license identification,license identification rules,Licenses,Ninka,open source software,Open source software,OSS components,OSS license,OSS license statements,pattern clustering,public domain software,software development,software engineering,software products,source file,Systems engineering and theory,Vegetation}
}

@article{hill_samir_2008,
  title = {Samir {{Chopra}}, {{Scott D}}. {{Dexter}}, {{Decoding Liberation}}: {{The Promise}} of {{Free}} and {{Open Source Software}}: {{Routledge Studies}} in {{New Media}} and {{Cyberculture}}, {{Routledge}}, {{New York}}, 2008, Ix–211 Pp, \$95.00, {{ISBN}} 978-0415978934},
  shorttitle = {Samir {{Chopra}}, {{Scott D}}. {{Dexter}}, {{Decoding Liberation}}},
  author = {Hill, Benjamin Mako},
  date = {2008-06},
  journaltitle = {Minds and Machines},
  volume = {18},
  pages = {297--299},
  issn = {0924-6495, 1572-8641},
  doi = {10.1007/s11023-008-9101-y},
  url = {http://link.springer.com/10.1007/s11023-008-9101-y},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MDQ74ET2/art%3A10.1007%2Fs11023-008-9101-y.pdf},
  langid = {english},
  number = {2}
}

@article{hindle_automated_2013,
  title = {Automated Topic Naming: {{Supporting}} Cross-Project Analysis of Software Maintenance Activities},
  shorttitle = {Automated Topic Naming},
  author = {Hindle, Abram and Ernst, Neil A. and Godfrey, Michael W. and Mylopoulos, John},
  date = {2013-12},
  journaltitle = {Empirical Software Engineering},
  volume = {18},
  pages = {1125--1155},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-012-9209-9},
  url = {http://link.springer.com/10.1007/s10664-012-9209-9},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IZPMG4KU/art%3A10.1007%2Fs10664-012-9209-9.pdf},
  langid = {english},
  number = {6}
}

@book{hissam_open_2011,
  title = {Open Source Systems: Grounding Research 7th {{IFIP WG}} 2.13 International Conference ; Proceedings},
  shorttitle = {Open Source Systems},
  author = {Hissam, Scott and {International Federation for Information Processing} and {Working Group on Open Source Software} and {OSS}},
  date = {2011},
  publisher = {{Springer}},
  location = {{Heidelberg [u.a.]}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/42VSKPSW/book_Open Source Systems - Grounding Research.pdf},
  isbn = {978-3-642-24417-9 3-642-24417-3 978-3-642-24418-6 3-642-24418-1},
  langid = {english}
}

@inproceedings{ho-quang_practices_2017,
  ids = {ho-quang\_practices\_2017-1},
  title = {Practices and {{Perceptions}} of {{UML Use}} in {{Open Source Projects}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice Track}} ({{ICSE}}-{{SEIP}})},
  author = {Ho-Quang, Truong and Hebig, Regina and Robles, Gregorio and Chaudron, Michel R.V. and Fernandez, Miguel Angel},
  date = {2017-05},
  pages = {203--212},
  doi = {10.1109/ICSE-SEIP.2017.28},
  abstract = {Context: Open Source is getting more and more collaborative with industry. At the same time, modeling is today playing a crucial role in development of, e.g., safety critical software. Goal: However, there is a lack of research about the use of modeling in Open Source. Our goal is to shed some light into the motivation and benefits of the use of modeling and its use within project teams. Method: In this study, we perform a survey among Open Source developers. We focus on projects that use the Unified Modeling Language (UML) as a representative for software modeling. Results: We received 485 answers of contributors of 458 different Open Source projects. Conclusion: Collaboration seems to be the most important motivation for using UML. It benefits new contributors and contributors who do not create models. Teams use UML during communication and planning of joint implementation efforts.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice Track}} ({{ICSE}}-{{SEIP}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H9YDD6M6/Ho-Quang et al. - 2017 - Practices and Perceptions of UML Use in Open Sourc.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KTU7BW7W/Ho-Quang et al. - 2017 - Practices and perceptions of UML use in open sourc.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WN2MFBMX/7965444.html},
  keywords = {architecture documentation,communication,Companies,Documentation,effectiveness of UML,GitHub,impacts of UML,Industries,motivation,open source projects,OSS projects,Planning,Software,software modeling,team communication,Tools,UML,UML use,Unified modeling language,Unified Modeling Language}
}

@incollection{hofmann_dual_2013,
  title = {A Dual Model of Open Source License Growth},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Hofmann, Gottfried and Riehle, Dirk and Kolassa, Carsten and Mauerer, Wolfgang},
  date = {2013},
  pages = {245--256},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_18},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KTM94MST/chp%3A10.1007%2F978-3-642-38928-3_18.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SBHSBWQF/chp%3A10.1007%2F978-3-642-38928-3_18.pdf},
  isbn = {978-3-642-38928-3},
  keywords = {_SMS_untagged,Analysis,GPL,license,nyílt forrás,open source}
}

@book{hofstede_modern_2010,
  title = {Modern {{Business Process Automation}}},
  editor = {Hofstede, Arthur H. M. and Aalst, Wil M. P. and Adams, Michael and Russell, Nick},
  date = {2010},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-03121-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8RIMAQ69/chp%3A10.1007%2F978-3-642-03121-2_16.pdf},
  isbn = {978-3-642-03122-9 978-3-642-03121-2},
  langid = {english}
}

@incollection{holck_managerial_2005,
  title = {Managerial and Technical Barriers to the Adoption of Open Source Software},
  booktitle = {{{COTS}}-Based Software Systems},
  author = {Holck, Jesper and Larsen, Michael Holm and Pedersen, Mogens Kühn},
  date = {2005},
  pages = {289--300},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-30587-3_38},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2S2MS3DA/chp%3A10.1007%2F978-3-540-30587-3_38.pdf},
  keywords = {adoption,case study,nyílt forrás}
}

@book{holzinger_software_2015,
  title = {Software {{Technologies}}},
  editor = {Holzinger, Andreas and Cardoso, Jorge and Cordeiro, José and Libourel, Therese and Maciaszek, Leszek A. and van Sinderen, Marten},
  date = {2015},
  volume = {555},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-25579-8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NNCSRBG7/chp%3A10.1007%2F978-3-319-25579-8_3.pdf},
  isbn = {978-3-319-25578-1 978-3-319-25579-8},
  keywords = {nyílt forrás,quality},
  options = {useprefix=true},
  series = {Communications in {{Computer}} and {{Information Science}}}
}

@inproceedings{honsel_hidden_2016,
  title = {Hidden {{Markov Models}} for the {{Prediction}} of {{Developer Involvement Dynamics}} and {{Workload}}},
  booktitle = {Proceedings of the {{The}} 12th {{International Conference}} on {{Predictive Models}} and {{Data Analytics}} in {{Software Engineering}}},
  author = {Honsel, Verena and Herbold, Steffen and Grabowski, Jens},
  date = {2016-09-09},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Ciudad Real, Spain}},
  doi = {10.1145/2972958.2972960},
  url = {https://doi.org/10.1145/2972958.2972960},
  urldate = {2020-04-22},
  abstract = {The evolution of software projects is driven by developers who are in control of the developed artifacts. When analyzing the behavior of developers, the observable behaviors are, e.g., commits, messages, or bug assignments. For defining dynamic activities and workload of developers, we consider underlying characteristics, which means the level of involvement according to their role in the project. In this paper, we propose to employ Hidden Markov Models (HMMs) to model this underlying behavior given the observable behavior as input. For this, we observe monthly commits, bugfixes, mailing list activity, and bug comments for each developer over the project duration. As output we get a model for each developer describing how likely it is to be in a low, medium, or high contribution state of every point in time. As a result, we discovered that same developer types exhibit similar models in terms of state patterns and transition matrices, which represent their involvement dynamics. Although the workload of the different developer roles related to this is more complex to model, we created a general model which performs nearly as well as individual developer contribution models. Moreover, to demonstrate the practical applicability, we present an example of the usage of our approach in project planning.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V7ZXGBW6/Honsel et al. - 2016 - Hidden Markov Models for the Prediction of Develop.pdf},
  isbn = {978-1-4503-4772-3},
  keywords = {Developer Roles,Hidden Markov Models,Software Development},
  series = {{{PROMISE}} 2016}
}

@inproceedings{horawalavithana_mentions_2019,
  title = {Mentions of {{Security Vulnerabilities}} on {{Reddit}}, {{Twitter}} and {{GitHub}}},
  booktitle = {{{IEEE}}/{{WIC}}/{{ACM International Conference}} on {{Web Intelligence}}},
  author = {Horawalavithana, Sameera and Bhattacharjee, Abhishek and Liu, Renhao and Choudhury, Nazim and O. Hall, Lawrence and Iamnitchi, Adriana},
  date = {2019-10-14},
  pages = {200--207},
  publisher = {{Association for Computing Machinery}},
  location = {{Thessaloniki, Greece}},
  doi = {10.1145/3350546.3352519},
  url = {https://doi.org/10.1145/3350546.3352519},
  urldate = {2020-04-22},
  abstract = {Activity on social media is seen as a relevant sensor for different aspects of the society. In a heavily digitized society, security vulnerabilities pose a significant threat that is publicly discussed on social media. This study presents a comparison of user-generated content related to security vulnerabilities on three digital platforms: two social media conversation channels (Reddit and Twitter) and a collaborative software development platform (GitHub). Our data analysis shows that while more security vulnerabilities are discussed on Twitter, relevant conversations go viral earlier on Reddit. We show that the two social media platforms can be used to accurately predict activity on GitHub.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DYP5UX6H/Horawalavithana et al. - 2019 - Mentions of Security Vulnerabilities on Reddit, Tw.pdf},
  isbn = {978-1-4503-6934-3},
  series = {{{WI}} '19}
}

@article{host_systematic_2011,
  title = {A Systematic Review of Research on Open Source Software in Commercial Software Product Development},
  author = {Höst, Martin and Oručević-Alagić, Alma},
  date = {2011-06},
  journaltitle = {Information and Software Technology},
  volume = {53},
  pages = {616--624},
  issn = {09505849},
  doi = {10.1016/j.infsof.2010.12.009},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584910002259},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EI98RPHK/ewic_ea10_session5paper2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MG8JPIR9/1-s2.0-S0950584910002259-main.pdf},
  keywords = {community,Mintamunka,OS-CS comparision,secondary research,systematic review},
  langid = {english},
  number = {6}
}

@incollection{host_usage_2011,
  title = {Usage of Open Source in Commercial Software Product Development–Findings from a Focus Group Meeting},
  booktitle = {Product-{{Focused Software Process Improvement}}},
  author = {Höst, Martin and Oručević-Alagić, Alma and Runeson, Per},
  date = {2011},
  pages = {143--155},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21843-9_13},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/89HFIPZT/chp%3A10.1007%2F978-3-642-21843-9_13.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CF2DRITH/chp%3A10.1007%2F978-3-642-21843-9_13.pdf},
  isbn = {978-3-642-21843-9},
  keywords = {Commercial relations,development,nyílt forrás},
  number = {6759}
}

@inproceedings{howard_open_2012,
  title = {Open {{Design}} and {{Crowdsourcing}}: {{Maturity}}, {{Methodology}} and {{Business Models}}},
  shorttitle = {Open {{Design}} and {{Crowdsourcing}}},
  booktitle = {Design 2012-{{International Design Conference}}},
  author = {Howard, Thomas J. and Achiche, Sofiane and Özkil, Ali Gürcan and McAloone, Tim C.},
  date = {2012},
  pages = {181--190},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IVHG3UBI/Open Design - DESIGN12 soac_thow.pdf.pdf}
}

@article{howison_flossmole_2006,
  title = {{{FLOSSmole}}: {{A Collaborative Repository}} for {{FLOSS Research Data}} and {{Analyses}}},
  shorttitle = {International {{Journal}} of {{Information Technology}} and {{Web Engineering}}},
  author = {Howison, James and Conklin, Megan and Crowston, Kevin},
  date = {2006},
  volume = {1},
  pages = {17--26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8RQ4X8EH/FLOSSmole.pdf},
  number = {3}
}

@incollection{howison_social_2006,
  title = {Social Dynamics of Free and Open Source Team Communications},
  booktitle = {Open {{Source Systems}}},
  author = {Howison, James and Inoue, Keisuke and Crowston, Kevin},
  date = {2006},
  pages = {319--330},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_32},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B9UVB8FW/chp%3A10.1007%2F0-387-34226-5_32.pdf},
  keywords = {community,development,nyílt forrás}
}

@report{hp_reducing_nodate,
  title = {Reducing {{Security Risks}} from {{Open Source Software}}},
  author = {{HP}},
  url = {h20195.www2.hp.com/v2/GetPDF.aspx%2F4AA0-8061ENW.pdf},
  urldate = {2014-05-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q59ADZJU/HP-Fortify-Open-Source-Security-White-Paper_final.pdf},
  type = {Technical white paper}
}

@inproceedings{hp_whitepaper_open_nodate,
  title = {Open {{Source Governance}}: {{Critical Business Considerations}} and {{Strategies}}},
  author = {{HP whitepaper}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CZXDED67/Open_source_governance_thought_leadership_lowres.pdf}
}

@inproceedings{hu_improving_2019,
  title = {Improving {{Feedback}} on {{GitHub Pull Requests}}: {{A Bots Approach}}},
  shorttitle = {Improving {{Feedback}} on {{GitHub Pull Requests}}},
  booktitle = {2019 {{IEEE Frontiers}} in {{Education Conference}} ({{FIE}})},
  author = {Hu, Zhewei and Gehringer, Edward F.},
  date = {2019-10},
  pages = {1--9},
  issn = {2377-634X},
  doi = {10.1109/FIE43999.2019.9028685},
  abstract = {Rising enrollments make it difficult for instructors and teaching assistants to give adequate feedback on each student's work. Our course projects require students to submit GitHub pull requests as deliverables for their open-source software (OSS) projects. We have set up a static code analyzer and a continuous integration service on GitHub to help students check different aspects of the code. However, these tools have some limitations. In this paper, we discuss how we bypass the limitations of existing tools by implementing three Internet bots. These bots are either open source or free for OSS projects and can be easily integrated with any GitHub repositories. One-hundred one Computer Science and Computer Engineering masters students participated in our study. The survey results showed that more than 84\% of students thought bots can help them to contribute code with better quality. We analyzed 396 pull requests. Results revealed that bots can provide more timely feedback than teaching staff. The Danger Bot is associated with a significant reduction system-specific guideline violations (by 39\%), and the Code Climate Bot is associated with a significant 60\% decrease of code smells in student contributions. However, we found that the Travis CI Bot did not help student contributions pass automated tests.},
  eventtitle = {2019 {{IEEE Frontiers}} in {{Education Conference}} ({{FIE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YJLF3578/Hu and Gehringer - 2019 - Improving Feedback on GitHub Pull Requests A Bots.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NF6F7NPN/9028685.html},
  keywords = {automated feedback,Bot (Internet),code climate bot,computer aided instruction,computer engineering masters students,computer science master students,Education,Expertiza,GitHub pull requests,GitHub repositories,Guidelines,Internet,Internet bots,Meteorology,open source,open-source curriculum,open-source software,open-source software projects,OSS projects,program testing,Programming,public domain software,software engineering,software maintenance,software quality,static code analyzer,students thought bots,teaching,teaching assistants,teaching staff,Tools}
}

@inproceedings{hu_open-source_2018,
  ids = {hu\_open-source\_2018-1},
  title = {Open-{{Source Software}} in {{Class}}: {{Students}}' {{Common Mistakes}}},
  shorttitle = {Open-{{Source Software}} in {{Class}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering Education}} and {{Training}} ({{ICSE}}-{{SEET}})},
  author = {Hu, Zhewei and Song, Yang and Gehringer, Edward},
  date = {2018-05},
  pages = {40--48},
  abstract = {Introducing Open Source Software (OSS) projects into a software-engineering course has many advantages, for instance, allowing students to learn good coding practices from real-world projects, and giving students a glimpse of a real project. However, it is not easy for instructors to induce one or more OSS core teams to lend support for course projects. The alternative is to have students work on "toy features"-features for these projects not specified by OSS core teams, but by teaching staff. However, the project may be unimportant to the OSS project or may disrupt its design, making those code contributions unlikely to be integrated into the OSS code repository. In this paper, we, as both teaching staff and the core team for one OSS project called Expertiza, discuss our experience in supporting 700 students on 313 OSS-based course projects in the past five years. We manually checked these course projects, and summarize 13 common mistakes that frequently occur in students' contributions, such as not following the existing design or messy pull requests. We propose five suggestions to help students reduce the frequency of common mistakes and improve the quality of their OSS pull requests.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Software Engineering Education}} and {{Training}} ({{ICSE}}-{{SEET}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EYW4K6HI/Hu et al. - 2018 - Open-source software in class students' common mi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MSW5JAN8/Hu et al. - 2018 - Open-Source Software in Class Students' Common Mi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LZVXCIFJ/8445181.html},
  keywords = {code contributions,coding practices,computer aided instruction,Computer science,computer science education,core team,Education,educational courses,expertiza,Expertiza,messy pull requests,open source curriculum,Open source software,Open Source Software,open-source curriculum,open-source software,Open-source software,Open-Source Software,OSS code repository,OSS core teams,OSS project,OSS pull requests,OSS-based course projects,public domain software,real-world projects,software engineering,Software engineering,software quality,software-engineering course,students common mistakes,teaching,teaching staff,Tools,Toy manufacturing industry}
}

@article{hu_reputation_2012,
  title = {Reputation Management in an Open Source Developer Social Network: {{An}} Empirical Study on Determinants of Positive Evaluations},
  shorttitle = {Reputation Management in an Open Source Developer Social Network},
  author = {Hu, Daning and Zhao, J. Leon and Cheng, Jiesi},
  date = {2012-06},
  journaltitle = {Decision Support Systems},
  volume = {53},
  pages = {526--533},
  issn = {01679236},
  doi = {10.1016/j.dss.2012.02.005},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923612000632},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PZXKC8M5/1-s2.0-S0167923612000632-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {3}
}

@incollection{huang_development_2006,
  title = {A Development Process for Building {{OSS}}-Based Applications},
  booktitle = {Unifying the {{Software Process Spectrum}}},
  author = {Huang, Meng and Yang, Liguang and Yang, Ye},
  date = {2006},
  pages = {122--135},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11608035_13},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5D9WWXTG/chp%3A10.1007%2F11608035_13.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{huang_evaluation_2014,
  title = {Evaluation and {{Application}} of {{Bounded Generalized Pareto Analysis}} to {{Fault Distributions}} in {{Open Source Software}}},
  author = {Huang, Chin-Yu and Kuo, Chih-Song and Luan, Shao-Pu},
  date = {2014-03},
  journaltitle = {IEEE Transactions on Reliability},
  volume = {63},
  pages = {309--319},
  issn = {0018-9529, 1558-1721},
  doi = {10.1109/TR.2013.2285056},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6631477},
  urldate = {2016-02-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SJNDTFFB/06631477.pdf},
  keywords = {development,nyílt forrás,source},
  number = {1}
}

@inproceedings{huang_mining_2012,
  title = {Mining Application Repository to Recommend {{XML}} Configuration Snippets},
  booktitle = {Proceedings of the 34th {{International Conference}} on {{Software Engineering}}},
  author = {Huang, Sheng and Lu, Yi Qi and Xiao, Yanghua and Wang, Wei},
  date = {2012},
  pages = {1451--1452},
  publisher = {{IEEE Press}},
  url = {http://dl.acm.org/citation.cfm?id=2337448},
  urldate = {2015-08-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7ZHNXV8N/06227069.pdf}
}

@incollection{huebner_case_2010,
  title = {The {{Case}} for {{Open Source Software}} in {{Digital Forensics}}},
  booktitle = {Open {{Source Software}} for {{Digital Forensics}}},
  author = {Zanero, Stefano and Huebner, Ewa},
  editor = {Huebner, Ewa and Zanero, Stefano},
  date = {2010},
  pages = {3--7},
  publisher = {{Springer US}},
  location = {{Boston, MA}},
  url = {http://link.springer.com/10.1007/978-1-4419-5803-7_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QJTQTDBA/chp%3A10.1007%2F978-1-4419-5803-7_1.pdf},
  isbn = {978-1-4419-5802-0 978-1-4419-5803-7},
  keywords = {adoption,nyílt forrás},
  langid = {english}
}

@book{huebner_open_2010,
  title = {Open {{Source Software}} for {{Digital Forensics}}},
  editor = {Huebner, Ewa and Zanero, Stefano},
  date = {2010},
  publisher = {{Springer US}},
  location = {{Boston, MA}},
  url = {http://link.springer.com/10.1007/978-1-4419-5803-7},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4KSHTP42/chp%3A10.1007%2F978-1-4419-5803-7_3.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/58ME9KG8/book_Open Source Software for Digital Forensics.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PB87BBPR/chp%3A10.1007%2F978-1-4419-5803-7_1.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZD9UAU6J/chp%3A10.1007%2F978-1-4419-5803-7_5.pdf},
  isbn = {978-1-4419-5802-0 978-1-4419-5803-7},
  langid = {english}
}

@article{hunsen_preprocessor-based_2015,
  title = {Preprocessor-Based Variability in Open-Source and Industrial Software Systems: {{An}} Empirical Study},
  shorttitle = {Preprocessor-Based Variability in Open-Source and Industrial Software Systems},
  author = {Hunsen, Claus and Zhang, Bo and Siegmund, Janet and Kästner, Christian and Leßenich, Olaf and Becker, Martin and Apel, Sven},
  date = {2015-04-14},
  journaltitle = {Empirical Software Engineering},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-015-9360-1},
  url = {http://link.springer.com/10.1007/s10664-015-9360-1},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IM73PWXF/art%3A10.1007%2Fs10664-015-9360-1.pdf},
  keywords = {development,nyílt forrás,source},
  langid = {english}
}

@article{huynh_empirical_2010,
  title = {An Empirical Investigation into Open Source Web Applications’ Implementation Vulnerabilities},
  author = {Huynh, Toan and Miller, James},
  date = {2010-10},
  journaltitle = {Empirical Software Engineering},
  volume = {15},
  pages = {556--576},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-010-9131-y},
  url = {http://link.springer.com/10.1007/s10664-010-9131-y},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7M4HKEWV/10.1007_s10664-010-9131-y.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BPXS5UQR/art%3A10.1007%2Fs10664-010-9131-y.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P6DQXNZV/Empirical Software Engineering Volume 15 issue 5 2010 [doi 10.1007%2Fs10664-010-9131-y] Toan Huynh\; James Miller -- An empirical investigation into open source web applications’.pdf},
  keywords = {_SMS_untagged,nyílt forrás,open source,security,vulnerability,web applications},
  langid = {english},
  number = {5}
}

@unpublished{ian_clatworthy_distributed_2007,
  title = {Distributed {{Version Control Systems}} - {{Why}} and {{How}}},
  author = {{Ian Clatworthy}},
  date = {2007},
  eventtitle = {{{OSDC}} 2007},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E6N7EA3Z/dvcs-why-and-how3.pdf}
}

@incollection{iben_hardware_2018,
  title = {Hardware and {{Software}} for {{Solving}} the {{Serious Game Challenge Using Commercial Off}}-the-{{Shelf Components}} and {{Open Source Software Frameworks}}},
  booktitle = {Clinical {{Rehabilitation Experience Utilizing Serious Games}}: {{Rehabilitation Technology}} and a {{Technical Concept}} for {{Health Data Collection}}},
  author = {Iben, Hendrik and Khan, Ali Mehmood and Lawo, Michael},
  editor = {Lawo, Michael and Knackfuß, Peter},
  date = {2018},
  pages = {51--78},
  publisher = {{Springer Fachmedien}},
  location = {{Wiesbaden}},
  doi = {10.1007/978-3-658-21957-4_3},
  url = {https://doi.org/10.1007/978-3-658-21957-4_3},
  urldate = {2020-04-21},
  abstract = {The purpose of this book chapter is to show how to solve the problem of selection of an appropriate hardware and software. This is a challenge for any non-standardized application domain and a problem any research project has when looking for a general purpose solution for a specific problem. Here we target the evaluation of a Reference Rehabilitation Platform (RRP) for Serious Games. One constraint in such a case is that all components should be commercial off-the-shelf during the runtime of the project. Components should be well tested, provide sufficient firmware and documentation for integration and have the potential of becoming a kind of standard in the market. This is essential, as the focus of any such project is the problem solution and its evaluation of the hardware and software. We propose a platform where different Serious Games can be deployed and input devices as bio sensors can be plugged in easily. We developed a solution where these components can be replaced by new components easily without changing the whole architecture. This book chapter addresses technical issues and provides an idea how to integrate Serious Games for rehabilitation purposes as described in the chapter four.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S7CTFNUP/Iben et al. - 2018 - Hardware and Software for Solving the Serious Game.pdf},
  isbn = {978-3-658-21957-4},
  langid = {english},
  series = {Advanced {{Studies Mobile Research Center Bremen}}}
}

@inproceedings{ibrahim_beware_2019,
  title = {Beware of the {{Vulnerability}}! {{How Vulnerable}} Are {{GitHub}}'s {{Most Popular PHP Applications}}?},
  booktitle = {2019 {{IEEE}}/{{ACS}} 16th {{International Conference}} on {{Computer Systems}} and {{Applications}} ({{AICCSA}})},
  author = {Ibrahim, Ahmed and El-Ramly, Mohammad and Badr, Amr},
  date = {2019-11},
  pages = {1--7},
  issn = {2161-5330},
  doi = {10.1109/AICCSA47632.2019.9035265},
  abstract = {The presence of software vulnerabilities is a serious threat to any software project. Exploiting them can compromise system availability, data integrity, and confidentiality. Unfortunately, many open source projects go for years with undetected ready-to-exploit critical vulnerabilities. In this study, we investigate the presence of software vulnerabilities in open source projects and the factors that influence this presence. We analyzed the top 100 open source PHP applications in GitHub using a static analysis vulnerability scanner to examine how common software vulnerabilities are. We also discussed which vulnerabilities are most present and what factors contribute to their presence. We found that 27\% of these projects are insecure, with a median number of 3 vulnerabilities per vulnerable project. We found that the most common type is injection vulnerabilities, which made 58\% of all detected vulnerabilities. Out of these, cross-site scripting (XSS) was the most common and made 43.5\% of all vulnerabilities found. Statistical analysis revealed that project activities like branching, pulling, and committing have a moderate positive correlation with the number of vulnerabilities in the project. Other factors like project popularity, number of releases, and number of issues had almost no influence on the number of vulnerabilities. We recommend that open source project owners should set secure code development guidelines for their project members and establish secure code reviews as part of the project's development process.},
  eventtitle = {2019 {{IEEE}}/{{ACS}} 16th {{International Conference}} on {{Computer Systems}} and {{Applications}} ({{AICCSA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K4PFZ9VT/Ibrahim et al. - 2019 - Beware of the Vulnerability! How Vulnerable are Gi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3IR8993X/9035265.html},
  keywords = {critical vulnerabilities,cross-site scripting,Cross-Site Scripting,CVSS,data integrity,GitHub,injection vulnerabilities,Open Source,open source PHP applications,open source project owners,open source projects,PHP,project popularity,RIPS,Scanning,software engineering,software project,Software Security,software vulnerabilities,Software Vulnerability,static analysis vulnerability scanner,statistical analysis,Vulnerability Detection,vulnerable project,XSS}
}

@misc{iccp_committee_oecd_2008,
  title = {{{OECD Recommendation}} of the {{Council}} on the {{Protection}} of {{Critical Information Infrastructures}}},
  author = {{ICCP Committee}},
  date = {2008},
  publisher = {{OECD Council}},
  url = {http://www.oecd.org/sti/40825404.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F2GBHZMX/40825404.pdf}
}

@misc{ictu_programme_nodate,
  title = {Programme for Open Standards and Open Source Software in Government ({{OSOSS}})},
  author = {{ICTU}},
  url = {http://www.oecd.org/site/ictworkshops/33874604.pdf},
  urldate = {2013-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CAVT7HRB/OSOSS.pdf}
}

@book{ifip_wg_2.13_international_conference_on_open_source_systems_open_2013,
  title = {Open Source Software: Quality Verification : 9th {{IFIP WG}} 2.13 {{International Conference}}, {{OSS}} 2013 {{Koper}}-{{Capodistria}}, {{Slovenia}}, {{June}} 25-28, 2013, Proceedings},
  shorttitle = {Open Source Software},
  author = {{IFIP WG 2.13 International Conference on Open Source Systems}},
  date = {2013},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FGQWKPI3/bok%3A978-3-642-38928-3.pdf},
  isbn = {978-3-642-38927-6 3-642-38927-9},
  langid = {english}
}

@inproceedings{ihara_analysis_2009,
  title = {An Analysis Method for Improving a Bug Modification Process in Open Source Software Development},
  booktitle = {Proceedings of the Joint International and Annual {{ERCIM}} Workshops on {{Principles}} of Software Evolution ({{IWPSE}}) and Software Evolution ({{Evol}}) Workshops},
  author = {Ihara, Akinori and Ohira, Masao and Matsumoto, Ken-ichi},
  date = {2009},
  pages = {135--144},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1595833},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HKEA7IDT/p135-ihara.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{ihara_industry_2014,
  title = {Industry {{Questions}} about {{Open Source Software}} in {{Business}}: {{Research Directions}} and {{Potential Answers}}},
  shorttitle = {Industry {{Questions}} about {{Open Source Software}} in {{Business}}},
  author = {Ihara, Akinori and Monden, Akito and Matsumoto, Ken-Ichi},
  date = {2014-11},
  pages = {55--59},
  publisher = {{IEEE}},
  doi = {10.1109/IWESEP.2014.12},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6976023},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/552K9FK7/06976023.pdf},
  isbn = {978-1-4799-6666-0},
  keywords = {adoption,nyílt forrás}
}

@article{ihme_challenges_2014,
  title = {Challenges and Industry Practices for Managing Software Variability in Small and Medium Sized Enterprises},
  author = {Ihme, Tuomas and Pikkarainen, Minna and Teppola, Susanna and Kääriäinen, Jukka and Biot, Olivier},
  date = {2014-08},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {1144--1168},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-013-9253-0},
  url = {http://link.springer.com/10.1007/s10664-013-9253-0},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PRRQ6HPT/art%3A10.1007%2Fs10664-013-9253-0.pdf},
  langid = {english},
  number = {4}
}

@incollection{iio_discussion_2012,
  title = {Discussion on the {{Problems}} to Be {{Solved}} toward the {{Migration}} to {{OSS Productivity Software}} in the {{Business Enterprises}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Iio, Jun and Ogawa, Tomotaka},
  date = {2012},
  pages = {377--382},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_38},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FXMMHUBZ/chp%3A10.1007%2F978-3-642-33442-9_38.pdf},
  keywords = {secondary research}
}

@incollection{iio_proposal_2010,
  title = {Proposal for {{Solving Incompatibility Problems}} between {{Open}}-{{Source}} and {{Proprietary Web Browsers}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Iio, Jun and Shimizu, Hiroyuki and Sasaki, Hisayoshi and Matsumoto, Akihiro},
  date = {2010},
  pages = {330--335},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_27},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VT9DEWPD/chp%3A10.1007%2F978-3-642-13244-5_27.pdf}
}

@article{iivari_discursive_2010,
  title = {Discursive Construction of ‘User Innovations’ in the Open Source Software Development Context},
  author = {Iivari, Netta},
  date = {2010-04},
  journaltitle = {Information and Organization},
  volume = {20},
  pages = {111--132},
  issn = {14717727},
  doi = {10.1016/j.infoandorg.2010.03.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1471772710000217},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RJXGBPS2/1-s2.0-S1471772710000217-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {2}
}

@article{iivari_empowering_2009,
  title = {Empowering the Users? {{A}} Critical Textual Analysis of the Role of Users in Open Source Software Development},
  shorttitle = {Empowering the Users?},
  author = {Iivari, Netta},
  date = {2009-07},
  journaltitle = {AI \& SOCIETY},
  volume = {23},
  pages = {511--528},
  issn = {0951-5666, 1435-5655},
  doi = {10.1007/s00146-008-0182-1},
  url = {http://link.springer.com/10.1007/s00146-008-0182-1},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4RQZE59C/art%3A10.1007%2Fs00146-008-0182-1.pdf},
  langid = {english},
  number = {4}
}

@incollection{iivari_usability_2008,
  title = {Usability in Company Open Source Software Context-Initial Findings from an Empirical Case Study},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Iivari, Netta and Hedberg, Henrik and Kirves, Tanja},
  date = {2008},
  pages = {359--365},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_33},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KAHB95U3/chp%3A10.1007%2F978-0-387-09684-1_33.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{iivari_usability_2010,
  title = {Usability {{Innovations}} in {{OSS Development}}–{{Examining User Innovations}} in an {{OSS Usability Discussion Forum}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Iivari, Netta},
  date = {2010},
  pages = {119--129},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_10},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XCCFJM3E/chp%3A10.1007%2F978-3-642-13244-5_10.pdf},
  keywords = {duplikátum}
}

@inproceedings{imran_design_2019,
  title = {Design {{Smell Detection}} and {{Analysis}} for {{Open Source Java Software}}},
  booktitle = {2019 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Imran, Asif},
  date = {2019-09},
  pages = {644--648},
  issn = {2576-3148},
  doi = {10.1109/ICSME.2019.00104},
  abstract = {Software design smells have gained significant importance in recent years since those directly lead to the increase of design debts and drastically affect software quality. Although the impact of design smells is manifold, techniques to detect design smells using both rule based and data mining approaches have been explored to a limited extent. This research aims to provide a tool which uses software metrics as a guide to detect smells and also deploys Spectral Clustering to mine the software repositories and group similar smells. The tool has been partially implemented till now and initial experiments on 2,59,509 Lines of Code (LoC) covering 3,306 classes of real life open source Java software show 2,220 occurrences of four types of design smells.},
  eventtitle = {2019 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7TE464IS/Imran - 2019 - Design Smell Detection and Analysis for Open Sourc.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TPR5Y4M3/8919054.html},
  keywords = {data mining,Data mining,data mining approaches,design debts,design smell detection,Design Smell Detection; Design Smell Analysis; Software Engineering,gained significant importance,Java,life open source Java software,Machine learning,object-oriented programming,pattern clustering,public domain software,Software,software design smells,software maintenance,software metrics,Software metrics,software quality,software repositories,Tools,Unsupervised learning}
}

@article{imre_nyilt_nodate,
  title = {A nyílt forráskódú szoftverfejlesztés társadalmi és ideológiai háttere},
  author = {Imre, Mátyus},
  pages = {22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5YF4YW8G/Imre - A nyílt forráskódú szoftverfejlesztés társadalmi é.pdf},
  langid = {magyar}
}

@inproceedings{imtiaz_synopsis_2019,
  title = {A Synopsis of Static Analysis Alerts on Open Source Software},
  booktitle = {Proceedings of the 6th {{Annual Symposium}} on {{Hot Topics}} in the {{Science}} of {{Security}}},
  author = {Imtiaz, Nasif and Williams, Laurie},
  date = {2019-04-01},
  pages = {1--3},
  publisher = {{Association for Computing Machinery}},
  location = {{Nashville, Tennessee, USA}},
  doi = {10.1145/3314058.3317295},
  url = {https://doi.org/10.1145/3314058.3317295},
  urldate = {2020-04-22},
  abstract = {Static application security testing (SAST) tools detect potential code defects (alerts) without having to execute the code. SASTs are now widely used in practice by both commercial and open source software (OSS). Prior work found that half of the state-of-the-art OSS projects have already employed automated static analysis [1]. However, little public information is available regarding the actionability (important to developers to act upon) of SAST alerts.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/73VYM2JI/Imtiaz and Williams - 2019 - A synopsis of static analysis alerts on open sourc.pdf},
  isbn = {978-1-4503-7147-6},
  series = {{{HotSoS}} '19}
}

@book{information_systems_audit_and_control_association_risk_2009,
  title = {The Risk {{IT}} Framework Principles, Process Details, Management Guidelines, Maturity Models},
  author = {{Information Systems Audit and Control Association}},
  date = {2009},
  publisher = {{ISACA}},
  location = {{Rolling Meadows, IL}},
  url = {http://www.isaca.org/Knowledge-Center/Research/ResearchDeliverables/Pages/The-Risk-IT-Framework.aspx},
  urldate = {2014-05-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/93AB6WBU/Risk-IT-Framework_fmk_Eng_0610.pdf},
  isbn = {1-60420-111-8 978-1-60420-111-6},
  keywords = {ajánlás,Risk management},
  langid = {english}
}

@book{international_conference_on_computer_networks_and_mobile_computing_2003_2003,
  title = {2003 {{International Conference}} on {{Computer Networks}} and {{Mobile Computing ICCNMC}} 2003: Proceedings : 20-23 {{October}} 2003, {{Shanghai}}, {{China}}},
  shorttitle = {2003 {{International Conference}} on {{Computer Networks}} and {{Mobile Computing ICCNMC}} 2003},
  author = {ji suan ji xue hui International Conference on Computer Networks {and} Mobile Computing, Zhongguo and {IEEE Computer Society} and {IEEE Computer Society} and {TC on Distributed Processing}},
  date = {2003},
  publisher = {{IEEE}},
  location = {{Los Alamitos, Calif.}},
  url = {http://ieeexplore.ieee.org/servlet/opac?punumber=8807},
  urldate = {2014-03-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RQJVXX66/OntologyInCyberDefenceAndComputerNetworks.pdf},
  isbn = {0-7695-2033-2 978-0-7695-2033-9},
  langid = {english}
}

@book{international_conference_on_open_source_systems_open_2012,
  title = {Open Source Systems Long-Term Sustainability: 8th {{IFIP WG}} 2.13 {{International Conference}}, {{OSS}} 2012, {{Hammamet}}, {{Tunisia}}, {{September}} 10-13, 2012, {{Proceedings}}},
  shorttitle = {Open Source Systems Long-Term Sustainability},
  author = {International Conference on Open Source Systems, Imed, Hammouda},
  date = {2012},
  publisher = {{Springer}},
  location = {{Berlin; New York}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  abstract = {This book constitutes the refereed proceedings of the 8th International IFIP WG 2.13 Conference on Open Source Systems, OSS 2012, held in Hammamet, Tunisia, in September 2012. The 15 revised full papers presented together with 17 lightning talks, 2 tool demonstration papers, 6 short industry papers, 5 posters and 2 workshop papers were carefully reviewed and selected from 63 submissions. The papers are organized in topical sections on collaboration and forks in OSS projects, community issues, open education and peer-production models, integration and architecture, business ecosystems, adoption and evolution of OSS, OSS quality, OSS in different domains, product development, and industrial experiences.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/93GS67X4/bok%3A978-3-642-33442-9.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ADHJ4IWB/Open Source Systems Long-Term Sustainability.pdf},
  isbn = {978-3-642-33442-9 3-642-33442-3},
  langid = {english}
}

@book{international_conference_on_open_source_systems_open_2014,
  title = {Open Source Software: {{Mobile}} Open Source Technologies : 10th {{IFIP WG}} 2.13 {{International Conference}} on {{Open Source Systems}}, {{OSS}} 2014, {{San José}}, {{Costa Rica}}, {{May}} 6-9, 2014, {{Proceedings}}},
  shorttitle = {Open Source Software},
  author = {International Conference on Open Source Systems, Luis, Corral},
  date = {2014},
  url = {http://dx.doi.org/10.1007/978-3-642-55128-4},
  urldate = {2014-05-31},
  abstract = {This book constitutes the refereed proceedings of the 10th International IFIP WG 2.13 Conference on Open Source Systems, OSS 2014, held in San Jose, Costa Rica, in May 2014. The 16 revised full papers and 16 short papers presented together with 5 poster papers were carefully reviewed and selected from 61 submissions. They have been organized in the following topical sections: open source visualization and reporting; open source in business modeling; open source in mobile and web technologies; open source in education and research; development processes of open source products; testing and assurance of open source projects; and global impact on open source communities and development. The last section consists of five case studies and demonstrations of open source projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6W3R56AX/bok%3A978-3-642-55128-4.pdf},
  isbn = {978-3-642-55128-4 3-642-55128-9},
  langid = {english}
}

@online{irenie_white_case_2013,
  title = {Case {{Study}}: {{Munich City Council}} - En.Credativ Blog},
  author = {{Irenie White}},
  date = {2013},
  url = {http://blog.credativ.com/en/2013/01/case-study-munich-city-council.html},
  urldate = {2013-05-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7G3KKWHK/case-study-munich-city-council.html}
}

@inproceedings{ishii_understanding_2017,
  title = {Understanding the Security Management of Global Third-Party {{Android}} Marketplaces},
  booktitle = {Proceedings of the 2nd {{ACM SIGSOFT International Workshop}} on {{App Market Analytics}}},
  author = {Ishii, Yuta and Watanabe, Takuya and Kanei, Fumihiro and Takata, Yuta and Shioji, Eitaro and Akiyama, Mitsuaki and Yagi, Takeshi and Sun, Bo and Mori, Tatsuya},
  date = {2017-09-05},
  pages = {12--18},
  publisher = {{Association for Computing Machinery}},
  location = {{Paderborn, Germany}},
  doi = {10.1145/3121264.3121267},
  url = {https://doi.org/10.1145/3121264.3121267},
  urldate = {2020-04-22},
  abstract = {As an open platform, Android enables the introduction of a variety of third-party marketplaces in which developers can provide mo- bile apps that are not provided in the official marketplace. Since the initial release of Android OS in 2008, many third-party app marketplaces have been launched all over the world. e diversity of which leads us to the following research question: are these third- party marketplaces securely managed? is work aims to answer this question through a large-scale empirical study. We collected more than 4.7 million Android apps from 27 third-party market- places, including ones that had not previously been studied in the research community, and analyzed them to study their security measures. Based on the results, we also a empt to quantify the security index of these marketplaces.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TZBIS34U/Ishii et al. - 2017 - Understanding the security management of global th.pdf},
  isbn = {978-1-4503-5158-4},
  keywords = {mobile application market,security measures},
  series = {{{WAMA}} 2017}
}

@inproceedings{ishio_software_2016,
  title = {Software Ingredients: Detection of Third-Party Component Reuse in {{Java}} Software Release},
  shorttitle = {Software Ingredients},
  booktitle = {Proceedings of the 13th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Ishio, Takashi and Kula, Raula Gaikovina and Kanda, Tetsuya and German, Daniel M. and Inoue, Katsuro},
  date = {2016-05-14},
  pages = {339--350},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2901739.2901773},
  url = {https://doi.org/10.1145/2901739.2901773},
  urldate = {2020-04-22},
  abstract = {A software product is often dependent on a large number of third-party components. To assess potential risks, such as security vulnerabilities and license violations, a list of components and their versions in a product is important for release engineers and security analysts. Since such a list is not always available, a code comparison technique named Software Bertillonage has been proposed to test whether a product likely includes a copy of a particular component or not. Although the technique can extract candidates of reused components, a user still has to manually identify the original components among the candidates. In this paper, we propose a method to automatically select the most likely origin of components reused in a product, based on an assumption that a product tends to include an entire copy of a component rather than a partial copy. More concretely, given a Java product and a repository of jar files of existing components, our method selects jar files that can provide Java classes to the product in a greedy manner. To compare the method with the existing technique, we have conducted an evaluation using randomly created jar files including up to 1,000 components. The Software Bertillonage technique reports many candidates; the precision and recall are 0.357 and 0.993, respectively. Our method reports a list of original components whose precision and recall are 0.998 and 0.997.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TLFTMBDK/Ishio et al. - 2016 - Software ingredients detection of third-party com.pdf},
  isbn = {978-1-4503-4186-8},
  keywords = {origin analysis,reverse engineering,software reuse},
  series = {{{MSR}} '16}
}

@inproceedings{ishizue_metrics_2016,
  title = {Metrics {{Visualization Technique Based}} on the {{Origins}} and {{Function Layers}} for {{OSS}}-{{Based Development}}},
  booktitle = {2016 {{IEEE Working Conference}} on {{Software Visualization}} ({{VISSOFT}})},
  author = {Ishizue, Ryosuke and Washizaki, Hironori and Fukazawa, Yoshiaki and Inoue, Sakae and Hanai, Yoshiiku and Kanazawa, Masanobu and Namba, Katsushi},
  date = {2016-10},
  pages = {71--75},
  doi = {10.1109/VISSOFT.2016.12},
  abstract = {Software developments involving multiple organizations such as OSS (Open Source Software)-based projects tend to have numerous defects when one organization develops and another organization edits the program source code files. Developments with complex file creation, modification history (origin), and software architecture (functional layer) are increasing in OSS-based development. As an example, here we focus on an Android smart phone development project and propose new visualization techniques for product metrics based on the file origin and functional layers. One is the Metrics Area Figure, which can express duplication of edits by multiple organizations intuitively using overlapping figures. The other is Origin City, which was inspired by Code City. It can represent the scale and other measurements, while simultaneously stacking functional layers as 3D buildings.},
  eventtitle = {2016 {{IEEE Working Conference}} on {{Software Visualization}} ({{VISSOFT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FAZTJX2P/Ishizue et al. - 2016 - Metrics Visualization Technique Based on the Origi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SDNRUYRX/7780159.html},
  keywords = {3D buildings,Android smart phone development project,Buildings,code city,complex file creation,function layers,functional layer,Measurement,metric visualization technique,metrics,open source software,Organizations,origin,OSS-based development,product metrics,program source code files,program visualisation,public domain software,Shape,smart phones,Smart phones,software architecture,software developments,software engineering,source code (software),Urban areas,Visualization}
}

@inproceedings{islam_security_2017,
  title = {Security Vulnerabilities in Categories of Clones and Non-Cloned Code: An Empirical Study},
  shorttitle = {Security Vulnerabilities in Categories of Clones and Non-Cloned Code},
  booktitle = {Proceedings of the 11th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Islam, Md Rakibul and Zibran, Minhaz F. and Nagpal, Aayush},
  date = {2017-11-09},
  pages = {20--29},
  publisher = {{IEEE Press}},
  location = {{Markham, Ontario, Canada}},
  doi = {10.1109/ESEM.2017.9},
  url = {https://doi.org/10.1109/ESEM.2017.9},
  urldate = {2020-04-22},
  abstract = {{$<$}u{$>$}Background{$<$}/u{$>$}: Software security has drawn immense importance in the recent years. While efforts are expected in minimizing security vulnerabilities in source code, the developers' practice of code cloning often causes multiplication of such vulnerabilities and program faults. Although previous studies examined the bug-proneness, stability, and changeability of clones against non-cloned code, the security aspects remained ignored. {$<$}u{$>$}Aims{$<$}/u{$>$}: The objective of this work is to explore and understand the security vulnerabilities and their severity in different types of clones compared to non-clone code. {$<$}u{$>$}Method{$<$}/u{$>$}: Using a state-of-the-art clone detector and two reputed security vulnerability detection tools, we detect clones and vulnerabilities in 8.7 million lines of code over 34 software systems. We perform a comparative study of the vulnerabilities identified in different types of clones and non-cloned code. The results are derived based on quantitative analyses with statistical significance. {$<$}u{$>$}Results{$<$}/u{$>$}: Our study reveals that the security vulnerabilities found in code clones have higher severity of security risks compared to those in non-cloned code. However, the proportion (i.e., density) of vulnerabilities in clones and non-cloned code does not have any significant difference. {$<$}u{$>$}Conclusion{$<$}/u{$>$}: The findings from this work add to our understanding of the characteristics and impacts of clones, which will be useful in clone-aware software development with improved software security.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9J96IJF6/Islam et al. - 2017 - Security vulnerabilities in categories of clones a.pdf},
  isbn = {978-1-5090-4039-1},
  series = {{{ESEM}} '17}
}

@incollection{izquierdo-cortazar_floss_2010,
  title = {{{FLOSS}} Communities: {{Analyzing}} Evolvability and Robustness from an Industrial Perspective},
  shorttitle = {{{FLOSS}} Communities},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Izquierdo-Cortazar, Daniel and González-Barahona, Jesús M. and Robles, Gregorio and Deprez, Jean-Christophe and Auvray, Vincent},
  date = {2010},
  pages = {336--341},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_28},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SU8TTV6M/chp%3A10.1007%2F978-3-642-13244-5_28.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{izurieta_evolution_2006,
  title = {The Evolution of {{FreeBSD}} and {{Linux}}},
  booktitle = {Proceedings of the 2006 {{ACM}}/{{IEEE}} International Symposium on {{Empirical}} Software Engineering},
  author = {Izurieta, Clemente and Bieman, James},
  date = {2006},
  pages = {204--211},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1159765},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PXA5ZGAI/p204-izurieta.pdf},
  keywords = {development,nyílt forrás}
}

@book{j._park_future_2012,
  title = {Future {{Information Technology}}, {{Application}}, and {{Service}}},
  editor = {J. Park, James and Leung, Victor C.M. and Wang, Cho-Li and Shon, Taeshik},
  date = {2012},
  volume = {164},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://www.springerlink.com/index/10.1007/978-94-007-4516-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KZIBRHR8/A Study on Maturity Level for Open Source Software.pdf},
  isbn = {978-94-007-4515-5 978-94-007-4516-2},
  series = {Lecture {{Notes}} in {{Electrical Engineering}}}
}

@article{jaap-henk_hoepman_increased_2007,
  title = {Increased Security through Open Source},
  author = {{Jaap-Henk Hoepman} and {Bart Jacobs}},
  date = {2007},
  journaltitle = {Communications of the ACM, 50},
  pages = {79--83},
  url = {http://arxiv.org/abs/0801.3924},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H5VJ5PCB/0801.3924v1.pdf},
  keywords = {előnyök,Forrás1,open source}
}

@online{jack_wallen_underfunded_2014,
  title = {From Underfunded to Funded within a Heartbleed},
  author = {{Jack Wallen}},
  date = {2014},
  journaltitle = {techrepublic},
  url = {http://www.techrepublic.com/article/from-underfunded-to-funded-within-a-heartbleed/},
  urldate = {2015-05-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8FM9UJDM/hb_funding.pdf},
  keywords = {heartbleed,security}
}

@incollection{jaeger_open_2013,
  title = {Open {{Source Issues}} with {{Cloud Storage Software}}},
  booktitle = {Advances in {{Service}}-{{Oriented}} and {{Cloud Computing}}},
  author = {Jaeger, Michael C.},
  date = {2013},
  pages = {106--113},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-45364-9_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BZV38KWV/chp%3A10.1007%2F978-3-642-45364-9_10.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SIHBA7EW/chp%3A10.1007%2F978-3-642-45364-9_10.pdf},
  keywords = {license,nyílt forrás,policy}
}

@online{jai_vijayan_growing_2015,
  title = {Growing {{Open Source Use Heightens Enterprise Security Risks}} - {{Dark Reading}}.Pdf},
  author = {{Jai Vijayan}},
  date = {2015-01-23},
  journaltitle = {Dark Reading},
  url = {http://www.darkreading.com/growing-open-source-use-heightens-enterprise-security-risks-/d/d-id/1318767},
  urldate = {2015-06-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/48PNR8FI/Growing Open Source Use Heightens Enterprise Security Risks - Dark Reading.pdf}
}

@incollection{jajodia_programming_2015,
  ids = {ruef\_programming\_2015},
  title = {Programming {{Language Theoretic Security}} in the {{Real World}}: {{A Mirage}} or the {{Future}}?},
  shorttitle = {Programming {{Language Theoretic Security}} in the {{Real World}}},
  booktitle = {Cyber {{Warfare}}},
  author = {Ruef, Andrew and Rohlf, Chris},
  editor = {Jajodia, Sushil and Shakarian, Paulo and Subrahmanian, V.S. and Swarup, Vipin and Wang, Cliff},
  date = {2015},
  volume = {56},
  pages = {307--321},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-14039-1_15},
  url = {http://link.springer.com/10.1007/978-3-319-14039-1_15},
  urldate = {2015-11-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T3X874DE/Ruef and Rohlf - 2015 - Programming Language Theoretic Security in the Rea.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VWSFCFG3/chp%3A10.1007%2F978-3-319-14039-1_15.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4AZDS6X4/978-3-319-14039-1_15.html},
  isbn = {978-3-319-14038-4 978-3-319-14039-1}
}

@inproceedings{jalali_systematic_2012,
  title = {Systematic Literature Studies: Database Searches vs. Backward Snowballing},
  shorttitle = {Systematic Literature Studies},
  booktitle = {Proceedings of the {{ACM}}-{{IEEE}} International Symposium on {{Empirical}} Software Engineering and Measurement},
  author = {Jalali, Samireh and Wohlin, Claes},
  date = {2012},
  pages = {29--38},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2372257},
  urldate = {2015-10-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FT53UGQT/p29-jalali.pdf}
}

@online{james_mckay_what_nodate,
  title = {What is Git’s market share?},
  author = {{James McKay}},
  url = {http://jamesmckay.net/2012/03/what-is-gits-market-share/},
  urldate = {2012-10-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3ZH43M2J/what-is-gits-market-share.html},
  langid = {james mckay dot net}
}

@incollection{janes_how_2013,
  title = {How to {{Calculate Software Metrics}} for {{Multiple Languages Using Open Source Parsers}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Janes, Andrea and Piatov, Danila and Sillitti, Alberto and Succi, Giancarlo},
  date = {2013},
  pages = {264--270},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_20},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/85VBVA7T/chp%3A10.1007%2F978-3-642-38928-3_20.pdf}
}

@inproceedings{jang_redebug_2012,
  title = {{{ReDeBug}}: {{Finding Unpatched Code Clones}} in {{Entire OS Distributions}}},
  shorttitle = {{{ReDeBug}}},
  author = {Jang, Jiyong and Agrawal, Abeer and Brumley, David},
  date = {2012-05},
  pages = {48--62},
  publisher = {{IEEE}},
  doi = {10.1109/SP.2012.13},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6234404},
  urldate = {2015-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZHDJXC9P/06234404.pdf},
  isbn = {978-1-4673-1244-8 978-0-7695-4681-0},
  keywords = {patch,security}
}

@article{jarczyk_surgical_2018,
  ids = {jarczyk\_surgical\_2018-1},
  title = {Surgical Teams on {{GitHub}}: {{Modeling}} Performance of {{GitHub}} Project Development Processes},
  shorttitle = {Surgical Teams on {{GitHub}}},
  author = {Jarczyk, Oskar and Jaroszewicz, Szymon and Wierzbicki, Adam and Pawlak, Kamil and Jankowski-Lorek, Michal},
  date = {2018-08-01},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {100},
  pages = {32--46},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2018.03.010},
  url = {http://www.sciencedirect.com/science/article/pii/S095058491730304X},
  urldate = {2018-08-16},
  abstract = {Context: Better methods of evaluating process performance of OSS projects can benefit decision makers who consider adoption of OSS software in a company. This article studies the closure of issues (bugs and features) in GitHub projects, which is an important measure of OSS development process performance and quality of support that project users receive from the developer team. Objective: The goal of this article is a better understanding of the factors that affect issue closure rates in OSS projects. Methodology: The GHTorrent repository is used to select a large sample of mature, active OSS projects. Using survival analysis, we calculate short-term, and long-term issue closure rates. We formulate several hypotheses regarding the impact of OSS project and team characteristics, such as measures of work centralization, measures that reflect internal project workflows, and developer social networks measures on issue closure rates. Based on the proposed features and several control features, a model is built that can predict issue closure rate. The model allows to test our hypotheses. Results: We find that large teams that have many project members have lower issue closure rates than smaller teams. Similarly, increased work centralization increases issue closure rates. While desirable social network characteristics have a positive impact on the amount of commits in a project, they do not have significant influence on issue closure. Conclusion: Overall, findings from empirical analysis support the classic notion of Brook’s – the “surgical team” – in the context of OSS project development process performance on GitHub. The model of issue closure rates proposed in this article is a first step towards an improved understanding and prediction of this important measure of OSS development process performance.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H2SV9QGT/Jarczyk et al. - 2018 - Surgical teams on GitHub Modeling performance of .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VWCSPQWR/S095058491730304X.html},
  keywords = {Development process performance,Issue closure rate,Issue workflow,Open source software (OSS),Surgical team,Work centralization}
}

@incollection{jarkko_moilanen_emerging_2012,
  title = {Emerging {{Hackerspaces}} – {{Peer}}-{{Production Generation}}},
  booktitle = {{{OSS}} 2012, {{IFIP AICT}} 378},
  author = {{Jarkko Moilanen}},
  date = {2012},
  pages = {48--60},
  publisher = {{Springer}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  isbn = {978-3-642-33442-9},
  keywords = {community,FLOSS},
  langid = {english}
}

@incollection{jarvensivu_forging_2008,
  title = {Forging a Community–Not: Experiences on Establishing an Open Source Project},
  shorttitle = {Forging a Community–Not},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Järvensivu, Juha and Mikkonen, Tommi},
  date = {2008},
  pages = {15--27},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_2},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2Q2CZP28/chp%3A10.1007%2F978-0-387-09684-1_2.pdf},
  keywords = {community,development,nyílt forrás}
}

@article{javed_defectiveness_2016,
  title = {Defectiveness {{Evolution}} in {{Open Source Software Systems}}},
  author = {Javed, Yasir and Alenezi, Mamdouh},
  date = {2016-01-01},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  volume = {82},
  pages = {107--114},
  issn = {1877-0509},
  doi = {10.1016/j.procs.2016.04.015},
  url = {http://www.sciencedirect.com/science/article/pii/S1877050916300291},
  urldate = {2020-04-22},
  abstract = {One of the essential objectives of the software engineering is to develop techniques and tools for high-quality software solutions that are stable and maintainable. Software managers and developers use several measures to measure and improve the quality of a software solution throughout the development process. These measures assess the quality of different software attributes, such as product size, cohesion, coupling, and complexity. Researchers and practitioners use software metrics to understand and improve software solutions and the processes used to develop them. Determining the relationship between software metrics aids in clarifying practical issues with regard to the relationship between the quality of internal and external software attributes. We conducted an empirical study on two open source systems (JEDIT and ANT) to study the defectiveness Evolution in Open Source Software Systems. The result reveals that a good designed software has lesser defects and have high cohesion. Moreover the study also revealed that defects are higher in initial versions and most corrected errors are from major classes in initial version. Removal of defects also reveals that a good software is consistently improved and feed backs are important part of open source systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/STP2E3MN/Javed and Alenezi - 2016 - Defectiveness Evolution in Open Source Software Sy.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HTL7P4W/S1877050916300291.html},
  keywords = {cohesion,defectiveness evolution,Software Evolution},
  langid = {english},
  series = {4th {{Symposium}} on {{Data Mining Applications}}, {{SDMA2016}}, 30 {{March}} 2016, {{Riyadh}}, {{Saudi Arabia}}}
}

@incollection{javier_lopez_overview_2012,
  title = {Overview of Critical Information Infrastructure Protection},
  booktitle = {Critical {{Infrastructure Protection}}},
  author = {{Javier Lopez} and {Roberto Setola} and {Stephen D. Wolthusen}},
  date = {2012},
  pages = {1--14},
  publisher = {{Springer}},
  abstract = {The present volume aims to provide an overview of the current understanding of the so-called Critical Infrastructure (CI), and particularly the Critical Information Infrastructure (CII), which not only forms one of the constituent sectors of the overall CI, but also is unique in providing an element of interconnection between sectors as well as often also intra-sectoral control mechanisms. One problem faced by research on C(I)I is the extreme range of scales at which security problems may arise. This is true for the time dimension where policy-level decisions such as the deployment of physical infrastructure like roads and high-tension transmission lines have impacts measured in decades whilst industrial control systems must provide guaranteed and secure real-time responses in the millisecond range. It is, moreover, also the case for the physical extent of infrastructures where single physical facilities such as vaccine plants may be a vital element of national or supra-national infrastructures, but where the trans-national electrical power or natural gas transmission networks span entire continents. The book hence surveys not only key high-level concepts and selected technical research areas with an emphasis on control systems as a highly active research area, but also seeks to include policy aspects as well as a discussion on models for validation and verification. This is rounded off by several studies of specific issues and challenges faced by individual CI sectors including the telecommunications, electricity, transportation, and financial services sectors.},
  isbn = {978-3-642-28919-4}
}

@misc{jeff_williams_unfortunate_2012,
  title = {The {{Unfortunate Reality}} of {{Insecure Libraries}}},
  author = {{Jeff Williams} and {Arshan Dabirsiaghi}},
  date = {2012},
  publisher = {{Aspect Security, Inc}},
  url = {http://cdn2.hubspot.net/hub/315719/file-1988689661-pdf/download-files/The_Unfortunate_Reality_of_Insecure_Libraries.pdf?t=1418139099508},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JK24JZ85/The_Unfortunate_Reality_of_Insecure_Libraries.pdf},
  keywords = {biztonság,library,vulnerability}
}

@report{jeffrey_d._brewer_risk_2005,
  title = {Risk {{Perception}} \& {{Strategic Decision Making}}: {{General Insights}}, a {{New Framework}}, and {{Specific Application}} to {{Electricity Generation Using Nuclear Energy}}},
  author = {{Jeffrey D. Brewer}},
  date = {2005},
  institution = {{Sandia National Laboratories}},
  location = {{Albuquerque, New Mexico}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ST7WZEMH/7-risks_decisions_brewer.pdf}
}

@inproceedings{jensen_codetrust_2018,
  title = {{{CodeTrust}}},
  booktitle = {Trust {{Management XII}}},
  author = {Jensen, Christian Damsgaard and Nielsen, Michael Bøndergaard},
  date = {2018-07-09},
  pages = {58--74},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-95276-5_5},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-95276-5_5},
  urldate = {2018-08-15},
  abstract = {The information society is building on data and the software required to collect and analyse these data, which means that the trustworthiness of these data and software systems is crucially important for the development of society as a whole. Efforts to establish the trustworthiness of software typically include parameters, such as security, reliability, maintainability, correctness and robustness.In this paper we explore ways to determine the trustworthiness of software, in particular code where some of the constituent components are externally sourced, e.g. through crowd sourcing and open software systems. We examine different quality parameters that we believe define key quality indicators for trustworthy software and define CodeTrust, which is a content based trust metric for software.We present the design and evaluation of a research prototype that implements the proposed metric, and show the results of preliminary evaluations of CodeTrust using well known open source software projects.},
  eventtitle = {{{IFIP International Conference}} on {{Trust Management}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AV36G2VI/Jensen and Nielsen - 2018 - CodeTrust.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JMS7TJ7W/978-3-319-95276-5_5.html},
  isbn = {978-3-319-95275-8 978-3-319-95276-5},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@incollection{jensen_governance_2010,
  title = {Governance in Open Source Software Development Projects: {{A}} Comparative Multi-Level Analysis},
  shorttitle = {Governance in Open Source Software Development Projects},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Jensen, Chris and Scacchi, Walt},
  date = {2010},
  pages = {130--142},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_11},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CHUWC2TR/chp%3A10.1007%2F978-3-642-13244-5_11.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FM6ZVZD3/chp%3A10.1007%2F978-3-642-13244-5_11.pdf},
  keywords = {community,development,nyílt forrás}
}

@incollection{jensen_license_2011,
  title = {License Update and Migration Processes in Open Source Software Projects},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Jensen, Chris and Scacchi, Walt},
  date = {2011},
  pages = {177--195},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_12},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MTSMPGIM/chp%3A10.1007%2F978-3-642-24418-6_12.pdf}
}

@inproceedings{jermakovics_exploring_2013,
  title = {Exploring Collaboration Networks in Open-Source Projects},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Jermakovics, Andrejs and Sillitti, Alberto and Succi, Giancarlo},
  date = {2013},
  pages = {97--108},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_7},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A77FX88E/Exploring Collaboration Networks in Open-Source Projects.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NCUDMMW9/chp%3A10.1007%2F978-3-642-38928-3_7.pdf},
  keywords = {community,development,nyílt forrás}
}

@article{jesse_communities_2016,
  title = {Communities: With Open-Source Software towards a Vivacious Civil Society},
  shorttitle = {Communities},
  author = {Jesse, Norbert},
  date = {2016-08-01},
  journaltitle = {AI \& SOCIETY},
  shortjournal = {AI \& Soc},
  volume = {31},
  pages = {361--370},
  issn = {0951-5666, 1435-5655},
  doi = {10.1007/s00146-015-0595-6},
  url = {https://link.springer.com/article/10.1007/s00146-015-0595-6},
  urldate = {2018-08-15},
  abstract = {Local communities in Germany are under great pressure to modernize their services: high depth rate, increasing expectations concerning the quality of the services, socio-demographic change, environmental issues, regional competition—to name only a few of the challenges. In a society based on a federal structure and the principle of subsidiarity, it is almost natural to demand a vivid community with active citizens. Today, with the advent of social media and the new channels of communication, the question is how to leverage the benefits of this concept for local issues. More precise: How can the competence of the citizens be activated to make conditions of living in the neighbourhoods more attractive? In this paper, we discuss technical requirements for an open government. The SAGA standard of the Federal German Government strongly supports the notion of open-source software. With OpenSAGA, we introduce a new, performant and SAGA-compliant framework for the implementation of web applications for e-Government. Consequently, OpenSAGA is the platform for an OpenGovernment Suite, an extended prototype for affordable and interoperable open government solutions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H6M8EBFT/Jesse - 2016 - Communities with open-source software towards a v.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KM9WMCY5/s00146-015-0595-6.html},
  langid = {english},
  number = {3}
}

@book{jeynes_risk_2002,
  title = {Risk Management: 10 Principles},
  shorttitle = {Risk Management},
  author = {Jeynes, Jacqueline},
  date = {2002},
  publisher = {{Butterworth-Heinemann}},
  location = {{Oxford}},
  abstract = {In the same way as the 4 Ps of marketing are a fundamental principle of business theory, this book puts forward the 10 Ps of risk management as a consistent and comprehensive approach to the subject.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/75B6P36F/Risk.Management.10.Principles.pdf},
  isbn = {0-7506-5036-2 978-0-7506-5036-6},
  langid = {english}
}

@inproceedings{jiang_tracing_2014,
  title = {Tracing Back the History of Commits in Low-Tech Reviewing Environments: A Case Study of the {{Linux}} Kernel},
  shorttitle = {Tracing Back the History of Commits in Low-Tech Reviewing Environments},
  author = {Jiang, Yujuan and Adams, Bram and Khomh, Foutse and German, Daniel M.},
  date = {2014},
  pages = {1--10},
  publisher = {{ACM Press}},
  doi = {10.1145/2652524.2652542},
  url = {http://dl.acm.org/citation.cfm?doid=2652524.2652542},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WR8XNCWV/a51-jiang.pdf},
  isbn = {978-1-4503-2774-9},
  keywords = {development,nyílt forrás,source},
  langid = {english}
}

@incollection{jing_yang_review_2008,
  title = {Review on Free and Open Source Software},
  author = {{Jing Yang} and {Jiang Wang}},
  date = {2008},
  pages = {1044--1049},
  publisher = {{IEEE}},
  location = {{Beijing}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9CNAQ3KH/04686552.pdf},
  isbn = {978-1-4244-2013-1},
  keywords = {általános OSS,nyílt forrás}
}

@online{joe_wilcox_ibm_nodate,
  title = {{{IBM}} to Spend \$1 Billion on {{Linux}} in 2001},
  author = {{Joe Wilcox}},
  journaltitle = {cnet.com},
  url = {http://news.cnet.com/2100-1001-249750.html},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MVEQW72F/dpc7doyc.html}
}

@article{joh_periodicity_2017,
  title = {Periodicity in Software Vulnerability Discovery, Patching and Exploitation},
  author = {Joh, HyunChul and Malaiya, Yashwant K.},
  date = {2017-11-01},
  journaltitle = {International Journal of Information Security},
  shortjournal = {Int. J. Inf. Secur.},
  volume = {16},
  pages = {673--690},
  issn = {1615-5270},
  doi = {10.1007/s10207-016-0345-x},
  url = {https://doi.org/10.1007/s10207-016-0345-x},
  urldate = {2020-04-21},
  abstract = {Periodicity in key processes related to software vulnerabilities need to be taken into account for assessing security at a given time. Here, we examine the actual multi-year field datasets for some of the most used software systems (operating systems and Web-related software) for potential annual variations in vulnerability discovery processes. We also examine weekly periodicity in the patching and exploitation of the vulnerabilities. Accurate projections of the vulnerability discovery process are required to optimally allocate the effort needed to develop patches for handling discovered vulnerabilities. A time series analysis that combines the periodic pattern and longer-term trends allows the developers to predict future needs more accurately. We analyze eighteen datasets of software systems for annual seasonality in their vulnerability discovery processes. This analysis shows that there are indeed repetitive annual patterns. Next, some of the datasets from a large number of major organizations that record the result of daily scans are examined for potential weekly periodicity and its statistical significance. The results show a 7-day periodicity in the presence of unpatched vulnerabilities, as well as in the exploitation pattern. The seasonal index approach is used to examine the statistical significance of the observed periodicity. The autocorrelation function is used to identify the exact periodicity. The results show that periodicity needs to be considered for optimal resource allocations and for evaluation of security risks.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GFWVUNWT/Joh and Malaiya - 2017 - Periodicity in software vulnerability discovery, p.pdf},
  langid = {english},
  number = {6}
}

@incollection{johansson_diffusion_2011,
  title = {Diffusion of {{Open Source ERP Systems Development}}: {{How Users Are Involved}}},
  shorttitle = {Diffusion of {{Open Source ERP Systems Development}}},
  booktitle = {Governance and {{Sustainability}} in {{Information Systems}}. {{Managing}} the {{Transfer}} and {{Diffusion}} of {{IT}}},
  author = {Johansson, Björn},
  date = {2011},
  pages = {188--203},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24148-2_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NARDB5SH/chp%3A10.1007%2F978-3-642-24148-2_12.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@unpublished{john_lewis_open_nodate,
  title = {Open {{Source Licensing}}},
  author = {{John Lewis}},
  url = {http://www.slideshare.net/johnalewis/open-source-licensing}
}

@misc{john_p._stenbit_open_nodate,
  title = {Open {{Source Software}} ({{OSS}}) in the {{Department}} of {{Defense}}},
  author = {{John P. Stenbit}},
  publisher = {{U.S. DoD Office of the Secretary of Defense}},
  url = {http://oss-institute.org/storage/documents/Resources/policy/2003_stenbit_memo.pdf},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7N2N43UD/index.html},
  keywords = {DoD,Kormányzat,OSS}
}

@inproceedings{johri_cool_2011,
  title = {"{{Cool}}" or "{{Monster}}"?: {{Company Takeovers}} and {{Their Effect}} on {{Open Source Community Participation}}},
  shorttitle = {"{{Cool}}" or "{{Monster}}"?},
  booktitle = {Proceedings of the 2011 {{iConference}}},
  author = {Johri, Aditya and Nov, Oded and Mitra, Raktim},
  date = {2011},
  pages = {327--331},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1940761.1940806},
  url = {http://doi.acm.org/10.1145/1940761.1940806},
  urldate = {2015-11-24},
  abstract = {In this study, we investigate the effect of takeover announcements made by open-source software (OSS) steward firms, on participation in an OSS newcomers' online community. We examine a MySQL newcomer forum before and after two takeover announcements -- the January 2008 announcement of MySQL's takeover by Sun Microsystems, and the April 2009 announcement of Sun's takeover by Oracle. We find that the impact on participation depends on how the acquiring company is perceived. The announcement of an acquisition by a company perceived as hostile had a negative effect on participation, whereas announcement of acquisition by a more friendly company was found to have no effect on participation. These changes in participation occurred without any accompanying change in the product itself, or its licensing. This work provides the evidence of the effect of external events on online participation.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DFZ58GR9/Johri és mtsai. - 2011 - Cool or Monster Company Takeovers and Their .pdf},
  isbn = {978-1-4503-0121-3},
  keywords = {Commercial relations,development,external jolts,MySQL,nyílt forrás,online communities,Open source software,Oracle,Sun Microsystems},
  series = {{{iConference}} '11}
}

@inproceedings{johri_how_2018,
  title = {How {{FLOSS Participation Supports Lifelong Learning}} and {{Working}}: {{Apprenticeship Across Time}} and {{Spatialities}}},
  shorttitle = {How {{FLOSS Participation Supports Lifelong Learning}} and {{Working}}},
  booktitle = {Proceedings of the 14th {{International Symposium}} on {{Open Collaboration}}},
  author = {Johri, Aditya},
  date = {2018-08-22},
  pages = {1--8},
  publisher = {{Association for Computing Machinery}},
  location = {{Paris, France}},
  doi = {10.1145/3233391.3233541},
  url = {https://doi.org/10.1145/3233391.3233541},
  urldate = {2020-04-22},
  abstract = {In this paper I draw on two case studies to examine participatory learning in Free/Libre and Open Source Software (FLOSS). I contribute to prior work on learning within FLOSS and also to the learning sciences by illustrating how FLOSS supports lifelong learning and working by providing an ecosystem that allows participants to grow their knowledge of both technical and nontechnical skills over time through their association with different projects and people. I trace the learning trajectories of two participants from high school until they enter the professional workforce and beyond. I argue that FLOSS participation represents an ideal networked form of learning as it provides both socio-cognitive support for short term activities and also socio-temporal support for long term participation and learning. It is a unique form of apprenticeship that exists concurrently with formal educational experiences but unlike traditional apprenticeship experiences it succeeds by spanning different spatialities - place/space and technology mix -and temporal scales.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LLMCDCAZ/Johri - 2018 - How FLOSS Participation Supports Lifelong Learning.pdf},
  isbn = {978-1-4503-5936-8},
  keywords = {FLOSS,learning across scales,situated cognition},
  series = {{{OpenSym}} '18}
}

@inproceedings{johri_open_2016,
  title = {Open {{Source Software Reliability Growth Models}} for {{Distributed Environment Based}} on {{Component}}-{{Specific Testing}}-{{Efforts}}},
  booktitle = {Proceedings of the {{Second International Conference}} on {{Information}} and {{Communication Technology}} for {{Competitive Strategies}}},
  author = {Johri, Prashant and Nasar, Md. and Das, Sanjoy and Kumar, Mithun},
  date = {2016-03-04},
  pages = {1--9},
  publisher = {{Association for Computing Machinery}},
  location = {{Udaipur, India}},
  doi = {10.1145/2905055.2905283},
  url = {https://doi.org/10.1145/2905055.2905283},
  urldate = {2020-04-22},
  abstract = {Because of availability, redistributable, affordability, modifiability, of source code, free and no restriction in choice, open source is a favorite platform for lot of software industries and peoples, who consider using the power of extremely reliable and superior quality software. Numeouus SRGMs have been proposed to estimate the reliability of the software of OSSs; however, no one has proven to perform very well considering diverse project characteristics. In the models for OSSs, the error deletion experience for the reused and the newly developed components based on component-specific testing-effort is demonstrated. It is considered that there are several different types of faults for newly developed component and single type of faults for reused components for obtaining the unambiguous expressions for the mean number of individual types of errors. For OSSs system components testing-efforts have to be modeled separately for each and every component in the system. The total effort of the system is then calculated from the summation of component-specific testing-effort functions. We have employed MATLAB as implementation framework for performing all the estimations. Our approach partitions the testing effort with growth curves of varying nature among different components of the same OSS. To validate our analytical results, numerical illustrations have also been provided.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Y7PYJGGE/Johri et al. - 2016 - Open Source Software Reliability Growth Models for.pdf},
  isbn = {978-1-4503-3962-9},
  keywords = {Distributed development environment (DDE),Non Homogeneous Poisson Process (NHPP),Open Source Software (OSS),Software Reliability Growth Models (SRGMs),Testing-effort function (TEF)},
  series = {{{ICTCS}} '16}
}

@article{joia_closed_2017,
  ids = {joia\_closed\_2017-1},
  title = {From Closed Source to Open Source Software: {{Analysis}} of the Migration Process to {{Open Office}}},
  shorttitle = {From Closed Source to Open Source Software},
  author = {Joia, Luiz Antonio and dos Santos Vinhais, José Carlos},
  date = {2017-01-01},
  journaltitle = {The Journal of High Technology Management Research},
  shortjournal = {The Journal of High Technology Management Research},
  volume = {28},
  pages = {261--272},
  issn = {1047-8310},
  doi = {10.1016/j.hitech.2017.10.008},
  url = {http://www.sciencedirect.com/science/article/pii/S1047831017300494},
  urldate = {2018-08-15},
  abstract = {This article seeks to analyse the migration trajectory from commercial off-the-shelf and closed source software to open source software in order to establish the critical success/resistance factors associated with the replacement of the extant Microsoft Office with Open Office software in a private Brazilian company. The bibliographical review of this work addresses adoption/resistance to information systems, which is the theoretical framework adopted to explain the data collected. The single case study method was then applied and data was collected via documentation analysis, interviews, questionnaires, and direct and participant observation. Data analysis was then conducted by means of content analysis and non-parametric statistics. Based on that, three types of user behaviour were identified with respect to the intention to use open source software, namely adopters, partial adopters, and non-adopters. Finally, the reasons for such behaviour were set forth and discussed in order to make the implications of the study clear.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6TABSTFX/Joia and dos Santos Vinhais - 2017 - From closed source to open source software Analys.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HNR6YPCS/Joia and dos Santos Vinhais - 2017 - From closed source to open source software Analys.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/83LVZL2M/S1047831017300494.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AB9HXLE6/S1047831017300494.html},
  keywords = {Adoption of information systems,Open Office,Open source software,Resistance behaviour to information systems,Resistance to information systems},
  number = {2},
  options = {useprefix=true}
}

@report{joint_task_force_transformation_initiative_security_2013,
  title = {Security and {{Privacy Controls}} for {{Federal Information Systems}} and {{Organizations}}},
  author = {{Joint Task Force Transformation Initiative}},
  date = {2013-04},
  institution = {{National Institute of Standards and Technology}},
  doi = {10.6028/NIST.SP.800-53r4},
  url = {https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf},
  urldate = {2018-08-20},
  abstract = {This publication provides a catalog of security and privacy controls for federal information systems and organizations and a process for selecting controls to protect organizational operations (including mission, functions, image, and reputation), organizational assets, individuals, other organizations, and the Nation from a diverse set of threats including hostile cyber attacks, natural disasters, structural failures, and human errors (both intentional and unintentional). The security and privacy controls are customizable and implemented as part of an organization-wide process that manages information security and privacy risk. The controls address a diverse set of security and privacy requirements across the federal government and critical infrastructure, derived from legislation, Executive Orders, policies, directives, regulations, standards, and/or mission/business needs. The publication also describes how to develop specialized sets of controls, or overlays, tailored for specific types of missions/business functions, technologies, or environments of operation. Finally, the catalog of security controls addresses security from both a functionality perspective (the strength of security functions and mechanisms provided) and an assurance perspective (the measures of confidence in the implemented security capability). Addressing both security functionality and security assurance ensures that information technology products and the information systems built from those products using sound systems and security engineering principles are sufficiently trustworthy.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WQH8B2S7/Joint Task Force Transformation Initiative - 2013 - Security and Privacy Controls for Federal Informat.pdf},
  langid = {english},
  number = {NIST SP 800-53r4}
}

@incollection{jonas_gamalielsson_long-term_2012,
  title = {Long-{{Term Sustainability}} of {{Open Source Software Communities}} beyond a {{Fork}}: {{A Case Study}} of {{LibreOffice}}},
  booktitle = {{{OSS}} 2012, {{IFIP AICT}} 378},
  author = {{Jonas Gamalielsson} and {Björn Lundell}},
  date = {2012},
  pages = {29--47},
  publisher = {{Springer}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  isbn = {978-3-642-33442-9},
  keywords = {case study,community,FLOSS,forking},
  langid = {english}
}

@misc{jordan_robertson_millions_2014,
  title = {Millions of {{Android Devices Vulnerable}} to {{Heartbleed Bug}} — Www.Bloomberg.Pdf},
  author = {{Jordan Robertson}},
  date = {2014},
  url = {http://www.bloomberg.com/news/2014-04-11/millions-of-android-devices-vulnerable-to-heartbleed-bug.html},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5NQVQTRC/Millions of Android Devices Vulnerable to Heartbleed Bug — www.bloomberg.pdf}
}

@incollection{josang_privacy_2010,
  title = {Privacy Policy Referencing},
  booktitle = {Trust, {{Privacy}} and {{Security}} in {{Digital Business}}},
  author = {Jøsang, Audun and Fritsch, Lothar and Mahler, Tobias},
  date = {2010},
  pages = {129--140},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-15152-1_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KVV67ZG3/chp%3A10.1007%2F978-3-642-15152-1_12.pdf}
}

@inproceedings{joy_performance_2018,
  title = {Performance of {{GitHub Open}}-{{Source Software Project}}: {{An Empirical Analysis}}},
  shorttitle = {Performance of {{GitHub Open}}-{{Source Software Project}}},
  booktitle = {2018 {{Second International Conference}} on {{Advances}} in {{Electronics}}, {{Computers}} and {{Communications}} ({{ICAECC}})},
  author = {Joy, Abin and Thangavelu, Senthilkumar and Jyotishi, Amalendu},
  date = {2018-02},
  pages = {1--6},
  doi = {10.1109/ICAECC.2018.8479462},
  abstract = {The phenomenon of open-source software (OSS) has gained importance among the information technology (IT) firms and software entrepreneurial ventures in the recent years due to its advantages over proprietary closed software including high level of innovation, low cost of development, availability of reusable architectural and functional component, free and unrestrictive access to the source codes. The firms have started recognizing the importance and value of the open source software over the proprietary closed software. It is important to understand and analyze various characteristics of the OSS projects which influence their performance. In this research, we examine OSS project characteristics forks count, number of contributors, project age, project size, project owner, number of programming languages used, primary language intensity, and watchers using 130 project repositories which are started in 2017 from GitHub one of the leading web-based Git version control repository hosting services. A conceptual model of OSS Project performance and hypotheses are developed. The results conclude that the number of programming languages, the project size, the number of contributors, and the project age are showing significant positive influence on the OSS project performance. The project ownership and the primary language are not showing any significant influence on the OSS project performance.},
  eventtitle = {2018 {{Second International Conference}} on {{Advances}} in {{Electronics}}, {{Computers}} and {{Communications}} ({{ICAECC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z68GKWZY/Joy et al. - 2018 - Performance of GitHub Open-Source Software Project.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DQ4QQV25/8479462.html},
  keywords = {Computer languages,econometric analysis,forks count,functional component,GitHub,GitHub open-source software project,information technology,Internet,Mathematical model,Open source software,Organizations,OSS projects,primary language intensity,programming languages,proprietary closed software,public domain software,reusable architectural component,Social network services,software entrepreneurial ventures,source code (software),source codes,Technological innovation,watchers,web-based Git version control repository hosting services}
}

@incollection{jullien_preliminary_2019,
  title = {A {{Preliminary Theory}} for {{Open}}-{{Source Ecosystem Microeconomics}}},
  booktitle = {Towards {{Engineering Free}}/{{Libre Open Source Software}} ({{FLOSS}}) {{Ecosystems}} for {{Impact}} and {{Sustainability}}: {{Communications}} of {{NII Shonan Meetings}}},
  author = {Jullien, Nicolas and Stol, Klaas-Jan and Herbsleb, James D.},
  editor = {Fitzgerald, Brian and Mockus, Audris and Zhou, Minghui},
  date = {2019},
  pages = {49--68},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-7099-1_3},
  url = {https://doi.org/10.1007/978-981-13-7099-1_3},
  urldate = {2020-04-21},
  abstract = {While there has been substantial empirical work identifying factors that influence the contribution to, and use of open-source software, we have as yet little theory that identifies the key constructs and relationships that would allow us to explain and predict how open-source ecosystems function. The absence of ecosystem theory is particularly alarming as open-source software works its way more broadly and deeply into the economy. The problem facing policymakers is how to provide support and resources when needed, without distorting decision-making, demotivating volunteers, serving special interests at the expense of others, and maintaining the communities that take on and guide the work. What is needed is a clearly articulated and empirically validated theory of open-source ecosystems. This chapter provides a sketch of such a theory in the form of a set of propositions, which may form the foundation for future empirical work.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WH3UHGK2/Jullien et al. - 2019 - A Preliminary Theory for Open-Source Ecosystem Mic.pdf},
  isbn = {9789811370991},
  langid = {english}
}

@inproceedings{kalliamvakou_certification_2016,
  title = {Certification of {{Open Source Software}} – {{A Scoping Review}}},
  booktitle = {Open {{Source Systems}}: {{Integrating Communities}}},
  author = {Kalliamvakou, Eirini and Weber, Jens and Knauss, Alessia},
  editor = {Crowston, Kevin and Hammouda, Imed and Lundell, Björn and Robles, Gregorio and Gamalielsson, Jonas and Lindman, Juho},
  date = {2016},
  pages = {111--122},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-39225-7_9},
  abstract = {Open source software (OSS) systems are being used for increasingly critical functions in modern societies, e.g., in health care, finance, government, defense, and other safety and security sensitive sectors. There is an increasing interest in software certification as a means to assure quality and dependability of such systems. However, the development processes and organizational structures of OSS projects can be substantially different from traditional closed-source projects. The distributed, “bazaar-style” approach to software development in OSS systems is often perceived incompatible with certification. This paper presents the results of a scoping review on certification in OSS systems in order to identify and categorize key issues and provide a comprehensive overview of the current evidence on this topic.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TPDJREZB/Kalliamvakou et al. - 2016 - Certification of Open Source Software – A Scoping .pdf},
  isbn = {978-3-319-39225-7},
  keywords = {Certification Issue,Digital Library,Open Source Software,Open Source Software Development,Open Source Software Project},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{kalliamvakou_open_2015,
  title = {Open {{Source}}-Style {{Collaborative Development Practices}} in {{Commercial Projects Using GitHub}}},
  booktitle = {Proceedings of the 37th {{International Conference}} on {{Software Engineering}} - {{Volume}} 1},
  author = {Kalliamvakou, Eirini and Damian, Daniela and Blincoe, Kelly and Singer, Leif and German, Daniel M.},
  date = {2015},
  pages = {574--585},
  publisher = {{IEEE Press}},
  location = {{Piscataway, NJ, USA}},
  url = {http://dl.acm.org/citation.cfm?id=2818754.2818825},
  urldate = {2015-11-24},
  abstract = {Researchers are currently drawn to study projects hosted on GitHub due to its popularity, ease of obtaining data, and its distinctive built-in social features. GitHub has been found to create a transparent development environment, which together with a pull request-based workflow, provides a lightweight mechanism for committing, reviewing and managing code changes. These features impact how GitHub is used and the benefits it provides to teams' development and collaboration. While most of the evidence we have is from GitHub's use in open source software (oss) projects, GitHub is also used in an increasing number of commercial projects. It is unknown how GitHub supports these projects given that GitHub's workflow model does not intuitively fit the commercial development way of working. In this paper, we report findings from an online survey and interviews with GitHub users on how GitHub is used for collaboration in commercial projects. We found that many commercial projects adopted practices that are more typical of oss projects including reduced communication, more independent work, and self-organization. We discuss how GitHub's transparency and popular workflow can promote open collaboration, allowing organizations to increase code reuse and promote knowledge sharing across their teams.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/65DGUCQW/Kalliamvakou és mtsai. - 2015 - Open Source-style Collaborative Development Practi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G697HR8H/Kalliamvakou és mtsai. - 2015 - Open Source-style Collaborative Development Practi.pdf},
  isbn = {978-1-4799-1934-5},
  keywords = {Commercial relations,development,nyílt forrás},
  series = {{{ICSE}} '15}
}

@article{kamola_how_2019,
  title = {How to {{Verify Conway}}’s {{Law}} for {{Open Source Projects}}},
  author = {Kamola, Mariusz},
  date = {2019},
  journaltitle = {IEEE Access},
  volume = {7},
  pages = {38469--38480},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2019.2905671},
  abstract = {Conway's Law states that in successful software projects, the organizational structure of programmer teams corresponds to the architecture of the developed system. It means that, ideally, each developer team works on its software module, and only on that module. We propose an approach to assess the difference between code structure and organizational structure. It is based on agglomerative clustering of modules and developers, followed by the search for best possible mapping between the groups. We applied the approach to a number of popular open source projects. The results show that these projects hardly obey Conway's law, due to the scale-free nature of both types of deduced networks, i.e., of software modules and the developers.},
  eventtitle = {{{IEEE Access}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K6NCPYJX/Kamola - 2019 - How to Verify Conway’s Law for Open Source Project.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UAL95V53/8668394.html},
  keywords = {agglomerative clustering,code modularity,code structure,Collaboration,collaboration network,Conway's Law,Conway’s law,dendrogram,developed system,developer team,open source projects,organizational structure,Organizations,pattern clustering,power law,programmer teams,Programming,project management,Project management,public domain software,Software,software development management,software engineering,software module,software projects,Task analysis,team working,Tools}
}

@inproceedings{kanda_towards_2017,
  title = {Towards Understanding an Open-Source Bounty: {{Analysis}} of {{Bountysource}}},
  shorttitle = {Towards Understanding an Open-Source Bounty},
  booktitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Kanda, Tetsuya and Guo, Mingyu and Hata, Hideaki and Matsumoto, Kenichi},
  date = {2017-02},
  pages = {577--578},
  doi = {10.1109/SANER.2017.7884685},
  abstract = {When developing and maintaining a software project, many issues about bug fixing or feature addition are reported on the Bug Tracking System (BTS) and the Issue Tracking System (ITS). Bountysource is a web founding platform that awards developers who have solved issues on the BTS/ITS. Users can post a bounty for the issues, and a developer who solves the issue can get that bounty. This research analyzes Bountysource to clarify how bounties act in open source software projects and discusses further research topics in open-source bounties.},
  eventtitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AN5TEMWT/Kanda et al. - 2017 - Towards understanding an open-source bounty Analy.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M7QZCMYQ/7884685.html},
  keywords = {bountysource analysis,BTS,bug fixing,bug tracking system,Computer bugs,Electronic mail,feature addition,Information science,Internet,issue tracking system,ITS,Niobium,Open source software,open source software projects,open-source bounties,open-source bounty,program debugging,project management,public domain software,Security,software management,Web founding platform}
}

@inproceedings{kannan_birds_2017,
  title = {A Bird's Eye View of {{Cyber Crimes}} and {{Free}} and {{Open Source Software}}'s to {{Detoxify Cyber Crime Attacks}} - an {{End User Perspective}}},
  booktitle = {2017 2nd {{International Conference}} on {{Anti}}-{{Cyber Crimes}} ({{ICACC}})},
  author = {Kannan, M.K. Jayanthi},
  date = {2017-03},
  pages = {232--237},
  doi = {10.1109/Anti-Cybercrime.2017.7905297},
  abstract = {Security doesn't begin and end with the enterprise. In a world of uncertainty, with growing turbulence in many regions, it makes sense to ensure our home and office is safe. In our paper we are going to discuss about Cyber Crimes and the use of Free and Open Source Software's to Detoxify Cyber Crime Attacks in an End User Perspective. Protecting our personal Information and Cyber security is a demanding task for all web users. Protecting our laptop and desktop computers by installing and updating anti-virus security software will prevent Spreading of malwares. Preventing unauthorized devices connecting to our computers and disabling the Autorun functionality will prevent spreading of viruses among devices like USB, computers and through network. To ensure protection and to avoid Cyber-attacks end users need to know the available free services and software's to reengineer the effectiveness of Information to Detoxify Cyber Crime Attacks. Cyber hacker's causes damage to personal Data, loss of money, dissatisfaction, business and financial losses. End Users need to implement appropriate preventive measures to protect their Personal Data from any such damages.},
  eventtitle = {2017 2nd {{International Conference}} on {{Anti}}-{{Cyber Crimes}} ({{ICACC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KSE54MF8/Kannan - 2017 - A bird's eye view of Cyber Crimes and Free and Ope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3H85RLWX/7905297.html},
  keywords = {Anti Cyber Crime,anti-virus security software,Attacks,Browsers,Computers,cyber crime attacks,cyber security,end user perspective,free software,information security,open source software,personal data protection,public domain software,security of data,Security Policy,Spyware}
}

@article{kapitsaki_automating_2017,
  title = {Automating the License Compatibility Process in Open Source Software with {{SPDX}}},
  author = {Kapitsaki, Georgia M. and Kramer, Frederik and Tselikas, Nikolaos D.},
  date = {2017-09-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {131},
  pages = {386--401},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2016.06.064},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121216300905},
  urldate = {2020-04-22},
  abstract = {Free and Open Source Software (FOSS) promotes software reuse and distribution at different levels for both creator and users, but at the same time imposes some challenges in terms of FOSS licenses that can be selected and combined. The main problem linked to this selection is the presence of a large set of licenses that define different rights and obligations in software use. The problem becomes more evident in cases of complex combinations of software that carries different – often conflicting – licenses. In this paper we are presenting our work on automating license compatibility by proposing a process that examines the structure of Software Package Data Exchange (SPDX) for license compatibility issues assisting in their correct use and combination. We are offering the possibility to detect license violations in existing software projects and make suggestions on appropriate combinations of different software packages. We are also elaborating on the complexity and ambiguity of licensing detection in software products through representative case studies. Our work constitutes a useful process towards automating the analysis of software systems in terms of license use and compatibilities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QESG5QH2/Kapitsaki et al. - 2017 - Automating the license compatibility process in op.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/72JN28XR/S0164121216300905.html},
  keywords = {License compatibility,License violations,Open Source Software,Software Package Data Exchange},
  langid = {english}
}

@inproceedings{kapitsaki_find_2016,
  title = {Find Your {{Open Source License Now}}!},
  booktitle = {2016 23rd {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  author = {Kapitsaki, Georgia M. and Charalambous, Georgia},
  date = {2016-12},
  pages = {1--8},
  issn = {1530-1362},
  doi = {10.1109/APSEC.2016.012},
  abstract = {Open Source software is widely used from end-users, software engineers and researchers. The license that accompanies such software is very important for its further use and distribution. However, engineers and researchers are many times not able to choose the appropriate license based on the purpose of the product under development due to the lack of sufficient information on the specifics of each license. In this work, we are addressing the above issue by introducing findOSSLicense that recommends appropriate licenses to users. We are employing a hybrid recommendation using constraint-based, content-based and collaborative approaches. Licenses are recommended based on user needs, on the licenses found in similar open source projects and on the licenses used by similar users. A three-phase process that considers different sources of information is used. We have evaluated findOSSLicense using its initial set of users. The results demonstrate the usefulness of findOSSLicense in the license guiding process.},
  eventtitle = {2016 23rd {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DEUWBREZ/Kapitsaki and Charalambous - 2016 - Find your Open Source License Now!.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LUGMJEKC/7890564.html},
  keywords = {Collaboration,collaborative approach,constraint-based approach,content-based approach,findOSSLicense,hybrid recommendation,Licenses,licensing,open source license,open source software,Open source software,Organizations,public domain software,recommender systems,Software algorithms,software engineering,Switches}
}

@inproceedings{kapitsaki_identifying_2017,
  title = {Identifying {{Terms}} in {{Open Source Software License Texts}}},
  booktitle = {2017 24th {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  author = {Kapitsaki, Georgia M. and Paschalides, Demetris},
  date = {2017-12},
  pages = {540--545},
  doi = {10.1109/APSEC.2017.62},
  abstract = {Open source software is nowadays widely used and any open source software must carry a prominent license. However, the legal, natural language text of open source licenses is not always easy to interpret and an extensive manual analysis of the text may be required, in order to fully understand its content. Existing approaches present license content based on such manual interpretation. In this paper, we propose an automated license term extraction system (FOSS-LTE) for the identification of the license terms from a specific license text and the creation of a representation of these terms divided into rights, obligations and additional conditions. We present the process employed for the creation of the license term extraction system using NLP techniques and we evaluate its accuracy on a set of sentences from available licenses collected for this purpose.},
  eventtitle = {2017 24th {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HKMNM75/Kapitsaki and Paschalides - 2017 - Identifying Terms in Open Source Software License .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8MAQ4MKR/8305978.html},
  keywords = {automated license term extraction system,Data mining,Data preprocessing,legislation,license terms,Licenses,licensing,Manuals,natural language processing,natural language text,Natural languages,NLP techniques,open source software,Open source software,open source software license texts,public domain software,text analysis,topic modeling}
}

@article{kapitsaki_insight_2015,
  title = {An Insight into License Tools for Open Source Software Systems},
  author = {Kapitsaki, Georgia M. and Tselikas, Nikolaos D. and Foukarakis, Ioannis E.},
  date = {2015-04},
  journaltitle = {Journal of Systems and Software},
  volume = {102},
  pages = {72--87},
  issn = {01641212},
  doi = {10.1016/j.jss.2014.12.050},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121214002945},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3NDR5JCJ/1-s2.0-S0164121214002945-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{kapitsaki_open_2014,
  title = {Open {{Source License Violation Check}} for {{SPDX Files}}},
  booktitle = {Software {{Reuse}} for {{Dynamic Systems}} in the {{Cloud}} and {{Beyond}}},
  author = {Kapitsaki, Georgia M. and Kramer, Frederik},
  date = {2014},
  pages = {90--105},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-14130-5_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/URTTPWRC/chp%3A10.1007%2F978-3-319-14130-5_7.pdf},
  isbn = {978-3-319-14130-5},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{kapser_cloning_2008,
  title = {“{{Cloning}} Considered Harmful” Considered Harmful: Patterns of Cloning in Software},
  shorttitle = {“{{Cloning}} Considered Harmful” Considered Harmful},
  author = {Kapser, Cory J. and Godfrey, Michael W.},
  date = {2008-12},
  journaltitle = {Empirical Software Engineering},
  volume = {13},
  pages = {645--692},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-008-9076-6},
  url = {http://link.springer.com/10.1007/s10664-008-9076-6},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BJ77SS4T/art%3A10.1007%2Fs10664-008-9076-6.pdf},
  langid = {english},
  number = {6}
}

@online{karsten_gerloff_building_2007,
  title = {Building a Market for {{FLOSS}}: {{The OSOSS}} Project in the {{Netherlands}}},
  author = {{Karsten Gerloff}},
  date = {2007},
  journaltitle = {EU Joinup},
  url = {https://joinup.ec.europa.eu/elibrary/case/building-market-floss-ososs-project-netherlands-0},
  urldate = {2013-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BPMFSAC8/building-market-floss-ososs-project-netherlands-0.html}
}

@inproceedings{karus_opportunity_2019,
  title = {Opportunity {{Costs}} in {{Free Open}}-{{Source Software}}},
  booktitle = {Open {{Source Systems}}},
  author = {Karus, Siim},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {139--150},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_13},
  abstract = {Opportunity cost is a key concept in economics to express the value one misses out on when choosing one alternative over another. This concept is used to explain rational decision making in a scenario where multiple mutually exclusive alternative choices can be made. In this paper, we explore this concept in the realm of open-source software. We look at the different ways for measuring the cost and these can be used to support decisions involving open-source software. We review literature on opportunity cost use in decision support in software development process. We explain how the opportunity cost analysis in the realm of open-source software can be used for supporting architectural decisions within software projects. We demonstrate that different measures of costs can be used to mitigate problems (and maintenance complexity) arising from the use of open source software, allowing for better planning of both closed-source commercial and open-source community projects alike.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A2RLDD93/Karus - 2019 - Opportunity Costs in Free Open-Source Software.pdf},
  isbn = {978-3-030-20883-7},
  keywords = {Alternative cost,Code churn,Coding effort,Opportunity cost,Scenario analysis,Software cost,What-if analysis},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{kashiwa_what_2019,
  ids = {kashiwa\_what\_2019-1},
  title = {What {{Are}} the {{Perception Gaps Between FLOSS Developers}} and {{SE Researchers}}?},
  booktitle = {Open {{Source Systems}}},
  author = {Kashiwa, Yutaro and Ihara, Akinori and Ohira, Masao},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {44--57},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_5},
  abstract = {In recent years, many researchers in the SE community have been devoting considerable efforts to provide FLOSS developers with a means to quickly find and fix various kinds of bugs in FLOSS products such as security and performance bugs. However, it is not exactly sure how FLOSS developers think about bugs to be removed preferentially. Without a full understanding of FLOSS developers’ perceptions of bug finding and fixing, researchers’ efforts might remain far away from FLOSS developers’ needs. In this study, we interview 322 notable GitHub developers about high impact bugs to understand FLOSS developers’ needs for bug finding and fixing, and we manually inspect and classify developers’ answers (bugs) by symptoms and root causes of bugs. As a result, we show that security and breakage bugs are highly crucial for FLOSS developers. We also identify what kinds of high impact bugs should be studied newly by the SE community to help FLOSS developers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Y8LNWM8R/Kashiwa et al. - 2019 - What Are the Perception Gaps Between FLOSS Develop.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZLQEZGIC/Kashiwa et al. - 2019 - What Are the Perception Gaps Between FLOSS Develop.pdf},
  isbn = {978-3-030-20883-7},
  keywords = {High impact bug,Interview,Open source software},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{kasper_sweet_2014,
  title = {Sweet {{Dreams}} and {{Nightmares}}: {{Security}} in the {{Internet}} of {{Things}}},
  shorttitle = {Sweet {{Dreams}} and {{Nightmares}}},
  booktitle = {Information {{Security Theory}} and {{Practice}}. {{Securing}} the {{Internet}} of {{Things}}},
  author = {Kasper, Timo and Oswald, David and Paar, Christof},
  date = {2014-06-30},
  pages = {1--9},
  publisher = {{Springer, Berlin, Heidelberg}},
  doi = {10.1007/978-3-662-43826-8_1},
  url = {https://link.springer.com/chapter/10.1007/978-3-662-43826-8_1},
  urldate = {2017-08-17},
  abstract = {Wireless embedded devices are predominant in the Internet of Things: Objects tagged with Radio Frequency IDentification and Near Field Communication technology, smartphones, and other embedded tokens interact from device to device and thereby often process information that is security or privacy relevant for humans. For protecting sensitive data and preventing attacks, many embedded devices employ cryptographic algorithms and authentication schemes. In the past years, various vulnerabilities have been found in commercial products that enable to bypass the security mechanisms. Since a large number of the devices in the field are in the hands of potential adversaries, implementation attacks (such as side-channel analysis and reverse engineering) can play a critical role for the overall security of a system. At hand of several examples of assailable commercial products we demonstrate the potential impact of the found security weaknesses and illustrate “how to not do it”.},
  eventtitle = {{{IFIP International Workshop}} on {{Information Security Theory}} and {{Practice}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9MC5G4DS/Kasper és mtsai. - 2014 - Sweet Dreams and Nightmares Security in the Inter.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/269XEMCQ/978-3-662-43826-8_1.html},
  isbn = {978-3-662-43825-1 978-3-662-43826-8},
  langid = {english}
}

@inproceedings{kato_structural_2018,
  title = {A {{Structural Analysis Method}} of {{OSS Development Community Evolution Based}} on {{A Semantic Graph Model}}},
  booktitle = {2018 {{IEEE}} 42nd {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  author = {Kato, Seiya and Inagaki, Yota and Aoyama, Mikio},
  date = {2018-07},
  volume = {01},
  pages = {292--297},
  issn = {0730-3157},
  doi = {10.1109/COMPSAC.2018.00046},
  abstract = {Network structures of OSS (Open Source Software) development communities are becoming more and more complicated. Various mining techniques have been applied to the repositories of OSS communities. However, structure analysis of OSS development community evolution has not been established. In this article, we propose SCGM (Software Community Graph Model), a new class of graph models to define the OSS development community. Based on the SCGM, we propose a structural analysis method of OSS development community evolution. To automate the analysis method, a prototype system is implemented with the graph DB Neo4j. We applied the proposed method and prototype system to four major machine learning OSS communities, Caffe, Chainer, Jubatus, and Tensorflow, for over five years on GitHub. From the analysis, we discovered three novel characteristics of community evolution, 1) three layered community evolution models consisting of the Core, Semi-core and Non-core members, 2) three developer growth patterns in terms of contribution behavior, and 3) evolutional changes according to the interaction among developers, which is a major contribution of this work. Based on the experiments, we demonstrate the validity and effectiveness of the proposed method.},
  eventtitle = {2018 {{IEEE}} 42nd {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MGMEXA92/Kato et al. - 2018 - A Structural Analysis Method of OSS Development Co.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QV597ACV/8377670.html},
  keywords = {Analytical models,Caffe,Chainer,data mining,Data mining,Data models,Data visualization,DB Neo4j,Evolution (biology),GitHub,graph theory,Jubatus,learning (artificial intelligence),machine learning OSS communities,mining techniques,network structures,network theory (graphs),open source software,OSS development community evolution,OSS; Development Community Evolution; Semantic Graph Model; Graph Database; GitHub; Neo4j,prototype system,Prototypes,public domain software,SCGM,semantic graph model,Software,software community graph model,structural analysis method,Tensorflow}
}

@article{katsamakas_open_2019,
  title = {Open Source Adoption Strategy},
  author = {Katsamakas, Evangelos and Xin, Mingdi},
  date = {2019-07-01},
  journaltitle = {Electronic Commerce Research and Applications},
  shortjournal = {Electronic Commerce Research and Applications},
  volume = {36},
  pages = {100872},
  issn = {1567-4223},
  doi = {10.1016/j.elerap.2019.100872},
  url = {http://www.sciencedirect.com/science/article/pii/S1567422319300493},
  urldate = {2020-04-22},
  abstract = {Open innovation in the form of open-source software (OSS) has been a transformative force in the software industry and beyond. The growth of open source has created new ways to develop, distribute and adopt software in organizations. Despite the associated impressive growth of open source research, a rigorous analytical examination of open-source adoption in organizations constitutes a gap in the literature. This article fills this gap by providing insights toward a comprehensive open-source strategy. It develops a game-theoretic analytical model to explain when organizations adopt open source software applications and platforms, and what the implications are. The analysis characterizes conditions under which organizations adopt open source software, and examines whether these adoption patterns are socially beneficial. The article shows that open-source adoption depends crucially on organizational IT capabilities, network effects, and the fit of OSS with the organizations' application needs. The model predicts that firms may sometimes adopt a heterogeneous IT architecture that consists of open source and proprietary software. Moreover, the results suggest that open-source adoption is sometimes socially inefficient. Overall, this analysis contributes a nuanced understanding of the adoption of open innovation in the form of OSS that should be useful to managers and policy-makers involved in related decisions. The article concludes with practical managerial recommendations on formulating a comprehensive open-source strategy.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UZKZWAJP/Katsamakas and Xin - 2019 - Open source adoption strategy.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V9ZMTZD5/S1567422319300493.html},
  keywords = {Economic analysis,Economic theory,IT capabilities,IT management,Network effects,Open innovation,Open-source software,Open-source strategy,Platforms,Technology adoption},
  langid = {english}
}

@book{katsikas_public_2014,
  title = {Public {{Key Infrastructures}}, {{Services}} and {{Applications}}},
  editor = {Katsikas, Sokratis and Agudo, Isaac},
  date = {2014},
  volume = {8341},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-53997-8},
  urldate = {2014-05-05},
  editorb = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  editorbtype = {redactor},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KETGGKNZ/bok%3A978-3-642-53997-8.pdf},
  isbn = {978-3-642-53996-1 978-3-642-53997-8},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@report{ke_casper_2002,
  title = {{{CASPER}} Compiler-Assisted Securing of Programs at Runtime},
  shorttitle = {{{CASPER}}},
  author = {Ke, Gaurav S. and Edwards, Stephen A. and Kaiser, Gail E. and Keromytis, Angelos},
  date = {2002},
  institution = {{DTIC Document}},
  url = {http://oai.dtic.mil/oai/oai?verb=getRecord&metadataPrefix=html&identifier=ADA446095},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HC73SZPF/___cucs-025-02.pdf}
}

@incollection{keele_guidelines_2007,
  title = {Guidelines for Performing Systematic Literature Reviews in Software Engineering},
  booktitle = {Technical Report, {{Ver}}. 2.3 {{EBSE Technical Report}}. {{EBSE}}},
  author = {Keele, Staffs},
  date = {2007},
  url = {https://www.cs.auckland.ac.nz/~norsaremah/2007%20Guidelines%20for%20performing%20SLR%20in%20SE%20v2.3.pdf},
  urldate = {2015-10-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V2P9AJAZ/10.1.1.117.471.pdf}
}

@inproceedings{keertipati_exploring_2016,
  title = {Exploring Decision-Making Processes in {{Python}}},
  booktitle = {Proceedings of the 20th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Keertipati, Smitha and Licorish, Sherlock A. and Savarimuthu, Bastin Tony Roy},
  date = {2016-06-01},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Limerick, Ireland}},
  doi = {10.1145/2915970.2915993},
  url = {https://doi.org/10.1145/2915970.2915993},
  urldate = {2020-04-22},
  abstract = {The process by which norms are developed to become policies, the normative decision-making process, is not often explicit to stakeholders of Open Source Software (OSS) projects. Understanding the normative decision-making process is crucial for members if such projects are to evolve and succeed. In this paper, we investigated aspects of the normative decision-making processes of OSS development through the use of Python Enhancement Proposals (PEPs). We compared extracted process models with those that are advertised by the Python community to evaluate the extent to which those processes overlap. In addition, we assess members' involvement and contribution to these processes. Our work used structural and behavioral analysis techniques, and social network analysis metrics. We found that there were differences between the extracted processes and Python's advertised process, with the extracted processes being significantly more complex. These differences also extended to granular models used for managing social and technical aspects of the Python project. Furthermore, some key members were largely responsible for PEPs' success. Our extracted models could go a far way in helping the Python community to quickly understand decision-making processes in Python.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8VN3K9ZN/Keertipati et al. - 2016 - Exploring decision-making processes in Python.pdf},
  isbn = {978-1-4503-3691-8},
  keywords = {developers' involvement,governance,normative decision-making processes,norms,open source software development,Python enhancement proposals,social network analysis},
  series = {{{EASE}} '16}
}

@misc{kelly_lucas_low_2007,
  title = {Low {{Cost Technique}} for {{Intrusion Detection}}},
  author = {{Kelly Lucas}},
  date = {2007},
  url = {http://www.infosecwriters.com/text_resources/pdf/Low_Cost_Intrusion_Detection.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZR8BRSF3/___Low_Cost_Intrusion_Detection.pdf}
}

@article{kemp_current_2009,
  title = {Current Developments in {{Open Source Software}}},
  author = {Kemp, Richard},
  date = {2009-11},
  journaltitle = {Computer Law \& Security Review},
  volume = {25},
  pages = {569--582},
  issn = {02673649},
  doi = {10.1016/j.clsr.2009.09.009},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0267364909001587},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DIRUQ6A4/1-s2.0-S0267364909001587-main.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UJAKWPFQ/1-s2.0-S0267364909001587-main.pdf},
  keywords = {license,nyílt forrás,policy},
  langid = {english},
  number = {6}
}

@article{kemp_open_2010,
  title = {Open Source Software ({{OSS}}) Governance in the Organisation},
  author = {Kemp, Richard},
  date = {2010-05},
  journaltitle = {Computer Law \& Security Review},
  volume = {26},
  pages = {309--316},
  issn = {02673649},
  doi = {10.1016/j.clsr.2010.01.008},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0267364910000221},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EHR245HS/1-s2.0-S0267364910000221-main.pdf},
  keywords = {license,nyílt forrás,open source,policy},
  langid = {english},
  number = {3}
}

@inproceedings{kenett_adoption_2014,
  title = {Adoption of {{Free Libre Open Source Software}} ({{FLOSS}}): {{A Risk Management Perspective}}},
  shorttitle = {Adoption of {{Free Libre Open Source Software}} ({{FLOSS}})},
  author = {Kenett, Ron S. and Franch, Xavier and Susi, Angelo and Galanis, Nikolas},
  date = {2014-07},
  pages = {171--180},
  publisher = {{IEEE}},
  doi = {10.1109/COMPSAC.2014.25},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6899215},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VVHQ36M7/06899215.pdf},
  isbn = {978-1-4799-3575-8},
  keywords = {_SMS_untagged,Forrás2,nyílt forrás,open source,Risk management}
}

@inproceedings{kenny_calais_2017,
  title = {{{CALAIS}} - {{A Component Analysis Learning Algorithm}} for {{Inner Source Development}}},
  booktitle = {2017 {{UKSim}}-{{AMSS}} 19th {{International Conference}} on {{Computer Modelling Simulation}} ({{UKSim}})},
  author = {Kenny, Ronan and Fallon, Enda and Fallon, Sheila and Jacob, Paul and Usher, Damian},
  date = {2017-04},
  pages = {3--10},
  issn = {2473-3520},
  doi = {10.1109/UKSim.2017.28},
  abstract = {In the ever evolving world of software development, the complexity of products is increasing. This increased complexity is due to the integration of components built using multiple technologies. In this environment, companies are turning to open source software components to reduce software development time. These freely available open source components are often tried and tested by the software development community. Similar to open sourcing, inner sourcing involves the reuse of software components from other sections within large organizations. As with open sourcing, inner sourcing is experiencing a high adoption. Companies such as Philips, PayPal and Ericsson use open source software in an internal capacity to encourage the reuse of components. The challenge for system architects considering inner sourced components is to (a) determine the complexity, reliability, usage and therefore the importance of individual components within an overall product (b) assess the impact and importance of any individual component when components can differ in scale and technology. This work proposes CALAIS - A Component Analysis Learning Algorithm for Inner Source Development. CALAIS is a self-directed artificial neural network which uses historic performance to weigh the relative importance of an individual component within a system architecture. CALAIS operates by analyzing complexity, reliability, and usage. Using CALAIS, system architects can gain a fine grained view of the structural relevance of all system components proposed for inner sourcing. This view can be used to promote the delivery of high quality components within an inner source project.},
  eventtitle = {2017 {{UKSim}}-{{AMSS}} 19th {{International Conference}} on {{Computer Modelling Simulation}} ({{UKSim}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B2D4CT9H/Kenny et al. - 2017 - CALAIS - A Component Analysis Learning Algorithm f.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MHBE6FMR/8359036.html},
  keywords = {Artificial neural networks,Artificial Neural Networks,CALAIS,Companies,Complexity theory,Component,component analysis learning algorithm,freely available open source components,high quality components,Inner Source,Inner Source Development,inner source project,inner sourced components,learning (artificial intelligence),neural nets,Neurons,Open Source,open source software,public domain software,self-directed artificial neural network,Software,Software Development,software development community,software development time,software quality,software reliability,Software reliability,source software components,system architects,system components}
}

@incollection{kes_sler_customization_2009,
  title = {Customization of Open Source Software in Companies},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Ke\textbackslash s sler, Steffen and Alpar, Paul},
  date = {2009},
  pages = {129--142},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_13},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/95Q2KH72/chp%3A10.1007%2F978-3-642-02032-2_13.pdf},
  keywords = {license,nyílt forrás,policy}
}

@book{kesler_anpassung_2013,
  title = {Anpassung von Open-Source-Software in Anwenderunternehmen},
  author = {Keßler, Steffen},
  date = {2013},
  publisher = {{Springer Fachmedien Wiesbaden}},
  location = {{Wiesbaden}},
  url = {http://link.springer.com/10.1007/978-3-658-01955-6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HAT5WGME/open_source_software.pdf},
  isbn = {978-3-658-01954-9 978-3-658-01955-6},
  langid = {german}
}

@inproceedings{khan_use_2018,
  title = {Use of {{Open Content Management Systems}} in {{Government Sector}}},
  booktitle = {2018 5th {{International Symposium}} on {{Emerging Trends}} and {{Technologies}} in {{Libraries}} and {{Information Services}} ({{ETTLIS}})},
  author = {Khan, Nadim Akhtar and Ahangar, Humma},
  date = {2018-02},
  pages = {183--187},
  doi = {10.1109/ETTLIS.2018.8485191},
  abstract = {Content Management in modern technology- enabled environments has undergone remarkable changes and tremendous growth is witnessed by the availability and use of Content Management Systems in varied setups. These systems are responsible for content development life cycle providing means and ways for creating new content, manipulating and deleting existing content. A complete CMS system enables to structure, restructure, manage and publish websites in a more meaningful way. The growth and development in Open Source technology has greatly revolutionized every field of human understanding and content management is no exception. The field of software development witnessed a tremendous boost with the development and availability of open source software for different purposes with a well-established developer and user base. Many open source content management systems have been developed over time and are being successfully implemented and used in different setups for creating and managing content. The paper thus attempts to study select open source content management systems effectively implemented in different setups by way of analyzing their features suitable for managing different types of workflows.},
  eventtitle = {2018 5th {{International Symposium}} on {{Emerging Trends}} and {{Technologies}} in {{Libraries}} and {{Information Services}} ({{ETTLIS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6NYH2RCG/Khan and Ahangar - 2018 - Use of Open Content Management Systems in Governme.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YU3MFEFT/8485191.html},
  keywords = {Blogs,CMS system,content creation,content deletion,Content Development,content development life cycle,content management,Content management,Content Management,Content Management Systems,content manipulation,Government,government data processing,Libraries,open content management systems,Open Source,open source content management systems,Open Source Content Management Systems,open source software,Open Source technology,Portals,public domain software,software development,technology-enabled environments,Tools,Web sites,workflow management,workflow management software}
}

@inproceedings{khanjani_aspects_2011,
  title = {The Aspects of Choosing Open Source versus Closed Source},
  booktitle = {Computers \& {{Informatics}} ({{ISCI}}), 2011 {{IEEE Symposium}} On},
  author = {Khanjani, Atieh and Sulaiman, Riza},
  date = {2011},
  pages = {646--649},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5958992},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HWK63RSR/05958992.pdf},
  keywords = {általános OSS,nyílt forrás}
}

@inproceedings{khatri_evaluation_2016,
  title = {Evaluation of Open Source Software and Improving Its Quality},
  booktitle = {2016 5th {{International Conference}} on {{Reliability}}, {{Infocom Technologies}} and {{Optimization}} ({{Trends}} and {{Future Directions}}) ({{ICRITO}})},
  author = {Khatri, Sunil Kumar and Singh, Ispreet},
  date = {2016-09},
  pages = {114--119},
  doi = {10.1109/ICRITO.2016.7784936},
  abstract = {Open Source Software's (OSS) have been existing since decades. Several organizations around the globe are joining the notion to build with Open Source Model. They are finding open source as an attractive and practical alternative to proprietary software. Price tag of Open Source Software is very appealing. It can be inspected, modified, and freely redistributed. So several major organizations are considering to move to open source alternatives. Our work is an effort to provide a complete feedback based model to the client. Using proposed model client can evaluate different open source software's which provide similar functionalities in a better way. Proposed model takes feedback from clients upon the priority of attributes that affect the evaluation of OSS. Scoring of products are done on various attributes and final scores are calculated. Product with high score is considered as a better option.},
  eventtitle = {2016 5th {{International Conference}} on {{Reliability}}, {{Infocom Technologies}} and {{Optimization}} ({{Trends}} and {{Future Directions}}) ({{ICRITO}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6DC49A9W/Khatri and Singh - 2016 - Evaluation of open source software and improving i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H5L39ACC/7784936.html},
  keywords = {Analytical Hierarchy Process (AHP),Collaboration,Evaluation Models,Licenses,model client,open source alternatives,open source model,Open source software,Open Source Software,open source software quality,OSS,price tag,proprietary software,public domain software,Reliability,Selection Criteria,software quality,Standards,Training}
}

@inproceedings{khelifi_enhancing_2013,
  title = {Enhancing {{Protection Techniques}} of {{E}}-{{Banking Security Services Using Open Source Cryptographic Algorithms}}},
  author = {Khelifi, Adel and Aburrous, Maher and Talib, Manar Abu and Shastry, P.V.S.},
  date = {2013-07},
  pages = {89--95},
  publisher = {{IEEE}},
  doi = {10.1109/SNPD.2013.47},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6598450},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KAIB6TJK/06598450.pdf},
  isbn = {978-0-7695-5005-3},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{khondhu_is_2013,
  title = {Is {{It All Lost}}? {{A Study}} of {{Inactive Open Source Projects}}},
  shorttitle = {Is {{It All Lost}}?},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Khondhu, Jymit and Capiluppi, Andrea and Stol, Klaas-Jan},
  date = {2013},
  pages = {61--79},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4WN6AAMS/chp%3A10.1007%2F978-3-642-38928-3_5.pdf}
}

@inproceedings{kikas_structure_2017,
  title = {Structure and Evolution of Package Dependency Networks},
  booktitle = {Proceedings of the 14th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Kikas, Riivo and Gousios, Georgios and Dumas, Marlon and Pfahl, Dietmar},
  date = {2017-05-20},
  pages = {102--112},
  publisher = {{IEEE Press}},
  location = {{Buenos Aires, Argentina}},
  doi = {10.1109/MSR.2017.55},
  url = {https://doi.org/10.1109/MSR.2017.55},
  urldate = {2020-04-22},
  abstract = {Software developers often include available open-source software packages into their projects to minimize redundant effort. However, adding a package to a project can also introduce risks, which can propagate through multiple levels of dependencies. Currently, not much is known about the structure of open-source package ecosystems of popular programming languages and the extent to which transitive bug propagation is possible. This paper analyzes the dependency network structure and evolution of the JavaScript, Ruby, and Rust ecosystems. The reported results reveal significant differences across language ecosystems. The results indicate that the number of transitive dependencies for JavaScript has grown 60\% over the last year, suggesting that developers should look more carefully into their dependencies to understand what exactly is included. The study also reveals that vulnerability to a removal of the most popular package is increasing, yet most other packages have a decreasing impact on vulnerability. The findings of this study can inform the development of dependency management tools.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5FIHL4KP/Kikas et al. - 2017 - Structure and evolution of package dependency netw.pdf},
  isbn = {978-1-5386-1544-7},
  series = {{{MSR}} '17}
}

@incollection{kilamo_bulb_2010,
  title = {{{BULB}}: {{Onion}}-Based Measuring of {{OSS}} Communities},
  shorttitle = {{{BULB}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Kilamo, Terhi and Aaltonen, Timo and Heinimäki, Teemu J.},
  date = {2010},
  pages = {342--347},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_29},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KQ7UBV2U/chp%3A10.1007%2F978-3-642-13244-5_29.pdf},
  keywords = {community,development,nyílt forrás}
}

@incollection{kilamo_evaluating_2010,
  title = {Evaluating the Readiness of Proprietary Software for Open Source Development},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Kilamo, Terhi and Aaltonen, Timo and Hammouda, Imed and Heinimäki, Teemu J. and Mikkonen, Tommi},
  date = {2010},
  pages = {143--155},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_12},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HRDWISG/Evaluating the Readiness of Proprietary Software for Open Source Development.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7WWVRNWQ/chp%3A10.1007%2F978-3-642-13244-5_12.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@article{kilamo_proprietary_2012,
  title = {From Proprietary to Open Source—{{Growing}} an Open Source Ecosystem},
  author = {Kilamo, Terhi and Hammouda, Imed and Mikkonen, Tommi and Aaltonen, Timo},
  date = {2012-07},
  journaltitle = {Journal of Systems and Software},
  volume = {85},
  pages = {1467--1478},
  issn = {01641212},
  doi = {10.1016/j.jss.2011.06.071},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121211001683},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HXEUKKDR/1-s2.0-S0164121211001683-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {7}
}

@incollection{kim_design_2015,
  title = {Design of {{Exploitable Automatic Verification System}} for {{Secure Open Source Software}}},
  booktitle = {Advances in {{Computer Science}} and {{Ubiquitous Computing}}},
  author = {Kim, Bumryong and Song, Jun-ho and Park, Jae-Pyo and Jun, Moon-seog},
  date = {2015},
  pages = {275--281},
  publisher = {{Springer, Singapore}},
  doi = {10.1007/978-981-10-0281-6_40},
  url = {https://link.springer.com/chapter/10.1007/978-981-10-0281-6_40},
  urldate = {2018-08-15},
  abstract = {As more people use IT products, the application extent of software has increased along with demand for it. In addition to commercialized software, open source software is also seeing its market grow rapidly. But open source software is developed by those without expert knowledge in security. As a result, many security vulnerabilities arise and are taken advantage of for attacks. Therefore, in this paper, we suggested the design of an exploitable automatic verification system for secure open source software to address these issues. It is expected that, through the use of this system, the reliabilities of the open source software, the developers of the open source software, and the corporations using can be improved.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ADVIX9JT/Kim et al. - 2015 - Design of Exploitable Automatic Verification Syste.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S82YG4KV/978-981-10-0281-6_40.html},
  isbn = {978-981-10-0280-9 978-981-10-0281-6},
  langid = {english},
  series = {Lecture {{Notes}} in {{Electrical Engineering}}}
}

@inproceedings{kim_software_2014,
  title = {Software Architecture Model Driven Reverse Engineering Approach to Open Source Software Development},
  author = {Kim, William and Chung, Sam and Endicott-Popovsky, Barbara},
  date = {2014},
  pages = {9--14},
  publisher = {{ACM Press}},
  doi = {10.1145/2656434.2656440},
  url = {http://dl.acm.org/citation.cfm?doid=2656434.2656440},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JZCZXRSD/p9-kim.pdf},
  isbn = {978-1-4503-2711-4},
  keywords = {development,nyílt forrás,source},
  langid = {english}
}

@article{kim_software_2018,
  title = {Software Systems at Risk: {{An}} Empirical Study of Cloned Vulnerabilities in Practice},
  shorttitle = {Software Systems at Risk},
  author = {Kim, Seulbae and Lee, Heejo},
  date = {2018-08-01},
  journaltitle = {Computers \& Security},
  shortjournal = {Computers \& Security},
  volume = {77},
  pages = {720--736},
  issn = {0167-4048},
  doi = {10.1016/j.cose.2018.02.007},
  url = {http://www.sciencedirect.com/science/article/pii/S0167404818300944},
  urldate = {2020-04-22},
  abstract = {With the growth of open source software (OSS), code clones – code fragments that are copied and pasted within or between software systems – are proliferating. Although code cloning may expedite the process of software development, it often critically affects the security of software because vulnerabilities and bugs can easily be propagated through code clones. These vulnerable code clones are increasing in conjunction with the growth of OSS, potentially contaminating many systems. Although researchers have attempted to detect code clones for decades, most of these attempts fail to scale to the size of the ever-growing OSS code base. The lack of scalability prevents software developers from readily managing code clones and associated vulnerabilities. Moreover, most existing clone detection techniques focus overly on merely detecting clones and this impairs their ability to accurately find “vulnerable” clones. In this paper, we propose VUDDY, an approach for the scalable detection of vulnerable code clones, which is capable of detecting security vulnerabilities in large software programs efficiently and accurately. Its extreme scalability is achieved by leveraging function-level granularity and a length-filtering technique that reduces the number of signature comparisons. This efficient design enables VUDDY to preprocess a billion lines of code in 14 hours and 17 minutes, after which it requires a few seconds to identify code clones. In addition, we designed a vulnerability-preserving abstraction technique that renders VUDDY resilient to common modifications in cloned code, while preserving the vulnerable conditions even after the abstraction is applied. This extends the scope of VUDDY to identifying variants of known vulnerabilities, with high accuracy. An implementation of VUDDY has been serviced online for free at IoTcube, an automated vulnerability detection platform. In this study, we describe its principles, evaluate its efficacy, and analyze the vulnerabilities VUDDY detected in various real-world software systems, such as Apache HTTPD server and an Android smartphone.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M5FPDVJS/Kim and Lee - 2018 - Software systems at risk An empirical study of cl.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8DNHHTFS/S0167404818300944.html},
  keywords = {Code clone detection,Open source software,Software vulnerability,Vulnerability exploitation,Vulnerability propagation},
  langid = {english}
}

@inproceedings{kirschner_building_2008,
  title = {Building a {{Balanced Scorecard}} for {{Open Source Policy}} and {{Strategy}}: {{A Case Study}} of the {{Microsoft Experience}}},
  shorttitle = {Building a {{Balanced Scorecard}} for {{Open Source Policy}} and {{Strategy}}},
  booktitle = {Proceedings of the {{2Nd International Conference}} on {{Theory}} and {{Practice}} of {{Electronic Governance}}},
  author = {Kirschner, Bryan},
  date = {2008},
  pages = {226--231},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1509096.1509142},
  url = {http://doi.acm.org/10.1145/1509096.1509142},
  urldate = {2015-11-24},
  abstract = {The impact of open source software development has challenged commercial companies and government bodies alike to develop new strategies for a changing information and communication technology (ICT) environment. The balanced scorecard---already a widely recognized management best-practice---is well-suited both as a framework for this imperative, and as a mechanism for knowledge-sharing between industry and public sector managers. First, a balanced scorecard initiative must embrace a multi-disciplinary, multi-stakeholder and community-oriented approach, taking into account the needs of diverse constituencies. Second, public sector e-Government leaders can benefit from the same robust perspective on learning, innovation, and customer satisfaction in addition to financial measures that the balanced scorecard has brought to private sector managers. This paper shares the experience of one commercial company (Microsoft Corporation) taking a balanced scorecard approach to open source policy and strategy development, and offers an analysis of implications and opportunities for e-Government leaders.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7Z4AJ5I9/Kirschner - 2008 - Building a Balanced Scorecard for Open Source Poli.pdf},
  isbn = {978-1-60558-386-0},
  keywords = {balanced scorecard,Commercial relations,development,Microsoft,nyílt forrás,Open Source,strategy},
  series = {{{ICEGOV}} '08}
}

@inproceedings{kitchenham_evidence-based_2004,
  title = {Evidence-Based Software Engineering},
  booktitle = {Proceedings of the 26th International Conference on Software Engineering},
  author = {Kitchenham, Barbara A. and Dyba, Tore and Jorgensen, Magne},
  date = {2004},
  pages = {273--281},
  publisher = {{IEEE Computer Society}},
  url = {http://dl.acm.org/citation.cfm?id=999432},
  urldate = {2015-10-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VGX5I72P/01317449.pdf}
}

@article{kitchenham_procedures_2004,
  title = {Procedures for Performing Systematic Reviews},
  author = {Kitchenham, Barbara},
  date = {2004},
  journaltitle = {Keele, UK, Keele University},
  volume = {33},
  pages = {1--26},
  url = {http://tests-zingarelli.googlecode.com/svn-history/r336/trunk/2-Artigos-Projeto/Revisao-Sistematica/Kitchenham-Systematic-Review-2004.pdf},
  urldate = {2015-02-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TTN3DZJB/kitchenham_2004.pdf},
  keywords = {research method,systematic review},
  number = {2004}
}

@thesis{klaas-jan_stol_supporting_2011,
  title = {Supporting {{Product Development}} with {{Software}} from the {{Bazaar}}},
  author = {{Klaas-Jan Stol}},
  date = {2011},
  institution = {{UNIVERSITY OF LIMERICK}},
  url = {http://staff.lero.ie/stol/files/2011/12/stol_phd_2011.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QM7TAHFR/stol_phd_2011.pdf},
  keywords = {Forrás1,Inner Source,Mintamunka,open source},
  type = {Doktori (PhD) értekezés}
}

@inproceedings{ko_design_2011,
  title = {Design, Discussion, and Dissent in Open Bug Reports},
  booktitle = {Proceedings of the 2011 {{iConference}}},
  author = {Ko, Andrew J. and Chilana, Parmit K.},
  date = {2011},
  pages = {106--113},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1940776},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2M4K8XT9/p106-ko.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{ko_how_2010,
  title = {How Power Users Help and Hinder Open Bug Reporting},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Ko, Andrew J. and Chilana, Parmit K.},
  date = {2010},
  pages = {1665--1674},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1753576},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EJ9E73X6/p1665-ko.pdf},
  keywords = {community,development,nyílt forrás}
}

@article{koc_survey_2011,
  title = {A {{Survey}} of {{Version Control Systems}}},
  author = {Koc, Ali and Tansel, A.},
  date = {2011},
  journaltitle = {ICEME 2011},
  url = {http://www.iiis.org/cds2011/cd2011imc/iceme_2011/paperspdf/fb394vz.pdf},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K7GSJ2WX/fb394vz.pdf}
}

@article{koch_exploring_2009,
  title = {Exploring the Effects of {{SourceForge}}.Net Coordination and Communication Tools on the Efficiency of Open Source Projects Using Data Envelopment Analysis},
  author = {Koch, Stefan},
  date = {2009-08},
  journaltitle = {Empirical Software Engineering},
  volume = {14},
  pages = {397--417},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-008-9086-4},
  url = {http://link.springer.com/10.1007/s10664-008-9086-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ABJEDRFR/art%3A10.1007%2Fs10664-008-9086-4.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WIFB6572/art%3A10.1007%2Fs10664-008-9086-4.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {4}
}

@incollection{kolassa_model_2013,
  title = {A Model of the Commit Size Distribution of Open Source},
  booktitle = {{{SOFSEM}} 2013: {{Theory}} and {{Practice}} of {{Computer Science}}},
  author = {Kolassa, Carsten and Riehle, Dirk and Salim, Michel A.},
  date = {2013},
  pages = {52--66},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-35843-2_6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N4GDK46S/chp%3A10.1007%2F978-3-642-35843-2_6.pdf}
}

@inproceedings{koloniaris_possibilities_2018,
  title = {Possibilities of {{Use}} of {{Free}} and {{Open Source Software}} in the {{Greek Local Authorities}}},
  booktitle = {Open {{Source Systems}}: {{Enterprise Software}} and {{Solutions}}},
  author = {Koloniaris, Stavros and Kousiouris, George and Nikolaidou, Mara},
  editor = {Stamelos, Ioannis and Gonzalez-Barahoña, Jesus M. and Varlamis, Iraklis and Anagnostopoulos, Dimosthenis},
  date = {2018},
  pages = {128--143},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-92375-8_11},
  abstract = {Use of Free and Open Source software has started to get an increased level of functionality and trust, following the existence of a variety of solutions and supporting communities across the Web. In this paper, the current penetration and usage of Free and Open Source Software in the municipalities of Greece was recorded, as well as its potential especially when compared with the current state of computerization and hardware level. Conclusions were drawn on whether the municipalities will benefit from the usage of Free and Open Source Software, in technical and financial terms, as well as proposals are submitted in how the municipalities can benefit from an uptake in technology (especially Cloud computing), given their existing IT staffing and municipality organization. The possibility of improving the provided services to the citizens by using this software is also examined as well as cost aspects that can be improved.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/83I9EPIY/Koloniaris et al. - 2018 - Possibilities of Use of Free and Open Source Softw.pdf},
  isbn = {978-3-319-92375-8},
  keywords = {Adoption,Cost analysis,Free and open source software,Government,Municipalities,Survey},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@misc{konstantinos_xynos_effectiveness_2013,
  title = {Effectiveness of Blocking Evasions in {{Intrusion Prevention Systems}}},
  author = {{Konstantinos Xynos} and {Iain Sutherland} and {Andrew Blyth}},
  date = {2013},
  publisher = {{University of South Wales}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E8V93ZH9/Effectiveness_of_blocking_evasions_in_Intrusion_Prevention_Systems.pdf}
}

@unpublished{kopias_nyilt_nodate,
  title = {Nyílt Szoftverek a Közigazgatásban},
  author = {Kópiás, Bence},
  url = {https://mny2.hu/konferencia/downloads/kopias_mny2.pdf},
  urldate = {2013-05-05},
  eventtitle = {Nyílt {{Szoftverek}} a {{Közigazgatásban}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QJUURKE6/kopias_mny2.pdf},
  venue = {{Budapest}}
}

@incollection{koru_effect_2007,
  title = {Effect of Coupling on Defect Proneness in Evolutionary Open-Source Software Development},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Koru, A. Günes and Zhang, Dongsong and Liu, Hongfang},
  date = {2007},
  pages = {271--276},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_27},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TFJ2NT8S/chp%3A10.1007%2F978-0-387-72486-7_27.pdf}
}

@inproceedings{koru_modeling_2007,
  title = {Modeling the Effect of Size on Defect Proneness for Open-Source Software},
  booktitle = {Proceedings of the {{Third International Workshop}} on {{Predictor Models}} in {{Software Engineering}}},
  author = {Koru, A. Gunes and Zhang, Dongsong and Liu, Hongfang},
  date = {2007},
  pages = {10},
  publisher = {{IEEE Computer Society}},
  url = {http://dl.acm.org/citation.cfm?id=1269058},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q67JJH8A/29540010.pdf},
  keywords = {Defects,development,maturity,nyílt forrás,open source,source}
}

@article{koru_testing_2010,
  title = {Testing the Theory of Relative Defect Proneness for Closed-Source Software},
  author = {Koru, Gunes and Liu, Hongfang and Zhang, Dongsong and El Emam, Khaled},
  date = {2010-12},
  journaltitle = {Empirical Software Engineering},
  volume = {15},
  pages = {577--598},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-010-9132-x},
  url = {http://link.springer.com/10.1007/s10664-010-9132-x},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NPMQ7R2K/art%3A10.1007%2Fs10664-010-9132-x.pdf},
  keywords = {development,nyílt forrás,source},
  langid = {english},
  number = {6}
}

@inproceedings{koschke_software-clone_2016,
  title = {Software-{{Clone Rates}} in {{Open}}-{{Source Programs Written}} in {{C}} or {{C}}++},
  booktitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  author = {Koschke, Rainer and Bazrafshan, Saman},
  date = {2016-03},
  volume = {3},
  pages = {1--7},
  doi = {10.1109/SANER.2016.28},
  abstract = {It is often claimed that duplicated code, also known as software clones, occurs frequently. Different researchers have reported clone rates in the range of 19 and 28\%, in extreme cases even 59\% for particular systems. It is not clear, however, whether those systems are just outliers. In this paper, we analyze about 7,800 open-source projects written in C or C++, summing up to 240 MSLOC, and measure their clone rates. We use statistical analysis to estimate the means of clone rates in open-source projects. Based on our findings, we could not confirm the high clone rates reported in previous studies as expected averages. Except for small projects including a few copied and modified files, we found rather low clone rates compared to previous studies. For instance, if a minimal clone length of 100 tokens (roughly 16 LOC) is requested, we found an average rate of duplicated type-2 clones of about 12\%. Fortype-1 clones of this length, we found an average clone rate of only 1\%.However, our results show also that cloning is common. We identified only 20\% of the projects to have no type-2 clone of at least 100 tokens. And 44\% of the projects have at least one type-1 clone of at least 100 tokens.},
  eventtitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WD3QV4X8/Koschke and Bazrafshan - 2016 - Software-Clone Rates in Open-Source Programs Writt.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YM763NU4/7476786.html},
  keywords = {C language,C++ language,clone rate,Cloning,code duplication,Detectors,Distance measurement,duplicated code,duplicated type-1 clones,duplicated type-2 clones,Java,MSLOC,Open source software,open-source programs,public domain software,redundancy,software clones,software-clone rates,statistical analysis,statistics}
}

@unpublished{kossa_gyorgy_kiberbiztonsag_2013,
  title = {Kiberbiztonság És a {{Létfontosságú Rendszerek}} És {{Létesítmények Informatikai Biztonsági Eseménykezelő Központja}}    ({{LRLIBEK}})},
  author = {{Kossa György}},
  date = {2013},
  url = {http://www.nbf.hu/anyagok/prezentaciok/Kossa%20Gyorgy_OKF.ppt},
  urldate = {2015-06-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F4BIMKXZ/Kossa Gyorgy_OKF (1).ppt}
}

@online{kosta_peric_open_2012,
  title = {Open {{Source Software For Risk Analytics}} - {{A Valid Option}}},
  author = {{Kosta Peric}},
  date = {2012},
  journaltitle = {Forbes},
  url = {http://www.forbes.com/sites/kostaperic/2012/09/04/open-source-software-for-risk-analytics-a-valid-option/},
  urldate = {2014-05-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X374Q3IG/forbes_OSS_for_risk_analytics},
  keywords = {application,open source,Risk management}
}

@article{kovacs_digitalis_2010,
  title = {Digitális {{Mohács Egy}} Kibertámadási Forgatókönyv {{Magyarország}} Ellen},
  author = {Kovács, László and Krasznay, Csaba},
  date = {2010},
  journaltitle = {Nemzet és Biztonság},
  volume = {3},
  pages = {44--55},
  issn = {1789-5286},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4AQW7AU7/Kovacs_Laszlo__Krasznay_Csaba_Digitalis_Mohacs.pdf},
  number = {1}
}

@thesis{kovacs_zoltan_az_2015,
  title = {Az Infokommuníkációs Rendszerek Nemzetbiztonsági Kihívásai},
  author = {{Kovács Zoltán}},
  date = {2015},
  institution = {{Nemzeti Közszolgálati Egyetem}},
  location = {{Budapest}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MD2WSFD5/_.pdf},
  type = {Doktori (PhD) értekezés}
}

@inproceedings{krafft_how_2016,
  ids = {krafft\_how\_2016-1},
  title = {How {{Do Free}}/{{Open Source Developers Pick Their Tools}}? {{A Delphi Study}} of the {{Debian Project}}},
  shorttitle = {How {{Do Free}}/{{Open Source Developers Pick Their Tools}}?},
  booktitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  author = {Krafft, Martin F. and Stol, Klaas-Jan and Fitzgerald, Brian},
  date = {2016-05},
  pages = {232--241},
  abstract = {Free and Open Source Software (FOSS) has come to play a critical role in the global software industry. Organizations are widely adopting FOSS and interacting with open source communities, and hence organizations have a considerable interest in seeing these communities flourishing. Little research has focused on the tools used to develop that software. Given the absence of formal mandate that would appear in traditional organizations, an open question is what influences a FOSS contributor's decision to adopt a tool and how workflows get established in FOSS teams. In this paper we report on a Delphi study conducted in the Debian Project, one of the largest FOSS projects. Drawing from data collected in three phases from a panel of 21 carefully selected and well-informed participants, we identified 15 factors that affect decisions to adopt tools and relate those to existing models of innovation and diffusion.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QJD4DDKE/Krafft et al. - 2016 - How do freeopen source developers pick their tool.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T2VCQ59N/Krafft et al. - 2016 - How Do FreeOpen Source Developers Pick Their Tool.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/54843FVN/7883307.html},
  keywords = {Collaboration,Context,Debian project,Delphi,Delphi study,FOSS,free and open source software,free/open source developers,free/open source software,Free/open source software,open source communities,Open source software,Organizations,public domain software,qualitative study,software development,Software engineering,software industry,software tools,Technological innovation,tools}
}

@incollection{kramer_should_2011,
  title = {Should This Software Component Be Developed inside or Outside Our Firm?-{{A}} Design Science Perspective on the Sourcing of Application Systems},
  shorttitle = {Should This Software Component Be Developed inside or Outside Our Firm?},
  booktitle = {New {{Studies}} in {{Global IT}} and {{Business Service Outsourcing}}},
  author = {Kramer, Tommi and Heinzl, Armin and Spohrer, Kai},
  date = {2011},
  pages = {115--132},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24815-3_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UNEG895W/chp%3A10.1007%2F978-3-642-24815-3_7.pdf}
}

@book{kranakis_advances_2013,
  title = {Advances in {{Network Analysis}} and Its {{Applications}}},
  editor = {Kranakis, Evangelos},
  date = {2013},
  volume = {18},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-30904-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2GGHBIJD/Evolution of an Open Source Community Network.pdf},
  isbn = {978-3-642-30903-8 978-3-642-30904-5},
  keywords = {community,development,open source},
  series = {Mathematics in {{Industry}}}
}

@unpublished{krasznay_az_2011,
  title = {Az open source rendszerek auditja},
  author = {Krasznay, Csaba},
  date = {2011},
  url = {http://krasznay.hu/presentation/osconf2011_krasznay.ppt},
  urldate = {2015-01-12},
  eventtitle = {Open Source 2011},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2C24TN9C/Csaba - 2011 - Az open source rendszerek auditja.pdf},
  langid = {magyar}
}

@thesis{krasznay_magyar_2011,
  title = {A Magyar Elektronikus Közigazgatási Szolgáltatások Komplex Információvédelmi Megoldásai},
  author = {Krasznay, Csaba},
  date = {2011},
  institution = {{Zrínyi Miklós Nemzetvédelmi Egyetem Hadtudományi kar Katonai Műszaki Doktori Iskola}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F75PKSHQ/Krasznay_Csaba_PhD_ert_tervezet.pdf}
}

@incollection{krishnamurthy_analysis_2013,
  title = {An Analysis of the Software Development Processes of Open Source {{E}}-Learning Systems},
  booktitle = {Systems, {{Software}} and {{Services Process Improvement}}},
  author = {Krishnamurthy, Aarthy and O’Connor, Rory V.},
  date = {2013},
  pages = {60--71},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-39179-8_6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ADBCNAM2/chp%3A10.1007%2F978-3-642-39179-8_6.pdf}
}

@article{krishnamurthy_intrinsic_2006,
  title = {On the Intrinsic and Extrinsic Motivation of Free/Libre/Open Source ({{FLOSS}}) Developers},
  author = {Krishnamurthy, Sandeep},
  date = {2006},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {18},
  pages = {17--39},
  url = {http://link.springer.com/article/10.1007/s12130-006-1002-x},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MT985DSS/On the intrinsic and extrinsic motivation of FLOSS developers.pdf},
  keywords = {community,motivation,open source},
  number = {4}
}

@misc{krishnamurthy_peripheral_2016,
  title = {Peripheral {{Developer Participation}} in {{Open Source Projects}}: {{An Empirical Analysis}}},
  shorttitle = {Peripheral {{Developer Participation}} in {{Open Source Projects}}},
  author = {Krishnamurthy, Rajiv and Jacob, Varghese and Radhakrishnan, Suresh and Dogan, Kutsal},
  date = {2016-01-13},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/2820618},
  urldate = {2020-04-22},
  abstract = {The success of the Open Source model of software development depends on the voluntary participation of external developers (the peripheral developers), a group that can have distinct motivations from that of project founders (the core developers). In this study, we examine peripheral developer participation by empirically examining approximately 2,600 open source projects. In particular, we hypothesize that peripheral developer participation is higher when the potential for building reputation by gaining recognition from project stakeholders is higher. We consider recognition by internal stakeholders (such as core developers) and external stakeholders (such as end-users and peers). We find a positive association between peripheral developer participation and the potential of stakeholder recognition after controlling for bug reports, feature requests, and other key factors. Our findings provide important insights for OSS founders and corporate managers for open sourcing or OSS adoption decisions.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4H9MCENJ/Krishnamurthy et al. - 2016 - Peripheral Developer Participation in Open Source .pdf},
  keywords = {Code ownership,open source software,project management,software metrics}
}

@incollection{krishnamurthy_using_2013,
  title = {Using {{ISO}}/{{IEC}} 12207 to Analyze Open Source Software Development Processes: An {{E}}-Learning Case Study},
  shorttitle = {Using {{ISO}}/{{IEC}} 12207 to Analyze Open Source Software Development Processes},
  booktitle = {Software {{Process Improvement}} and {{Capability Determination}}},
  author = {Krishnamurthy, Aarthy and O’Connor, Rory V.},
  date = {2013},
  pages = {107--119},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38833-0_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FFE7DZVS/Using ISOIEC 12207 to Analyze Open Source Software Development.pdf}
}

@online{krista_duty_3_2014,
  title = {3 {{Reasons Linux Is Preferred}} for {{Control Systems}}},
  author = {{Krista Duty}},
  date = {2014},
  journaltitle = {automation.com},
  url = {https://www.automation.com/en-us/articles/2014-1/3-reasons-linux-is-preferred-for-control-systems},
  urldate = {2020-06-08},
  abstract = {Linux has long been on the \&ldquo;wishlist\&quot; for control systems. Until now, most systems have been locked-in to the Windows operating system due to reliance on classic OPC\&mdash;a ubiquitous communication standard based on Microsoft\&rsquo;s Distributed Component Object Model (DCOM). The name of the game is changing, however, with the arrival of the next-generation OPC standard, the OPC Unified Architecture (OPC-UA). The new standard was designed for cross-platform compatibility, which makes room for Linux to gain popularity in the automated control industry.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4RMSETPU/3-reasons-linux-is-preferred-for-control-systems.html},
  langid = {english}
}

@incollection{kristis_makris_scmbug_nodate,
  title = {Scmbug: {{Policy}}-Based {{Integration}} of {{Software Configuration Management}} with {{Bug}}-Tracking},
  booktitle = {{{ATEC}} '05 {{Proceedings}} of the Annual Conference on {{USENIX Annual Technical Conference}}},
  author = {{Kristis Makris} and {Kyung Dong Ryu}},
  pages = {38},
  url = {https://www.usenix.org/legacy/event/usenix05/tech/freenix/full_papers/makris/makris.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UE57M8NV/___Scmbug_ Policy-based Integration of Software Configuration Management with Bug-tracking.pdf}
}

@inproceedings{kritikos_open_2018,
  title = {Open {{Source Software Resilience Framework}}},
  booktitle = {Open {{Source Systems}}: {{Enterprise Software}} and {{Solutions}}},
  author = {Kritikos, Apostolos and Stamelos, Ioannis},
  date = {2018-06-08},
  pages = {39--49},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-92375-8_4},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-92375-8_4},
  urldate = {2018-08-15},
  abstract = {An Open Source Software (OSS) project can be utilized either as is, to serve specific needs on an application level, or on the source code level, as a part of another software system serving as a component, a library, or even an autonomous third party dependency. There are several OSS quality models that provide metrics to measure specific aspects of the project, like its structural quality. Although other dimensions, like community health and activity, software governance principles or license permissiveness, are taken into account, there is no universally accepted OSS assessment model. In this work we are proposing an evaluation approach based on the adaptation of the City Resilience Framework to OSS with the aim of providing a strong theoretical basis for evaluating OSS projects.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HPIKK25C/Kritikos and Stamelos - 2018 - Open Source Software Resilience Framework.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S64PACFK/978-3-319-92375-8_4.html},
  isbn = {978-3-319-92374-1 978-3-319-92375-8},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@incollection{krogstie_modeling_2012,
  title = {Modeling of Digital Ecosystems: {{Challenges}} and Opportunities},
  shorttitle = {Modeling of Digital Ecosystems},
  booktitle = {Collaborative {{Networks}} in the {{Internet}} of {{Services}}},
  author = {Krogstie, John},
  date = {2012},
  pages = {137--145},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-32775-9_14},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8SHT8EJG/chp%3A10.1007%2F978-3-642-32775-9_14.pdf}
}

@book{krutz_securing_2006,
  title = {Securing {{SCADA}} Systems},
  author = {Krutz, Ronald L.},
  date = {2006},
  publisher = {{Wiley Pub}},
  location = {{Indianapolis, IN}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WK22U2KH/06729785.pdf},
  isbn = {978-0-7645-9787-9},
  keywords = {computer security,Computer security,Data protection,Forrás2,nyílt forrás,Process control,Supervisory control systems},
  pagetotal = {218}
}

@inproceedings{krzysztof_wnuk_value-based_2012,
  title = {Value-Based Software Engineering},
  booktitle = {{{ESEM}} '12},
  author = {{Krzysztof Wnuk} and {David Callele} and {Even-André Karlsson} and {Dietmar Pfahl}},
  date = {2012},
  pages = {271--280},
  publisher = {{Springer}},
  location = {{Berlin}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5UN5E68D/p271-wnuk.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/87TUWEAP/06475428.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9F7UN5FD/04301084.pdf},
  isbn = {978-1-4503-1056-7},
  keywords = {_SMS_untagged,Management,nyílt forrás,Software Engineering}
}

@inproceedings{kudjo_predicting_2019,
  title = {Predicting {{Vulnerable Software Components}} via {{Bellwethers}}},
  booktitle = {Trusted {{Computing}} and {{Information Security}}},
  author = {Kudjo, Patrick Kwaku and Chen, Jinfu and Mensah, Solomon and Amankwah, Richard},
  editor = {Zhang, Huanguo and Zhao, Bo and Yan, Fei},
  date = {2019},
  pages = {389--407},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-5913-2_24},
  abstract = {Software vulnerabilities are weakness, flaws or errors introduced during the life cycle of a software system. Although, previous studies have demonstrated the practical significance of using software metrics to predict vulnerable software components, empirical evidence shows that these metrics are plagued with issues pertaining to their effectiveness and robustness. This paper investigates the feasibility of using Bellwethers (i.e., exemplary data) for predicting and classifying software vulnerabilities. We introduced a Bellwether method using the following operators, PARTITION, SAMPLE + TRAIN and APPLY. The Bellwethers sampled by the three operators are used to train a learner (i.e., deep neural networks) with the aim of predicting essential or non-essential vulnerabilities. We evaluate the proposed Bellwether method using vulnerability reports extracted from three popular web browsers offered by CVE. Again, the mean absolute error (MAE), Welch’s t-test and Cliff’s δ effect size are used to further evaluate the prediction performance and practical statistical significant difference between the Bellwethers and the growing portfolio. We found that there exist subsets of vulnerability records (Bellwethers) in the studied datasets that can yield improved accuracy for software vulnerability prediction. The result shows that recall and precision measures from the text mining process were in a range of 73.9\%–85.3\% and 67.9\%–81.8\% respectively across the three studied datasets. The findings further show that the use of the Bellwethers for predictive modelling is a promising research direction for assisting software engineers and practitioners when seeking to predict instances of vulnerability records that demand much attention prior to software release.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2HMN9NV7/Kudjo et al. - 2019 - Predicting Vulnerable Software Components via Bell.pdf},
  isbn = {9789811359132},
  keywords = {Bellwethers,Growing portfolio,Software metrics,Software vulnerability,Web browsers},
  langid = {english},
  series = {Communications in {{Computer}} and {{Information Science}}}
}

@incollection{kuechler_misconceptions_2013,
  title = {Misconceptions and {{Barriers}} to {{Adoption}} of {{FOSS}} in the {{US Energy Industry}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Kuechler, Victor and Jensen, Carlos and Bryant, Deborah},
  date = {2013},
  pages = {232--244},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_17},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QRFJQE36/chp%3A10.1007%2F978-3-642-38928-3_17.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{kuhn_distributed_2010,
  title = {Distributed {{Version Control Systems}}},
  author = {Kuhn, Dipl Medieninformatiker BA Daniel},
  date = {2010},
  url = {http://www.sonicwaves.de/downloads/publications/Distributed-Version-Control-Systems.pdf},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZXJBE2VQ/Distributed-Version-Control-Systems.pdf}
}

@article{kula_developers_2018,
  title = {Do Developers Update Their Library Dependencies?},
  author = {Kula, Raula Gaikovina and German, Daniel M. and Ouni, Ali and Ishio, Takashi and Inoue, Katsuro},
  date = {2018-02-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {23},
  pages = {384--417},
  issn = {1573-7616},
  doi = {10.1007/s10664-017-9521-5},
  url = {https://doi.org/10.1007/s10664-017-9521-5},
  urldate = {2020-04-21},
  abstract = {Third-party library reuse has become common practice in contemporary software development, as it includes several benefits for developers. Library dependencies are constantly evolving, with newly added features and patches that fix bugs in older versions. To take full advantage of third-party reuse, developers should always keep up to date with the latest versions of their library dependencies. In this paper, we investigate the extent of which developers update their library dependencies. Specifically, we conducted an empirical study on library migration that covers over 4,600 GitHub software projects and 2,700 library dependencies. Results show that although many of these systems rely heavily on dependencies, 81.5\% of the studied systems still keep their outdated dependencies. In the case of updating a vulnerable dependency, the study reveals that affected developers are not likely to respond to a security advisory. Surveying these developers, we find that 69\% of the interviewees claimed to be unaware of their vulnerable dependencies. Moreover, developers are not likely to prioritize a library update, as it is perceived to be extra workload and responsibility. This study concludes that even though third-party reuse is common practice, updating a dependency is not as common for many developers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CZ2AY6M6/Kula et al. - 2018 - Do developers update their library dependencies.pdf},
  langid = {english},
  number = {1}
}

@inproceedings{kuo_study_2012,
  title = {A {{Study}} of {{Using Two}}-{{Parameter Generalized Pareto Model}} to {{Analyze}} the {{Fault Distribution}} of {{Open Source Software}}},
  author = {Kuo, Chih-Song and Huang, Chin-Yu and Luan, Shao-Pu},
  date = {2012-06},
  pages = {88--97},
  publisher = {{IEEE}},
  doi = {10.1109/SERE.2012.21},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6258298},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AX4T73F9/06258298.pdf},
  isbn = {978-1-4673-2067-2 978-0-7695-4742-8},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{kuwata_study_2014,
  title = {A {{Study}} on {{Maturity Model}} of {{Open Source Software Community}} to {{Estimate}} the {{Quality}} of {{Products}}},
  author = {Kuwata, Yoshitaka and Takeda, Kentaro and Miura, Hiroshi},
  date = {2014},
  journaltitle = {Procedia Computer Science},
  volume = {35},
  pages = {1711--1717},
  issn = {18770509},
  doi = {10.1016/j.procs.2014.08.264},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1877050914012290},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R5D6PS95/1-s2.0-S1877050914012290-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@article{laat_governance_2007,
  title = {Governance of Open Source Software: State of the Art},
  shorttitle = {Governance of Open Source Software},
  author = {Laat, Paul B.},
  date = {2007-06-26},
  journaltitle = {Journal of Management \& Governance},
  volume = {11},
  pages = {165--177},
  issn = {1385-3457, 1572-963X},
  doi = {10.1007/s10997-007-9022-9},
  url = {http://link.springer.com/10.1007/s10997-007-9022-9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FVQBR3GG/art%3A10.1007%2Fs10997-007-9022-9.pdf},
  keywords = {community,motivation,open source},
  langid = {english},
  number = {2}
}

@article{laat_how_2010,
  title = {How Can Contributors to Open-Source Communities Be Trusted? {{On}} the Assumption, Inference, and Substitution of Trust},
  shorttitle = {How Can Contributors to Open-Source Communities Be Trusted?},
  author = {Laat, Paul B.},
  date = {2010-12},
  journaltitle = {Ethics and Information Technology},
  volume = {12},
  pages = {327--341},
  issn = {1388-1957, 1572-8439},
  doi = {10.1007/s10676-010-9230-x},
  url = {http://link.springer.com/10.1007/s10676-010-9230-x},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C3QMSZAI/How can contributors to open-source communities be trusted.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZWJ5PPSS/art%3A10.1007%2Fs10676-010-9230-x.pdf},
  keywords = {community,development,nyílt forrás,open source,trust},
  langid = {english},
  number = {4}
}

@incollection{laila_open_2010,
  title = {Open {{Source Software}} ({{OSS}}) {{Adoption Framework}} for {{Local Environment}} and Its {{Comparison}}},
  booktitle = {Innovations in {{Computing Sciences}} and {{Software Engineering}}},
  author = {Laila, U. and Bukhari, S. F. A.},
  editor = {Sobh, Tarek and Elleithy, Khaled},
  date = {2010},
  pages = {13--16},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://www.springerlink.com/index/10.1007/978-90-481-9112-3_3},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K6VUKJII/chp%3A10.1007%2F978-90-481-9112-3_3.pdf},
  isbn = {978-90-481-9111-6 978-90-481-9112-3},
  keywords = {adoption,nyílt forrás},
  langid = {english}
}

@inproceedings{lakhani_why_2003,
  title = {Why Hackers Do What They Do: {{Understanding}} Motivation and Effort in Free/Open Source Software Projects},
  booktitle = {{{MIT Sloan Working Paper No}}. 4425-03},
  author = {Lakhani, Karim and Wolf, Robert},
  date = {2003},
  doi = {10.2139/ssrn.443040},
  url = {http://papers.ssrn.com/sol3/papers.cfm?abstract_id=443040},
  abstract = {n this paper we report on the results of a study of the effort and motivations of individuals to contributing to the creation of Free/Open Source software. We used a Web-based survey, administered to 684 software developers in 287 F/OSS projects, to learn what lies behind the effort put into such projects. Academic theorizing on individual motivations for participating in F/OSS projects has posited that external motivational factors in the form of extrinsic benefits (e.g.: better jobs, career advancement) are the main drivers of effort. We find in contrast, that enjoyment-based intrinsic motivation, namely how creative a person feels when working on the project, is the strongest and most pervasive driver. We also find that user need, intellectual stimulation derived from writing code, and improving programming skills are top motivators for project participation. A majority of our respondents are skilled and experienced professionals working in IT-related jobs, with approximately 40 percent being paid to participate in the F/OSS project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QI4JIETS/Lakhani and Wolf - 2003 - Why hackers do what they do Understanding motivat.pdf}
}

@article{lakka_exploring_2012,
  title = {Exploring the Determinants of the {{OSS}} Market Potential: {{The}} Case of the {{Apache}} Web Server},
  shorttitle = {Exploring the Determinants of the {{OSS}} Market Potential},
  author = {Lakka, Spyridoula and Michalakelis, Christos and Varoutas, Dimitris and Martakos, Draculis},
  date = {2012-02},
  journaltitle = {Telecommunications Policy},
  volume = {36},
  pages = {51--68},
  issn = {03085961},
  doi = {10.1016/j.telpol.2011.11.018},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0308596111002114},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DNMMRTXG/1-s2.0-S0308596111002114-main.pdf},
  keywords = {adoption,nyílt forrás},
  langid = {english},
  number = {1}
}

@inbook{langer_build_2011,
  title = {Build vs. {{Buy}}},
  booktitle = {Guide to {{Software Development}}},
  author = {Langer, Arthur M.},
  date = {2011},
  pages = {37--48},
  publisher = {{Springer London}},
  location = {{London}},
  url = {http://link.springer.com/10.1007/978-1-4471-2300-2_3},
  urldate = {2015-11-27},
  bookauthor = {Langer, Arthur M.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RGEV7PTB/chp%3A10.1007%2F978-1-4471-2300-2_3.pdf},
  isbn = {978-1-4471-2299-9 978-1-4471-2300-2},
  keywords = {adoption,nyílt forrás},
  langid = {english}
}

@inproceedings{langweg_classification_2004,
  title = {A Classification of Malicious Software Attacks},
  booktitle = {Performance, {{Computing}}, and {{Communications}}, 2004 {{IEEE International Conference}} On},
  author = {Langweg, Hanno and Snekkenes, Einar},
  date = {2004},
  pages = {827--832},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1395194},
  urldate = {2013-09-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/39KCQJRA/wia04p.pdf}
}

@article{laplante_it_2006,
  title = {{{IT}} Best Practices: {{CIO}} Wisdom},
  shorttitle = {{{IT}} Best Practices},
  author = {Laplante, Phillip and Costello, Thomas and others},
  date = {2006},
  journaltitle = {IT Professional},
  volume = {8},
  pages = {17--23},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1603465},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4MWXATZZ/01603465.pdf},
  number = {1}
}

@book{lassenius_agile_2015,
  title = {Agile {{Processes}}, in {{Software Engineering}}, and {{Extreme Programming}}},
  editor = {Lassenius, Casper and Dingsøyr, Torgeir and Paasivaara, Maria},
  date = {2015},
  volume = {212},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-18612-2},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QIHVUPGC/chp%3A10.1007%2F978-3-319-18612-2_11.pdf},
  isbn = {978-3-319-18611-5 978-3-319-18612-2},
  keywords = {_SMS_untagged,nyílt forrás},
  series = {Lecture {{Notes}} in {{Business Information Processing}}}
}

@thesis{laszlo_nyilt_2009,
  title = {A Nyílt Forráskódú Szoftverek Társadalmi-Gazdasági Hatásainak Feltárása a Központi Kezdeményezések Tükrében},
  author = {László, Gábor},
  date = {2009},
  url = {http://www.omikk.bme.hu/collections/phd/Gazdasag_es_Tarsadalomtudomanyi_Kar/2009/Laszlo_Gabor/ertekezes.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T7MGJASE/laszlo_gabor_ertekezes.pdf},
  keywords = {D_bevezetés,Definitions,Forrás1,nyílt forrás}
}

@inproceedings{latoza_crowdsourcing_2019,
  ids = {latoza\_crowdsourcing\_2019-1},
  title = {Crowdsourcing in {{Software Engineering}}: {{Models}}, {{Motivations}}, and {{Challenges}}},
  shorttitle = {Crowdsourcing in {{Software Engineering}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice}} ({{ICSE}}-{{SEIP}})},
  author = {LaToza, Thomas D.},
  date = {2019-05},
  pages = {301--301},
  doi = {10.1109/ICSE-SEIP.2019.00043},
  abstract = {Over the past several years, crowdsourcing has entered software engineering practice. While most work is still done through traditional development, contract development, and outsourcing, software projects today increasingly use crowdsourcing for a variety of purposes, including fixing defects, testing their software, or gathering alternative designs for a new user interface. Through mechanisms such as competition sites, expertise sharing sites, bug bounties, and online labor markets, crowdsourcing has begun to reshape the ways in which developers contribute to software projects. This talk explores the models of crowdsourcing that have been applied to software development to date and outlines some of the opportunities that exist for the future.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}}: {{Software Engineering}} in {{Practice}} ({{ICSE}}-{{SEIP}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VMSPHJ42/LaToza - 2019 - Crowdsourcing in Software Engineering Models, Mot.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZWM9K478/LaToza - 2019 - Crowdsourcing in software engineering models, mot.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YLC4WDXL/8804422.html},
  keywords = {alternative designs,competition sites,Computational modeling,Computer bugs,contract development,crowdsourcing,Crowdsourcing,crowdsourcing; programming teams; software management; open source software development,expertise sharing sites,labour resources,open source software development,Programming,programming teams,Software,software development,software engineering,Software engineering,software engineering practice,software management,software projects,user interfaces}
}

@incollection{laurent_lessons_2009,
  title = {Lessons Learned from Open Source Projects for Facilitating Online Requirements Processes},
  booktitle = {Requirements {{Engineering}}: {{Foundation}} for {{Software Quality}}},
  author = {Laurent, Paula and Cleland-Huang, Jane},
  date = {2009},
  pages = {240--255},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02050-6_21},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7AXUKEWI/chp%3A10.1007%2F978-3-642-02050-6_21.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{lavazza_empirical_2012,
  title = {An Empirical Investigation of Perceived Reliability of Open Source Java Programs},
  booktitle = {Proceedings of the 27th {{Annual ACM Symposium}} on {{Applied Computing}}},
  author = {Lavazza, Luigi and Morasca, Sandro and Taibi, Davide and Tosi, Davide},
  date = {2012},
  pages = {1109--1114},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2231951},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TB5M7APJ/p1109-lavazza.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{lavazza_op2a_2012,
  title = {{{OP2A}}: {{How}} to {{Improve}} the {{Quality}} of the {{Web Portal}} of {{Open Source Software Products}}},
  shorttitle = {{{OP2A}}},
  booktitle = {Web {{Information Systems}} and {{Technologies}}},
  author = {Lavazza, Luigi and Morasca, Sandro and Taibi, Davide and Tosi, Davide},
  date = {2012},
  pages = {149--162},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-28082-5_11},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E4XQM2VU/chp%3A10.1007%2F978-3-642-28082-5_11.pdf},
  isbn = {978-3-642-28082-5},
  keywords = {Forrás2,nyílt forrás,open source,quality}
}

@inproceedings{lavazza_predicting_2010,
  title = {Predicting {{OSS}} Trustworthiness on the Basis of Elementary Code Assessment},
  booktitle = {Proceedings of the 2010 {{ACM}}-{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Lavazza, Luigi and Morasca, Sandro and Taibi, Davide and Tosi, Davide},
  date = {2010},
  pages = {36},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1852834},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G66HIP72/a36-lavazza.pdf},
  keywords = {development,nyílt forrás,source}
}

@inproceedings{lazic_open_2011,
  title = {Open Source Software in Education},
  booktitle = {{{MIPRO}}, 2011 {{Proceedings}} of the 34th {{International Convention}}},
  author = {Lazić, Nikolaj and Zorica, M. Banek and Klindžić, J.},
  date = {2011},
  pages = {1267--1270},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5967252},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EU2NEU73/05967252.pdf},
  keywords = {adoption,nyílt forrás}
}

@inproceedings{le_empirical_2018,
  title = {An {{Empirical Study}} of {{Architectural Decay}} in {{Open}}-{{Source Software}}},
  booktitle = {2018 {{IEEE International Conference}} on {{Software Architecture}} ({{ICSA}})},
  author = {Le, Duc Minh and Link, Daniel and Shahbazian, Arman and Medvidovic, Nenad},
  date = {2018-04},
  pages = {176--17609},
  doi = {10.1109/ICSA.2018.00027},
  abstract = {Architecture is the set of principal design decisions about a software system. In practice, new architectural decisions are added and existing ones reversed or modified throughout a system's lifetime. Frequently, these decisions deviate from the architect's well-considered intent, and software systems regularly exhibit increased architectural decay as they evolve. The manifestations of such ill-considered design decisions are seen as “architectural smells”. To date, there has been no in-depth study of the characteristics or trends involving this phenomenon. Instead, when referring to architectural smells and their negative effects, both researchers and practitioners had to rely on folklore and their personal, inherently limited experience. In this paper, we report on the systematic step we have taken in investigating the nature and impact of architectural smells. We have selected a set of representative architectural smells from literature and analyzed their instances in 421 versions from 8 open-source software systems. We have (1) developed algorithms to automatically detect instances of multiple architectural smell types, and (2) analyzed relationships between the detected smells and the lists of issues reported in the systems' respective issue trackers. Our study shows that architectural smells have tangible negative consequences in the form of implementation issues as well as code commits requiring increased maintenance effort throughout a system's lifetime.},
  eventtitle = {2018 {{IEEE International Conference}} on {{Software Architecture}} ({{ICSA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LL3PMTDI/Le et al. - 2018 - An Empirical Study of Architectural Decay in Open-.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SV8N97KX/8417151.html},
  keywords = {architectural decay,architectural decisions,architectural smell types,Architectural-Decay,Architectural-Smells,Computer architecture,Connectors,Couplings,Detection algorithms,Implementation-Issues,open-source software systems,principal design decisions,public domain software,representative architectural smells,software architecture,Software architecture,software system,Software systems,Software-Maintenance}
}

@inproceedings{lee_are_2017,
  title = {Are One-Time Contributors Different? A Comparison to Core and Periphery Developers in {{FLOSS}} Repositories},
  shorttitle = {Are One-Time Contributors Different?},
  booktitle = {Proceedings of the 11th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Lee, Amanda and Carver, Jeffrey C.},
  date = {2017-11-09},
  pages = {1--10},
  publisher = {{IEEE Press}},
  location = {{Markham, Ontario, Canada}},
  doi = {10.1109/ESEM.2017.7},
  url = {https://doi.org/10.1109/ESEM.2017.7},
  urldate = {2020-04-22},
  abstract = {Context: Free/Libre Open Source Software (FLOSS) communities consist of different types of contributors. Core contributors and peripheral contributors work together to create a successful project, each playing a different role. One-Time Contributors (OTCs), who are on the very fringe of the peripheral developers, are largely unstudied despite offering unique insights into the development process. In a prior survey, we identified OTCs and discovered their motivations and barriers. Aims: The objective of this study is to corroborate the survey results and provide a better understand of OTCs. We compare OTCs to other peripheral and core contributors to determine whether they are distinct. Method: We mined data from the same code-review repository used to identify survey respondents in our previous study. After identifying each contributor as core, periphery, or OTC, we compared them in terms of patch size, time interval from submission to decision, the nature of their conversations, and patch acceptance rates. Results: We identified a continuum between core developers and OTCs. OTCs create smaller patches, face longer time intervals between patch submission and rejection, have longer review conversations, and face lower patch acceptance rates. Conversely, core contributors create larger patches, face shorter time intervals for feedback, have shorter review conversations, and have patches accepted at the highest rate. The peripheral developers fall in between the OTCs and the core contributors. Conclusion: OTCs do, in fact, face the barriers identified in our prior survey. They represent a distinct group of contributors compared to core and peripheral developers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6LS9CRQR/Lee and Carver - 2017 - Are one-time contributors different a comparison .pdf},
  isbn = {978-1-5090-4039-1},
  series = {{{ESEM}} '17}
}

@incollection{lee_design_2012,
  title = {Design of {{Lifecycle}} for {{Reliability}} of {{Open Source Software}}},
  booktitle = {Software and {{Network Engineering}}},
  author = {Lee, Eun-Ser and Kim, Joong-soo},
  date = {2012},
  pages = {103--109},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-28670-4_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X57AKXE7/Design of Lifecycle for Reliability of Open Source Software.pdf}
}

@incollection{lee_evaluation_2012,
  title = {Evaluation of {{Risk Items}} for {{Open Source Software}}},
  booktitle = {Software and {{Network Engineering}}},
  author = {Lee, Eun-Ser and Kim, Haeng-Kon},
  date = {2012},
  pages = {111--117},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-28670-4_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NRN7D93X/Evaluation of Risk Items for Open Source Software.pdf}
}

@inproceedings{lee_extended_2019,
  title = {Extended {{Abstract}}: {{Documentation Development Practice}} in {{Open Source Startups}} - {{Take PingCAP}} as an {{Example}}},
  shorttitle = {Extended {{Abstract}}},
  booktitle = {2019 {{IEEE International Professional Communication Conference}} ({{ProComm}})},
  author = {Lee, Lilian},
  date = {2019-07},
  pages = {255--256},
  issn = {2158-1002},
  doi = {10.1109/ProComm.2019.00054},
  abstract = {In recent years, many open source startups have been adopting a new documentation development solution - GitHub plus Markdown. It's an agile `Docs Like Code' solution that keeps documents close to the code and applies software development tools and techniques to documentation. Although this open source documentation solution is typically adopted by open source startups or projects, it also applies to any other kind of company as long as you want to make your documentation public to users or customers. This abstract aims to introduce this new choice of documentation solution by elaborating on its practice at an open source startup called PingCAP, so as to promote its adoption in the technical communication field.},
  eventtitle = {2019 {{IEEE International Professional Communication Conference}} ({{ProComm}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X76332NU/Lee - 2019 - Extended Abstract Documentation Development Pract.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TMKI67JF/8804485.html},
  keywords = {Code solution,Docs-like-code;GitHub;Markdown;PingCAP,documentation development practice,documentation development solution,documentation public,open source documentation solution,open source startup,PingCAP,public domain software,software development tools,software engineering,software tools,system documentation,technical communication field}
}

@inproceedings{lee_floss_2019,
  ids = {lee\_floss\_2019-1},
  title = {{{FLOSS Participants}}' {{Perceptions About Gender}} and {{Inclusiveness}}: {{A Survey}}},
  shorttitle = {{{FLOSS Participants}}' {{Perceptions About Gender}} and {{Inclusiveness}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Lee, Amanda and Carver, Jeffrey C.},
  date = {2019-05},
  pages = {677--687},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00077},
  abstract = {Background: While FLOSS projects espouse openness and acceptance for all, in practice, female contributors often face discriminatory barriers to contribution. Aims: In this paper, we examine the extent to which these problems still exist. We also study male and female contributors' perceptions of other contributors. Method: We surveyed participants from 15 FLOSS projects, asking a series of open-ended, closed-ended, and behavioral scale questions to gather information about the issue of gender in FLOSS projects. Results: Though many of those we surveyed expressed a positive sentiment towards females who participate in FLOSS projects, some were still strongly against their inclusion. Often, the respondents who were against inclusiveness also believed their own sentiments were the prevailing belief in the community, contrary to our findings. Others did not see the purpose of attempting to be inclusive, expressing the sentiment that a discussion of gender has no place in FLOSS. Conclusions: FLOSS projects have started to move forwards in terms of gender acceptance. However, there is still a need for more progress in the inclusion of gender-diverse contributors.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I84KY7SY/Lee and Carver - 2019 - FLOSS Participants' Perceptions About Gender and I.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/L75BLJIE/Lee and Carver - 2019 - FLOSS participants' perceptions about gender and i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XVMHK5FL/8812068.html},
  keywords = {Cognition,Computer science,Data mining,Face,female contributor perceptions,female contributors,floss,FLOSS,FLOSS participant perceptions,FLOSS projects,gender,gender acceptance,gender issues,gender-diverse contributors,IEEE Fellows,inclusiveness,male contributor perceptions,open source,Open Source,positive sentiment,public domain software,sentiment analysis,social aspects of automation,Software,Software engineering,survey}
}

@article{lee_governance_2017,
  title = {Governance Strategies for Open Collaboration: {{Focusing}} on Resource Allocation in Open Source Software Development Organizations},
  shorttitle = {Governance Strategies for Open Collaboration},
  author = {Lee, Saerom and Baek, Hyunmi and Jahng, Jungjoo},
  date = {2017-10-01},
  journaltitle = {International Journal of Information Management},
  shortjournal = {International Journal of Information Management},
  volume = {37},
  pages = {431--437},
  issn = {0268-4012},
  doi = {10.1016/j.ijinfomgt.2017.05.006},
  url = {http://www.sciencedirect.com/science/article/pii/S0268401216308623},
  urldate = {2020-04-22},
  abstract = {With rapid advancements in information and communication technology, open collaboration has become easier, thereby allowing people to participate through internet platform. Open source software is one of the representative examples of open collaboration. In this research, we examine the antecedents of innovation performance for open source software development organizations on Github (www.github.com), which is a leading web service for the open collaborations of developers. From the perspective of resource allocation, this study investigates effective governance strategies to allocate developers to multiple projects within an organization. Overall, we find that the organization with high performance have a small number of developers to participate in most projects and most developers to participate in a small number of projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4T4VT3HZ/Lee et al. - 2017 - Governance strategies for open collaboration Focu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/67QS94D8/S0268401216308623.html},
  keywords = {Open collaboration,Open source software,OSS governance,Project management,Resource allocation},
  langid = {english},
  number = {5}
}

@article{lee_government_2006,
  title = {Government Policy toward Open Source Software: {{The}} Puzzles of Neutrality and Competition},
  shorttitle = {Government Policy toward Open Source Software},
  author = {Lee, Jyh-An},
  date = {2006},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {18},
  pages = {113--141},
  url = {http://link.springer.com/article/10.1007/s12130-006-1007-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9KFGC64K/art%3A10.1007%2Fs12130-006-1007-5.pdf},
  number = {4}
}

@article{lee_motivations_2013,
  title = {Motivations for {{Open Source Project Participation}} and {{Decisions}} of {{Software Developers}}},
  author = {Lee, Dongryul and Kim, Byung Cho},
  date = {2013-01},
  journaltitle = {Computational Economics},
  volume = {41},
  pages = {31--57},
  issn = {0927-7099, 1572-9974},
  doi = {10.1007/s10614-011-9311-x},
  url = {http://link.springer.com/10.1007/s10614-011-9311-x},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NUSBZ9EW/motivation_OSS_project_part_and_decisions_of_SD.pdf},
  langid = {english},
  number = {1}
}

@misc{lee_one-time_2018,
  title = {One-{{Time Contributors}} to {{FLOSS}}: {{Surveys}} and {{Data Analysis}}},
  shorttitle = {One-{{Time Contributors}} to {{FLOSS}}},
  author = {Lee, Amanda},
  date = {2018-03-28},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3178315.3178327},
  urldate = {2020-04-22},
  abstract = {Free/Libre Open Source Software (FLOSS) projects rely on a steady influx of newcomer volunteer developers to survive. As these projects, unlike traditional software projects, often do not pay their contributors to work on them, volunteers must be obtained instead. Once obtained, a volunteer goes through a lengthy process in order to join the project, including obtaining sufficient knowledge of the codebase and learning the rules of the community. However, some developers drop out after they make a single commit to the code database. These developers are knowledgeable enough to commit code and make it through the onboarding process, but leave the project rather than join, therefore depriving the project of potential talent. We propose to understand these One-Time code Contributors (OTCs) through surveys and through data-mining the projects? software repositories: if they are a unique demographic, why they only commit once, if anything can be done to assist them. Once they are determined as a separate demographic, the study pivots to examine other factors that might affect OTCs, including such factors as project governance and project architecture.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Y8XCGA7V/Lee - 2018 - One-Time Contributors to FLOSS Surveys and Data A.pdf},
  keywords = {data mining,doctoral symposium,empirical software engineering,floss,one-time code contributor,open source,otc,survey}
}

@inproceedings{lee_systematic_2016,
  title = {Systematic Literature Review on Effort Estimation for {{Open Sources}} ({{OSS}}) Web Application Development},
  booktitle = {2016 {{Future Technologies Conference}} ({{FTC}})},
  author = {Lee, Tseu Kwan and Wei, Koh Tieng and Ghani, Abdul Azim Abd.},
  date = {2016-12},
  pages = {1158--1167},
  doi = {10.1109/FTC.2016.7821748},
  abstract = {The development of Web applications has a crucial role as most organizations have their own corporate Web applications to meet the needs of their respective businesses. Different needs create different complexities which represent a new challenge to Web application development. In order to ensure the timely delivery of a project, software providers offering this service choose to use Open Sources (OSS) as an alternative. Since OSS consist of an existing framework that can be implemented directly into the application, how far does this affect the complexity of the effort estimation? A number of research papers have outlined the efforts made to refine the complexity of this field. However, to our best knowledge a systematic overview of the research done on Web application development that involves OSS usage does not appear to exist. Hence, the aim of this paper is to conduct a systematic literature review (SLR) of OSS Web application development. For this purpose, 34 papers from a total of 67 papers were identified and studied. The findings of this study indicate that (a) no research has been carried out on the field mentioned; (b) there is no early effort estimation model for Web projects that involve the usage of OSS. Therefore, this work provides an overview of the field besides identifying future research possibilities.},
  eventtitle = {2016 {{Future Technologies Conference}} ({{FTC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K6Q3N9TE/Lee et al. - 2016 - Systematic literature review on effort estimation .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W286RJJ7/7821748.html},
  keywords = {Bibliographies,Complexity theory,corporate Web applications,Databases,Effort estimation,Estimation,estimation model,Internet,Libraries,Measurement,open sources,OSS usage,OSS Web application development,public domain software,SLR,software providers,systematic literature review,Systematics,web application development,Web projects,Web sites}
}

@inproceedings{lee_understanding_2017,
  title = {Understanding the {{Impressions}}, {{Motivations}}, and {{Barriers}} of {{One Time Code Contributors}} to {{FLOSS Projects}}: {{A Survey}}},
  shorttitle = {Understanding the {{Impressions}}, {{Motivations}}, and {{Barriers}} of {{One Time Code Contributors}} to {{FLOSS Projects}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Lee, Amanda and Carver, Jeffrey C. and Bosu, Amiangshu},
  date = {2017-05},
  pages = {187--197},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2017.25},
  abstract = {Successful Free/Libre Open Source Software (FLOSS) projects must attract and retain high-quality talent. Researchers have invested considerable effort in the study of core and peripheral FLOSS developers. To this point, one critical subset of developers that have not been studied are One-Time code Contributors (OTC) - those that have had exactly one patch accepted. To understand why OTCs have not contributed another patch and provide guidance to FLOSS projects on retaining OTCs, this study seeks to understand the impressions, motivations, and barriers experienced by OTCs. We conducted an online survey of OTCs from 23 popular FLOSS projects. Based on the 184 responses received, we observed that OTCs generally have positive impressions of their FLOSS project and are driven by a variety of motivations. Most OTCs primarily made contributions to fix bugs that impeded their work and did not plan on becoming long term contributors. Furthermore, OTCs encounter a number of barriers that prevent them from continuing to contribute to the project. Based on our findings, there are some concrete actions FLOSS projects can take to increase the chances of converting OTCs into long-term contributors.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/42NTZDE7/Lee et al. - 2017 - Understanding the Impressions, Motivations, and Ba.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JIRH4FYZ/7985661.html},
  keywords = {Computer bugs,Computer science,Concrete,Electronic mail,Encoding,FLOSS,FLOSS projects,free-Libre open source software project,Newcomers,one time code contributors,One Time Contributors,Open source,Open source software,OSS,OTC,project management,public domain software,Qualitative Research,software engineering,Survey,Tools}
}

@inproceedings{leitner_exploratory_2017,
  title = {An {{Exploratory Study}} of the {{State}} of {{Practice}} of {{Performance Testing}} in {{Java}}-{{Based Open Source Projects}}},
  booktitle = {Proceedings of the 8th {{ACM}}/{{SPEC}} on {{International Conference}} on {{Performance Engineering}}},
  author = {Leitner, Philipp and Bezemer, Cor-Paul},
  date = {2017-04-17},
  pages = {373--384},
  publisher = {{Association for Computing Machinery}},
  location = {{L\&apos;Aquila, Italy}},
  doi = {10.1145/3030207.3030213},
  url = {https://doi.org/10.1145/3030207.3030213},
  urldate = {2020-04-22},
  abstract = {The usage of open source (OS) software is wide-spread across many industries. While the functional quality of OS projects is considered to be similar to closed-source software, much is unknown about the quality in terms of performance. One challenge for OS developers is that, unlike for functional testing, there is a lack of accepted best practices for performance testing. To reveal the state of practice of performance testing in OS projects, we conduct an exploratory study on 111 Java-based OS projects from GitHub. We study the performance tests of these projects from five perspectives: (1) developers, (2) size, (3) test organization, (4) types of performance tests and (5) used tooling. We show that writing performance tests is not a popular task in OS projects: performance tests form only a small portion of the test suite, are rarely updated, and are usually maintained by a small group of core project developers. Further, even though many projects are aware that they need performance tests, developers appear to struggle implementing them. We argue that future performance testing frameworks should provider better support for low-friction testing, for instance via non-parameterized methods or performance test generation, as well as focus on a tight integration with standard continuous integration tooling.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QG3LX9VY/Leitner and Bezemer - 2017 - An Exploratory Study of the State of Practice of P.pdf},
  isbn = {978-1-4503-4404-3},
  keywords = {empirical software engineering,mining software repositories,open source,performance engineering,performance testing},
  series = {{{ICPE}} '17}
}

@inproceedings{lelli_community_2009,
  title = {Community Support for Software Development in Small Groups: The Initial Steps},
  shorttitle = {Community Support for Software Development in Small Groups},
  booktitle = {Proceedings of the 2nd International Workshop on {{Social}} Software Engineering and Applications},
  author = {Lelli, Francesco and Jazayeri, Mehdi},
  date = {2009},
  pages = {15--22},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1595840},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NQVM8WN3/p15-lelli.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{lenarduzzi_towards_2011,
  title = {Towards a Marketing Strategy for Open Source Software},
  booktitle = {Proceedings of the 12th {{International Conference}} on {{Product Focused Software Development}} and {{Process Improvement}}},
  author = {Lenarduzzi, Valentina},
  date = {2011},
  pages = {31--33},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2181109},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WVTNH5BS/p31-lenarduzzi.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{lenarduzzi_why_2019,
  title = {Why {{Do Developers Adopt Open Source Software}}? {{Past}}, {{Present}} and {{Future}}},
  shorttitle = {Why {{Do Developers Adopt Open Source Software}}?},
  booktitle = {Open {{Source Systems}}},
  author = {Lenarduzzi, Valentina and Tosi, Davide and Lavazza, Luigi and Morasca, Sandro},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {104--115},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_10},
  abstract = {Free/Libre Open Source Software has evolved dramatically in the last twenty years and many open source products are now considered similar, or even better than proprietary counterparts. Given the evolution of software – both concerning its development and its usage – it is likely that the motivations for adopting an open source rather than a proprietary product have changed over time. The goal of this work is to identify the current motivations for adopting open source software, and compare them with the motivations that held in the past. We conducted a set of interviews among software practitioners, asking them to rank motivations for the adoption of open source software, and we compared these new results with the motivations elicited in previous surveys published in 2010 and 2013. The results show that motivations have actually changed over time.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T4GA84KK/Lenarduzzi et al. - 2019 - Why Do Developers Adopt Open Source Software Past.pdf},
  isbn = {978-3-030-20883-7},
  keywords = {Adoption motivations,Free software,Open source software},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@online{lennon_consumers_2012,
  title = {Consumers {{Clueless}} on {{Why They Should Update Software}}, {{Survey}}},
  author = {Lennon, Mike},
  date = {2012},
  journaltitle = {SecurityWeek},
  url = {http://www.securityweek.com/consumers-clueless-why-they-should-update-software-survey},
  urldate = {2012-10-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8ECARFWI/Lennon - 2012 - Consumers Clueless on Why They Should Update Softw.pdf},
  langid = {english}
}

@article{leshem_overlooking_2007,
  title = {Overlooking the Conceptual Framework},
  author = {Leshem, Shosh and Trafford, Vernon},
  date = {2007-02},
  journaltitle = {Innovations in Education and Teaching International},
  volume = {44},
  pages = {93--105},
  issn = {1470-3297, 1470-3300},
  doi = {10.1080/14703290601081407},
  url = {http://www.tandfonline.com/doi/abs/10.1080/14703290601081407},
  urldate = {2015-10-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZNNHTEDP/0c96052678bbd9aad1000000.pdf},
  langid = {english},
  number = {1}
}

@article{levesque_fundamental_2005,
  title = {Fundamental Issues with Open Source Software Development},
  author = {Levesque},
  date = {2005},
  journaltitle = {First Monday},
  issn = {1396-0466},
  url = {http://firstmonday.org/htbin/cgiwrap/bin/ojs/index.php/fm/article/viewArticle/1484/1399},
  urldate = {2012-10-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7JJZIX4D/1399.html},
  issue = {Special Issue \#2}
}

@incollection{levine_where_2010,
  title = {Where and {{When Can Open Source Thrive}}? {{Towards}} a {{Theory}} of {{Robust Performance}}},
  shorttitle = {Where and {{When Can Open Source Thrive}}?},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Levine, Sheen S. and Prietula, Michael J.},
  date = {2010},
  pages = {156--176},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_13},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WKMA6TBH/chp%3A10.1007%2F978-3-642-13244-5_13.pdf},
  keywords = {community,development,Forrás2,nyílt forrás,open source}
}

@article{lewis_government_2010,
  title = {Government Open Source Policies},
  author = {Lewis, James A.},
  date = {2010},
  journaltitle = {Center for Strategic and International Studies},
  url = {https://dev.csis.org/files/publication/100416_Open_Source_Policies.pdf},
  urldate = {2013-04-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8ACB5ZUV/Open_Source_Policies.pdf}
}

@inproceedings{li_automatic_2020,
  title = {Automatic {{Identification}} of {{Decisions}} from the {{Hibernate Developer Mailing List}}},
  booktitle = {Proceedings of the {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Li, Xueying and Liang, Peng and Li, Zengyang},
  date = {2020-04-15},
  pages = {51--60},
  publisher = {{Association for Computing Machinery}},
  location = {{Trondheim, Norway}},
  doi = {10.1145/3383219.3383225},
  url = {https://doi.org/10.1145/3383219.3383225},
  urldate = {2020-04-22},
  abstract = {Decisions run through the whole software development and maintenance processes. Explicitly documenting these decisions helps to organize development knowledge and to reduce its vaporization, thereby controlling the development process and maintenance costs. It can also support the knowledge acquisition process for stakeholders of the project. Meanwhile, developers (e.g., architects) and managers will be able to rely on the decisions made in the past to solve the problems encountered in their current projects. However, identifying decisions from massive textual artifacts, which involves considerable human effort, time, and cost, is usually unaffordable due to limited resources. To address this problem, we conducted an experiment to automatically identify decisions from textual artifacts using machine learning techniques. We created a dataset of 1,300 sentences labelled from the Hibernate developer mailing list, containing 650 decision sentences and non-decision sentences respectively, and trained machine learning models using 160 configurations regarding text preprocessing, feature extraction, and classification algorithms. The results show that (1) the text preprocessing method with Including Stop Words, No Stemming and Lemmatization, and No Filtering Out Sentences performs best when preprocessing posts to identify decisions; (2) the simple Bag-of-Words (BoW) model works best when extracting features to identify decisions; (3) the Support Vector Machine (SVM) algorithm gets the best result when training classifiers to identify decisions; and (4) the SVM algorithm with Including Stop Words (ISW), No Stemming and Lemmatization (NSaL), Filtering Out Sentences by Length (FOSbL), and BoW achieves the best performance (with a precision of 0.640, a recall of 0.932, and an F1-score of 0.759), compared with other configurations when identifying decisions from the mailing list.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AWU9BDWB/Li et al. - 2020 - Automatic Identification of Decisions from the Hib.pdf},
  isbn = {978-1-4503-7731-7},
  keywords = {Automatic Identification,Decision,Hibernate,Mailing List,Open Source Software},
  series = {{{EASE}} '20}
}

@article{li_cp-miner_2006,
  title = {{{CP}}-{{Miner}}: {{Finding}} Copy-Paste and Related Bugs in Large-Scale Software Code},
  shorttitle = {{{CP}}-{{Miner}}},
  author = {Li, Zhenmin and Lu, Shan and Myagmar, Suvda and Zhou, Yuanyuan},
  date = {2006},
  journaltitle = {Software Engineering, IEEE Transactions on},
  volume = {32},
  pages = {176--192},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1610609},
  urldate = {2015-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2XCUD8G2/TSE-CPMiner.pdf},
  keywords = {copy-paste,security},
  number = {3}
}

@inproceedings{li_detecting_2017,
  title = {Detecting {{Duplicate Pull}}-Requests in {{GitHub}}},
  booktitle = {Proceedings of the 9th {{Asia}}-{{Pacific Symposium}} on {{Internetware}}},
  author = {Li, Zhixing and Yin, Gang and Yu, Yue and Wang, Tao and Wang, Huaimin},
  date = {2017-09-23},
  pages = {1--6},
  publisher = {{Association for Computing Machinery}},
  location = {{Shanghai, China}},
  doi = {10.1145/3131704.3131725},
  url = {https://doi.org/10.1145/3131704.3131725},
  urldate = {2020-04-22},
  abstract = {The widespread use of pull-requests boosts the development and evolution for many open source software projects. However, due to the parallel and uncoordinated nature of development process in GitHub, duplicate pull-requests may be submitted by different contributors to solve the same problem. Duplicate pull-requests increase the maintenance cost of GitHub, result in the waste of time spent on the redundant effort of code review, and even frustrate developers' willing to offer continuous contribution. In this paper, we investigate using text information to automatically detect duplicate pull-requests in GitHub. For a new-arriving pull-request, we compare the textual similarity between it and other existing pull-requests, and then return a candidate list of the most similar ones. We evaluate our approach on three popular projects hosted in GitHub, namely Rails, Elasticsearch and Angular.JS. The evaluation shows that about 55.3\% -- 71.0\% of the duplicates can be found when we use the combination of title similarity and description similarity.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D8TI5F9R/Li et al. - 2017 - Detecting Duplicate Pull-requests in GitHub.pdf},
  isbn = {978-1-4503-5313-7},
  keywords = {code review,duplicate detection,Pull-request,textual similarity},
  series = {Internetware'17}
}

@incollection{li_empirical_2005,
  title = {An Empirical Study on Off-the-Shelf Component Usage in Industrial Projects},
  booktitle = {Product {{Focused Software Process Improvement}}},
  author = {Li, Jingyue and Conradi, Reidar and Slyngstad, Odd Petter N. and Bunse, Christian and Khan, Umair and Torchiano, Marco and Morisio, Maurizio},
  date = {2005},
  pages = {54--68},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11497455_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QWZ8J36A/chp%3A10.1007%2F11497455_7.pdf}
}

@inproceedings{li_empirical_2006,
  title = {An Empirical Study on Decision Making in Off-the-Shelf Component-Based Development},
  booktitle = {Proceedings of the 28th International Conference on {{Software}} Engineering},
  author = {Li, Jingyue and Conradi, Reidar and Slyngstad, Odd Petter N. and Bunse, Christian and Torchiano, Marco and Morisio, Maurizio},
  date = {2006},
  pages = {897--900},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1134446},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CDRBF5QJ/p897-jingyue.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{li_encoding_2006,
  title = {Encoding Information Flow in {{Haskell}}},
  booktitle = {Computer {{Security Foundations Workshop}}, 2006. 19th {{IEEE}}},
  author = {Li, Peng and Zdancewic, Steve},
  date = {2006},
  pages = {12--pp},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1648705},
  urldate = {2013-09-15},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G7KR78M5/Encoding_Information_Flow_in_Haskell.pdf}
}

@inproceedings{li_have_2006,
  title = {Have {{Things Changed Now}}?: {{An Empirical Study}} of {{Bug Characteristics}} in {{Modern Open Source Software}}},
  shorttitle = {Have {{Things Changed Now}}?},
  booktitle = {Proceedings of the 1st {{Workshop}} on {{Architectural}} and {{System Support}} for {{Improving Software Dependability}}},
  author = {Li, Zhenmin and Tan, Lin and Wang, Xuanhui and Lu, Shan and Zhou, Yuanyuan and Zhai, Chengxiang},
  date = {2006},
  pages = {25--33},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1181309.1181314},
  url = {http://doi.acm.org/10.1145/1181309.1181314},
  urldate = {2015-11-24},
  abstract = {Software errors are a major cause for system failures. To effectively design tools and support for detecting and recovering from software failures requires a deep understanding of bug characteristics. Recently, software and its development process have significantly changed in many ways, including more help from bug detection tools, shift towards multi-threading architecture, the open-source development paradigm and increasing concerns about security and user-friendly interface. Therefore, results from previous studies may not be applicable to present software. Furthermore, many new aspects such as security, concurrency and open-source-related characteristics have not well studied. Additionally, previous studies were based on a small number of bugs, which may lead to non-representative results.To investigate the impacts of the new factors on software errors, we analyze bug characteristics by first sampling hundreds of real world bugs in two large, representative open-source projects. To validate the representativeness of our results, we use natural language text classification techniques and automatically analyze around 29, 000 bugs from the Bugzilla databases of the software.Our study has discovered several new interesting characteristics: (1) memory-related bugs have decreased because quite a few effective detection tools became available recently; (2) surprisingly, some simple memory-related bugs such as NULL pointer dereferences that should have been detected by existing tools in development are still a major component, which indicates that the tools have not been used with their full capacity; (3) semantic bugs are the dominant root causes, as they are application specific and difficult to fix, which suggests that more efforts should be put into detecting and fixing them; (4) security bugs are increasing, and the majority of them cause severe impacts.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FTMRS3DC/Li és mtsai. - 2006 - Have Things Changed Now An Empirical Study of Bu.pdf},
  isbn = {978-1-59593-576-2},
  keywords = {bug characteristics,bug detection,development,empirical study,nyílt forrás,Open Source,security,source},
  series = {{{ASID}} '06}
}

@article{li_it_2013,
  title = {It Is All about What We Have: {{A}} Discriminant Analysis of Organizations' Decision to Adopt Open Source Software},
  shorttitle = {It Is All about What We Have},
  author = {Li, Yan and Tan, Chuan-Hoo and Yang, Xue},
  date = {2013-12},
  journaltitle = {Decision Support Systems},
  volume = {56},
  pages = {56--62},
  issn = {01679236},
  doi = {10.1016/j.dss.2013.05.006},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016792361300122X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ASWZ28T7/1-s2.0-S016792361300122X-main.pdf},
  keywords = {Commercial relations,development,nyílt forrás},
  langid = {english}
}

@inproceedings{li_large-scale_2017,
  title = {A {{Large}}-{{Scale Empirical Study}} of {{Security Patches}}},
  booktitle = {Proceedings of the 2017 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Li, Frank and Paxson, Vern},
  date = {2017-10-30},
  pages = {2201--2215},
  publisher = {{Association for Computing Machinery}},
  location = {{Dallas, Texas, USA}},
  doi = {10.1145/3133956.3134072},
  url = {https://doi.org/10.1145/3133956.3134072},
  urldate = {2020-04-22},
  abstract = {Given how the "patching treadmill" plays a central role for enabling sites to counter emergent security concerns, it behooves the security community to understand the patch development process and characteristics of the resulting fixes. Illumination of the nature of security patch development can inform us of shortcomings in existing remediation processes and provide insights for improving current practices. In this work we conduct a large-scale empirical study of security patches, investigating more than 4,000 bug fixes for over 3,000 vulnerabilities that affected a diverse set of 682 open-source software projects. For our analysis we draw upon the National Vulnerability Database, information scraped from relevant external references, affected software repositories, and their associated security fixes. Leveraging this diverse set of information, we conduct an analysis of various aspects of the patch development life cycle, including investigation into the duration of impact a vulnerability has on a code base, the timeliness of patch development, and the degree to which developers produce safe and reliable fixes. We then characterize the nature of security fixes in comparison to other non-security bug fixes, exploring the complexity of different types of patches and their impact on code bases. Among our findings we identify that: security patches have a lower footprint in code bases than non-security bug patches; a third of all security issues were introduced more than 3 years prior to remediation; attackers who monitor open-source repositories can often get a jump of weeks to months on targeting not-yet-patched systems prior to any public disclosure and patch distribution; nearly 5\% of security fixes negatively impacted the associated software; and 7\% failed to completely remedy the security hole they targeted.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BT5MWQS4/Li and Paxson - 2017 - A Large-Scale Empirical Study of Security Patches.pdf},
  isbn = {978-1-4503-4946-8},
  keywords = {empirical study,patch complexity,security patches,vulnerabilities},
  series = {{{CCS}} '17}
}

@inproceedings{li_motivating_2006,
  title = {Motivating {{Open Source Software Developers}}: {{Influence}} of {{Transformational}} and {{Transactional Leaderships}}},
  shorttitle = {Motivating {{Open Source Software Developers}}},
  booktitle = {Proceedings of the 2006 {{ACM SIGMIS CPR Conference}} on {{Computer Personnel Research}}: {{Forty Four Years}} of {{Computer Personnel Research}}: {{Achievements}}, {{Challenges}} \& the {{Future}}},
  author = {Li, Yan and Tan, Chuan-Hoo and Teo, Hock-Hai and Mattar, A. Talib},
  date = {2006},
  pages = {34--43},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1125170.1125182},
  url = {http://doi.acm.org/10.1145/1125170.1125182},
  urldate = {2015-11-24},
  abstract = {Open Source Software (OSS) is developed by geographically distributed unpaid programmers. The success of such a seemingly chaotic OSS project will largely depend on how the project leader organizes and motivates the developers to contribute. Grounded on leadership and motivation theories, we proposed and tested a research model that seeks to explain the behavioral effects of a leader on the developers' motivation to contribute. Survey data collected from 118 OSS developers on Sourceforge.net was used to test the research model. The results indicate that leaders' transformational leadership is positively related to developers' intrinsic motivation and leaders' active management by exception, a form of transactional leadership, is positively related to developers' extrinsic motivation.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BH8GQTE4/Li és mtsai. - 2006 - Motivating Open Source Software Developers Influe.pdf},
  isbn = {978-1-59593-349-2},
  keywords = {community,development,leadership,motivation,nyílt forrás,open source,open source software development,statisztika},
  series = {{{SIGMIS CPR}} '06}
}

@article{li_open_2011,
  title = {Open {{Source Software Adoption}}: {{Motivations}} of {{Adopters}} and {{Amotivations}} of {{Non}}-Adopters},
  shorttitle = {Open {{Source Software Adoption}}},
  author = {Li, Yan and Tan, Chuan-Hoo and Xu, Heng and Teo, Hock-Hai},
  date = {2011-05},
  journaltitle = {SIGMIS Database},
  volume = {42},
  pages = {76--94},
  issn = {0095-0033},
  doi = {10.1145/1989098.1989103},
  url = {http://doi.acm.org/10.1145/1989098.1989103},
  urldate = {2015-11-24},
  abstract = {Adoption of an information system could be reflected in two ways: through the adoption intentions of the non-adopters and the extent of adoption for the adopters. This study seeks to identify the motivational factors influencing individuals' adoption intentions and the extent of a system adoption within the context of Open Source Software (OSS). Building on the theoretical underpinnings of the Self-Determination Theory, we proposed and empirically assessed two conceptual models to examine OSS adopters' extent of adoption (based on intrinsic and extrinsic motivation) and OSS non-adopters' intentions for adoption (based on amotivation). Results from the survey collected from 264 OSS adopters and 212 OSS non-adopters reveal that strategy belief amotivation is the major factor for not using OSS (i.e., non-adopters) while identified regulation is the major extrinsic motivation affecting the extent of adoption (i.e., adopters). Interestingly, intrinsic motivation to accomplish and capacity beliefs amotivation do not significantly affect adoption extent and adoption intention respectively. Theoretical and practical implications are discussed.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W75XRP9T/Li és mtsai. - 2011 - Open Source Software Adoption Motivations of Adop.pdf},
  keywords = {community,development,nyílt forrás,open,software,source,statisztika,survey},
  number = {2}
}

@inproceedings{li_optimal_2008,
  title = {Optimal Strategies of {{IT}} Consulting Firms: The Impact of License Fee and Open Source},
  shorttitle = {Optimal Strategies of {{IT}} Consulting Firms},
  booktitle = {Proceedings of the 10th International Conference on {{Electronic}} Commerce},
  author = {Li, Yung-Ming and Jhang-Li, Jhih-Hua and Liu, Yen-Chun},
  date = {2008},
  pages = {40},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1409594},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UX3QWBBF/a40-li.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{li_reliability_2011,
  title = {Reliability Analysis and Optimal Version-Updating for Open Source Software},
  author = {Li, Xiang and Li, Yan Fu and Xie, Min and Ng, Szu Hui},
  date = {2011-09},
  journaltitle = {Information and Software Technology},
  volume = {53},
  pages = {929--936},
  issn = {09505849},
  doi = {10.1016/j.infsof.2011.04.005},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584911001029},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/35CP8PI5/1-s2.0-S0950584911001029-main.pdf},
  keywords = {development,nyílt forrás,procedures},
  langid = {english},
  number = {9}
}

@incollection{li_scalable_2014,
  title = {A {{Scalable Approach}} for {{Vulnerability Discovery Based}} on {{Security Patches}}},
  booktitle = {Applications and {{Techniques}} in {{Information Security}}},
  author = {Li, Hongzhe and Kwon, Hyuckmin and Kwon, Jonghoon and Lee, Heejo},
  date = {2014},
  pages = {109--122},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-662-45670-5_11},
  urldate = {2015-11-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PQ2UDWPZ/chp%3A10.1007%2F978-3-662-45670-5_11.pdf}
}

@inproceedings{li_towards_2009,
  title = {Towards a Better Understanding of Group Forking Dynamics in Virtual Contexts},
  booktitle = {Proceedings of the {{ACM}} 2009 International Conference on {{Supporting}} Group Work},
  author = {Li, Qing},
  date = {2009},
  pages = {381--382},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1531734},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G88X328C/p381-li.pdf},
  keywords = {Előzetes}
}

@inproceedings{li_when_2016,
  title = {When to {{Release}} in {{Open Source Project}}?},
  booktitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  author = {Li, Zeheng and Huang, LiGuo},
  date = {2016-05},
  pages = {737--739},
  abstract = {As a rapidly growing number of open source projects adopt distributed version control systems, it becomes more crucial and challenging for release managers to oversee the software development, testing, deployment, and support during the software development life cycle. Manual monitoring and control of the lengthy commit history has been extremely tedious and effort consuming. This paper proposes an automated approach based on chronological commit logs to recommend release candidates for release managers by casting release tagging into a structured learning problem. It predicts whether a commit can be identified as a potential release point leveraging Conditional Random Fields (CRFs) model fueled by automatic feature extraction. Experiments on two open source datasets demonstrate promising results.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering Companion}} ({{ICSE}}-{{C}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z8YTBUXP/Li and Huang - 2016 - When to Release in Open Source Project.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FI7FKMCN/7883389.html},
  keywords = {automatic feature extraction,chronological commit logs,conditional random fields,Conferences,CRF model,CRFs,data handling,distributed version control systems,feature extraction,History,machine learning,monitoring,open source datasets,open source projects,Rails,release tagging,Software,software development life cycle,software libraries,structured learning problem,tagging,Tagging,Testing,Training}
}

@book{liang_guide_2005,
  title = {Guide to Open Content Licenses v1.2},
  author = {Liang, Lawrence},
  date = {2005},
  publisher = {{Piet Zwart Institute, Institute for Postgraduate Studies and Research, Willem de Kooning Academy}},
  location = {{Rotterdam}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3EPJ9897/p254-bhattacharya.pdf},
  isbn = {978-90-72855-16-9},
  keywords = {Copyright and electronic data processing,Copyright licenses,license,nyílt forrás,Open access publishing},
  pagetotal = {109}
}

@inproceedings{liao_user_2018,
  title = {User Personalized Label Set Extraction Algorithm Based on {{LDA}} and Collaborative Filtering in Open Source Software Community},
  booktitle = {2018 {{International Conference}} on {{Computer}}, {{Information}} and {{Telecommunication Systems}} ({{CITS}})},
  author = {Liao, Zhifang and Song, Tianhui and Wang, Yan and Fan, Xiaoping and Zhang, Yan},
  date = {2018-07},
  pages = {1--5},
  doi = {10.1109/CITS.2018.8440167},
  abstract = {As an open source project hosting platform, Github builds user-project heterogeneous networks with multiple user behaviors as a bridge. Users, as the core element in Github, guarantee the activity of the whole system. However, many new users have faced the problem that they don't know which repository suits them in a short period. This paper proposes an effective user personalized label extraction model based on LDA and collaborative filtering. This algorithm combines the familiarity of the user with the similarity of the user to obtain the user's personalized label set and applies the label set to the match the recommended scenario. The experiment shows that the algorithm has good recommendation effect and can alleviate the cold start problem of new users to a certain extent.},
  eventtitle = {2018 {{International Conference}} on {{Computer}}, {{Information}} and {{Telecommunication Systems}} ({{CITS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KVAYTKX7/Liao et al. - 2018 - User personalized label set extraction algorithm b.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RNLBTFQV/8440167.html},
  keywords = {Collaboration,collaborative filtering,core element,feature extraction,Filtering,Filtering algorithms,Github,LDA,Mining software repositories,multiple user behaviors,open source project hosting platform,Open source software,open source software community,Prediction algorithms,public domain software,recommended scenario,recommender systems,Software algorithms,Software engineering,User personalized label set,user personalized label set extraction algorithm,user-project heterogeneous networks}
}

@misc{lifton_identity_2017,
  title = {Identity: The Killer App of Crowdfunded Open Hardware},
  shorttitle = {Identity},
  author = {Lifton, Joshua},
  date = {2017-06-13},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3094602},
  urldate = {2020-04-22},
  abstract = {In the next 20 years, the notion of a secure, verifiable identity will drive the adoption of crowdfunded open hardware.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2D8LGV2C/Lifton - 2017 - Identity the killer app of crowdfunded open hardw.pdf}
}

@inproceedings{lin_crowdsourced_2018,
  title = {Crowdsourced {{Software Development}} and {{Maintenance}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  author = {Lin, Bin},
  date = {2018-05},
  pages = {492--495},
  issn = {2574-1934},
  abstract = {As modern software systems are becoming increasingly complex, developers often need to rely on online sources to address problems encountered during software development and maintenance. These resources provide developers with access to peers' expertise, covering knowledge of different software lifecycle phases, including design, implementation, and maintenance. However, exploiting such knowledge and converting it into actionable items is far from trivial, due to the vastness of the information available online as well as to its unstructured nature. In this research, we aim at (partially) crowdsourcing the software design, implementation and maintenance process by exploiting the knowledge embedded in various sources available on the Web (e.g., Stack Overflow discussions, presentations on SlideShare, open source code, etc.). For example, we want to support software design decisions (e.g., whether to use a specific library for the implementation of a feature) by performing opinion mining on the vast amount of information available on the Web, and we want to recommend refactoring operations by learning from the code written in open source systems. The final goal is to improve developers' productivity and code quality.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/866KMADS/Lin - 2018 - Crowdsourced Software Development and Maintenance.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QCQC5GTV/8449635.html},
  keywords = {crowdsourced software development,crowdsourced software maintenance,crowdsourcing,Crowdsourcing,data mining,Data mining,information retrieval,Internet,Libraries,Maintenance engineering,maintenance process,open source code,open source systems,opinion mining,public domain software,Software,software design decisions,software development,Software engineering,software lifecycle phases,software maintenance,software quality,software systems,Stack Overflow discussions,Tools,Web sites}
}

@inproceedings{lin_developer_2017,
  title = {Developer Turnover in Global, Industrial Open Source Projects: Insights from Applying Survival Analysis},
  shorttitle = {Developer Turnover in Global, Industrial Open Source Projects},
  booktitle = {Proceedings of the 12th {{International Conference}} on {{Global Software Engineering}}},
  author = {Lin, Bin and Robles, Gregorio and Serebrenik, Alexander},
  date = {2017-05-20},
  pages = {66--75},
  publisher = {{IEEE Press}},
  location = {{Buenos Aires, Argentina}},
  doi = {10.1109/ICGSE.2017.11},
  url = {https://doi.org/10.1109/ICGSE.2017.11},
  urldate = {2020-04-22},
  abstract = {Large open source software projects often have a globally distributed development team. Studies have shown developer turnover has a significant impact on the project success. Frequent developer turnover may lead to loss of productivity due to lacking relevant knowledge and spending extra time learning how projects work. Thus, lots of attention has been paid to which factors are related to developer retention; however, few of them focus on the impact of activities of individual developers. In this paper, we study five open source projects from different organizations and examine whether developer turnover is affected by when they start contributing and what types of contributions they are making. Our study reveals that developers have higher chances to survive in software projects when they 1) start contributing to the project earlier; 2) mainly modify instead of creating files; 3) mainly code instead of dealing with documentations. Our results also shed lights on the potential approaches to improving developer retention.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZUKWRAKC/Lin et al. - 2017 - Developer turnover in global, industrial open sour.pdf},
  isbn = {978-1-5386-1587-4},
  series = {{{ICGSE}} '17}
}

@article{lin_impact_2008,
  title = {Impact of User Skills and Network Effects on the Competition between Open Source and Proprietary Software},
  author = {Lin, Lihui},
  date = {2008-03},
  journaltitle = {Electronic Commerce Research and Applications},
  volume = {7},
  pages = {68--81},
  issn = {15674223},
  doi = {10.1016/j.elerap.2007.01.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1567422307000051},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/59K6F64C/1-s2.0-S1567422307000051-main.pdf},
  keywords = {adoption,nyílt forrás},
  langid = {english},
  number = {1}
}

@article{linaker_community_2019,
  title = {A {{Community Strategy Framework}} – {{How}} to Obtain Influence on Requirements in Meritocratic Open Source Software Communities?},
  author = {Linåker, J. and Regnell, B. and Damian, D.},
  date = {2019-08-01},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {112},
  pages = {102--114},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2019.04.010},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584919300928},
  urldate = {2020-04-22},
  abstract = {Context: In the Requirements Engineering (RE) process of an Open Source Software (OSS) community, an involved firm is a stakeholder among many. Conflicting agendas may create miss-alignment with the firm’s internal requirements strategy. In communities with meritocratic governance or with aspects thereof, a firm has the opportunity to affect the RE process in line with their own agenda by gaining influence through active and symbiotic engagements. Objective: The focus of this study has been to identify what aspects that firms should consider when they assess their need of influencing the RE process in an OSS community, as well as what engagement practices that should be considered in order to gain this influence. Method: Using a design science approach, 21 interviews with 18 industry professionals from 12 different software-intensive firms were conducted to explore, design and validate an artifact for the problem context. Results: A Community Strategy Framework (CSF) is presented to help firms create community strategies that describe if and why they need influence on the RE process in a specific (meritocratic) OSS community, and how the firm could gain it. The framework consists of aspects and engagement practices. The aspects help determine how important an OSS project and its community is from business and technical perspectives. A community perspective is used when considering the feasibility and potential in gaining influence. The engagement practices are intended as a tool-box for how a firm can engage with a community in order to build influence needed. Conclusion: It is concluded from interview-based validation that the proposed CSF may provide support for firms in creating and tailoring community strategies and help them to focus resources on communities that matter and gain the influence needed on their respective RE processes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E36G7M2Z/Linåker et al. - 2019 - A Community Strategy Framework – How to obtain inf.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NKE5ZQHZ/S0950584919300928.html},
  keywords = {Community strategy,Open innovation,Open source software,Requirements engineering,Software ecosystem,Software product management},
  langid = {english}
}

@article{linaker_motivating_2018,
  title = {Motivating the Contributions: {{An Open Innovation}} Perspective on What to Share as {{Open Source Software}}},
  shorttitle = {Motivating the Contributions},
  author = {Linåker, J. and Munir, H. and Wnuk, K. and Mols, C. E.},
  date = {2018-01-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {135},
  pages = {17--36},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2017.09.032},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121217302169},
  urldate = {2020-04-22},
  abstract = {Open Source Software (OSS) ecosystems have reshaped the ways how software-intensive firms develop products and deliver value to customers. However, firms still need support for strategic product planning in terms of what to develop internally and what to share as OSS. Existing models accurately capture commoditization in software business, but lack operational support to decide what contribution strategy to employ in terms of what and when to contribute. This study proposes a Contribution Acceptance Process (CAP) model from which firms can adopt contribution strategies that align with product strategies and planning. In a design science influenced case study executed at Sony Mobile, the CAP model was iteratively developed in close collaboration with the firm’s practitioners. The CAP model helps classify artifacts according to business impact and control complexity so firms may estimate and plan whether an artifact should be contributed or not. Further, an information meta-model is proposed that helps operationalize the CAP model at the organization. The CAP model provides an operational OI perspective on what firms involved in OSS ecosystems should share, by helping them motivate contributions through the creation of contribution strategies. The goal is to help maximize return on investment and sustain needed influence in OSS ecosystems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KMKNRBLL/Linåker et al. - 2018 - Motivating the contributions An Open Innovation p.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H8G2F86A/S0164121217302169.html},
  keywords = {Contribution strategy,Open innovation,Open Source Software,Product planning,Product strategy,Software ecosystem},
  langid = {english}
}

@incollection{lindman_floss-induced_2010,
  title = {{{FLOSS}}-Induced Changes in the Software Business: Insights from the Pioneers},
  shorttitle = {{{FLOSS}}-Induced Changes in the Software Business},
  booktitle = {Software {{Business}}},
  author = {Lindman, Juho and Rajala, Risto and Rossi, Matti},
  date = {2010},
  pages = {199--204},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13633-7_20},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QZC5QBXU/chp%3A10.1007%2F978-3-642-13633-7_20.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{lindman_open_2011,
  title = {Open {{Source}} and {{Open Data}}: {{Business Perspectives}} from the {{Frontline}}},
  shorttitle = {Open {{Source}} and {{Open Data}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Lindman, Juho and Tammisto, Yulia},
  date = {2011},
  pages = {330--333},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_27},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9N8XT6R8/chp%3A10.1007%2F978-3-642-24418-6_27.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{lindman_support_2018,
  title = {Support Mechanisms Provided by {{FLOSS}} Foundations and Other Entities},
  author = {Lindman, Juho and Hammouda, Imed},
  date = {2018-12-01},
  journaltitle = {Journal of Internet Services and Applications},
  shortjournal = {J Internet Serv Appl},
  volume = {9},
  pages = {8},
  issn = {1867-4828, 1869-0238},
  doi = {10.1186/s13174-018-0079-2},
  url = {https://link.springer.com/article/10.1186/s13174-018-0079-2},
  urldate = {2018-08-15},
  abstract = {Foundations function as a vital institutional support infrastructure for many of the most successful open-source projects, but the different roles played by these support entities are understudied in Free/Libre and Open Source Software (FLOSS) research. Drawing on Open Hub (formerly known as Ohloh) data, this paper empirically investigates how these entities support projects and interact with other projects. This study was conducted using the Theoretical Saturation Grounded Theory approach given the large volume of data on hand. The findings are synthesized as a taxonomy of support entities, a categorization of support mechanisms and a set of dynamics of the interactions between different FLOSS support entities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NANE8C6W/Lindman and Hammouda - 2018 - Support mechanisms provided by FLOSS foundations a.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TSQX7YRT/s13174-018-0079-2.html},
  langid = {english},
  number = {1}
}

@inproceedings{linh_risk_2019,
  title = {Risk {{Management}} in {{Projects Based}} on {{Open}}-{{Source Software}}},
  booktitle = {Proceedings of the 2019 8th {{International Conference}} on {{Software}} and {{Computer Applications}}},
  author = {Linh, Nguyen Duc and Hung, Phan Duy and Diep, Vu Thu and Tung, Ta Duc},
  date = {2019-02-19},
  pages = {178--183},
  publisher = {{Association for Computing Machinery}},
  location = {{Penang, Malaysia}},
  doi = {10.1145/3316615.3316648},
  url = {https://doi.org/10.1145/3316615.3316648},
  urldate = {2020-04-22},
  abstract = {Reusing software components from third-party vendors is one of the key technologies to gain shorter time-to-market and better quality of the software system. These components, also known as OTS (Off-the-Shelf) components, come in two types: COTS (Commercial Off-The-Shelf) and OSS (Open-Source Software). To utilize OSS components effectively, it is necessary to figure out how the development processes and methods to be adapted. Most current studies are either theoretical proposals without empirical assessment or case studies in similar project contexts. It is therefore necessary to conduct more empirical studies on how process improvement and risk management can be performed and what are the results in various project contexts.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AJUGT7VZ/Linh et al. - 2019 - Risk Management in Projects Based on Open-Source S.pdf},
  isbn = {978-1-4503-6573-4},
  keywords = {Off-the-Shelf,Open-source,Risk management},
  series = {{{ICSCA}} '19}
}

@inproceedings{link_value_2017,
  title = {The {{Value}} of {{Engaging}} with {{Open Source Communities}}},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration Companion}}},
  author = {Link, Georg J.P.},
  date = {2017-08-23},
  pages = {1--5},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3126673.3126679},
  url = {https://doi.org/10.1145/3126673.3126679},
  urldate = {2020-04-22},
  abstract = {Organizational engagement with open source communities has become increasingly common. Open source is becoming a widely accepted and utilized form of innovation and product development. The fact that organizations extend their development efforts to open source communities not only demonstrates that open source meets the needs of organizations but also that it is perceived as the best solution among alternatives. In this research, I take a value perspective for understanding how organizations evaluate their engagement with open source communities. I build on signaling theory to understand how organizations perceive open source communities and make value judgments about their engagement. This research contributes to the growing evidence of how open source integrates with business strategy. Open source office managers in organizations can use the results of this research to better articulate open source engagement and open source communities benefit from the results by learning how to best attract organizational members and maintain valuable engagements with them.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WV67PS3P/Link - 2017 - The Value of Engaging with Open Source Communities.pdf},
  isbn = {978-1-4503-5417-2},
  keywords = {Open Source,Organizational-communal engagement,Signaling Theory,Value},
  series = {{{OpenSym}} '17}
}

@online{linux_foundation_core_2014,
  title = {Core {{Infrastructure Initiative}}},
  author = {{Linux Foundation}},
  date = {2014},
  url = {http://www.linuxfoundation.org/programs/core-infrastructure-initiative},
  urldate = {2014-06-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NBM3QW98/kimenet.pdf},
  keywords = {linux,open source,security testing}
}

@inproceedings{lisowska_masson_usability_2017,
  title = {A {{Usability Refactoring Process}} for {{Large}}-{{Scale Open Source Projects}}: {{The ILIAS Case Study}}},
  shorttitle = {A {{Usability Refactoring Process}} for {{Large}}-{{Scale Open Source Projects}}},
  booktitle = {Proceedings of the 2017 {{CHI Conference Extended Abstracts}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Lisowska Masson, Agnes and Amstutz, Timon and Lalanne, Denis},
  date = {2017-05-06},
  pages = {1135--1143},
  publisher = {{Association for Computing Machinery}},
  location = {{Denver, Colorado, USA}},
  doi = {10.1145/3027063.3053345},
  url = {https://doi.org/10.1145/3027063.3053345},
  urldate = {2020-04-22},
  abstract = {This case study presents efforts to introduce and encourage consistent application of usability and user interface design principles in an existing large-scale open source project. We present the project in question, the ILIAS learning management system, the challenges involved in incorporating usability into an open source project, the novel solution we proposed, a set of tools called the Kitchen Sink, and the steps that were needed to have the solution accepted and used by the ILIAS community. We conclude with a discussion of the lessons learned and an assessment of the overall success of our efforts.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4XPWF4IF/Lisowska Masson et al. - 2017 - A Usability Refactoring Process for Large-Scale Op.pdf},
  isbn = {978-1-4503-4656-6},
  keywords = {learning management systems,open source communities,open source software,usability},
  series = {{{CHI EA}} '17}
}

@inproceedings{liu_gplag_2006,
  title = {{{GPLAG}}: Detection of Software Plagiarism by Program Dependence Graph Analysis},
  shorttitle = {{{GPLAG}}},
  booktitle = {Proceedings of the 12th {{ACM SIGKDD}} International Conference on {{Knowledge}} Discovery and Data Mining},
  author = {Liu, Chao and Chen, Chen and Han, Jiawei and Yu, Philip S.},
  date = {2006},
  pages = {872--881},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1150522},
  urldate = {2015-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6WF33EV3/kdd06liu.pdf},
  keywords = {Code Obfuscation,source analysis}
}

@incollection{liu_open_2011,
  title = {Open {{Source}} versus {{Proprietary Software}}: {{A Case}} of {{Fully Covered Market}}},
  shorttitle = {Open {{Source}} versus {{Proprietary Software}}},
  booktitle = {Exploring the {{Grand Challenges}} for {{Next Generation E}}-{{Business}}},
  author = {Liu, Yipeng and Cheng, Hsing K.},
  date = {2011},
  pages = {279--288},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-17449-0_28},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8CKT2X9J/Open Source versus Proprietary Software_ A Case of Fully Covered Market.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NXGS69PN/chp%3A10.1007%2F978-3-642-17449-0_28.pdf}
}

@inproceedings{liu_outsourcing_2008,
  title = {On Outsourcing and Offshoring in Community Source},
  booktitle = {Advanced {{Management}} of {{Information}} for {{Globalized Enterprises}}, 2008. {{AMIGE}} 2008. {{IEEE Symposium}} On},
  author = {Liu, Manlu and Zhao, J. Leon},
  date = {2008},
  pages = {1--3},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4721524},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DUWTBJQG/04721524.pdf},
  keywords = {community,development,nyílt forrás}
}

@article{liu_scale_2019,
  title = {Scale {{Invariant Fully Convolutional Network}}: {{Detecting Hands Efficiently}}},
  shorttitle = {Scale {{Invariant Fully Convolutional Network}}},
  author = {Liu, Dan and Du, Dawei and Zhang, Libo and Luo, Tiejian and Wu, Yanjun and Huang, Feiyue and Lyu, Siwei},
  date = {2019-07-17},
  journaltitle = {Proceedings of the AAAI Conference on Artificial Intelligence},
  shortjournal = {AAAI},
  volume = {33},
  pages = {4344--4351},
  issn = {2374-3468, 2159-5399},
  doi = {10.1609/aaai.v33i01.33014344},
  url = {http://www.aaai.org/ojs/index.php/AAAI/article/view/4344},
  urldate = {2020-06-08},
  abstract = {Existing hand detection methods usually follow the pipeline of multiple stages with high computation cost, i.e., feature extraction, region proposal, bounding box regression, and additional layers for rotated region detection. In this paper, we propose a new Scale Invariant Fully Convolutional Network (SIFCN) trained in an end-to-end fashion to detect hands efficiently. Specifically, we merge the feature maps from high to low layers in an iterative way, which handles different scales of hands better with less time overhead comparing to concatenating them simply. Moreover, we develop the Complementary Weighted Fusion (CWF) block to make full use of the distinctive features among multiple layers to achieve scale invariance. To deal with rotated hand detection, we present the rotation map to get rid of complex rotation and derotation layers. Besides, we design the multi-scale loss scheme to accelerate the training process significantly by adding supervision to the intermediate layers of the network. Compared with the state-of-the-art methods, our algorithm shows comparable accuracy and runs a 4.23 times faster speed on the VIVA dataset and achieves better average precision on Oxford hand detection dataset at a speed of 62.5 fps.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CUQIGA6Y/Liu et al. - 2019 - Scale Invariant Fully Convolutional Network Detec.pdf},
  langid = {english}
}

@incollection{llanos_differences_2012,
  title = {Differences between Traditional and Open Source Development Activities},
  booktitle = {Product-{{Focused Software Process Improvement}}},
  author = {Llanos, John Wilmar Castro and Castillo, Silvia Teresita Acuña},
  date = {2012},
  pages = {131--144},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-31063-8_11},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P442MK8A/chp%3A10.1007%2F978-3-642-31063-8_11.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PUVK72S5/chp%3A10.1007%2F978-3-642-31063-8_11.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z38QFP8V/Differences between Traditional and Open Source Development Activities.pdf},
  keywords = {development,nyílt forrás,open source,procedures,requirements,systematic mapping}
}

@article{llerena_adapting_2019,
  title = {Adapting Usability Techniques for Application in Open Source {{Software}}: {{A}} Multiple Case Study},
  shorttitle = {Adapting Usability Techniques for Application in Open Source {{Software}}},
  author = {Llerena, Lucrecia and Rodriguez, Nancy and Castro, John W. and Acuña, Silvia T.},
  date = {2019-03-01},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {107},
  pages = {48--64},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2018.10.011},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584918302234},
  urldate = {2020-04-22},
  abstract = {Context As a result of the growth of non-developer users of OSS applications, usability has over the last ten years begun to attract the interest of the open source software (OSS) community. The OSS community has some special characteristics (such as worldwide geographical distribution of both users and developers and missing resources) which are an obstacle to the direct adoption of many usability techniques as specified in the human-computer interaction (HCI) field. Objective The aim of this research is to adapt and evaluate the feasibility of applying four usability techniques: user profiles, personas, direct observation and post-test information to four OSS projects from the viewpoint of the development team. Method The applied research method was a multiple case study of the following OSS projects: Quite Universal Circuit Simulator, PSeInt, FreeMind and OpenOffice Writer. Results We formalized the application procedure of each of the adapted usability techniques. We found that either there were no procedures for adopting usability techniques in OSS or they were not fully systematized. Additionally, we identified the adverse conditions that are an obstacle to their adoption in OSS and propose the special adaptations required to overcome the obstacles. To avoid some of the adverse conditions, we created web artefacts (online survey, wiki and forum) that are very popular in the OSS field. Conclusion It is necessary to adapt usability techniques for application in OSS projects considering their idiosyncrasy. Additionally, we found that there are obstacles (for example, number of participant users, biased information provided by developers) to the application of the techniques. Despite these obstacles, it is feasible to apply the adapted techniques in OSS projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/659NY55M/Llerena et al. - 2019 - Adapting usability techniques for application in o.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N3SK2VDE/S0950584918302234.html},
  keywords = {Direct observation,Open source software,Personas,Post-test information,Usability techniques,User profiles},
  langid = {english}
}

@incollection{lonchamp_open_2005,
  title = {Open Source Software Development Process Modeling},
  booktitle = {Software {{Process Modeling}}},
  author = {Lonchamp, Jacques},
  date = {2005},
  pages = {29--64},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-24262-7_2},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9BXUCMGK/chp%3A10.1007%2F0-387-24262-7_2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D6Q9UAAD/chp%3A10.1007%2F0-387-24262-7_2.pdf},
  keywords = {community,development,nyílt forrás,open source}
}

@article{lopez_adoption_2015,
  title = {Adoption of {{OSS}} Components: {{A}} Goal-Oriented Approach},
  shorttitle = {Adoption of {{OSS}} Components},
  author = {López, Lidia and Costal, Dolors and Ayala, Claudia P. and Franch, Xavier and Annosi, Maria Carmela and Glott, Ruediger and Haaland, Kirsten},
  date = {2015-09},
  journaltitle = {Data \& Knowledge Engineering},
  volume = {99},
  pages = {17--38},
  issn = {0169023X},
  doi = {10.1016/j.datak.2015.06.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0169023X15000403},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HQH3EGEJ/1-s2.0-S0169023X15000403-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{lopez_modelling_2014,
  title = {Modelling and Applying {{OSS}} Adoption Strategies},
  booktitle = {Conceptual {{Modeling}}},
  author = {López, Lidia and Costal, Dolors and Ayala, Claudia P. and Franch, Xavier and Glott, Ruediger and Haaland, Kirsten},
  date = {2014},
  pages = {349--362},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-12206-9_29},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DV9NDRNR/chp%3A10.1007%2F978-3-319-12206-9_29.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@book{lopez-tarruella_google_2012,
  title = {Google and the {{Law}}},
  editor = {Lopez-Tarruella, Aurelio},
  date = {2012},
  volume = {22},
  publisher = {{T. M. C. Asser Press}},
  location = {{The Hague, The Netherlands}},
  url = {http://www.springerlink.com/index/10.1007/978-90-6704-846-0},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AFSXREV5/chp%3A10.1007%2F978-90-6704-846-0_9.pdf},
  isbn = {978-90-6704-845-3 978-90-6704-846-0},
  series = {Information {{Technology}} and {{Law Series}}}
}

@incollection{lorenzi_assessing_2008,
  title = {Assessing Innovation in the Software Sector: Proprietary vs. {{FOSS}} Production Mode. {{Preliminary}} Evidence from the {{Italian}} Case},
  shorttitle = {Assessing Innovation in the Software Sector},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Lorenzi, Dario and Rossi, Cristina},
  date = {2008},
  pages = {325--331},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_29},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9QB49MF6/chp%3A10.1007%2F978-0-387-09684-1_29.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{loukas_review_2013,
  title = {A {{Review}} of {{Cyber Threats}} and {{Defence Approaches}} in {{Emergency Management}}},
  author = {Loukas, George and Gan, Diane and Vuong, Tuan},
  date = {2013-05-07},
  journaltitle = {Future Internet},
  volume = {5},
  pages = {205--236},
  issn = {1999-5903},
  doi = {10.3390/fi5020205},
  url = {http://www.mdpi.com/1999-5903/5/2/205/},
  urldate = {2014-03-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N8BJZU22/Review of Cyber Threats and Defence.pdf},
  number = {2}
}

@inproceedings{loyola_population_2014,
  title = {Population {{Dynamics}} in {{Open Source Communities}}: {{An Ecological Approach Applied}} to {{Github}}},
  shorttitle = {Population {{Dynamics}} in {{Open Source Communities}}},
  booktitle = {Proceedings of the 23rd {{International Conference}} on {{World Wide Web}}},
  author = {Loyola, Pablo and Ko, In-Young},
  date = {2014},
  pages = {993--998},
  publisher = {{International World Wide Web Conferences Steering Committee}},
  location = {{Republic and Canton of Geneva, Switzerland}},
  doi = {10.1145/2567948.2578843},
  url = {http://dx.doi.org/10.1145/2567948.2578843},
  urldate = {2015-11-24},
  abstract = {Open Source Software (OSS) has gained high amount of popularity during the last few years. It is becoming used by public and private institutions, even companies release portions of their code to obtain feedback from the community of voluntary developers. As OSS is based on the voluntary contributions of developers, the number of participants represents one of the key elements that impact the quality of the software. In order to understand how the the population of contributors evolve over time, we propose a methodology that adapts Lotka-Volterra-based biological models used for describing host-parasite interactions. Experiments based on data from the Github collaborative platform showed that the proposed approach performs effectively in terms of providing an estimation of the population of developers for each project over time.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/93ND7E9G/Loyola és Ko - 2014 - Population Dynamics in Open Source Communities An.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EQME8KKW/p993-loyola.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JNM2IAAH/p993.pdf},
  isbn = {978-1-4503-2745-9},
  keywords = {biological mutualism,community,development,ecological models,Forrás3,nyílt forrás,open source,open source software development},
  series = {{{WWW}} '14 {{Companion}}}
}

@inproceedings{ludwig_static_2018,
  title = {Static {{Software Metrics}} for {{Reliability}} and {{Maintainability}}},
  booktitle = {2018 {{IEEE}}/{{ACM International Conference}} on {{Technical Debt}} ({{TechDebt}})},
  author = {Ludwig, Jeremy and Xu, Steven and Webber, Frederick},
  date = {2018-05},
  pages = {53--54},
  abstract = {This paper identifies a small, essential set of static software code metrics linked to the software product quality characteristics of reliability and maintainability and to the most commonly identified sources of technical debt. An open-source plug-in is created for the Understand code analysis tool that calculates and visualizes these metrics. The plug-in was developed as a first step in an ongoing project aimed at applying case-based reasoning to the issue of software product quality.},
  eventtitle = {2018 {{IEEE}}/{{ACM International Conference}} on {{Technical Debt}} ({{TechDebt}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/L5JYF9JV/Ludwig et al. - 2018 - Static Software Metrics for Reliability and Mainta.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9JBD35J3/8595100.html},
  keywords = {architecture,case-based reasoning,code analysis tool,commonly identified sources,maintainability,Measurement,metrics,open-source plug-in,Product design,Quality assessment,reliability,Software,Software engineering,software metrics,Software product quality,software product quality characteristics,software quality,Software reliability,static code analysis,static software code metrics,static software metrics,technical debt}
}

@incollection{lundell_how_2012,
  title = {How {{Can Open Standards Be Effectively Implemented}} in {{Open Source}}?},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Lundell, Björn and Abdurahmanovic, Admir and Andersson, Stefan and Bergström, Erik and Feist, Jonas and Gamalielsson, Jonas and Gustavsson, Tomas and Kahlbom, Roger and Papaxanthis, Konstantin},
  date = {2012},
  pages = {383--388},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_39},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/32FI8BS3/How Can Open Standards Be Effectively Implemented in Open Source.pdf}
}

@inproceedings{lundell_influences_2014,
  title = {On Influences between Software Standards and Their Implementations in Open Source Projects: {{Experiences}} from {{RDFa}} and Its Implementation in {{Drupal}}},
  shorttitle = {On Influences between Software Standards and Their Implementations in Open Source Projects},
  author = {Lundell, Björn and Gamalielsson, Jonas and Grahn, Alexander and Feist, Jonas and Gustavsson, Tomas and Strindberg, Henrik},
  date = {2014},
  pages = {1--10},
  publisher = {{ACM Press}},
  doi = {10.1145/2641580.2641587},
  url = {http://dl.acm.org/citation.cfm?doid=2641580.2641587},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MP62F27C/p03.pdf},
  isbn = {978-1-4503-3016-9},
  keywords = {development,nyílt forrás},
  langid = {english}
}

@incollection{lundell_open_2013,
  title = {Open {{Standards}} and {{Open Source}} in {{Swedish Schools}}: {{On Promotion}} of {{Openness}} and {{Transparency}}},
  shorttitle = {Open {{Standards}} and {{Open Source}} in {{Swedish Schools}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Lundell, Björn and Gamalielsson, Jonas},
  date = {2013},
  pages = {207--221},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_15},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2DXNDPTV/chp%3A10.1007%2F978-3-642-38928-3_15.pdf}
}

@article{lundell_practitioner_2011,
  title = {Practitioner Perceptions of {{Open Source}} Software in the Embedded Systems Area},
  author = {Lundell, Björn and Lings, Brian and Syberfeldt, Anna},
  date = {2011-09},
  journaltitle = {Journal of Systems and Software},
  volume = {84},
  pages = {1540--1549},
  issn = {01641212},
  doi = {10.1016/j.jss.2011.03.020},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121211000719},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M7AA23RP/1-s2.0-S0164121211000719-main.pdf},
  keywords = {adoption,nyílt forrás},
  langid = {english},
  number = {9}
}

@incollection{luoma_adoption_2011,
  title = {Adoption of {{Open Source Software}} and {{Software}}-as-a-{{Service Models}} in the {{Telecommunication Industry}}},
  booktitle = {Software {{Business}}},
  author = {Luoma, Eetu and Helander, Nina and Frank, Lauri},
  date = {2011},
  pages = {70--84},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21544-5_7},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/52JWN48V/chp%3A10.1007%2F978-3-642-21544-5_7.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DM739C3G/chp%3A10.1007%2F978-3-642-21544-5_7.pdf},
  keywords = {_SMS_untagged,Empirikus,felmérés,interview,nyílt forrás,open source,Telekommunikáció}
}

@incollection{luoma_scenarios_2011,
  title = {Scenarios on {{Adoption}} of {{Open Source Software}} in the {{Communications Software Industry}}},
  booktitle = {Software {{Business}}},
  author = {Luoma, Eetu and Riepula, Mikko and Frank, Lauri},
  date = {2011},
  pages = {110--124},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21544-5_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DI3HWQKN/chp%3A10.1007%2F978-3-642-21544-5_10.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JHEQHEC3/chp%3A10.1007%2F978-3-642-21544-5_10.pdf},
  keywords = {adoption,nyílt forrás}
}

@inproceedings{luther_why_2010,
  title = {Why {{It Works}} (When {{It Works}}): {{Success Factors}} in {{Online Creative Collaboration}}},
  shorttitle = {Why {{It Works}} (When {{It Works}})},
  booktitle = {Proceedings of the 16th {{ACM International Conference}} on {{Supporting Group Work}}},
  author = {Luther, Kurt and Caine, Kelly and Ziegler, Kevin and Bruckman, Amy},
  date = {2010},
  pages = {1--10},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1880071.1880073},
  url = {http://doi.acm.org/10.1145/1880071.1880073},
  urldate = {2015-11-24},
  abstract = {Online creative collaboration (peer production) has enabled the creation of Wikipedia and open source software (OSS), and is rapidly expanding to encompass new domains, such as video, music, and animation. But what are the underlying principles allowing online creative collaboration to succeed, and how well do they transfer from one domain to another? In this paper, we address these questions by comparing and contrasting online, collaborative animated movies, called collabs, with OSS projects. First, we use qualitative methods to solicit potential success factors from collab participants. Then, we test these predictions by quantitatively analyzing a data set of nearly 900 collabs. Finally, we compare and contrast our results with the literature on OSS development and propose broader theoretical implications. Our findings offer a starting point for a systematic research agenda seeking to unlock the potential of online creative collaboration.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RXN4EHM7/Luther és mtsai. - 2010 - Why It Works (when It Works) Success Factors in O.pdf},
  isbn = {978-1-4503-0387-3},
  keywords = {community,development,leadership,nyílt forrás,online community,online creative collaboration,Open Source,peer production,social computing,success},
  series = {{{GROUP}} '10}
}

@inproceedings{ma_automatic_2018,
  title = {Automatic {{Classification}} of {{Software Artifacts}} in {{Open}}-{{Source Applications}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Ma, Yuzhan and Fakhoury, Sarah and Christensen, Michael and Arnaoudova, Venera and Zogaan, Waleed and Mirakhorli, Mehdi},
  date = {2018-05},
  pages = {414--425},
  issn = {2574-3864},
  abstract = {With the increasing popularity of open-source software development, there is a tremendous growth of software artifacts that provide insight into how people build software. Researchers are always looking for large-scale and representative software artifacts to produce systematic and unbiased validation of novel and existing techniques. For example, in the domain of software requirements traceability, researchers often use software applications with multiple types of artifacts, such as requirements, system elements, verifications, or tasks to develop and evaluate their traceability analysis techniques. However, the manual identification of rich software artifacts is very labor-intensive. In this work, we first conduct a large-scale study to identify which types of software artifacts are produced by a wide variety of open-source projects at different levels of granularity. Then we propose an automated approach based on Machine Learning techniques to identify various types of software artifacts. Through a set of experiments, we report and compare the performance of these algorithms when applied to software artifacts.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4LJVWWF7/Ma et al. - 2018 - Automatic Classification of Software Artifacts in .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BIJZFHFS/8595225.html},
  keywords = {Classification algorithms,formal specification,formal verification,learning (artificial intelligence),machine learning,Machine learning,machine learning techniques,Manuals,Open source software,open-source applications,Open-source software,open-source software development,pattern classification,public domain software,Software algorithms,software artifacts,software artifacts classification,software requirements traceability,systems analysis,Testing}
}

@inproceedings{ma_constructing_2018,
  ids = {ma\_constructing\_2018-1},
  title = {Constructing {{Supply Chains}} in {{Open Source Software}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  author = {Ma, Yuxing},
  date = {2018-05},
  pages = {458--459},
  issn = {2574-1934},
  abstract = {The supply chain is an extremely successful way to cope with the risk posed by distributed decision making in product sourcing and distribution. While open source software has similarly distributed decision making and involves code and information flows similar to those in ordinary supply chains, the actual networks necessary to quantify and communicate risks in software supply chains have not been constructed on large scale. This work proposes to close this gap by measuring dependency, code reuse, and knowledge flow networks in open source software. We have done preliminary work by developing suitable tools and methods that rely on public version control data to measure and comparing these networks for R language and emberjs packages. We propose ways to calculate the three networks for the entirety of public software, evaluate their accuracy, and to provide public infrastructure to build risk assessment and mitigation tools for various individual and organizational participants in open sources software. We hope that this infrastructure will contribute to more predictable experience with OSS and lead to its even wider adoption.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/52X3BMNV/Ma - 2018 - Constructing supply chains in open source software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZIJEAZD2/Ma - 2018 - Constructing Supply Chains in Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UVIJSNFP/8449625.html},
  keywords = {configuration management,decision making,distributed decision making,emberjs packages,Knowledge engineering,knowledge flow,knowledge flow networks,knowledge management,open source,open source software,Open source software,open sources software,ordinary supply chains,organisational aspects,organizational participants,OSS,product sourcing,production engineering computing,Production facilities,project management,public domain software,public infrastructure,public software,public version control data,R language,risk assessment tools,risk management,Risk management,risk mitigation tools,software supply chain,software supply chains,supply chain management,supply chains,Supply chains,Tools}
}

@inproceedings{ma_dynamics_2014,
  title = {Dynamics of Open-Source Software Developer's Commit Behavior: An Empirical Investigation of Subversion},
  shorttitle = {Dynamics of Open-Source Software Developer's Commit Behavior},
  author = {Ma, Yutao and Wu, Yang and Xu, Youwei},
  date = {2014},
  pages = {1171--1173},
  publisher = {{ACM Press}},
  doi = {10.1145/2554850.2555079},
  url = {http://dl.acm.org/citation.cfm?doid=2554850.2555079},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JUVUB7HJ/p1171-ma.pdf},
  isbn = {978-1-4503-2469-4},
  keywords = {development,nyílt forrás,procedures},
  langid = {english}
}

@article{ma_how_2013,
  title = {How Commercial Involvement Affects Open Source Projects: Three Case Studies on Issue Reporting},
  shorttitle = {How Commercial Involvement Affects Open Source Projects},
  author = {Ma, XiuJuan and Zhou, MingHui and Riehle, Dirk},
  date = {2013},
  journaltitle = {Science China Information Sciences},
  volume = {56},
  pages = {1--13},
  url = {http://link.springer.com/article/10.1007/s11432-013-4914-6},
  urldate = {2014-09-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UW7TV29Q/Final_SCIS-2013-0168.pdf},
  keywords = {case study,commercial open source,community,development,open source},
  number = {8}
}

@inproceedings{ma_world_2019,
  ids = {ma\_world\_2019-1},
  title = {World of {{Code}}: {{An Infrastructure}} for {{Mining}} the {{Universe}} of {{Open Source VCS Data}}},
  shorttitle = {World of {{Code}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 16th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Ma, Yuxing and Bogart, Chris and Amreen, Sadika and Zaretzki, Russell and Mockus, Audris},
  date = {2019-05},
  pages = {143--154},
  issn = {2574-3864},
  doi = {10.1109/MSR.2019.00031},
  abstract = {Open source software (OSS) is essential for modern society and, while substantial research has been done on individual (typically central) projects, only a limited understanding of the periphery of the entire OSS ecosystem exists. For example, how are tens of millions of projects in the periphery interconnected through technical dependencies, code sharing, or knowledge flows? To answer such questions we a) create a very large and frequently updated collection of version control data for FLOSS projects named World of Code (WoC) and b) provide basic tools for conducting research that depends on measuring interdependencies among all FLOSS projects. Our current WoC implementation is capable of being updated on a monthly basis and contains over 12B git objects. To evaluate its research potential and to create vignettes for its usage, we employ WoC in conducting several research tasks. In particular, we find that it is capable of supporting trend evaluation, ecosystem measurement, and the determination of package usage. We expect WoC to spur investigation into global properties of OSS development leading to increased resiliency of the entire OSS ecosystem. Our infrastructure facilitates the discovery of key technical dependencies, code flow, and social networks that provide the basis to determine the structure and evolution of the relationships that drive FLOSS activities and innovation.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 16th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TY33MM3I/Ma et al. - 2019 - World of Code An Infrastructure for Mining the Un.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WQNC66L8/Ma et al. - 2019 - World of code an infrastructure for mining the un.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GFGF62VP/8816786.html},
  keywords = {code flow,code sharing,data mining,FLOSS projects,knowledge flows,open source software,open source VCS data,OSS development,OSS ecosystem,public domain software,software ecosystem,software engineering,software mining,software mining; software supply chain; software ecosystem,software supply chain,source code (software),WoC,World of Code}
}

@inproceedings{machado_how_2019,
  title = {How {{Undergraduate Students Perceive}} the {{Relevance}} of {{Open Source Software Literature}}},
  booktitle = {Proceedings of the {{XXXIII Brazilian Symposium}} on {{Software Engineering}}},
  author = {Machado, Michelangelo da R. and Cardoso, Cristiane Naves and Canedo, Edna Dias},
  date = {2019-09-23},
  pages = {12--16},
  publisher = {{Association for Computing Machinery}},
  location = {{Salvador, Brazil}},
  doi = {10.1145/3350768.3351994},
  url = {https://doi.org/10.1145/3350768.3351994},
  urldate = {2020-04-22},
  abstract = {The number of Open Source Software research papers has grown significantly over the last few years. An important open question is related with the investigation of how undergraduate students perceive the relevance of open source software literature. To address this question, we conducted a survey at University of Brasília (UnB) where 500 undergraduate students were invited to rate the relevance of research ideas contained in papers that were published over a period of ten years. This paper attempts to investigate whether the Open Source Software research produces results considered relevant to undergraduate students. This way we can provide feedback from the students, offering a way to produce useful and, consequently, more disseminated works among Open Source practitioners. To answer about the relevance of available work, we have tackled two questions: one about the scope of the studies and another about the quality perceived by them. For the first one, a systematic mapping was conducted, revealing a set of works composed by a great diversity of results. Than, we applied a Survey in which students could evaluate the relevance of these gathered works. The available open source software research works seem to be very diverse and were considered useful for students that contribute to the Open Source Projects. 77.01\% of respondents answered that research conducted in the Open Source Community is relevant and important to the community, as well as to their professional and academic lives.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YEAU6B9P/Machado et al. - 2019 - How Undergraduate Students Perceive the Relevance .pdf},
  isbn = {978-1-4503-7651-8},
  keywords = {Open Source Software,Research Relevance,Systematic Mapping,Undergraduate Students},
  series = {{{SBES}} 2019}
}

@article{mackey_building_2018,
  title = {Building Open Source Security into Agile Application Builds},
  author = {Mackey, Tim},
  date = {2018-04-01},
  journaltitle = {Network Security},
  shortjournal = {Network Security},
  volume = {2018},
  pages = {5--8},
  issn = {1353-4858},
  doi = {10.1016/S1353-4858(18)30032-1},
  url = {http://www.sciencedirect.com/science/article/pii/S1353485818300321},
  urldate = {2018-08-16},
  abstract = {Open source software offers many benefits, not least of which is the way that readily available software components and libraries can speed development. By not having to constantly reinvent the wheel, developers are able to adopt agile development methods that are adaptive, responsive – and fast. But there's also a risk involved. Using open source software offers many benefits and can speed development. But there are risks involved. Changes to applications are being made so quickly and so often that it is difficult to understand and review them for risk. And application development and security practices often appear to be at odds. To employ open source components safely, organisations need visibility into which components they're using. Tim Mackey of Black Duck by Synopsys examines how DevOps teams can utilise automated software composition analysis (SCA).},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SUR45AE7/Mackey - 2018 - Building open source security into agile applicati.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SHIVNF8D/S1353485818300321.html},
  number = {4}
}

@inproceedings{madeyski_continuous_2017,
  title = {Continuous {{Defect Prediction}}: {{The Idea}} and a {{Related Dataset}}},
  shorttitle = {Continuous {{Defect Prediction}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 14th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Madeyski, Lech and Kawalerowicz, Marcin},
  date = {2017-05},
  pages = {515--518},
  doi = {10.1109/MSR.2017.46},
  abstract = {We would like to present the idea of our Continuous Defect Prediction (CDP) research and a related dataset that we created and share. Our dataset is currently a set of more than 11 million data rows, representing files involved in Continuous Integration (CI) builds, that synthesize the results of CI builds with data we mine from software repositories. Our dataset embraces 1265 software projects, 30,022 distinct commit authors and several software process metrics that in earlier research appeared to be useful in software defect prediction. In this particular dataset we use TravisTorrent as the source of CI data. TravisTorrent synthesizes commit level information from the Travis CI server and GitHub open-source projects repositories. We extend this data to a file change level and calculate the software process metrics that may be used, for example, as features to predict risky software changes that could break the build if committed to a repository with CI enabled.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 14th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GCT2SGCR/Madeyski and Kawalerowicz - 2017 - Continuous Defect Prediction The Idea and a Relat.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MX3R3CU8/7962410.html},
  keywords = {CDP,commit level information,continuous defect prediction,continuous integration,Databases,defect prediction,distinct commit authors,GitHub open-source projects repositories,History,integrated software,Measurement,mining software repositories,open science,Predictive models,public domain software,risky software changes,Servers,Software,software defect prediction,software development management,software metrics,software process metrics,software projects,software repositories,software repository,Tools,Travis CI server,TravisTorrent}
}

@book{madhavji_software_2006,
  title = {Software Evolution and Feedback: Theory and Practice},
  shorttitle = {Software Evolution and Feedback},
  editor = {Madhavji, Nazim H. and Fernandez Ramil, Juan Carlos and Perry, Dewayne E.},
  date = {2006},
  publisher = {{John Wiley \& Sons}},
  location = {{Chichester, England ; Hoboken, NJ}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W6PMU6F7/chp%3A10.1007%2F978-3-319-07881-6_26.pdf},
  isbn = {978-0-470-87180-5},
  keywords = {Computer software,Development},
  pagetotal = {575}
}

@inproceedings{maenpaa_-between_2016,
  title = {In-between {{Open}} and {{Closed}} - {{Drawing}} the {{Fine Line}} in {{Hybrid Communities}}},
  booktitle = {Open {{Source Systems}}: {{Integrating Communities}}},
  author = {Mäenpää, Hanna and Kilamo, Terhi and Männistö, Tomi},
  editor = {Crowston, Kevin and Hammouda, Imed and Lundell, Björn and Robles, Gregorio and Gamalielsson, Jonas and Lindman, Juho},
  date = {2016},
  pages = {134--146},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-39225-7_11},
  abstract = {Today, the community driven development model extends into a variety of new, often web based collaborations. Among these are hybrid open source development set ups in which various online tools are used to facilitate cooperation between virtual teams of commercial and voluntary stakeholders. As yet, how these relationships form and evolve is not understood extensively. This article presents a longitudinal case study of a smartphone startup that founded its early product development strategy on reliance on feedback from its customers through a web based question and answer forum. With this, the company managed to extend values typical for open source communities to support development of its proprietary software. Our main findings include that the challenge in similar settings lies in striking the right balance between the open and the proprietary – while overt openness may risk the competitive advantage of a company, leaving too much behind closed boundaries can create unnecessary friction in the relationship.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3C83AMRK/Mäenpää et al. - 2016 - In-between Open and Closed - Drawing the Fine Line.pdf},
  isbn = {978-3-319-39225-7},
  keywords = {Crowdsourcing,Customer community,Open source software},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{maenpaa_many_2017,
  title = {The Many Hats and the Broken Binoculars: {{State}} of the Practice in Developer Community Management},
  shorttitle = {The Many Hats and the Broken Binoculars},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration}}},
  author = {Mäenpää, Hanna and Munezero, Myriam and Fagerholm, Fabian and Mikkonen, Tommi},
  date = {2017-08-23},
  pages = {1--9},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3125433.3125474},
  url = {https://doi.org/10.1145/3125433.3125474},
  urldate = {2020-04-22},
  abstract = {Open Source Software developer communities are susceptible to challenges related to volatility, distributed coordination and the interplay between commercial and ideological interests. Here, community managers play a vital role in growing, shepherding, and coordinating the developers' work. This study investigates the varied tasks that community managers perform to ensure the health and vitality of their communities. We describe the challenges managers face while directing the community and seeking support for their work from the analysis tools provided by state-of-the-art software platforms. Our results describe seven roles that community managers may play, highlighting the versatile and people-centric nature of the community manager's work. Managers experience hardship of connecting their goals, questions and metrics that define a community's health and effects of their actions. Our results voice common concerns among community managers, and can be used to help them structure the management activity and to find a theoretical frame for further research on how health of developer communities could be understood.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DDPEE4I5/Mäenpää et al. - 2017 - The many hats and the broken binoculars State of .pdf},
  isbn = {978-1-4503-5187-4},
  keywords = {Community management,Human factors,Open source},
  series = {{{OpenSym}} '17}
}

@inproceedings{magdaleno_balancing_2010,
  title = {Balancing Collaboration and Discipline in Software Development Processes},
  booktitle = {Proceedings of the 32nd {{ACM}}/{{IEEE International Conference}} on {{Software Engineering}}-{{Volume}} 2},
  author = {Magdaleno, Andréa Magalhães},
  date = {2010},
  pages = {331--332},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1810378},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B5QMS4KC/p331-magdaleno.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{magdaleno_reconciling_2012,
  title = {Reconciling Software Development Models: {{A}} Quasi-Systematic Review},
  shorttitle = {Reconciling Software Development Models},
  author = {Magdaleno, Andréa Magalhães and Werner, Cláudia Maria Lima and de Araujo, Renata Mendes},
  date = {2012-02},
  journaltitle = {Journal of Systems and Software},
  volume = {85},
  pages = {351--369},
  issn = {01641212},
  doi = {10.1016/j.jss.2011.08.028},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121211002287},
  urldate = {2015-11-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9ZS3K969/1-s2.0-S0164121211002287-main.pdf},
  langid = {english},
  number = {2}
}

@incollection{mahajan_technological_2013,
  title = {Technological {{Innovation}} and {{Resource Bricolage}} in {{Firms}}: {{The Role}} of {{Open Source Software}}},
  shorttitle = {Technological {{Innovation}} and {{Resource Bricolage}} in {{Firms}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Mahajan, Aarti and Clarysse, Bart},
  date = {2013},
  pages = {1--17},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_1},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DN4F33X7/chp%3A10.1007%2F978-3-642-38928-3_1.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RKGXSPWQ/chp%3A10.1007%2F978-3-642-38928-3_1.pdf},
  keywords = {adoption,nyílt forrás}
}

@inproceedings{mahboob_securing_2013,
  title = {Securing {{SCADA}} Systems with Open Source Software},
  booktitle = {2013 {{High Capacity Optical Networks}} and {{Emerging}}/{{Enabling Technologies}}},
  author = {Mahboob, Athar and Zubairi, Junaid Ahmed},
  date = {2013-12},
  pages = {193--198},
  issn = {1949-4106},
  doi = {10.1109/HONET.2013.6729785},
  abstract = {Industrial SCADA systems are deployed all across the globe for refineries, water treatment, nuclear power plants, oil fields and process plants. SCADA systems are vulnerable to attacks by hackers which can damage expensive equipment and jeopardize human health and safety in large areas. In this paper, we define SCADA security related issues and discuss the current security tools and techniques. Later, we describe our experiments in configuring SCADA security using open source security software tools available under Linux operating system. A systematic method of securing SCADA systems with such tools is described and the results are discussed.},
  eventtitle = {2013 {{High Capacity Optical Networks}} and {{Emerging}}/{{Enabling Technologies}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z3HSUB77/6729785.html},
  keywords = {computer network security,Correlation,hackers,Honeypot,human health,human safety,Industrial Control System,Industrial SCADA systems,Information security,Linux,Linux operating system,open source security software tools,OSSIM,protocols,Protocols,public domain software,SCADA Security,SCADA security related issues,SCADA systems,Software}
}

@article{maillart_aristotle_2019,
  title = {Aristotle vs. {{Ringelmann}}: {{On}} Superlinear Production in Open Source Software},
  shorttitle = {Aristotle vs. {{Ringelmann}}},
  author = {Maillart, Thomas and Sornette, Didier},
  date = {2019-06-01},
  journaltitle = {Physica A: Statistical Mechanics and its Applications},
  shortjournal = {Physica A: Statistical Mechanics and its Applications},
  volume = {523},
  pages = {964--972},
  issn = {0378-4371},
  doi = {10.1016/j.physa.2019.04.130},
  url = {http://www.sciencedirect.com/science/article/pii/S0378437119304819},
  urldate = {2020-04-22},
  abstract = {Organizations exist because they provide additional production gains, in comparison to horizontal ways of allocating resources, such as markets (Coase, 1937), and the open source movement is deemed to be a new kind of peer-production organization somehow in between hierarchically organized firms and markets (Benkler, 2002). However, to strive as a new kind of organization, open source must provide production gains, which in turn should be measurable. The open source movement is particularly interesting to study for this reason. Here, we confront and discuss two contrasting views, which were reported in the literature recently. On the one hand, Sornette et~al. (2014) uncovered a superlinear production mechanism, which quantifies Aristotle adage: “the whole is more than the sum of its parts”. On the other hand, Scholtes et~al. (2016) found opposite results, and referred to Maximilien Ringelmann, a French agricultural engineer (1861–1931), who discovered the tendency for individual members of a group to become increasingly less productive as the size of their group increases (Ringelmann, 1913). Since Ringelmann, the topic of collective intelligence has interested numbers of researchers in social sciences and social psychology (Woolley et~al., 2010), as well as practitioners in management aiming at improving the performance of their team (Woolley et~al., 2015). In most research and practice case studies, the Ringelmann effect has been found to hold, while, in contrast, the superlinear effect found by Sornette et al. is novel and may challenge common wisdom (Sornette et~al., 2014). Here, we compare these two theories, weigh their strengths and weaknesses, and discuss how they have been tested with empirical data. We find that they may not contradict each other as much as was claimed by Scholtes et~al. (2016).},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4G73GMRC/Maillart and Sornette - 2019 - Aristotle vs. Ringelmann On superlinear productio.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5K76Z4M5/S0378437119304819.html},
  keywords = {Collective intelligence,Critical cascades,Group productivity,Social dynamics,Superlinear productivity},
  langid = {english}
}

@incollection{majchrowski_operational_2008,
  title = {An Operational Approach for Selecting Open Source Components in a Software Development Project},
  booktitle = {Software {{Process Improvement}}},
  author = {Majchrowski, Annick and Deprez, Jean-Christophe},
  date = {2008},
  pages = {176--188},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-85936-9_16},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TTIEJGCS/chp%3A10.1007%2F978-3-540-85936-9_16.pdf},
  keywords = {component reuse,development,open source}
}

@inproceedings{maki-asiala_quality_2006,
  title = {Quality Assurance of Open Source Components: Integrator Point of View},
  shorttitle = {Quality Assurance of Open Source Components},
  booktitle = {Computer {{Software}} and {{Applications Conference}}, 2006. {{COMPSAC}}'06. 30th {{Annual International}}},
  author = {Mäki-Asiala, Pekka and Matinlassi, Mari},
  date = {2006},
  volume = {2},
  pages = {189--194},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4020166},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GQT2TZ42/04020166.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{malhotra_application_2018,
  title = {On the {{Application}} of {{Cross}}-{{Project Validation}} for {{Predicting Maintainability}} of {{Open Source Software}} Using {{Machine Learning Techniques}}},
  booktitle = {2018 7th {{International Conference}} on {{Reliability}}, {{Infocom Technologies}} and {{Optimization}} ({{Trends}} and {{Future Directions}}) ({{ICRITO}})},
  author = {Malhotra, Ruchika and Lata, Kusum},
  date = {2018-08},
  pages = {175--181},
  doi = {10.1109/ICRITO.2018.8748749},
  abstract = {Design and development of models to predict software maintenance effort is an impending research area as these models help to predict maintenance effort of software system at earlier stages of its development. The predictions of these models help in allocation of limited resources in an optimal way in the test and maintenance phases of software development. Although numeral software maintainability prediction models have been successfully developed in the past using machine learning (ML) and statistical techniques but there is always threat to generalizability of result have prevailed, as these models are validated on the same data set on which they are trained. This study endeavors to improve generalizability of the software maintainability prediction by cross-project validation where prediction model developed on one software project is validated against the other project. To meet our objective we have taken three open source projects written in java language.The performance of the models is evaluated using prevalent the performance measures. Based on the statistical tests; it is quite conclusive that cross project validation can be successfully applied to predict software maintenance effort of open source software.},
  eventtitle = {2018 7th {{International Conference}} on {{Reliability}}, {{Infocom Technologies}} and {{Optimization}} ({{Trends}} and {{Future Directions}}) ({{ICRITO}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IZ3IL986/Malhotra and Lata - 2018 - On the Application of Cross-Project Validation for.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XMTUL9Q7/8748749.html},
  keywords = {cross project validation,Cross Project Validation,cross-project validation,Data collection,Data models,generalizability,impending research area,Java,learning (artificial intelligence),machine learning techniques,maintainability prediction,Maintenance Effort,Maintenance engineering,maintenance phases,numeral software maintainability prediction models,Object oriented modeling,open source projects,open source software,prediction model,Predictive models,public domain software,Software,software development,Software Maintainability Prediction,software maintenance,software maintenance effort,software metrics,software project,software system,statistical techniques,Training}
}

@inproceedings{malhotra_defect_2017,
  title = {A Defect Tracking Tool for Open Source Software},
  booktitle = {2017 2nd {{International Conference}} for {{Convergence}} in {{Technology}} ({{I2CT}})},
  author = {Malhotra, Ruchika and Bahl, Laavanye},
  date = {2017-04},
  pages = {901--905},
  doi = {10.1109/I2CT.2017.8226259},
  abstract = {Defect reporting and correction is one of the most crucial part in any phase of software development. This is a very costly activity. A lot of time, effort and resources can be saved if the defects can be predicted beforehand, using a suitable training data set. For this, the generation of defect reports which reports the classes that are defective and computes the required software metrics is required. This process should be fully automated. Various data analysis research techniques and algorithms can be applied on this produced data set and this information can be very helpful for the developers and the organization as a whole for the prediction of bugs for future purposes and for analysis of the quality of the software being produced. The various issues addressed in this paper are (1) selection of suitable projects as input for the tool, (2) a mechanism to trace the whole project code history and identifying the classes present, (3) the criteria for classifying a class as defective, (4) method to generate most accurate software metrics for the classes, (5) combining all the data into a final representable format. The tool is developed using Java, using the top open source repositories hosted on Github to test its working, incorporating SourceMeter tool to produce the software metrics and wrapping all this in a simple interface.},
  eventtitle = {2017 2nd {{International Conference}} for {{Convergence}} in {{Technology}} ({{I2CT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3777KS5A/Malhotra and Bahl - 2017 - A defect tracking tool for open source software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XAQI6DLT/8226259.html},
  keywords = {accurate software metrics,Computer bugs,data analysis,data analysis research techniques,defect prediction,defect reports,defect tracking tool,Github,Java,Libraries,object-oriented metrics,open source software,project code history,public domain software,required software metrics,Software,software development,software engineering,software maintenance,software metrics,Software metrics,software quality,software reliability,SourceMeter tool,Tools,top open source repositories}
}

@inproceedings{malhotra_empirical_2017,
  title = {Empirical Comparison of Machine Learning Algorithms for Bug Prediction in Open Source Software},
  booktitle = {2017 {{International Conference}} on {{Big Data Analytics}} and {{Computational Intelligence}} ({{ICBDAC}})},
  author = {Malhotra, Ruchika and Bahl, Laavanye and Sehgal, Sushant and Priya, Pragati},
  date = {2017-03},
  pages = {40--45},
  doi = {10.1109/ICBDACI.2017.8070806},
  abstract = {Bug tracking and analysis truly remains one of the most active areas of software engineering research. Bug tracking results may be employed by the software practitioners of large software projects effectively. The cost of detecting and correcting the defect becomes exponentially higher as we go from requirement analysis to the maintenance phase, where defects might even lead to loss of lives. Software metrics in conjunction with defect data can serve as basis for developing predictive models. Open source projects which encompass contributions from millions of people provide capacious dataset for testing. There have been diverse machine learning techniques proposed in the literature for analyzing complex relationships and extracting useful information from problems using optimal resources and time. However, more extensive research comparing these techniques is needed to establish superiority of one technique over another. This study aims at comparison of 14 ML techniques for development of effective defect prediction models. The issues addressed are 1) Construction of automated tool in Java to collect OO, inheritance and other metrics and detect bugs in classes extracted from open source repository, 2) Use of relevant performance measures to evaluate performance of predictive models to detect bugs in classes, 3) Statistical tests to compare predictive capability of different machine learning techniques, 4) Validation of defect prediction models. The results of the study show that Single Layer Perceptron is the best technique amongst all the techniques used in this study for development of defect prediction models. The conclusions drawn from this study can be used for practical applications by software practitioners to determine best technique for defect prediction and consequently carry out effective allocation of resources.},
  eventtitle = {2017 {{International Conference}} on {{Big Data Analytics}} and {{Computational Intelligence}} ({{ICBDAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DQKZ8KJ2/Malhotra et al. - 2017 - Empirical comparison of machine learning algorithm.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X338PBLC/8070806.html},
  keywords = {Big Data,bug prediction,Bug prediction,bug tracking results,Computational intelligence,defect data,effective defect prediction models,Handheld computers,inheritance,Java,learning (artificial intelligence),Machine learning,machine learning techniques,Object-oriented metrics,object-oriented programming,open source repository,open source software,Open source software,predictive models,program debugging,public domain software,requirement analysis,single layer perceptron,software engineering research,software metrics,software practitioners,software projects,software quality,Software reliability,software tools,statistical analysis,statistical tests}
}

@thesis{malmsten_evolution_2010,
  title = {Evolution of {{Version Control Systems}}-{{Comparing CENTRALIZED}} against {{DISTRIBUTED Version Control}} Models},
  author = {Malmsten, Carl Fredrik},
  date = {2010},
  institution = {{University of Gothenburg}},
  location = {{Gothenburg, Sweden}},
  url = {http://gupea.ub.gu.se/handle/2077/23474},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AGQZD46Q/gupea_2077_23474_1.pdf},
  type = {Bachelor of Applied Information Technology Thesis}
}

@inproceedings{mamun_correlations_2017,
  title = {Correlations of Software Code Metrics: An Empirical Study},
  shorttitle = {Correlations of Software Code Metrics},
  booktitle = {Proceedings of the 27th {{International Workshop}} on {{Software Measurement}} and 12th {{International Conference}} on {{Software Process}} and {{Product Measurement}}},
  author = {Mamun, Md Abdullah Al and Berger, Christian and Hansson, Jörgen},
  date = {2017-10-25},
  pages = {255--266},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3143434.3143445},
  url = {https://doi.org/10.1145/3143434.3143445},
  urldate = {2020-04-22},
  abstract = {Background: The increasing up-trend of software size brings about challenges related to release planning and maintainability. Foreseeing the growth of software metrics can assist in taking proactive decisions regarding different areas where software metrics play vital roles. For example, source code metrics are used to automatically calculate technical debt related to code quality which may indicate how maintainable a software is. Thus, predicting such metrics can give us an indication of technical debt in the future releases of software. Objective: Estimation or prediction of software metrics can be performed more meaningfully if the relationships between different domains of metrics and relationships between the metrics and different domains are well understood. To understand such relationships, this empirical study has collected 25 metrics classified into four domains from 9572 software revisions of 20 open source projects from 8 well-known companies. Results: We found software size related metrics are most correlated among themselves and with metrics from other domains. Complexity and documentation related metrics are more correlated with size metrics than themselves. Metrics in the duplications domain are observed to be more correlated to themselves on a domain-level. However, a metric to domain level relationship exploration reveals that metrics with most strong correlations are in fact connected to size metrics. The Overall correlation ranking of duplication metrics are least among all domains and metrics. Contribution: Knowledge earned from this research will help to understand inherent relationships between metrics and domains. This knowledge together with metric-level relationships will allow building better predictive models for software code metrics.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/24KJM5QM/Mamun et al. - 2017 - Correlations of software code metrics an empirica.pdf},
  isbn = {978-1-4503-4853-9},
  keywords = {correlation of metrics,software code metrics,software engineering,spearman's rank correlation},
  series = {{{IWSM Mensura}} '17}
}

@incollection{manabe_analyzing_2014,
  title = {Analyzing the {{Relationship}} between the {{License}} of {{Packages}} and {{Their Files}} in {{Free}} and {{Open Source Software}}},
  booktitle = {Open {{Source Software}}: {{Mobile Open Source Technologies}}},
  author = {Manabe, Yuki and German, Daniel M. and Inoue, Katsuro},
  date = {2014},
  pages = {51--60},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-55128-4_6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BXVG3UQP/chp%3A10.1007%2F978-3-642-55128-4_6.pdf}
}

@article{mansfield-devine_open_2017,
  ids = {mansfield-devine\_open\_2017-1},
  title = {Open Source Software: Determining the Real Risk Posed by Vulnerabilities},
  shorttitle = {Open Source Software},
  author = {Mansfield-Devine, Steve},
  date = {2017-01-01},
  journaltitle = {Network Security},
  shortjournal = {Network Security},
  volume = {2017},
  pages = {7--12},
  issn = {1353-4858},
  doi = {10.1016/S1353-4858(17)30005-3},
  url = {http://www.sciencedirect.com/science/article/pii/S1353485817300053},
  urldate = {2018-08-15},
  abstract = {Open source software (OSS) still has a little trouble in shrugging off its ‘alternative’ image and that could be making many organisations vulnerable. The fact is that, far from being the concern only of sandal-wearing digital activists, OSS underpins a high proportion of most corporate software development. And, as Chris Fearon, head of Black Duck Software's Open Source Security Research Group, points out in this interview, if organisations don't take OSS security seriously, they could be making the task of an attacker easier. Open source software (OSS) still has a little trouble in shrugging off its ‘alternative’ image and that could be making many organisations vulnerable. The fact is that OSS underpins a high proportion of much corporate software development. And as Chris Fearon of Black Duck Software's Open Source Security Research Group points out in this interview, if organisations don't take OSS security seriously they could be making the task of an attacker easier.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CD3F7SAD/Mansfield-Devine - 2017 - Open source software determining the real risk po.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZYMWZTRM/Mansfield-Devine - 2017 - Open source software determining the real risk po.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W28Y89G2/S1353485817300053.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XIN5EQKK/S1353485817300053.html},
  number = {1}
}

@article{mansfield-devine_secure_2016,
  title = {The Secure Way to Use Open Source},
  author = {Mansfield-Devine, Steve},
  date = {2016-05-01},
  journaltitle = {Computer Fraud \& Security},
  shortjournal = {Computer Fraud \& Security},
  volume = {2016},
  pages = {15--20},
  issn = {1361-3723},
  doi = {10.1016/S1361-3723(16)30046-X},
  url = {http://www.sciencedirect.com/science/article/pii/S136137231630046X},
  urldate = {2020-04-22},
  abstract = {Open source software long ago shrugged off its ‘fringe’ image and is now a core component in a great many solutions. These include commercial software, operating systems and bespoke code. But while much of the open source codebase has accrued a reputation for reliability and flexibility, there have also been some high-profile and highly dangerous vulnerabilities discovered in the code. In this interview, Patrick Carey, director of product marketing at Black Duck Software, explains how open source software can open the door to major threats – but also what you can do to enable the safe and effective use of the code. Open source software long ago shrugged off its ‘fringe’ image and is now a core component in a great many solutions, including commercial software and operating systems. But while much of the open source codebase has accrued a reputation for reliability and flexibility, there have also been some high-profile and highly dangerous vulnerabilities discovered in the code. In this interview, Patrick Carey of Black Duck Software explains how open source software can open the door to major threats – but also what you can do to enable the safe and effective use of the code.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I9THXG3A/Mansfield-Devine - 2016 - The secure way to use open source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NAGJLC2L/S136137231630046X.html},
  langid = {english},
  number = {5}
}

@inproceedings{manzano_software_2019,
  title = {A {{Software Service Supporting Software Quality Forecasting}}},
  booktitle = {2019 {{IEEE}} 19th {{International Conference}} on {{Software Quality}}, {{Reliability}} and {{Security Companion}} ({{QRS}}-{{C}})},
  author = {Manzano, Martí and Ayala, Claudia and Gómez, Cristina and López Cuesta, Lidia},
  date = {2019-07},
  pages = {130--132},
  doi = {10.1109/QRS-C.2019.00037},
  abstract = {Software repositories such as source control, defect tracking systems and project management tools, are used to help manage the progress of software projects. The exploitation of such data with techniques like forecasting is becoming an increasing need in several domains to support decision-making processes. However, although there exist several statistical tools and languages supporting forecasting, there is a lack of friendly approaches that enable practitioners to exploit the advantages of creating and using such models in their dashboard tools. Therefore, we have developed a modular and flexible forecasting service allowing the interconnection with different kinds of databases/data repositories for creating and exploiting forecasting models based on methods like ARIMA or ETS. The service is open source software, has been developed in Java and R and exposes its functionalities through a REST API. Architecture details are provided, along with functionalities' description and an example of its use for software quality forecasting.},
  eventtitle = {2019 {{IEEE}} 19th {{International Conference}} on {{Software Quality}}, {{Reliability}} and {{Security Companion}} ({{QRS}}-{{C}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HVUQSY9K/Manzano et al. - 2019 - A Software Service Supporting Software Quality For.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W2Y53NZ2/8859440.html},
  keywords = {application program interfaces,Computer architecture,Data models,data visualisation,decision making,decision-making processes,defect tracking systems,Forecasting,forecasting; software service; software quality; software metrics; REST API,Java,modular forecasting service,open source software,Predictive models,public domain software,REST API,software maintenance,software projects,software quality,Software quality,software quality forecasting,software repositories,statistical tools,Tools}
}

@inproceedings{maragatham_open_2018,
  title = {Open {{Source}} Security and Data Segregation Based on {{Subprofiles}}},
  booktitle = {2018 {{International Conference}} on {{Smart Systems}} and {{Inventive Technology}} ({{ICSSIT}})},
  author = {Maragatham, G and Saikarthikeyan and {balaji}, S.N. Aravind and Siddharth, M. and Gokulakrishnan},
  date = {2018-12},
  pages = {184--190},
  doi = {10.1109/ICSSIT.2018.8748659},
  abstract = {In today's world, open source software leverages more advantages to the world and the developer is becoming a state-of-the-art feature for every software that plays a crucial role in the process of technological evolution. Making the code available to the open world not only exposes the existing flaws, but also employs new ways to correct them and improvise it more better than what it is previously. In the following years of technological advancements open source software have proven to be the to-go solutions since it can be easily modified and improvised according to the needs of the organization. In the same road, we need to make open source more outsourced and at the same time, data segregation should be streamlined in an unsophisticated way to understand what people really need out of the software. In the modern days a profile represents an individual user in a pool and when the same user has multiple accounts, it becomes a tedious task to guess what exactly the user wants as a summary. To avoid that we create the idea of creating a set number of sub-profiles for all the existing profiles because the number of users in an open source software using only one account is very limited. By creating the ideology of sub-accounts, we can make the user tracking as a simplistic method and in a segregated manner and in this way it is easy to target ads, sell goodies and make other business based decisions on a particular account and also to make intricate decisions which will provide a considerable impact on the entire data management of the users in an open source environment.},
  eventtitle = {2018 {{International Conference}} on {{Smart Systems}} and {{Inventive Technology}} ({{ICSSIT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U6JSDRX4/Maragatham et al. - 2018 - Open Source security and data segregation based on.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2LJCA2YC/8748659.html},
  keywords = {business based decisions,Companies,Conferences,data management,data segregation,flaws,individual user,multiple accounts,open source environment,open source security,open source software,Open source software,open world,outsourcing,public domain software,security of data,simplistic method,Sociology,subprofiles,Target tracking,technological advancements,technological evolution,user tracking}
}

@incollection{maranzana_collaborative_2012,
  title = {Collaborative Design Tools: A Comparison between Free Software and {{PLM}} Solutions in Engineering Education},
  shorttitle = {Collaborative Design Tools},
  booktitle = {Product {{Lifecycle Management}}. {{Towards Knowledge}}-{{Rich Enterprises}}},
  author = {Maranzana, Nicolas and Segonds, Frédéric and Lesage, Frédéric and Nelson, Julien},
  date = {2012},
  pages = {547--558},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-35758-9_49},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EEZJCXJG/chp%3A10.1007%2F978-3-642-35758-9_49.pdf}
}

@book{mark_stamp_information_2006,
  title = {Information Security: Principles and Practice},
  author = {{Mark Stamp}},
  date = {2006},
  publisher = {{Wiley}},
  location = {{Hoboken, New Jersey}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QBJRDSJI/1_Information Security - Principles & Practice (2006).pdf},
  isbn = {978-0-471-73848-0}
}

@inproceedings{markovtsev_public_2018,
  ids = {markovtsev\_public\_2018-1},
  title = {Public {{Git Archive}}: {{A Big Code Dataset}} for {{All}}},
  shorttitle = {Public {{Git Archive}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Markovtsev, Vadim and Long, Waren},
  date = {2018-05},
  pages = {34--37},
  issn = {2574-3864},
  abstract = {The number of open source software projects has been growing exponentially. The major online software repository host, GitHub, has accumulated tens of millions of publicly available Git version-controlled repositories. Although the research potential enabled by the available open source code is clearly substantial, no significant large-scale open source code datasets exist. In this paper, we present the Public Git Archive - dataset of 182,014 top-bookmarked Git repositories from GitHub. We describe the novel data retrieval pipeline to reproduce it. We also elaborate on the strategy for performing dataset updates and legal issues. The Public Git Archive occupies 3.0 TB on disk and is an order of magnitude larger than the current source code datasets. The dataset is made available through HTTP and provides the source code of the projects, the related metadata, and development history. The data retrieval pipeline employs an optimized worker queue model and an optimized archive format to efficiently store forked Git repositories, reducing the amount of data to download and persist. Public Git Archive aims to open a myriad of new opportunities for "Big Code" research.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9J5FYMRU/Markovtsev and Long - 2018 - Public git archive a big code dataset for all.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q66CJZRL/Markovtsev and Long - 2018 - Public Git Archive A Big Code Dataset for All.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FC2UV8JG/8595173.html},
  keywords = {Big Code dataset,Big Code research,Cloning,configuration management,data mining,dataset updates,development history,forked Git repositories,git,github,GitHub,Indexes,Java,large-scale open source code datasets,Magnetic heads,memory size 3.0 TByte,meta data,online software repository host,open dataset,open source code,open source software projects,optimized archive format,Pipelines,public domain software,Public Git Archive,publicly available Git version-controlled repositories,Software,software engineering,software repositories,source code,source code (software),source code datasets,top-bookmarked Git repositories}
}

@article{markus_governance_2007,
  title = {The Governance of Free/Open Source Software Projects: Monolithic, Multidimensional, or Configurational?},
  shorttitle = {The Governance of Free/Open Source Software Projects},
  author = {Markus, M. Lynne},
  date = {2007-06-26},
  journaltitle = {Journal of Management \& Governance},
  volume = {11},
  pages = {151--163},
  issn = {1385-3457, 1572-963X},
  doi = {10.1007/s10997-007-9021-x},
  url = {http://link.springer.com/10.1007/s10997-007-9021-x},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D7RXEID4/art%3A10.1007%2Fs10997-007-9021-x.pdf},
  langid = {english},
  number = {2}
}

@inproceedings{marquez_actual_2018,
  title = {Actual {{Use}} of {{Architectural Patterns}} in {{Microservices}}-{{Based Open Source Projects}}},
  booktitle = {2018 25th {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  author = {Márquez, Gastón and Astudillo, Hernán},
  date = {2018-12},
  pages = {31--40},
  issn = {2640-0715},
  doi = {10.1109/APSEC.2018.00017},
  abstract = {Microservice-based systems instantiate an architectural style that conceives of systems as sets of modular, customer-centric, independent, and scalable services. These systems express a similar essential structural organization and seems appropriate to design them using architectural patterns because these combine an understanding of the system domain and good practices. Code repository platforms provide the developer community with ideas and examples about microservice systems, but since they are in early adoption, there is still no clear notion of which actual microservice systems incarnate architectural patterns (if any), reducing the use of frameworks and the achievement of quality attributes. This paper extends a previous study on architectural patterns for microservices in academic and industry sources. We explored which architectural patterns for microservices are used in actual microservice-based open source systems, by subjecting thirty well-known open source projects to a comprehensive multi-criteria code and design review. We found that (1) open source projects use only a few architectural patterns broadly; (2) most projects use the same few frameworks; (3) there are very few microservice architectural patterns as such; and (4) what most projects use (what was previously called) are SOA patterns. This study shows that microservice systems builders do use architectural patterns, but only a few of them. It remains to be determined whether additional patterns would be productively used to build microservice systems, or the few ones currently used are the only ones actually necessary.},
  eventtitle = {2018 25th {{Asia}}-{{Pacific Software Engineering Conference}} ({{APSEC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K85NQ7AT/Márquez and Astudillo - 2018 - Actual Use of Architectural Patterns in Microservi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6FRKGZR5/8719492.html},
  keywords = {architectural patterns,Architectural patterns,architectural style,Companies,Computer architecture,Correlation,Framework,Industries,Market research,microservice architectural patterns,microservice systems builders,microservice-based open source systems,microservice-based systems,Microservices,microservices-based open source projects,open source projects,Open source projects,public domain software,quality attributes,Quality attributes,Scalability,service-oriented architecture,Service-oriented architecture,SOA patterns,software quality}
}

@article{marsan_adoption_2012,
  title = {Adoption of Open Source Software in Organizations: {{A}} Socio-Cognitive Perspective},
  shorttitle = {Adoption of Open Source Software in Organizations},
  author = {Marsan, Josianne and Paré, Guy and Beaudry, Anne},
  date = {2012-12},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {21},
  pages = {257--273},
  issn = {09638687},
  doi = {10.1016/j.jsis.2012.05.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0963868712000200},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U829EPDI/1-s2.0-S0963868712000200-main.pdf},
  keywords = {_SMS_untagged,adoption,nyílt forrás,open source,social networks,survey},
  langid = {english},
  number = {4}
}

@article{marsan_antecedents_2013,
  title = {Antecedents of Open Source Software Adoption in Health Care Organizations: {{A}} Qualitative Survey of Experts in {{Canada}}},
  shorttitle = {Antecedents of Open Source Software Adoption in Health Care Organizations},
  author = {Marsan, Josianne and Paré, Guy},
  date = {2013-08},
  journaltitle = {International Journal of Medical Informatics},
  volume = {82},
  pages = {731--741},
  issn = {13865056},
  doi = {10.1016/j.ijmedinf.2013.04.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S138650561300066X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ADWIP42S/1-s2.0-S138650561300066X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {8}
}

@article{marsan_has_2012,
  title = {Has Open Source Software Been Institutionalized in Organizations or Not?},
  author = {Marsan, Josianne and Paré, Guy and Wybo, Michael D.},
  date = {2012-12},
  journaltitle = {Information and Software Technology},
  volume = {54},
  pages = {1308--1316},
  issn = {09505849},
  doi = {10.1016/j.infsof.2012.07.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584912001267},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F5SWXWP6/1-s2.0-S0950584912001267-main.pdf},
  keywords = {adoption,nyílt forrás},
  langid = {english},
  number = {12}
}

@incollection{marshall_use_2010,
  title = {The {{Use}} of {{Open Source Software Licensing}} in {{Academia}}},
  booktitle = {Innovation through {{Knowledge Transfer}}},
  author = {Marshall, Stephen J.},
  date = {2010},
  pages = {179--187},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-14594-0_18},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HDTC4DIX/chp%3A10.1007%2F978-3-642-14594-0_18.pdf}
}

@incollection{martin_forge._2011,
  title = {Forge. Mil: {{A Case Study}} for {{Utilizing Open Source Methodologies Inside}} of {{Government}}},
  shorttitle = {Forge. Mil},
  booktitle = {Open Source Systems: {{Grounding}} Research},
  author = {Martin, Guy and Lippold, Aaron},
  date = {2011},
  pages = {334--337},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_28},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9V6GVZHK/Forge.mil- A Case Study for Utilizing Open Source Methodologies Inside of Government.pdf}
}

@inproceedings{martin_maintenance_2016,
  title = {On the Maintenance Complexity of Makefiles},
  booktitle = {Proceedings of the 7th {{International Workshop}} on {{Emerging Trends}} in {{Software Metrics}}},
  author = {Martin, Douglas H. and Cordy, James R.},
  date = {2016-05-14},
  pages = {50--56},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2897695.2897703},
  url = {https://doi.org/10.1145/2897695.2897703},
  urldate = {2020-04-22},
  abstract = {Build systems, the tools responsible for compiling, testing, and packaging software systems, play a vital role in the software development process. It is therefore important that they be maintained and kept up-to-date, which has been shown to be required for up to 27\% of source code changes. Make, one such build tool, uses a declarative language based on Makefiles to specify the build and thus is not amenable to traditional complexity metrics. Because of this, most research into the complexity of Makefiles has focused on simple measures such as the number of lines, targets, or dependencies. In this paper, we take a different approach and observe that a large component of software maintenance is about understanding. Since the understanding task is dominated by following links and searching for related parts, we propose a new complexity metric based on the number of indirections (i.e. instances of features that require the reader to look somewhere else). We present an empirical study of the indirection complexity of a set of almost 20,000 Makefiles from more than 150 open source projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G4VRU3CI/Martin and Cordy - 2016 - On the maintenance complexity of makefiles.pdf},
  isbn = {978-1-4503-4177-6},
  keywords = {build systems,software maintenance,software metrics},
  series = {{{WETSoM}} '16}
}

@inproceedings{martinez-ortiz_software_2019,
  title = {Software {{Metrics Artifacts Making Web Quality Measurable}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 14th {{International Workshop}} on {{Automation}} of {{Software Test}} ({{AST}})},
  author = {Martinez-Ortiz, Andres-Leonardo and Lizcano, David and Ortega, Miguel},
  date = {2019-05},
  pages = {1--6},
  doi = {10.1109/AST.2019.000-2},
  abstract = {Mining open source repositories introduces an effective approach to put in practice empirical software engineering in a variety of technologies. Kernel development (Linux) first and then Internet (Chromium) and more recently cloud orchestration (Kubernetes) and machine learning (TensorFlow) are fundamental pieces not just for open source ecosystem but also for the industry leading software innovation. Empirical software engineering sustains a better understanding of these projects, reducing even more the barriers for adoption. In this work we focus on empirical quality assessment developing software metrics artifacts to make web components quality measurable. After reviewing the state of the art and main frameworks for software measurement, we will present our proposal for the empirical evaluation of quality metrics for web components, data collection, measurement and prediction, discussing main benefits and some drawback of the selected approach, which will be aimed at future works.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 14th {{International Workshop}} on {{Automation}} of {{Software Test}} ({{AST}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GNFGKCZ2/Martinez-Ortiz et al. - 2019 - Software Metrics Artifacts Making Web Quality Meas.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NB4MQHAS/8822101.html},
  keywords = {cloud computing,data mining,empirical evaluation,empirical quality assessment,fundamental pieces,Industries,industry leading software innovation,kernel development,learning (artificial intelligence),Linux,machine learning,Metrics,mining open source repositories,open source ecosystem,Open-Source,practice empirical software engineering,public domain software,Quality,quality metrics,Security,Software,Software engineering,software measurement,Software measurement,software metrics,software metrics artifacts,software quality,Software-Engineering,Standards,Web,web components quality measurable,web quality}
}

@incollection{martinez-romo_using_2008,
  title = {Using Social Network Analysis Techniques to Study Collaboration between a {{FLOSS}} Community and a Company},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Martinez-Romo, Juan and Robles, Gregorio and Gonzalez-Barahona, Jesus M. and Ortuño-Perez, Miguel},
  date = {2008},
  pages = {171--186},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_14},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A7XUKMDI/chp%3A10.1007%2F978-0-387-09684-1_14.pdf},
  keywords = {community,development,nyílt forrás}
}

@article{martinez-torres_genetic_2012,
  title = {A Genetic Search of Patterns of Behaviour in {{OSS}} Communities},
  author = {Martínez-Torres, M.R.},
  date = {2012-12},
  journaltitle = {Expert Systems with Applications},
  volume = {39},
  pages = {13182--13192},
  issn = {09574174},
  doi = {10.1016/j.eswa.2012.05.083},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0957417412007993},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NWFIU8SR/1-s2.0-S0957417412007993-main.pdf},
  keywords = {_SMS_untagged,community,genetic algorithm,nyílt forrás,open source},
  langid = {english},
  number = {18}
}

@incollection{massacci_after-life_2011,
  title = {After-Life Vulnerabilities: A Study on Firefox Evolution, Its Vulnerabilities, and Fixes},
  shorttitle = {After-Life Vulnerabilities},
  booktitle = {Engineering {{Secure Software}} and {{Systems}}},
  author = {Massacci, Fabio and Neuhaus, Stephan and Nguyen, Viet Hung},
  date = {2011},
  pages = {195--208},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-19125-1_15},
  urldate = {2015-11-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N4B9AW7D/chp%3A10.1007%2F978-3-642-19125-1_15.pdf}
}

@inproceedings{massey_longitudinal_2005,
  title = {Longitudinal {{Analysis}} of {{Long}}-Timescale {{Open Source Repository Data}}},
  booktitle = {Proceedings of the 2005 {{Workshop}} on {{Predictor Models}} in {{Software Engineering}}},
  author = {Massey, Bart},
  date = {2005},
  pages = {1--5},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1082983.1083167},
  url = {http://doi.acm.org/10.1145/1082983.1083167},
  urldate = {2015-11-24},
  abstract = {One of the more unique features of open source software development is the continuity of projects over large time scales and incremental development efforts. For this reason, the open development process provides an interesting environment for investigation of the software development process. The problems of data collection and analysis of two particular long-running repositories, the X Window System and the Nickle Programming Language, are considered here as instructive examples. The use of uniform software tools (CVS/RCS) with open formats and interfaces makes it possible to collect data that provide unique analysis opportunities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NVXX9C6K/Massey - 2005 - Longitudinal Analysis of Long-timescale Open Sourc.pdf},
  isbn = {978-1-59593-125-2},
  keywords = {development,nyílt forrás,Open Source,source repositories},
  series = {{{PROMISE}} '05}
}

@inproceedings{mathur_empirical_2012,
  title = {An {{Empirical Study}} of {{License Violations}} in {{Open Source Projects}}},
  booktitle = {Software {{Engineering Workshop}} ({{SEW}}), 2012 35th {{Annual IEEE}}},
  author = {Mathur, Arunesh and Choudhary, Harshal and Vashist, Priyank and Thies, William and Thilagam, Santhi},
  date = {2012},
  pages = {168--176},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6479814},
  urldate = {2015-06-08},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C5MV5SFJ/sew2012.pdf}
}

@inproceedings{matos_open_2013,
  title = {An Open Source Software Forge for {{European}} Projects},
  booktitle = {Proceedings of the {{Workshop}} on {{Open Source}} and {{Design}} of {{Communication}}},
  author = {Matos, Alfredo and de Leon, Miguel Ponce and Ferreira, Rui and Barraca, João Paulo},
  date = {2013},
  pages = {41--45},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2503857},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VZC3FN6W/p41-matos.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  options = {useprefix=true}
}

@online{matthew_aslett_flossmole_nodate,
  title = {{{FLOSSmole}} Data Confirms Declining {{GPL}} Usage},
  author = {{Matthew Aslett}},
  journaltitle = {451 CAOS Theory},
  url = {http://blogs.the451group.com/opensource/2011/06/13/flossmole-data-confirms-declining-gpl/},
  urldate = {2014-09-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UFHK735M/451 CAOS Theory » FLOSSmole data confirms declining GPL usage — blogs.the451group.pdf}
}

@inproceedings{matyukhina_adversarial_2019,
  title = {Adversarial {{Authorship Attribution}} in {{Open}}-{{Source Projects}}},
  booktitle = {Proceedings of the {{Ninth ACM Conference}} on {{Data}} and {{Application Security}} and {{Privacy}}},
  author = {Matyukhina, Alina and Stakhanova, Natalia and Dalla Preda, Mila and Perley, Celine},
  date = {2019-03-13},
  pages = {291--302},
  publisher = {{Association for Computing Machinery}},
  location = {{Richardson, Texas, USA}},
  doi = {10.1145/3292006.3300032},
  url = {https://doi.org/10.1145/3292006.3300032},
  urldate = {2020-04-22},
  abstract = {Open-source software is open to anyone by design, whether it is a community of developers, hackers or malicious users. Authors of open-source software typically hide their identity through nicknames and avatars. However, they have no protection against authorship attribution techniques that are able to create software author profiles just by analyzing software characteristics. In this paper we present an author imitation attack that allows to deceive current authorship attribution systems and mimic a coding style of a target developer. Withing this context we explore the potential of the existing attribution techniques to be deceived. Our results show that we are able to imitate the coding style of the developers based on the data collected from the popular source code repository, GitHub. To subvert author imitation attack, we propose a novel author obfuscation approach that allows us to hide the coding style of the author. Unlike existing obfuscation tools, this new obfuscation technique uses transformations that preserve code readability. We assess the effectiveness of our attacks on several datasets produced by actual developers from GitHub, and participants of the GoogleCodeJam competition. Throughout our experiments we show that the author hiding can be achieved by making sensible transformations which significantly reduce the likelihood of identifying the author's style to 0\% by current authorship attribution systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HDTEDD2I/Matyukhina et al. - 2019 - Adversarial Authorship Attribution in Open-Source .pdf},
  isbn = {978-1-4503-6099-9},
  keywords = {adversarial,attacks,authorship attribution,imitation,obfuscation,open-source software},
  series = {{{CODASPY}} '19}
}

@incollection{mavengere_e-learning_2013,
  title = {E-{{Learning Using Open Source Software}} in {{African Universities}}},
  booktitle = {Open and {{Social Technologies}} for {{Networked Learning}}},
  author = {Mavengere, Nicholas and Ruohonen, Mikko and Nleya, Paul},
  date = {2013},
  pages = {197--202},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-37285-8_23},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3KTBHQMS/chp%3A10.1007%2F978-3-642-37285-8_23.pdf}
}

@incollection{mavridis_open_2012,
  title = {Open {{Source Migration}} in {{Greek Public Sector}}: {{A Feasibility Study}}},
  shorttitle = {Open {{Source Migration}} in {{Greek Public Sector}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Mavridis, Androklis and Fotakidis, Dimitrios and Stamelos, Ioannis},
  date = {2012},
  pages = {233--243},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_15},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R2CTMPUX/chp%3A10.1007%2F978-3-642-33442-9_15.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{mavridis_valuation_2014,
  title = {Valuation and {{Selection}} of {{OSS}} with {{Real Options}}},
  booktitle = {Advanced {{Information Systems Engineering Workshops}}},
  author = {Mavridis, Androklis},
  date = {2014},
  pages = {44--52},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-07869-4_4},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E8BSQ5BK/chp%3A10.1007%2F978-3-319-07869-4_4.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{mazzei_changing_2015,
  title = {Changing the Programming Paradigm for the Embedded in the {{IoT}} Domain},
  booktitle = {2015 {{IEEE}} 2nd {{World Forum}} on {{Internet}} of {{Things}} ({{WF}}-{{IoT}})},
  author = {Mazzei, D. and Montelisciani, G. and Baldi, G. and Fantoni, G.},
  date = {2015-12},
  pages = {239--244},
  doi = {10.1109/WF-IoT.2015.7389059},
  abstract = {The enormous growth of the IoT with the simultaneous explosion of the interest on prototyping boards pushed the research to rethink also the way to making the embedded world easy accessible to several targets: designers, artists, but also engineer without a strong background in low level programming. In this paper the technical specifications of a comprehensive design suite for IoT prototyping are described and a possible implementation of a software suite for the design of smart objects is presented. The suite represents a design environment where different software tools are integrated in an integrated and user friendly framework.},
  eventtitle = {2015 {{IEEE}} 2nd {{World Forum}} on {{Internet}} of {{Things}} ({{WF}}-{{IoT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PFWNI6HC/Mazzei és mtsai. - 2015 - Changing the programming paradigm for the embedded.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FM6KMC44/7389059.html},
  keywords = {Arduino,Computer science,design,embedded systems,embedded world,Hardware,Human Computer Interaction,Internet of Things,IoT,IoT domain,IoT prototyping,low level programming,Middleware,Mobile communication,programming,programming paradigm,prototyping boards,Python,Real-time systems,Robots,smart objects,software prototyping,software tools,user friendly framework,World Wide Web}
}

@inproceedings{mcdonald_investigating_2019,
  title = {Investigating {{Evolution}} in {{Open Source Software}}},
  booktitle = {Computational {{Science}} and {{Its Applications}} – {{ICCSA}} 2019},
  author = {McDonald, Jordan and Greer, Des},
  editor = {Misra, Sanjay and Gervasi, Osvaldo and Murgante, Beniamino and Stankova, Elena and Korkhov, Vladimir and Torre, Carmelo and Rocha, Ana Maria A.C. and Taniar, David and Apduhan, Bernady O. and Tarantino, Eufemia},
  date = {2019},
  pages = {242--256},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-24308-1_20},
  abstract = {Lehman’s well-known laws of software evolution have existed since the early 1980’s and although they have been nuanced, augmented and discussed many times since then, software and software development practices have changed dramatically since then, not least due to the rise and popularity of open source software (OSS). OSS is written collaboratively with the process and products publically observable, whereas the original laws were derived based on a very different context. The question then arises if Lehman’s laws apply to modern day OSS software. The GitHub repository is the most comprehensive source of OSS projects and is used here to obtain data on how OSS projects have evolved. This work uses one hundred open source projects hosted on GitHub. Metrics are obtained via the provided API, using a purpose-built workbench and several of Lehman’s laws are evaluated using the data available. Coupled with a critique of how judgements can be made from the data available, the study has discovered that the evidence does not support many of the laws. An important proviso with such an approach is the limitation on what data can be extracted and/or inferred from the GitHub API. Nonetheless, there is enough of a challenge made to the laws to warrant further study and a need to revisit some of the laws in the context of open source development.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K7TGC44K/McDonald and Greer - 2019 - Investigating Evolution in Open Source Software.pdf},
  isbn = {978-3-030-24308-1},
  keywords = {Empirical software engineering,Open source software,Repository mining,Software evolution},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{mcgrath_balancing_2006,
  title = {Balancing {{Act}}: {{Community}} and {{Local Requirements}} in an {{Open Source Development Process}}},
  shorttitle = {Balancing {{Act}}},
  booktitle = {Proceedings of the 34th {{Annual ACM SIGUCCS Fall Conference}}: {{Expanding}} the {{Boundaries}}},
  author = {McGrath, Owen G.},
  date = {2006},
  pages = {240--244},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1181216.1181270},
  url = {http://doi.acm.org/10.1145/1181216.1181270},
  urldate = {2015-11-24},
  abstract = {Established best practices in software development tend to assume that a product's intended stakeholders (i.e., users, customers, and clients) are fairly well known and generally accessible. This paper outlines specific issues faced by those who conduct requirements analysis in the context of open source projects in which the user communities are widely distributed. The examples described are drawn from the experience of managing tool development within the Sakai Project [1], a higher education effort to build and share a community source framework for supporting on-line collaboration in academic courses and projects. With a far-flung community of users and developers, this project requires new approaches to eliciting, analyzing, and prioritizing user needs. The issues outlined in this paper are currently being met by a preliminary set of solutions that makes use of web-based project management technologies. These technologies along with some planning and communication strategies help improve the decision-making process involved in deciding whether and how to choose among proposed constraints, use cases, and feature requests.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9848UNZE/McGrath - 2006 - Balancing Act Community and Local Requirements in.pdf},
  isbn = {978-1-59593-438-3},
  keywords = {community,development,higher education,nyílt forrás,Open Source,requirements process,software development},
  series = {{{SIGUCCS}} '06}
}

@inproceedings{mclean_comparing_2012,
  title = {Comparing {{Static Security Analysis Tools Using Open Source Software}}},
  author = {McLean, Ryan K.},
  date = {2012-06},
  pages = {68--74},
  publisher = {{IEEE}},
  doi = {10.1109/SERE-C.2012.16},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6258453},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2BWCM8GD/06258453.pdf},
  isbn = {978-1-4673-2670-4 978-0-7695-4743-5},
  keywords = {development,nyílt forrás,source}
}

@inproceedings{medappa_lessons_2017,
  title = {Lessons on {{Value Creation From}} the {{Open Source Phenomenon}}: {{Understanding}} the {{Impact}} of {{Work Structures}}, {{Contracts}} and {{Digital Platforms}}},
  shorttitle = {Lessons on {{Value Creation From}} the {{Open Source Phenomenon}}},
  booktitle = {Proceedings of the 2017 {{ACM SIGMIS Conference}} on {{Computers}} and {{People Research}}},
  author = {Medappa, Poonacha K.},
  date = {2017-06-21},
  pages = {193--194},
  publisher = {{Association for Computing Machinery}},
  location = {{Bangalore, India}},
  doi = {10.1145/3084381.3084436},
  url = {https://doi.org/10.1145/3084381.3084436},
  urldate = {2020-04-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WBYR2L9F/Medappa - 2017 - Lessons on Value Creation From the Open Source Phe.pdf},
  isbn = {978-1-4503-5037-2},
  keywords = {floss,motivation,open source license,open source software,structures of work,superposition},
  series = {{{SIGMIS}}-{{CPR}} '17}
}

@inproceedings{medeiros_dekant_2016,
  title = {{{DEKANT}}: A Static Analysis Tool That Learns to Detect Web Application Vulnerabilities},
  shorttitle = {{{DEKANT}}},
  booktitle = {Proceedings of the 25th {{International Symposium}} on {{Software Testing}} and {{Analysis}}},
  author = {Medeiros, Ibéria and Neves, Nuno and Correia, Miguel},
  date = {2016-07-18},
  pages = {1--11},
  publisher = {{Association for Computing Machinery}},
  location = {{Saarbrücken, Germany}},
  doi = {10.1145/2931037.2931041},
  url = {https://doi.org/10.1145/2931037.2931041},
  urldate = {2020-04-22},
  abstract = {The state of web security remains troubling as web applications continue to be favorite targets of hackers. Static analysis tools are important mechanisms for programmers to deal with this problem as they search for vulnerabilities automatically in the application source code, allowing programmers to remove them. However, developing these tools requires explicitly coding knowledge about how to discover each kind of vulnerability. This paper presents a new approach in which static analysis tools learn to detect vulnerabilities automatically using machine learning. The approach uses a sequence model to learn to characterize vulnerabilities based on a set of annotated source code slices. This model takes into consideration the order in which the code elements appear and are executed in the slices. The model created can then be used as a static analysis tool to discover and identify vulnerabilities in source code. The approach was implemented in the DEKANT tool and evaluated experimentally with a set of open source PHP applications and WordPress plugins, finding 16 zero-day vulnerabilities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4H2L6UDH/Medeiros et al. - 2016 - DEKANT a static analysis tool that learns to dete.pdf},
  isbn = {978-1-4503-4390-9},
  keywords = {machine learning,sequence models,software security,static analysis,vulnerabilities,web application},
  series = {{{ISSTA}} 2016}
}

@article{meike_security_2009,
  title = {Security in {{Open}} Source {{Web Content}} Management Systems},
  author = {Meike, Michael and Sametinger, Johannes and Wiesauer, Andreas},
  date = {2009},
  journaltitle = {IEEE Security \& Privacy},
  pages = {44--51},
  url = {http://www.computer.org/web/csdl/index/-/csdl/mags/sp/2009/04/msp2009040044.html},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4ZPW387Q/05189561.pdf},
  keywords = {computer security,nyílt forrás},
  number = {4}
}

@online{melanie_chernoff_what_nodate,
  title = {What Is Open Government?},
  author = {{Melanie Chernoff}},
  journaltitle = {Opensource.com},
  url = {https://opensource.com/resources/open-government},
  urldate = {2016-01-02}
}

@incollection{melian_lost_2008,
  title = {Lost and Gained in Translation: {{Adoption}} of Open Source Software Development at {{Hewlett}}-{{Packard}}},
  shorttitle = {Lost and Gained in Translation},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Melian, Catharina and Mähring, Magnus},
  date = {2008},
  pages = {93--104},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9XNHBJFU/chp%3A10.1007%2F978-0-387-09684-1_8.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@book{mell_guide_2005,
  title = {Guide to Malware Incident Prevention and Handling},
  author = {Mell, Peter and Kent, Karen and Nusbaum, Joseph},
  date = {2005},
  publisher = {{US Department of Commerce, Technology Administration, National Institute of Standards and Technology}},
  url = {http://tanyakenapa.staff.ub.ac.id/files/2012/10/TanyaKenapa.staff_.ub_.ac_.id-Guide-to-Malware-Incident-Preventing-and-Handling.pdf},
  urldate = {2013-10-07},
  file = {/alma/home/monk/PHD/Publikációk/Könyvtár/NIST-800-83.pdf}
}

@inproceedings{meloca_understanding_2018,
  title = {Understanding the {{Usage}}, {{Impact}}, and {{Adoption}} of {{Non}}-{{OSI Approved Licenses}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Meloca, Rômulo and Pinto, Gustavo and Baiser, Leonardo and Mattos, Marco and Polato, Ivanilton and Wiese, Igor and German, Daniel M},
  date = {2018-05},
  pages = {270--280},
  issn = {2574-3864},
  abstract = {The software license is one of the most important non-executable pieces of any software system. However, due to its non-technical nature, developers often misuse or misunderstand software licenses. Although previous studies reported problems related to licenses clashes and inconsistencies, in this paper we shed the light on an important but yet overlooked issue: the use of non-approved open-source licenses. Such licenses claim to be open-source, but have not been formally approved by the Open Source Initiative (OSI). When a developer releases a software under a non-approved license, even if the interest is to make it open-source, the original author might not be granting the rights required by those who use the software. To uncover the reasons behind the use of non-approved licenses, we conducted a mix-method study, mining data from 657K open-source projects and their 4,367K versions, and surveying 76 developers that published some of these projects. Although 1,058,554 of the project versions employ at least one non-approved license, non-approved licenses account for 21.51\% of license usage. We also observed that it is not uncommon for developers to change from a non-approved to an approved license. When asked, some developers mentioned that this transition was due to a better understanding of the disadvantages of using an non-approved license. This perspective is particularly important since developers often rely on package managers to easily and quickly get their dependencies working.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G8JGIKJH/Meloca et al. - 2018 - Understanding the Usage, Impact, and Adoption of N.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CH526YT6/8595210.html},
  keywords = {data mining,Data mining,law,Licenses,Metadata,mix-method study,nonapproved open-source licenses,nonOSI approved licenses,Open Source Initiative,Open source software,Open Source Software,Open systems,OSI approved,public domain software,software license,Software License,software packages,Software packages}
}

@inproceedings{mendez_gender_2018,
  title = {Gender in {{Open Source Software}}: {{What}} the {{Tools Tell}}},
  shorttitle = {Gender in {{Open Source Software}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 1st {{International Workshop}} on {{Gender Equality}} in {{Software Engineering}} ({{GE}})},
  author = {Mendez, Christopher and Sarma, Anita and Burnett, Margaret},
  date = {2018-05},
  pages = {21--24},
  abstract = {This position paper considers what studying Open Source Software tools can lend to understanding the topic of Gender Diversity in Open Source Software. More specifically we investigate the GenderMag method, a Gender Inclusive method and how it can help increase gender inclusiveness in the tools that are used by OSS communities.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 1st {{International Workshop}} on {{Gender Equality}} in {{Software Engineering}} ({{GE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8ZGM5ZN2/Mendez et al. - 2018 - Gender in Open Source Software What the Tools Tel.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4M4YY4BQ/8452746.html},
  keywords = {computer science education,gender,gender diversity,gender inclusive method,gender issues,newcomers,open source software,Open source software,open source software tools,Problem-solving,public domain software,software engineering,Software engineering,software tools,Task analysis,Tools,Usability}
}

@article{mendez-duron_allocation_2013,
  title = {Do the Allocation and Quality of Intellectual Assets Affect the Reputation of Open Source Software Projects?},
  author = {Méndez-Durón, Rebeca},
  date = {2013-11},
  journaltitle = {Information \& Management},
  volume = {50},
  pages = {357--368},
  issn = {03787206},
  doi = {10.1016/j.im.2013.05.006},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720613000487},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VEHS3PIF/1-s2.0-S0378720613000487-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {7}
}

@inproceedings{meneely_secure_2009,
  title = {Secure Open Source Collaboration: An Empirical Study of Linus' Law},
  shorttitle = {Secure Open Source Collaboration},
  booktitle = {Proceedings of the 16th {{ACM}} Conference on {{Computer}} and Communications Security},
  author = {Meneely, Andrew and Williams, Laurie},
  date = {2009},
  pages = {453--462},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1653717},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/39NIDPCS/__ccs221-meneely.pdf}
}

@inproceedings{meng_remote_2009,
  title = {Remote {{Attestation}} for {{Custom}}-Built {{Software}}},
  author = {Meng, Ce and He, Yeping and Zhang, Qian},
  date = {2009-04},
  pages = {374--377},
  publisher = {{IEEE}},
  doi = {10.1109/NSWCTC.2009.158},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4908483},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K6AMIRVM/04908483.pdf},
  isbn = {978-0-7695-3610-1 978-1-4244-4223-2},
  keywords = {development,nyílt forrás,source}
}

@inproceedings{mens_ecosystemic_2016,
  title = {An {{Ecosystemic}} and {{Socio}}-{{Technical View}} on {{Software Maintenance}} and {{Evolution}}},
  booktitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Mens, Tom},
  date = {2016-10},
  pages = {1--8},
  doi = {10.1109/ICSME.2016.19},
  abstract = {In this invited paper I focus on the difficulties of maintaining and evolving software systems that are part of a larger ecosystem. While not every software system falls under this category, software ecosystems are becoming ubiquitous due to the omnipresence of open source software. I present several challenges that arise during maintenance and evolution of software ecosystems, and I argue how some of these challenges should be addressed by adopting a socio-technical view and by relying on a multidisciplinary and mixed methods research approach. My arguments are accompanied by an extensive, though unavoidably incomplete, set of references to the state-of-the-art research in this domain.},
  eventtitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4I2TEH56/Mens - 2016 - An Ecosystemic and Socio-Technical View on Softwar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9N56VFRQ/7816449.html},
  keywords = {Business,Collaboration,collaborative software engineering,ecosystemic view,Ecosystems,empirical software engineering,interdisciplinary research,Linux,mixed methods research,mixed methods research approach,open source software,Open source software,public domain software,socio-technical network,socio-technical view,software ecosystem,software ecosystems,software evolution,software maintenance,Software systems}
}

@book{mens_software_2008,
  title = {Software {{Evolution}}},
  author = {Mens, Tom and Demeyer, Serge},
  date = {2008},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-540-76440-3},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7WFPUCKF/chp%3A10.1007%2F978-3-540-76440-3_11.pdf},
  isbn = {978-3-540-76439-7 978-3-540-76440-3},
  keywords = {development,life cycle,nyílt forrás},
  langid = {english}
}

@inproceedings{merilinna_state_2006,
  title = {State of the Art and Practice of Opensource Component Integration},
  booktitle = {Software {{Engineering}} and {{Advanced Applications}}, 2006. {{SEAA}}'06. 32nd {{EUROMICRO Conference}} On},
  author = {Merilinna, Janne and Matinlassi, Mari},
  date = {2006},
  pages = {170--177},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1690138},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7AGHKPIG/01690138.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{meszaros_floss_2014,
  title = {{{FLOSS}} Fejlesztői Közösségek Hatása Az Informatikai Biztonságra},
  booktitle = {A Tudomány Szolgálatában},
  author = {Mészáros, Gergely},
  date = {2014},
  volume = {1},
  pages = {28--35},
  publisher = {{Professzorok az Európai Magyarországért Egyesület}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FQ35GEIA/A tudomány szolgálatában - I. kötet.pdf},
  isbn = {978-963-89915-3-5},
  number = {IX.}
}

@article{meszaros_gergely_nyilt_2013,
  title = {Nyílt Forráskódú Rendszerek Biztonsági Kérdései},
  author = {{Mészáros Gergely}},
  date = {2013},
  journaltitle = {Bolyai szemle},
  volume = {XXII.},
  pages = {63--76},
  issn = {1416-1443},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q5RTT8U2/05.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U3VQWFW2/Mészáros_Gergely-Nyílt_forráskódú_rendszerek_biztonsága_v5.odt},
  number = {1}
}

@inproceedings{meszaros_gergely_nyilt_2013-1,
  title = {Nyílt Forráskód Létjogosultsága a Kormányzati Rendszerekben},
  booktitle = {Tavaszi {{Szél}} 2013 {{Konferenciakötet}}},
  author = {{Mészáros Gergely}},
  date = {2013},
  volume = {II},
  pages = {46--54},
  publisher = {{DOSZ}},
  location = {{Sopron}},
  eventtitle = {Tavaszi {{Szél}} 2013},
  isbn = {978-963-89560-2-6}
}

@incollection{meszaros_gergely_security_2015,
  title = {Security Impacts of Community Based Software Development},
  booktitle = {{{CEE}} E|{{Dem}} and E|{{Gov Days}} 2015},
  author = {{Mészáros Gergely}},
  date = {2015},
  location = {{2015}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KANU545W/Lektorált_CEEE-GOV_MG_Sec.Imp.of.CBSD.pdf},
  isbn = {978-2-85403-308-0},
  langid = {english}
}

@inproceedings{meszaros_gis_2011,
  title = {{{GIS}} Rendszertervezés Nyílt Forráskódú Alapokon},
  booktitle = {{{GISopen}} 2011},
  author = {Mészáros, Gergely},
  date = {2011},
  pages = {55--64},
  location = {{Budapest}},
  abstract = {A nyílt forrású megoldások alkalmazása egyre növekvő szerepet tölt be a kormányzati szektor és az üzleti világ fejlesztéseiben. Nem ritka, hogy komoly hagyományokkal rendelkező „üzleti” vállalkozások, világcégek választják ezt a fajta megoldást programcsomagjaik vagy programkönyvtáraik terjesztésére. Cikkünkben napjaink vezető nyílt forrású GIS fejlesztéseiről szeretnénk áttekintést nyújtani, valamint vázlatosan bemutatjuk, miért és miképpen érdemes ma egy egészében nyílt forráskódú alapokon nyugvó komplett rendszer megvalósításába fogni.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B3QNTX6G/Mészáros - 2011 - GIS rendszertervezés nyílt forráskódú alapokon.pdf},
  keywords = {GIS,nyílt forrás}
}

@incollection{metheny_chapter_2017,
  title = {Chapter 3 - {{A}} Case for Open Source},
  booktitle = {Federal {{Cloud Computing}} ({{Second Edition}})},
  author = {Metheny, Matthew},
  editor = {Metheny, Matthew},
  date = {2017-01-01},
  pages = {59--77},
  publisher = {{Syngress}},
  doi = {10.1016/B978-0-12-809710-6.00003-2},
  url = {http://www.sciencedirect.com/science/article/pii/B9780128097106000032},
  urldate = {2020-04-22},
  abstract = {This chapter provides an in-depth look at the history of open source software (OSS) in the US federal government. The federal government’s challenge with adopting OSS is briefly described with an emphasis being placed on areas such as acquisition and security. In addition, major federal initiatives to clarify acquisition challenges and improve the quality and security of OSS are followed by a discussion of how the federal government’s cloud computing experience was enabled through its involvement with OSS.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AW4SQF3X/B9780128097106000032.html},
  isbn = {978-0-12-809710-6},
  keywords = {acquisition,cloud computing,Open source software,OSS,OSS adoption,security},
  langid = {english}
}

@article{mezey_critical_2006,
  title = {Critical Information Infrastructure},
  author = {MEZEY, GYULA},
  date = {2006},
  journaltitle = {AARMS},
  volume = {5},
  url = {http://zrinyi.zmka.hu/docs/Volume5/Issue1/pdf/01meze.pdf},
  urldate = {2013-03-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AABP9H45/01meze.pdf},
  number = {1}
}

@incollection{mian_open-source_2011,
  title = {Open-Source Software Implications in the Competitive Mobile Platforms Market},
  booktitle = {Building the E-{{World Ecosystem}}},
  author = {Mian, Salman Qayyum and Teixeira, Jose and Koskivaara, Eija},
  date = {2011},
  pages = {110--128},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-27260-8_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T73NQJR9/chp%3A10.1007%2F978-3-642-27260-8_9.pdf},
  keywords = {adoption,nyílt forrás}
}

@online{michael_cobb_open_2013,
  title = {Open Source Code Management: {{How}} to Safely Use Open Source Libraries},
  author = {{Michael Cobb}},
  date = {2013},
  journaltitle = {SearchSecurity},
  url = {http://searchsecurity.techtarget.com/tip/Open-source-code-management-How-to-safely-use-open-source-libraries},
  urldate = {2014-05-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GWD6E94K/How_to_safely-use-open-source-libraries.pdf}
}

@article{michael_koch_towards_nodate,
  title = {Towards {{Open Design}}: {{The Emergent Face}} of {{Engineering}}},
  author = {{Michael Koch} and {Irem Y. Tumer}},
  journaltitle = {Proceedings of ICED 09, the 17th International Conference on Engineering Design},
  volume = {Vol. 3},
  pages = {97--108},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7ITTD76I/ds58_3-97.pdf},
  keywords = {community,Open Design,open source}
}

@book{michel_crouhy_essentials_2006,
  title = {The {{Essentials}} of {{Risk Management}}},
  author = {{Michel Crouhy} and {Dan Galai} and {Robert Mark}},
  date = {2006},
  publisher = {{McGraw Hill}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PIB9XTS6/The Essentials of Risk Management.pdf},
  isbn = {0-07-142966-2},
  keywords = {Risk management}
}

@incollection{michlmayr_release_2007,
  title = {Release Management in Free Software Projects: {{Practices}} and Problems},
  shorttitle = {Release Management in Free Software Projects},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Michlmayr, Martin and Hunt, Francis and Probert, David},
  date = {2007},
  pages = {295--300},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_31},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3AWN4ZQB/chp%3A10.1007%2F978-0-387-72486-7_31.pdf},
  keywords = {development,life cycle,nyílt forrás}
}

@inproceedings{middleton_which_2018,
  ids = {middleton\_which\_2018-1},
  title = {Which {{Contributions Predict Whether Developers}} Are {{Accepted}} into {{GitHub Teams}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Middleton, Justin and Murphy-Hill, Emerson and Green, Demetrius and Meade, Adam and Mayer, Roger and White, David and McDonald, Steve},
  date = {2018-05},
  pages = {403--413},
  issn = {2574-3864},
  abstract = {Open-source software (OSS) often evolves from volunteer contributions, so OSS development teams must cooperate with their communities to attract new developers. However, in view of the myriad ways that developers interact over platforms for OSS development, observers of these communities may have trouble discerning, and thus learning from, the successful patterns of developer-to-team interactions that lead to eventual team acceptance. In this work, we study project communities on GitHub to discover which forms of software contribution characterize developers who begin as development team outsiders and eventually join the team, in contrast to developers who remain team outsiders. From this, we identify and compare the forms of contribution, such as pull requests and several forms of discussion comments, that influence whether new developers join OSS teams, and we discuss the implications that these behavioral patterns have for the focus of designers and educators.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9WB8KZBZ/Middleton et al. - 2018 - Which contributions predict whether developers are.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B4RK3HL7/Middleton et al. - 2018 - Which Contributions Predict Whether Developers are.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/473D49I5/8595224.html},
  keywords = {Collaboration,Companies,Computer bugs,contributions predict,Data mining,developer-to-team interactions,development team outsiders,eventual team acceptance,GitHub teams,Measurement,online communities,open source software,Open source software,open-source software,organization acceptance,OSS development teams,OSS teams,project management,public domain software,software contribution,software development management,team working,volunteer contributions}
}

@article{midha_factors_2012,
  title = {Factors Affecting the Success of {{Open Source Software}}},
  author = {Midha, Vishal and Palvia, Prashant},
  date = {2012-04},
  journaltitle = {Journal of Systems and Software},
  volume = {85},
  pages = {895--905},
  issn = {01641212},
  doi = {10.1016/j.jss.2011.11.010},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016412121100286X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KFSI2FIC/1-s2.0-S016412121100286X-main.pdf},
  keywords = {development,Forrás2,life cycle,nyílt forrás,open source,statisztika,success},
  langid = {english},
  number = {4}
}

@article{midha_governance_2012,
  title = {Governance Practices and Software Maintenance: {{A}} Study of Open Source Projects},
  shorttitle = {Governance Practices and Software Maintenance},
  author = {Midha, Vishal and Bhattacherjee, Anol},
  date = {2012-12},
  journaltitle = {Decision Support Systems},
  volume = {54},
  pages = {23--32},
  issn = {01679236},
  doi = {10.1016/j.dss.2012.03.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923612000887},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7ZIDBRSK/1-s2.0-S0167923612000887-main.pdf},
  keywords = {development,nyílt forrás,procedures},
  langid = {english},
  number = {1}
}

@online{mike_wheatley_microsoft_2015,
  title = {Microsoft Opens First {{Transparency Center}} in {{Europe}}},
  author = {{Mike Wheatley}},
  date = {2015-06-08T07:44:44-04:00},
  journaltitle = {SiliconANGLE},
  url = {https://siliconangle.com/2015/06/08/microsoft-opens-first-transparency-center-in-europe/},
  urldate = {2018-08-14},
  abstract = {Microsoft opens first Transparency Center in Europe - SiliconANGLE},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MMKNEUXL/microsoft-opens-first-transparency-center-in-europe.html},
  langid = {american}
}

@incollection{miklos_biro_synergies_2007,
  title = {Synergies {{Between}} the {{Common Criteria}} and {{Process Improvement}}},
  booktitle = {Software {{Process Improvement}}},
  author = {{Miklós Biró} and {Bálint Molnár}},
  date = {2007},
  volume = {4764},
  pages = {31--45},
  publisher = {{Springer-Verlag Berlin Heidelberg}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7FGHSCUG/chp%3A10.1007%2F978-3-540-75381-0_4.pdf},
  isbn = {978-3-540-75381-0},
  keywords = {CC,evaluation,quality,security},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{milev_design_2009,
  title = {Design Evolution of an Open Source Project Using an Improved Modularity Metric},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Milev, Roberto and Muegge, Steven and Weiss, Michael},
  date = {2009},
  pages = {20--33},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_4},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5T7NJA86/chp%3A10.1007%2F978-3-642-02032-2_4.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@book{miller_fuzz_1995,
  title = {Fuzz Revisited: {{A}} Re-Examination of the Reliability of {{UNIX}} Utilities and Services},
  shorttitle = {Fuzz Revisited},
  author = {Miller, Barton Paul and Koski, David and Lee, Cjin Pheow and Maganty, Vivekananda and Murthy, Ravi and Natarajan, Ajitkumar and Steidl, Jeff},
  date = {1995},
  publisher = {{University of Wisconsin-Madison, Computer Sciences Department}},
  url = {http://www.eecs.northwestern.edu/~robby/courses/395-495-2009-fall/fuzz-revisited.pdf},
  urldate = {2013-04-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BIJ9ZRMV/fuzz-revisited.pdf}
}

@inproceedings{miller_tutorial_2018,
  title = {Tutorial: {{Secure Coding Practices}}, {{Automated Assessment Tools}} and the {{SWAMP}}},
  shorttitle = {Tutorial},
  booktitle = {2018 {{IEEE Cybersecurity Development}} ({{SecDev}})},
  author = {Miller, Barton P. and Heymann, Elisa},
  date = {2018-09},
  pages = {124--125},
  doi = {10.1109/SecDev.2018.00025},
  abstract = {This tutorial is relevant to anyone wanting to learn about minimizing security flaws in the software they develop or manage. We share our experiences gained from performing vulnerability assessments of critical services and middleware. You will learn important skills for software developers and analysts concerned with security. Software assurance tools - tools that scan the source or binary code of a program to find weaknesses - are the first line of defense in assessing the security of a software project. These tools can catch flaws in a program that affect both the correctness and safety of the code. The SWAMP is a open and free facility to provide access to a large collection of tools for a variety of languages and environments. This tutorial is also relevant to anyone wanting to learn how to use these automated assessment tools to minimize security flaws their software.},
  eventtitle = {2018 {{IEEE Cybersecurity Development}} ({{SecDev}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PQIJ63AE/Miller and Heymann - 2018 - Tutorial Secure Coding Practices, Automated Asses.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XWJUY5AC/8543397.html},
  keywords = {automated assessment tools,Automated assessment tools,binary code,Encoding,Instruments,middleware,Programming,project management,secure coding practices,Security,security flaws,Software,software assurance tools,software developers,software development management,software fault tolerance,software project security,Software security,software tools,SWAMP,Tools,Tutorials,vulnerability assessments}
}

@inproceedings{miller_why_2019,
  title = {Why {{Do People Give Up FLOSSing}}? {{A Study}} of {{Contributor Disengagement}} in {{Open Source}}},
  shorttitle = {Why {{Do People Give Up FLOSSing}}?},
  booktitle = {Open {{Source Systems}}},
  author = {Miller, Courtney and Widder, David Gray and Kästner, Christian and Vasilescu, Bogdan},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {116--129},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_11},
  abstract = {Established contributors are the backbone of many free/libre open source software (FLOSS) projects. Previous research has shown that it is critically important for projects to retain contributors and it has also revealed the motivations behind why contributors choose to participate in FLOSS in the first place. However, there has been limited research done on the reasons why established contributors disengage, and factors (on an individual and project level) that predict their disengagement. In this paper, we conduct a mixed-methods empirical study, combining surveys and survival modeling, to identify the reasons and predictive factors behind established contributor disengagement. We find that different groups of established contributors tend to disengage for different reasons; however, overall contributors most commonly cite some kind of transition (e.g., switching jobs or leaving academia). We also find that factors such as the popularity of the projects a contributor works on, whether they have experienced a transition, when they work, and how much they work are all factors that can be used to predict their disengagement from open source.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AZ6BG76N/Miller et al. - 2019 - Why Do People Give Up FLOSSing A Study of Contrib.pdf},
  isbn = {978-3-030-20883-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@article{minchala_open_2016,
  title = {An Open Source {{SCADA}} System to Implement Advanced Computer Integrated Manufacturing},
  author = {Minchala, Luis I. and Ochoa, Saul and Velecela, Esteban and Astudillo, Darwin F. and Gonzalez, Javier},
  date = {2016-12},
  journaltitle = {IEEE Latin America Transactions},
  volume = {14},
  pages = {4657--4662},
  issn = {1548-0992},
  doi = {10.1109/TLA.2016.7816994},
  abstract = {The computer integrated manufacturing (CIM) approach allows the possibility to remotely and optimally control the entire production process in a plant. The implementation of CIM architectures demands the installation of several software platforms, which most of the cases are commercial and have high licensing prices. This research presents the development of an open software architecture for advanced CIM (OSACIM) by using two open software development platforms: Java and Python. The use of open software in the development of this solution allows the creation of a low price CIM approach. The results of using the system in laboratory tests show good results in comparison with commercial softwares for developing OPC communications and SCADA systems, which perform similar functionalities as the proposed OSACIM. The main features and limitations of the system are reported.},
  eventtitle = {{{IEEE Latin America Transactions}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FYVTC2GT/Minchala et al. - 2016 - An open source SCADA system to implement advanced .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EFHQ7PPK/7816994.html},
  keywords = {advanced computer integrated manufacturing,CIM,CIM architectures,computer integrated manufacturing,Computer integrated manufacturing,IEEE transactions,IP networks,Java,Java platforms,Monitoring,OPC communications,OPC-UA,open software,open software architecture for advanced CIM,open source SCADA system,OSACIM,production engineering computing,production process,public domain software,Python platforms,SCADA,SCADA systems,Software,software architecture},
  number = {12}
}

@inproceedings{miranda_use_2018,
  title = {On the Use of Package Managers by the {{C}}++ Open-Source Community},
  booktitle = {Proceedings of the 33rd {{Annual ACM Symposium}} on {{Applied Computing}}},
  author = {Miranda, André and Pimentel, João},
  date = {2018-04-09},
  pages = {1483--1491},
  publisher = {{Association for Computing Machinery}},
  location = {{Pau, France}},
  doi = {10.1145/3167132.3167290},
  url = {https://doi.org/10.1145/3167132.3167290},
  urldate = {2020-04-22},
  abstract = {The use of package managers is commonplace for software developers working with programming languages such as Ruby, Python, and JavaScript. This is not the case for C++ developers, which present a low adoption rate of package managers. The goal of this study is to understand what is preventing C++ developers from adopting package managers in the context of open-source software (OSS) projects. In order to achieve this goal, we performed a questionnaire survey with 343 developers from 42 OSS projects. The survey participants answered a questionnaire with 29 questions. After the analysis of the collected data, we could conclude that most participants are not reluctant to use C++ package managers and that Open-Source licensing, High Availability of Libraries, Good Documentation, and Ease of Configuration can be considered crucial factors for the successful adoption of C++ dependency management via language-specific package managers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VTAS7CHW/Miranda and Pimentel - 2018 - On the use of package managers by the C++ open-sou.pdf},
  isbn = {978-1-4503-5191-1},
  keywords = {empirical study,open-source software,software engineering,software maintenance,software tools},
  series = {{{SAC}} '18}
}

@online{mire_collection_nodate,
  title = {A {{Collection}} of {{Information Security Community Standardization Activities}} and {{Initiatives}}},
  author = {MIRE},
  journaltitle = {Making Security Measurable},
  url = {http://makingsecuritymeasurable.mitre.org/}
}

@incollection{mistrik_collaborative_2010,
  title = {Collaborative {{Software Engineering}}: {{Challenges}} and {{Prospects}}},
  shorttitle = {Collaborative {{Software Engineering}}},
  booktitle = {Collaborative {{Software Engineering}}},
  author = {Mistrík, Ivan and Grundy, John and van der Hoek, André and Whitehead, Jim},
  editor = {Mistrík, Ivan and Grundy, John and Hoek, André and Whitehead, Jim},
  date = {2010},
  pages = {389--403},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-10294-3_19},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3RDXTB4W/chp%3A10.1007%2F978-3-642-10294-3_19.pdf},
  isbn = {978-3-642-10293-6 978-3-642-10294-3},
  keywords = {development,nyílt forrás,procedures},
  langid = {english},
  options = {useprefix=true}
}

@incollection{mistrik_dynamic_2010,
  title = {Dynamic {{Analysis}} of {{Communication}} and {{Collaboration}} in {{OSS Projects}}},
  booktitle = {Collaborative {{Software Engineering}}},
  author = {Pinzger, Martin and Gall, Harald C.},
  editor = {Mistrík, Ivan and Grundy, John and Hoek, André and Whitehead, Jim},
  date = {2010},
  pages = {265--284},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-10294-3_13},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6FNAGC4M/chp%3A10.1007%2F978-3-642-10294-3_13.pdf},
  isbn = {978-3-642-10293-6 978-3-642-10294-3},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@online{mitch_stoltz_case_nodate,
  title = {The {{Case}} for {{Government Promotion}} of {{Open Source Software}}},
  author = {{Mitch Stoltz}},
  url = {http://www.netaction.org/opensrc/oss-whole.html},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3Q3PXXXZ/oss-whole.html}
}

@article{mitcham_convivial_2009,
  title = {Convivial Software: An End-User Perspective on Free and Open Source Software},
  shorttitle = {Convivial Software},
  author = {Mitcham, Carl},
  date = {2009-12},
  journaltitle = {Ethics and Information Technology},
  volume = {11},
  pages = {299--310},
  issn = {1388-1957, 1572-8439},
  doi = {10.1007/s10676-009-9209-7},
  url = {http://link.springer.com/10.1007/s10676-009-9209-7},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P7AJQIAU/art%3A10.1007%2Fs10676-009-9209-7.pdf},
  keywords = {általános OSS,nyílt forrás},
  langid = {english},
  number = {4}
}

@misc{mitchell_gender_2017,
  title = {Gender and the Art of Community Relations},
  author = {Mitchell, Lesley},
  date = {2017-12-19},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3155124},
  urldate = {2020-04-22},
  abstract = {Aspects of one's personal identity can change the way you experience being part of a community, especially if you are in a minority group. The author reports on her experiences of conducting research with women who participate in the Debian Linux project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S796J8UE/Mitchell - 2017 - Gender and the art of community relations.pdf}
}

@article{mockus_two_2002,
  title = {Two Case Studies of Open Source Software Development: {{Apache}} and {{Mozilla}}},
  author = {Mockus, A and Fielding, RT and Herbsleb, JD},
  date = {2002},
  journaltitle = {Transactions on Software Engineering and Methodology},
  shortjournal = {TOSEM},
  volume = {11},
  issn = {1557-7392},
  url = {http://dl.acm.org/citation.cfm?id=567795},
  abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine data from two major open source projects, the Apache web server and the Mozilla browser. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution intervals for these OSS projects. We develop several hypotheses by comparing the Apache project with several commercial projects. We then test and refine several of these hypotheses, based on an analysis of Mozilla data. We conclude with thoughts about the prospects for high-performance commercial/open source process hybrids.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KAD5QKH6/Mockus et al. - 2002 - Two case studies of open source software developme.pdf},
  keywords = {Apache,code ownership,defect density,Mozilla,open source,repair interval},
  number = {3}
}

@book{mohapatra_intelligent_2014,
  title = {Intelligent {{Computing}}, {{Networking}}, and {{Informatics}}},
  editor = {Mohapatra, Durga Prasad and Patnaik, Srikanta},
  date = {2014},
  volume = {243},
  publisher = {{Springer India}},
  location = {{New Delhi}},
  url = {http://link.springer.com/10.1007/978-81-322-1665-0},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AUN6DMVX/chp%3A10.1007%2F978-81-322-1665-0_92.pdf},
  isbn = {978-81-322-1664-3 978-81-322-1665-0},
  series = {Advances in {{Intelligent Systems}} and {{Computing}}}
}

@incollection{moin_bug_2010,
  title = {Bug Localization Using Revision Log Analysis and Open Bug Repository Text Categorization},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Moin, Amir H. and Khansari, Mohammad},
  date = {2010},
  pages = {188--199},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_15},
  urldate = {2015-10-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R4IWXCKZ/chp%3A10.1007%2F978-3-642-13244-5_15.pdf}
}

@incollection{mokhov_taxonomy_2008,
  title = {Taxonomy of {{Linux Kernel Vulnerability Solutions}}},
  booktitle = {Innovative {{Techniques}} in {{Instruction Technology}}, {{E}}-Learning, {{E}}-Assessment, and {{Education}}},
  author = {Mokhov, Serguei A. and Laverdière, Marc-André and Benredjem, Djamel},
  editor = {Iskander, Magued},
  date = {2008},
  pages = {485--493},
  publisher = {{Springer Netherlands}},
  doi = {10.1007/978-1-4020-8739-4_86},
  url = {http://link.springer.com/chapter/10.1007/978-1-4020-8739-4_86},
  urldate = {2015-11-27},
  abstract = {This paper presents the results of a case study on software vulnerability solutions in the Linux kernel. Our major contribution is the introduction of a classification of methods used to solve vulnerabilities. Our research shows that error handling, redesign, and precondition validation are the most used methods in solving vulnerabilities in the Linux kernel. This contribution is accompanied with statistics on the occurrence of the different types of vulnerabilities and their solutions that we observed during our case study, combined with example source code patches. We also combine our findings with existing programming guidelines to create the first security-oriented coding guidelines for the Linux kernel.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SGU4S7CE/Mokhov és mtsai. - 2008 - Taxonomy of Linux Kernel Vulnerability Solutions.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QJ5FFRTZ/978-1-4020-8739-4_86.html},
  isbn = {978-1-4020-8738-7 978-1-4020-8739-4},
  keywords = {Computer Systems Organization and Communication Networks,development,Electronics and Microelectronics; Instrumentation,nyílt forrás,Software Engineering/Programming and Operating Systems,source},
  langid = {english}
}

@inproceedings{molina_fast_2007,
  title = {Fast {{Approximate Matching}} of {{Programs}} for {{Protecting Libre}}/{{Open Source Software}} by {{Using Spatial Indexes}}},
  author = {Molina, Arnoldo Jose Muller and Shinohara, Takeshi},
  date = {2007-09},
  pages = {111--122},
  publisher = {{IEEE}},
  doi = {10.1109/SCAM.2007.15},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4362903},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P7DATC5G/04362903.pdf},
  isbn = {978-0-7695-2880-9},
  keywords = {license,nyílt forrás}
}

@incollection{moller_automotive_2019,
  title = {Automotive {{Cybersecurity}}},
  booktitle = {Guide to {{Automotive Connectivity}} and {{Cybersecurity}}: {{Trends}}, {{Technologies}}, {{Innovations}} and {{Applications}}},
  author = {Möller, Dietmar P. F. and Haas, Roland E.},
  editor = {Möller, Dietmar P.F. and Haas, Roland E.},
  date = {2019},
  pages = {265--377},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-73512-2_6},
  url = {https://doi.org/10.1007/978-3-319-73512-2_6},
  urldate = {2020-04-21},
  abstract = {Cybersecurity is the body of technologies, processes, and practices designed to protect computers, data, networks, and programs against intrusion, damage, or unauthorized access by cyberattacks. Therefore, this chapter begins, in Sect. 6.1, with an overview of automotive cybersecurity issues subdivided into ten subsections. It focuses on the scale and complexity of vehicles cyber and physical components’ vulnerability to a variety of security challenges, intrusions, threats, and malicious cyberattacks whose intent is to disrupt communication, steal sensitive information or records, and impair the functioning of the system, identifying the risk level as a function of likelihood and consequences. Hence, a solid theoretical foundation for cybersecurity of vehicle cyber-physical systems is introduced too, based on concepts of artificial intelligence, deep neural networks (DNN), and deep learning (DL), control theory, epidemic theory, game theory, graph theory, and the importance of cybersecurity w.r.t. different kinds of attack scenarios, for example, the spear phishing attack. Section 6.2 introduces information technology security in automotive cyber-physical systems (CPSs) and the measures taken to ensure that automotive cyber-physical systems remain secure while interacting with other digital systems connected to a controller area network (CAN) system bus. It also describes the characteristics of today’s attack taxonomies. As a logical next step, Sect. 6.3 focuses on hacking, automotive attack surfaces, and vulnerabilities and summarizes the anatomy of attack surface intrusion points in vehicles and the associated risks. Therefore, vehicle security depends on a variety of different methods and tools that systematically perform security testing, such as functional security testing, fuzzing, penetration testing, and others. Section 6.4 discusses intrusion detection, described as the detection of any set of actions that attempts to compromise the integrity, confidentiality, or availability of a system, as well as intrusion prevention, actions which attempt to prevent a detected intrusion from succeeding. Different detection methods for different kinds of intrusion types are described, including numerous static, dynamic, and hybrid methods for prevention. Section 6.5 discusses security and functional safety with regard to wireless mobile and sensor networks, platform security, cloud computing, and data security, as well as functional safety. Section 6.6 includes several examples of car hacking. Section 6.7 contains a comprehensive set of questions on automotive cybersecurity topics, and and finally followed by references and suggestions for further reading.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LBKQTT9Q/Möller and Haas - 2019 - Automotive Cybersecurity.pdf},
  isbn = {978-3-319-73512-2},
  langid = {english},
  series = {Computer {{Communications}} and {{Networks}}}
}

@inproceedings{mols_charting_2017,
  title = {Charting the Market Disruptive Nature of Open Source: Experiences from {{Sony}} Mobile},
  shorttitle = {Charting the Market Disruptive Nature of Open Source},
  booktitle = {Proceedings of the 39th {{International Conference}} on {{Software Engineering Companion}}},
  author = {Mols, Carl-Eric and Wnuk, Krzysztof},
  date = {2017-05-20},
  pages = {175--176},
  publisher = {{IEEE Press}},
  location = {{Buenos Aires, Argentina}},
  doi = {10.1109/ICSE-C.2017.110},
  url = {https://doi.org/10.1109/ICSE-C.2017.110},
  urldate = {2020-04-22},
  abstract = {Open Source Software (OSS) has substantial impact on how software-intensive firms develop products and deliver value to the customers. These companies need both strategic and operational support on how to adapt OSS as a part of their products and how to adjust processes and organizations to increase the benefits from OSS participation. This work presents the key insights from the journey that Sony Mobile has made from a company developing proprietary software to a respected member of OSS communities. We framed the experiences into an Open Source Maturity Model that includes two scenarios: engineering-driven and business-driven open source. We outline the most important decisions, roles, processes and implications.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IZDDXJJG/Mols and Wnuk - 2017 - Charting the market disruptive nature of open sour.pdf},
  isbn = {978-1-5386-1589-8},
  keywords = {open source software,software business,software ecosystems},
  series = {{{ICSE}}-{{C}} '17}
}

@inproceedings{moon_open_2016,
  title = {Do {{Open Projects}} "{{Break}} the {{Mirror}}"?: {{Re}}-Conceptualization of {{Organizational Configurations}} in {{Free}}/{{Libre Open Source Software}} ({{FLOSS}}) {{Development}}},
  shorttitle = {Do {{Open Projects}} "{{Break}} the {{Mirror}}"?},
  booktitle = {2016 {{IEEE}} 11th {{International Conference}} on {{Global Software Engineering Workshops}} ({{ICGSEW}})},
  author = {Moon, Eunyoung},
  date = {2016-08},
  pages = {73--76},
  issn = {2329-6313},
  doi = {10.1109/ICGSEW.2016.18},
  abstract = {The mirroring hypothesis holds when products and the organizations that create them have structures that mirror each other, coordination will be reduced and projects will be more successful. Yet research suggests that free/libre open source software (FLOSS) projects can be successful even when violating this principle, "breaking the mirror" when loosely-coupled FLOSS contributors develop tightly-coupled systems. This study investigates this idea through a multiple-case studies using an explanatory sequential mixed methods design. This study contributes to a fine-grained perspective that considers organizational configurations in community-based FLOSS development as an aggregate of many work episodes, each of which produces work outcomes, and can have different organizational coupling from loosely-coupled to tightly-coupled. This study intends to make a contribution to software design research, open collaboration, and industry practitioners who are interested in adoption of the FLOSS approach in commercial software development projects.},
  eventtitle = {2016 {{IEEE}} 11th {{International Conference}} on {{Global Software Engineering Workshops}} ({{ICGSEW}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KNYX4DWD/Moon - 2016 - Do Open Projects Break the Mirror Re-conceptua.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9VXUFM9X/7579490.html},
  keywords = {Aggregates,commercial software development projects,community-based FLOSS development,Conferences,Context,Couplings,explanatory sequential mixed methods design,fine-grained perspective,FLOSS projects,free-libre open source software development,industry practitioners,mirroring hypothesis,Mirrors,open collaboration,Open Collaboration,Organization Design,organizational configurations,organizational coupling,Organizations,project management,public domain software,Software,Software Design,software design research,software engineering,software management}
}

@inproceedings{moon_open_2016-1,
  title = {Do {{Open Projects}} "{{Break}} the {{Mirror}}"?: {{Re}}-Conceptualization of {{Organizational Configurations}} in {{Open Source Software}} ({{OSS}}) {{Production}}},
  shorttitle = {Do {{Open Projects}} "{{Break}} the {{Mirror}}"?},
  booktitle = {2016 {{IEEE}}/{{ACM Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  author = {Moon, Eunyoung and Howison, James},
  date = {2016-05},
  pages = {19--25},
  doi = {10.1109/CHASE.2016.012},
  abstract = {The mirroring hypothesis predicts that loosely-coupled developers will develop a loosely-coupled software system. However, empirical studies have brought confusing results about the mirroring relationship in open source software (OSS) production: loosely-coupled OSS contributors have developed a tightly-coupled system, deviating from theoretical prediction, but are still successful. This study aims to provide better understanding about “breaking the mirror” in community-based OSS production in which there is no significant corporate participation. We propose it is not the mirroring hypothesis that is broken, but the manner in which we conceptualize and measure organizational configurations in OSS production.},
  eventtitle = {2016 {{IEEE}}/{{ACM Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GBMAUUCT/Moon and Howison - 2016 - Do Open Projects Break the Mirror Re-conceptua.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8277NTIP/7809478.html},
  keywords = {Collaboration,configuration management,Couplings,Interviews,loosely-coupled software system,Mirrors,Open Collaboration,open projects,open source software,Open Source Software,organisational aspects,Organization Design.,organizational configurations,Organizations,OSS production,public domain software,Software,Software Design}
}

@inproceedings{moon_open_2016-2,
  title = {Do Open Projects "Break the Mirror"? Re-Conceptualization of Organizational Configurations in Open Source Software ({{OSS}}) Production},
  shorttitle = {Do Open Projects "Break the Mirror"?},
  booktitle = {Proceedings of the 9th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}}},
  author = {Moon, Eunyoung and Howison, James},
  date = {2016-05-14},
  pages = {19--25},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2897586.2897593},
  url = {https://doi.org/10.1145/2897586.2897593},
  urldate = {2020-04-22},
  abstract = {The mirroring hypothesis predicts that loosely-coupled developers will develop a loosely-coupled software system. However, empirical studies have brought confusing results about the mirroring relationship in open source software (OSS) production: loosely-coupled OSS contributors have developed a tightly-coupled system, deviating from theoretical prediction, but are still successful. This study aims to provide better understanding about "breaking the mirror" in community-based OSS production in which there is no significant corporate participation. We propose it is not the mirroring hypothesis that is broken, but the manner in which we conceptualize and measure organizational configurations in OSS production.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BZ7C77QN/Moon and Howison - 2016 - Do open projects break the mirror re-conceptual.pdf},
  isbn = {978-1-4503-4155-4},
  keywords = {open collaboration,open source software,organization design,software design},
  series = {{{CHASE}} '16}
}

@article{morales_use_2017,
  title = {On the Use of Developers’ Context for Automatic Refactoring of Software Anti-Patterns},
  author = {Morales, Rodrigo and Soh, Zéphyrin and Khomh, Foutse and Antoniol, Giuliano and Chicano, Francisco},
  date = {2017-06-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {128},
  pages = {236--251},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2016.05.042},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121216300632},
  urldate = {2020-04-22},
  abstract = {Anti-patterns are poor solutions to design problems that make software systems hard to understand and extend. Entities involved in anti-patterns are reported to be consistently related to high change and fault rates. Refactorings, which are behavior preserving changes are often performed to remove anti-patterns from software systems. Developers are advised to interleave refactoring activities with their regular coding tasks to remove anti-patterns, and consequently improve software design quality. However, because the number of anti-patterns in a software system can be very large, and their interactions can require a solution in a set of conflicting objectives, the process of manual refactoring can be overwhelming. To automate this process, previous works have modeled anti-patterns refactoring as a batch process where a program provides a solution for the total number of classes in a system, and the developer has to examine a long list of refactorings, which is not feasible in most situations. Moreover, these proposed solutions often require that developers modify classes on which they never worked before (i.e., classes on which they have little or no knowledge). To improve on these limitations, this paper proposes an automated refactoring approach, ReCon (Refactoring approach based on task Context), that leverages information about a developer’s task (i.e., the list of code entities relevant to the developer’s task) and metaheuristics techniques to compute the best sequence of refactorings that affects only entities in the developer’s context. We mine 1705 task contexts (collected using the Eclipse plug-in Mylyn) and 1013 code snapshots from three open-source software projects (Mylyn, PDE, Eclipse Platform) to assess the performance of our proposed approach. Results show that ReCon can remove more than 50\% of anti-patterns in a software system, using fewer resources than the traditional approaches from the literature.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QW6SIEVU/Morales et al. - 2017 - On the use of developers’ context for automatic re.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FXGUH7LV/S0164121216300632.html},
  keywords = {Anti-patterns,Automatic refactoring,Interaction traces,Metaheuristics,Software maintenance,Task context},
  langid = {english}
}

@inproceedings{morandini_risk_2014,
  title = {Risk {{Awareness}} in {{Open Source Component Selection}}},
  booktitle = {Business {{Information Systems}}},
  author = {Morandini, Mirko and Siena, Alberto and Susi, Angelo},
  date = {2014},
  pages = {241--252},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-06695-0_21},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IHEI4F2A/chp%3A10.1007%2F978-3-319-06695-0_21.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PS5Z9NHU/risk_awareness_in_open_source.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{morell_how_2018,
  title = {How {{Much}} Are {{Digital Platforms Based}} on {{Open Collaboration}}? {{An}} Analysis of Technological and Knowledge Practices and Their Implications for the Platform Governance of a Sample of 100 Cases of Collaborative Digital Platforms in {{Barcelona}}},
  shorttitle = {How {{Much}} Are {{Digital Platforms Based}} on {{Open Collaboration}}?},
  booktitle = {Proceedings of the 14th {{International Symposium}} on {{Open Collaboration}}},
  author = {Morell, Mayo Fuster and Espelt, Ricard},
  date = {2018-08-22},
  pages = {1--5},
  publisher = {{Association for Computing Machinery}},
  location = {{Paris, France}},
  doi = {10.1145/3233391.3233970},
  url = {https://doi.org/10.1145/3233391.3233970},
  urldate = {2020-04-22},
  abstract = {From the early cases of FLOSS and Wikipedia, the digital collaborative model of production and consumption has rapidly expanded to other spheres. This article explores to what extent this expansion has maintained the open character of the initial model, specifically the extent to which platform projects follow an open collaborative approach in their technological and knowledge policies and practices, and if this is also reflected in an open approach to governance. The empirical analysis is based on a sample of 100 cases in Barcelona. On the basis of this analysis, we conclude that open modalities of collaborative digital platforms are not prevalent. Around a third of the sample present open modalities of the dimensions analyzed. Different areas (technological, knowledge, or governance) showed different levels of diffusion of open practices. The cases which tended to be open in one dimension also tended to be open in the other dimensions. That is, the analysis points to a correlation between technological, data, and knowledge policies and open and democratic collaborative economy models. These results suggest the importance of open technology and knowledge in adopting an open and democratic collaborative model.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LUDPBH4P/Morell and Espelt - 2018 - How Much are Digital Platforms Based on Open Colla.pdf},
  isbn = {978-1-4503-5936-8},
  series = {{{OpenSym}} '18}
}

@inproceedings{moreno_sortinghat_2019,
  title = {{{SortingHat}}: {{Wizardry}} on {{Software Project Members}}},
  shorttitle = {{{SortingHat}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}}: {{Companion Proceedings}} ({{ICSE}}-{{Companion}})},
  author = {Moreno, David and Dueñas, Santiago and Cosentino, Valerio and Fernandez, Miguel Angel and Zerouali, Ahmed and Robles, Gregorio and Gonzalez-Barahona, Jesus M.},
  date = {2019-05},
  pages = {51--54},
  issn = {2574-1934},
  doi = {10.1109/ICSE-Companion.2019.00036},
  abstract = {Nowadays, software projects and in particular open source ones heavily rely on a plethora of tools (e.g., Git, GitHub) to support and coordinate development activities. Despite their paramount value, they foster to fragment members' contribution, since members can access them with different identities (e.g., email, username). Thus, researchers and practitioners willing to evaluate individual members contributions are often forced to develop ad-hoc scripts or perform manual work to merge identities. This comes at the risk of obtaining wrong results and hindering replication of their work. In this demo we present SortingHat, which helps to track unique identities of project members and their related information such as gender, country and organization enrollments. It allows to manipulate identities interactively as well as to load bulks of identities via batch files (useful for projects with large communities). SortingHat is a component of GrimoireLab, an industry strong free platform developed by Bitergia, which offers commercial software analytics and is part of the CHAOSS project of the Linux Foundation. A video showing SortingHat is available at https://youtu.be/724I1XcQV6c.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}}: {{Companion Proceedings}} ({{ICSE}}-{{Companion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6YPFQVAT/Moreno et al. - 2019 - SortingHat Wizardry on Software Project Members.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3745NN2I/8802633.html},
  keywords = {CHAOSS project,commercial software analytics,GitHub,open source software,project management,public domain software,software engineering,software management,Software mining; empirical software engineering; open source software; software development; identity merging,software projects,software replication,sorting,SortingHat}
}

@incollection{morgan_benefits_2007,
  title = {Benefits and Drawbacks of Open Source Software: An Exploratory Study of Secondary Software Firms},
  shorttitle = {Benefits and Drawbacks of Open Source Software},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Morgan, Lorraine and Finnegan, Patrick},
  date = {2007},
  pages = {307--312},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_33},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I2DEB5LW/Morgan and Finnegan - 2007 - Benefits and drawbacks of open source software an.pdf},
  isbn = {978-0-387-72486-7},
  keywords = {adoption,előnyök,Forrás1,nyílt forrás,open source}
}

@article{morgan_beyond_2014,
  title = {Beyond Free Software: {{An}} Exploration of the Business Value of Strategic Open Source},
  shorttitle = {Beyond Free Software},
  author = {Morgan, Lorraine and Finnegan, Patrick},
  date = {2014-09},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {23},
  pages = {226--238},
  issn = {09638687},
  doi = {10.1016/j.jsis.2014.07.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0963868714000286},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4FS6QDN4/1-s2.0-S0963868714000286-main.pdf},
  keywords = {adoption,nyílt forrás},
  langid = {english},
  number = {3}
}

@inproceedings{moritz_value_2016,
  title = {Value Creation in Open-Source Hardware Communities: {{Case}} Study of {{Open Source Ecology}}},
  shorttitle = {Value Creation in Open-Source Hardware Communities},
  booktitle = {2016 {{Portland International Conference}} on {{Management}} of {{Engineering}} and {{Technology}} ({{PICMET}})},
  author = {Moritz, Manuel and Redlich, Tobias and Grames, Patrick P. and Wulfsberg, Jens P.},
  date = {2016-09},
  pages = {2368--2375},
  doi = {10.1109/PICMET.2016.7806517},
  abstract = {Technical progress in production technology, the advancement and spread of information and communication technologies (ICT) as well as the spill-over of the highly efficient and innovative open source principles to the world of physical products represent a new set of tools and concepts to address the challenges of sustainable economic development. Correspondingly, we can observe (new) modes of value creation that put into question traditional economic strategies and assumptions by stressing collaboration instead of competition and knowledge sharing instead of black box engineering. Open Source Ecology (OSE) is a famous example of a nonprofit organization which fosters worldwide participation and collaboration to jointly develop open source hardware for operation in both developing and industrialized countries. Based on the concepts open source appropriate technology (OSAT), the community aims at the free access to the knowledge and knowhow of low-cost and easy-to-build products to empower people to build and run a civilization. This case study describes and analyzes the value creation processes of OSE and derives new opportunities for business models based on openness.},
  eventtitle = {2016 {{Portland International Conference}} on {{Management}} of {{Engineering}} and {{Technology}} ({{PICMET}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6T9AKW8N/Moritz et al. - 2016 - Value creation in open-source hardware communities.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SXM5QSZL/7806517.html},
  keywords = {black box engineering,business data processing,business models,ecology,Hardware,ICT,information and communication technologies,information technology,innovative open source principles,Licenses,nonprofit organization,open source ecology,open source hardware communities,Open source software,open source technology,openness,OSAT,OSE,production technology,public domain software,sustainable development,sustainable economic development,Technological innovation,Technology management,value creation processes}
}

@inproceedings{morrison_[journal_2018,
  title = {[{{Journal First}}] {{Are Vulnerabilities Discovered}} and {{Resolved Like Other Defects}}?},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Morrison, Patrick and Pandita, Rahul and Xiao, Xusheng and Chillarege, Ram and Williams, Laurie},
  date = {2018-05},
  pages = {498--498},
  issn = {1558-1225},
  doi = {10.1145/3180155.3182553},
  abstract = {Software defect data has long been used to drive software development process improvement. If security defects (i.e., vulnerabilities) are discovered and resolved by different software development practices than non-security defects, the knowledge of that distinction could be applied to drive process improvement. The goal of this research is to support technical leaders in making security-specific software development process improvements by analyzing the differences between the discovery and resolution of defects versus that of vulnerabilities. We extend Orthogonal Defect Classification (ODC), a scheme for classifying software defects to support software development process improvement, to study process-related differences between vulnerabilities and defects, creating ODC + Vulnerabilities (ODC+V). We applied ODC+V to classify 583 vulnerabilities and 583 defects across 133 releases of three open-source projects (Firefox, phpMyAdmin, and Chrome). Compared with defects, vulnerabilities are found later in the development cycle and are more likely to be resolved through changes to conditional logic. In Firefox, vulnerabilities are resolved 33\% more quickly than defects. From a process improvement perspective, these results indicate opportunities may exist for more efficient vulnerability detection and resolution. We found ODC+V's property of associating vulnerability and defect discovery and resolution events with their software development process contexts helpful for gaining insight into three open source software projects. The addition of the SecurityImpact attribute, in particular, brought visibility into when threat types are discovered during the development process. We would expect use of ODC+V (and of base ODC) periodically over time to be helpful for steering software development projects toward their quality assurance goals.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2WB8UEIG/Morrison et al. - 2018 - [Journal First] Are Vulnerabilities Discovered and.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FX8GTH6T/8453115.html},
  keywords = {Chrome,defect discovery,Drives,Firefox,metrics,nonsecurity defects,ODC,Open source software,open source software projects,orthogonal defect classification,pattern classification,phpMyAdmin,project management,public domain software,quality assurance,Random access memory,security,Security,security defects,security of data,security-specific software development process,software development management,software development projects,Software engineering,Software measurement,vulnerability detection}
}

@inproceedings{moyo_investigating_2014,
  title = {Investigating {{Security Issues}} in {{Cloud Computing}}},
  author = {Moyo, Tumpe and Bhogal, Jagdev},
  date = {2014-07},
  pages = {141--146},
  publisher = {{IEEE}},
  doi = {10.1109/CISIS.2014.21},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6915509},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CNEHT6MI/06915509.pdf},
  isbn = {978-1-4799-4325-8 978-1-4799-4326-5}
}

@inproceedings{mtsweni_investigation_2008,
  title = {An {{Investigation}} into the {{Implementation}} of {{Open Source Software Within}} the {{SA Government}}: {{An Emerging Expansion Model}}},
  shorttitle = {An {{Investigation}} into the {{Implementation}} of {{Open Source Software Within}} the {{SA Government}}},
  booktitle = {Proceedings of the 2008 {{Annual Research Conference}} of the {{South African Institute}} of {{Computer Scientists}} and {{Information Technologists}} on {{IT Research}} in {{Developing Countries}}: {{Riding}} the {{Wave}} of {{Technology}}},
  author = {Mtsweni, Jabu and Biermann, Elmarie},
  date = {2008},
  pages = {148--158},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1456659.1456677},
  url = {http://doi.acm.org/10.1145/1456659.1456677},
  urldate = {2015-11-24},
  abstract = {Open source software (OSS) is increasingly becoming an alternative for proprietary software (PS), particularly in the government sector globally. The adoption and implementation of OSS by the government sector is cited as one of the enablers for the adoption of OSS by the private sector. It is also apparent that in the government sector internationally, OSS is seen as a viable technology for reasons such as lowering software costs, growing local software development industry, and bridging the digital divide. In South Africa (SA), an OSS policy that mandates OSS usage within ministries is in place. But according to various open source advocates, little has happened with regards to OSS implementation in the SA government. This paper reports on the current status of OSS usage within the SA government by surveying forty (40) national departments, targeting Information Technology (IT) directors and managers. The results indicate that OSS usage within the ministries is not yet extensive as required by the OSS policy. Various challenges and obstacles are hampering full OSS implementation within the ministries. The contribution of this research paper is an OSS expansion model, which is proposed as a possible solution to improve the current status of OSS usage within the SA government departments. The model proposed is in line with SA government's implementation strategy as outlined in the OSS policy.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JEUBFA9G/Mtsweni és Biermann - 2008 - An Investigation into the Implementation of Open S.pdf},
  isbn = {978-1-60558-286-3},
  keywords = {_SMS_untagged,government,nyílt forrás,Open source software,OSS adoption and implementation challenges,OSS expansion model,South Africa},
  series = {{{SAICSIT}} '08}
}

@inproceedings{muegge_time_2018,
  title = {Time to {{Discover}} and {{Fix Software Vulnerabilities}} in {{Open Source Software Projects}}: {{Notes}} on {{Measurement}} and {{Data Availability}}},
  shorttitle = {Time to {{Discover}} and {{Fix Software Vulnerabilities}} in {{Open Source Software Projects}}},
  booktitle = {2018 {{Portland International Conference}} on {{Management}} of {{Engineering}} and {{Technology}} ({{PICMET}})},
  author = {Muegge, Steven M. and Murshed, S. M. Monzur},
  date = {2018-08},
  pages = {1--10},
  issn = {2159-5100},
  doi = {10.23919/PICMET.2018.8481833},
  abstract = {Reducing the time taken to discover and fix vulnerabilities in open source software projects is increasingly relevant to technology entrepreneurs and technology managers at all levels of industry. Rigorous research requires access to valid and reliable data on when vulnerabilities were introduced, discovered, and closed. This article offers three contributions about measurement and data availability: (1) an approach to measuring the time to discover and time to fix vulnerabilities in open source software projects, (2) evidence that combining project release histories and metrics from two online databases can provide reliable proxy dates for vulnerability introduction and fix, but not discovery, and (3) possible technical and open collaboration solutions to the data availability limitations of current databases. These results were part of a larger mixed-method study on the relationship between open source project and community attributes and software vulnerabilities with a data set of 1268 vulnerabilities affecting the software produced by 60 open source projects.},
  eventtitle = {2018 {{Portland International Conference}} on {{Management}} of {{Engineering}} and {{Technology}} ({{PICMET}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LC88HGBA/Muegge and Murshed - 2018 - Time to Discover and Fix Software Vulnerabilities .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BS4LFUZJ/8481833.html},
  keywords = {data availability limitations,database management systems,Databases,mixed-method study,open collaboration solutions,open source project,Open source software,open source software projects,project release histories,public domain software,Security,security of data,Software measurement,software reliability,software vulnerabilities,technical collaboration solutions,technology management,Time measurement,Tools}
}

@article{muha_az_2008,
  title = {Az Informatikai Biztonság Egy Lehetséges Rendszertana: {{Az}} Információbiztonság Egy Lehetséges Taxonómiája},
  author = {Muha, Lajos},
  date = {2008},
  volume = {XVII},
  pages = {137--156},
  issn = {1416-1443},
  number = {4},
  series = {Bolyai {{Szemle}}}
}

@thesis{muha_magyar_2007,
  title = {A Magyar Köztársaság Kritikus Információs Infrastruktúráinak Védelme},
  author = {Muha, Lajos},
  date = {2007},
  location = {{Budapest}},
  url = {http://193.224.76.4/download/konyvtar/digitgy/phd/2008/muha_lajos.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MQ4GITW4/muha_lajos.pdf},
  langid = {magyar},
  pagetotal = {127},
  type = {Doktori értekezés}
}

@inproceedings{mujika_workstation_2017,
  title = {Workstation versus {{Free Open Source Software}} in Radiology},
  booktitle = {Proceedings of the 5th {{International Conference}} on {{Technological Ecosystems}} for {{Enhancing Multiculturality}}},
  author = {Mujika, Katrin Muradas and Méndez, Juan Antonio Juanes and de Miguel, Andrés Framiñan},
  date = {2017-10-18},
  pages = {1--6},
  publisher = {{Association for Computing Machinery}},
  location = {{Cádiz, Spain}},
  doi = {10.1145/3144826.3145411},
  url = {https://doi.org/10.1145/3144826.3145411},
  urldate = {2020-04-22},
  abstract = {Over the last years, we have observed a constant increase in the number of technological applications to visualize medical images which are of great interest, both from a teaching and a radiological perspective. Graphic workstations in radiology allow their users to process, review, analyse, communicate and exchange multidimensional digital images acquired with different image-capturing radiological devices. Therefore, they are very sophisticated computing tools that combine software and hardware to process medical images, and they can work with digital pictures in several dimensions, obtained with different image-capturing radiological devices from CT (Computerised tomography), MRI (Magnetic Resonance Imaging), PET (Positron Emission Tomography), etc. However, the programs included in these workstations have a high cost which always depends on the software provider and is always subject to its norms and requirements. On the other hand, free open source software in the field of radiology, offers good ways to digitally manage a medical image and they can be easily installed in personal computers. Also, they do not cost anything and do not depend on the provider, since the source code is freely available. With this study, we aim to present the advantages and disadvantages of these radiological image management and visualization systems in the advanced management of radiological studies. We will compare the features of the VITREA2® radiology workstation with free open source software applications like OsiriX® and 3D Slicer®, with examples from specific studies.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DLAYRTF9/Mujika et al. - 2017 - Workstation versus Free Open Source Software in ra.pdf},
  isbn = {978-1-4503-5386-1},
  keywords = {3D Slicer,Free Open Source Software,Imaging diagnosis,Osirix lite,Vitrea2,Workstation},
  series = {{{TEEM}} 2017}
}

@thesis{mukherjee_fully_2011,
  title = {A Fully {{Decentralized}}, {{Peer}}-to-{{Peer Based Version Control System}}},
  author = {Mukherjee, Patrick},
  date = {2011},
  institution = {{TU Darmstadt}},
  url = {http://tuprints.ulb.tu-darmstadt.de/id/eprint/2488},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2R83XAFH/Patrick_Mukherjee-PlatinVC.pdf},
  type = {Ph.D. Thesis}
}

@incollection{mulazzani_building_2011,
  title = {Building Knowledge in Open Source Software Research in Six Years of Conferences},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Mulazzani, Fabio and Rossi, Bruno and Russo, Barbara and Steff, Maximilian},
  date = {2011},
  pages = {123--141},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DG5FRIEP/chp%3A10.1007%2F978-3-642-24418-6_9.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J3DNZ7EG/Building Knowledge in Open Source Software Research in Six Years of Conferences.pdf},
  keywords = {általános OSS,Mintamunka,nyílt forrás,open source,systematic mapping}
}

@inproceedings{muller_agile_2018,
  title = {Agile {{Challenges}} and {{Chances}} for {{Open Source}}: {{Lessons Learned}} from {{Managing}} a {{FLOSS Project}}},
  shorttitle = {Agile {{Challenges}} and {{Chances}} for {{Open Source}}},
  booktitle = {2018 {{IEEE Conference}} on {{Open Systems}} ({{ICOS}})},
  author = {Müller, Matthias},
  date = {2018-11},
  pages = {1--6},
  issn = {2473-3660},
  doi = {10.1109/ICOS.2018.8632819},
  abstract = {Open source projects got an important part today's software landscape. Thousands of these projects are collaboratively driven by communities following a shared vision. But governing open communities towards this shared vision comes along with various difficulties. In general, agile methods allow to manage such systems of collaborative development and constant change. But as this work shows, the agile approach not only provides chances in open settings. A variety of challenges occur that need to be considered. The case of Catrobat, a Free/Libre Open Source project, shows that although open source development and agile methods evolved over the last years, the dynamics of open communities still challenge the agile way. However, evaluating and understanding these dynamics, as well as introducing agile elements, such as the role of product owners, can be beneficial for managing open systems and to drive it into a common direction together with the contributors.},
  eventtitle = {2018 {{IEEE Conference}} on {{Open Systems}} ({{ICOS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FI3WHWDJ/Müller - 2018 - Agile Challenges and Chances for Open Source Less.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZFBIM2ES/8632819.html},
  keywords = {agile,agile methods,collaboration,Collaboration,collaborative development,Conferences,FLOSS,FLOSS project,free-Libre open source project,groupware,open communities,open innovation,open source,open source development,open systems,Open systems,project management,public domain software,shared vision,Software,software development management,software landscape,software prototyping,Task analysis,Technological innovation,Tools}
}

@inproceedings{muller_enabling_2018,
  title = {Enabling {{Teenagers}} to {{Create}} and {{Share Apps}}},
  booktitle = {2018 {{IEEE Conference}} on {{Open Systems}} ({{ICOS}})},
  author = {Müller, Matthias and Schindler, Christian and Luhana, Kirshan Kumar and Slany, Wolfgang},
  date = {2018-11},
  pages = {25--30},
  issn = {2473-3660},
  doi = {10.1109/ICOS.2018.8632815},
  abstract = {Visual coding frameworks and block-based languages became an essential resource for computer science education. Applied in different courses and subjects they foster computational thinking, collaboration, and knowledge-sharing. Furthermore, sharing the outcomes promote the development of an open mindset and teaches the principles of open source. In our work, we present Pocket Code, a mobile open source visual coding framework. We describe how this integrated development environment enables young users to program apps in a block-based manner directly on their mobile devices. We discuss how teenagers can share their projects via the app's sharing platform or as an Android application package file. The presented case illustrates how teenagers can collaboratively drive co-creative communities and foster open source and innovation by creating and sharing mobile apps.},
  eventtitle = {2018 {{IEEE Conference}} on {{Open Systems}} ({{ICOS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CCLL2E2P/Müller et al. - 2018 - Enabling Teenagers to Create and Share Apps.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HYMFHSUE/8632815.html},
  keywords = {Android (operating system),Android application package file,apps sharing platform,Block Based Programming,block-based languages,Catrobat,collaborative co -creative communities,computer science education,Computer Science Education,Encoding,FLOSS,foster computational thinking,foster open source,integrated development environment,Internet,knowledge-sharing,Mobile Applications,mobile apps,mobile computing,mobile devices,mobile open source visual coding framework,Open Source Development,Pocket Code,program apps,Programming profession,public domain software,Smart phones,teaching,teenagers,Tools,visual programming,Visual Programming,Visualization}
}

@inproceedings{muller_managing_2019,
  title = {Managing the Open Cathedral},
  booktitle = {Proceedings of the 2019 27th {{ACM Joint Meeting}} on {{European Software Engineering Conference}} and {{Symposium}} on the {{Foundations}} of {{Software Engineering}}},
  author = {Müller, Matthias},
  date = {2019-08-12},
  pages = {1176--1179},
  publisher = {{Association for Computing Machinery}},
  location = {{Tallinn, Estonia}},
  doi = {10.1145/3338906.3341461},
  url = {https://doi.org/10.1145/3338906.3341461},
  urldate = {2020-04-22},
  abstract = {Already early in the history of open source projects it became apparent that they are driven by only a few contributors, creating the biggest portion of code. Whereas this has already been shown in previous research, this work adds a time perspective and considers the dynamics and evolution of communities. These aspects become increasingly important with the growing involvement of firms in such communities. Open source software is today used in many commercial applications, but also gets actively developed by businesses. Therefore, understanding and managing such projects into a common direction gets of increasing interest. The author’s work is intended to build a better understanding of these communities, their dynamics over time, key players and dependencies on them.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J8JU2SNJ/Müller - 2019 - Managing the open cathedral.pdf},
  isbn = {978-1-4503-5572-8},
  keywords = {open source software,project management,repository analysis},
  series = {{{ESEC}}/{{FSE}} 2019}
}

@inproceedings{muller_streamlining_2019,
  title = {Streamlining Value in a {{FOSS}} Project},
  booktitle = {Proceedings of the 13th {{European Conference}} on {{Software Architecture}} - {{Volume}} 2},
  author = {Müller, Matthias and Vorraber, Wolfgang and Herold, Michael and Schindler, Christian and Slany, Wolfgang and Tanaka, Kenji},
  date = {2019-09-09},
  pages = {231--234},
  publisher = {{Association for Computing Machinery}},
  location = {{Paris, France}},
  doi = {10.1145/3344948.3344976},
  url = {https://doi.org/10.1145/3344948.3344976},
  urldate = {2020-04-22},
  abstract = {Today, different actors, such as developers, supporters, companies or public entities, contribute in different ways to non-profit open source software projects. The majority of them is contributing for individual and personal reasons, aiming to create (intangible) value that is important to themselves. Besides that, users are today often not directly involved in the development process. This results in the need to have a software and management structure that actively aligns these different actors, pays respect to their needs, and involves them in the software creation process. We present the case of Catrobat and how different influences, e.g., by contributors, users, or stakeholders, affect the project and its development. We outline the challenges that occur in practice when it comes to an open software project situated in a complex ecosystem of different actors and highlight the requirements on such a project and how they are encountered in the presented case.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5E93F55N/Müller et al. - 2019 - Streamlining value in a FOSS project.pdf},
  isbn = {978-1-4503-7142-1},
  keywords = {collaborative software development,ecosystems,open source software,value based software engineering},
  series = {{{ECSA}} '19}
}

@article{munaiah_bugs_2017,
  title = {Do Bugs Foreshadow Vulnerabilities? {{An}} in-Depth Study of the Chromium Project},
  shorttitle = {Do Bugs Foreshadow Vulnerabilities?},
  author = {Munaiah, Nuthan and Camilo, Felivel and Wigham, Wesley and Meneely, Andrew and Nagappan, Meiyappan},
  date = {2017-06-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {22},
  pages = {1305--1347},
  issn = {1573-7616},
  doi = {10.1007/s10664-016-9447-3},
  url = {https://doi.org/10.1007/s10664-016-9447-3},
  urldate = {2020-04-21},
  abstract = {As developers face an ever-increasing pressure to engineer secure software, researchers are building an understanding of security-sensitive bugs (i.e. vulnerabilities). Research into mining software repositories has greatly increased our understanding of software quality via empirical study of bugs. Conceptually, however, vulnerabilities differ from bugs: they represent an abuse of functionality as opposed to insufficient functionality commonly associated with traditional, non-security bugs. We performed an in-depth analysis of the Chromium project to empirically examine the relationship between bugs and vulnerabilities. We mined 374,686 bugs and 703 post-release vulnerabilities over five Chromium releases that span six years of development. We used logistic regression analysis, ranking analysis, bug type classifications, developer experience, and vulnerability severity metrics to examine the overarching question: are bugs and vulnerabilities in the same files? While we found statistically significant correlations between pre-release bugs and post-release vulnerabilities, we found the association to be weak. Number of features, source lines of code, and pre-release security bugs are, in general, more closely associated with post-release vulnerabilities than any of our non-security bug categories. In further analysis, we examined sub-types of bugs, such as stability-related bugs, and the associations did not improve. Even the files with the most severe vulnerabilities (by measure of CVSS or bounty payouts) did not show strong correlations with number of bugs. These results indicate that bugs and vulnerabilities are empirically dissimilar groups, motivating the need for security engineering research to target vulnerabilities specifically.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UWSXFM26/Munaiah et al. - 2017 - Do bugs foreshadow vulnerabilities An in-depth st.pdf},
  langid = {english},
  number = {3}
}

@inproceedings{munga_adoption_2009,
  title = {The {{Adoption}} of {{Open Source Software}} in {{Business Models}}: {{A Red Hat}} and {{IBM Case Study}}},
  shorttitle = {The {{Adoption}} of {{Open Source Software}} in {{Business Models}}},
  booktitle = {Proceedings of the 2009 {{Annual Research Conference}} of the {{South African Institute}} of {{Computer Scientists}} and {{Information Technologists}}},
  author = {Munga, Neeshal and Fogwill, Thomas and Williams, Quentin},
  date = {2009},
  pages = {112--121},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1632149.1632165},
  url = {http://doi.acm.org/10.1145/1632149.1632165},
  urldate = {2015-11-24},
  abstract = {Free / Libre open source software (FLOSS/OSS) has gained increasing popularity and utilisation in commercial and governmental organisations. Universities like Harvard and Stanford now offer courses on open source as a business and also on how businesses can compete with open source firms. However, very little research has been published in regards to the influence of OSS on business strategies; the use of OSS as a viable business or its value proposition within a commercial entity. The business model, a powerful tool for extracting economic value from the potential of technological innovation, clearly plays an important role in the success of a business. In this paper we investigate the role of open source in the business models of Red Hat and IBM and describe how OSS has contributed to their success. A framework recently developed by some of the authors is used to evaluate and identify the key factors important to the integration of OSS strategies into traditional business models.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W2GESV5K/Munga és mtsai. - 2009 - The Adoption of Open Source Software in Business M.pdf},
  isbn = {978-1-60558-643-4},
  keywords = {business models,case study,Commercial relations,development,nyílt forrás,Open source software},
  series = {{{SAICSIT}} '09}
}

@inproceedings{murphy_community_2017,
  title = {Community {{Engagement}} with {{Free}} and {{Open Source Software}}},
  booktitle = {Proceedings of the 2017 {{ACM SIGCSE Technical Symposium}} on {{Computer Science Education}}},
  author = {Murphy, Christian and Buffardi, Kevin and Dehlinger, Josh and Lambert, Lynn and Veilleux, Nanette},
  date = {2017-03-08},
  pages = {669--670},
  publisher = {{Association for Computing Machinery}},
  location = {{Seattle, Washington, USA}},
  doi = {10.1145/3017680.3017682},
  url = {https://doi.org/10.1145/3017680.3017682},
  urldate = {2020-04-22},
  abstract = {A common refrain from Senior Exit Surveys and Alumni Surveys is the desire to work on "real-world," "practical" and "hands-on" projects using industry-ready tools and development environments. To assuage this, institutions have moved towards adopting Free and Open Source Software (FOSS) as an avenue to provide meaningful, applied learning interventions to students. Through these experiences, students benefit from engagement with various communities including: the community of contributors to the FOSS project; the community of local software developers; the community of citizens who reside in the local area; the community of students at their institution and others; and, the community of people impacted by the FOSS project. These engagements motivate students, enhance their communication and technical skills, allow them to grow and become more confident, help them form professional networks, and provide the "real-world" projects they seek. In this panel, we will discuss our experiences in engaging students with five different types of communities as part of incorporating FOSS into our courses, focusing on how other educators can provide the same benefits to their students as well. In order to satisfy the time constraints of the panel, the last two authors will present together.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2CR89RIZ/Murphy et al. - 2017 - Community Engagement with Free and Open Source Sof.pdf},
  isbn = {978-1-4503-4698-6},
  keywords = {free and open source software (FOSS),humanitarian free and open source software (HFOSS),localized free and open source software (LFOSS),under-represented minorities (URM)},
  series = {{{SIGCSE}} '17}
}

@article{nancy_lynch_brewers_2002,
  title = {Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services},
  author = {{Nancy Lynch} and {Seth Gilbert}},
  date = {2002},
  journaltitle = {ACM SIGACT News},
  volume = {Volume 33},
  pages = {51--59},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HWXNE9GZ/CAP.pdf},
  issue = {Issue 2},
  keywords = {Availability,CAP theorem,Consistency}
}

@inproceedings{nanthaamornphong_empirical_2016,
  title = {Empirical Evaluation of Code Smells in Open Source Projects: Preliminary Results},
  shorttitle = {Empirical Evaluation of Code Smells in Open Source Projects},
  booktitle = {Proceedings of the 1st {{International Workshop}} on {{Software Refactoring}}},
  author = {Nanthaamornphong, Aziz and Chaisutanon, Apatta},
  date = {2016-09-04},
  pages = {5--8},
  publisher = {{Association for Computing Machinery}},
  location = {{Singapore, Singapore}},
  doi = {10.1145/2975945.2975947},
  url = {https://doi.org/10.1145/2975945.2975947},
  urldate = {2020-04-22},
  abstract = {Open Source Software (OSS) now plays an important role in various industry domains. OSS is generally developed by highly experienced developers who have multiple perspectives. However, previous studies have indicated that OSS has quality limitations in software maintainability. In general, OSS developers typically focus on achieving the correct functionality. In contrast, in addition to focusing on building software functionality, software engineering practices also focus on the structure of the software and on its maintainability. Code with a well-designed structure is more likely to result in high quality software. To better understand how peer code review can reduce ``code smells" in existing OSS projects, we examined comments from code reviewers that identified code smells in OSS projects. This paper is a proof-of-concept that presents the preliminary results from an analysis of comments we obtained for two OSS projects, OpenStack and WikiMedia, both of which use the code review data repository called Gerrit. The preliminary results of this ongoing research show that code reviewers comment on only a small number of code smells. The full-scale results would contribute to the empirical body of validated knowledge in the field of OSS quality and code review.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V6LGL8EY/Nanthaamornphong and Chaisutanon - 2016 - Empirical evaluation of code smells in open source.pdf},
  isbn = {978-1-4503-4509-5},
  keywords = {code smell,open source software,Software engineering},
  series = {{{IWoR}} 2016}
}

@inproceedings{napoleao_practical_2017,
  title = {Practical Similarities and Differences between {{Systematic Literature Reviews}} and {{Systematic Mappings}}: A Tertiary Study},
  shorttitle = {Practical Similarities and Differences between {{Systematic Literature Reviews}} and {{Systematic Mappings}}},
  author = {Napoleão, Bianca and Felizardo, Katia and Souza, Érica and Vijaykumar, Nandamudi},
  date = {2017-07-05},
  pages = {85--90},
  doi = {10.18293/SEKE2017-069},
  url = {http://ksiresearchorg.ipage.com/seke/seke17paper/seke17paper_69.pdf},
  urldate = {2018-09-14},
  abstract = {Background: Several researchers have reported their experiences in applying secondary studies in Software Engineering (SE), however, there is a lack of studies discussing the distinction between Systematic Mappings (SMs) and Systematic Literature Reviews (SLRs). Aims: The objective of this paper is to present the results of a tertiary study conducted to collect and evaluate evidence to better understand similarities and differences between SLRs and SMs related to four aspects: research question, search string, search strategy and quality assessment. Method: We identified 170 secondary studies that were reviewed to answer a set of Research Questions (RQ) related to the practical conduction of secondary studies in SE. Results: Results show that both SLRs and SMs have generic RQs, broad search strings, and adopt automatic search as search strategy. However, quality assessment has been more widely adopted in SLRs. Conclusions: In practice, only the quality assessment is conducted differently in SLRs and SMs.},
  eventtitle = {The 29th {{International Conference}} on {{Software Engineering}} and {{Knowledge Engineering}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UWGVBVNV/Napoleão et al. - 2017 - Practical similarities and differences between Sys.pdf},
  langid = {english}
}

@inproceedings{nascimento_adoption_2018,
  title = {The {{Adoption}} of {{Open Source Projects}} in {{Engineering Education}}: {{A Real Software Development Experience}}},
  shorttitle = {The {{Adoption}} of {{Open Source Projects}} in {{Engineering Education}}},
  booktitle = {2018 {{IEEE Frontiers}} in {{Education Conference}} ({{FIE}})},
  author = {Nascimento, Debora M. C. and Chavez, Christina F. G. and Bittencourt, Roberto A.},
  date = {2018-10},
  pages = {1--9},
  issn = {2377-634X},
  doi = {10.1109/FIE.2018.8658908},
  abstract = {This research to practice full paper investigates software engineering students' perceptions of their contact with open source projects as a real-world experience. Working with open source projects (OSPs) has been shown as an interesting option in software engineering courses to bringing students closer to more realistic environments. However, when instructors use this approach, it is not clear whether students perceive the OSP as a real industrial software project, or whether they perceive the tasks they perform over OSPs as typical or close to industrial software project activities. The goal of this work was to identify students' perceptions of their interaction with an open source project as a real world experience. To do so, we performed three mixed-methods case studies with three different undergraduate classes. Each class had a different focus: i) software maintenance and evolution, ii) software testing, and iii) reverse engineering of software requirements. Results show that students perceived features that make OSPs close to industrial projects, realized that their OSP tasks are close to the ones in industrial projects, and also faced difficulties typical of working with real world software. Moreover, students forged a view of the skills needed for their future professional success. We conclude that students realized that performing tasks in OSPs was a real world experience they took part, contributing to their background both for the competencies they acquired and the difficulties they had to overcome.},
  eventtitle = {2018 {{IEEE Frontiers}} in {{Education Conference}} ({{FIE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WYTGIAHJ/Nascimento et al. - 2018 - The Adoption of Open Source Projects in Engineerin.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HW2ZKXJ4/8658908.html},
  keywords = {computer aided instruction,Computer aided software engineering,computer science education,educational courses,engineering education,industrial projects,industrial software project activities,Industries,Interviews,open source project,OSP,program testing,real world software,reverse engineering,Software,software development,software engineering courses,software engineering students,software evolution,software maintenance,software requirements,software testing,Software testing,Task analysis,teaching,world experience}
}

@inproceedings{nascimento_does_2019,
  title = {Does {{FLOSS}} in {{Software Engineering Education Narrow}} the {{Theory}}-{{Practice Gap}}? {{A Study Grounded}} on {{Students}}’ {{Perception}}},
  shorttitle = {Does {{FLOSS}} in {{Software Engineering Education Narrow}} the {{Theory}}-{{Practice Gap}}?},
  booktitle = {Open {{Source Systems}}},
  author = {Nascimento, Debora Maria Coelho and von Flach Garcia Chavez, Christina and Bittencourt, Roberto Almeida},
  editor = {Bordeleau, Francis and Sillitti, Alberto and Meirelles, Paulo and Lenarduzzi, Valentina},
  date = {2019},
  pages = {153--164},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-20883-7_14},
  abstract = {Software engineering education is challenged by the need to convey practical experience in the context of a rich and large body of theoretical knowledge. This study investigates whether the use of open source projects can reduce the gap between theory and practice in undergraduate software engineering courses. Two qualitative case studies were conducted with students performing activities in an open source project, each one in a different course: software testing and software requirements. Results point out that the use of open source projects provides a concrete experience similar to industry experience, allows high cognitive engagement when performing tasks, favors understanding and content retention, and leads to the recognition of the usefulness of software engineering principles, techniques and methods.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WJV78SV3/Nascimento et al. - 2019 - Does FLOSS in Software Engineering Education Narro.pdf},
  isbn = {978-3-030-20883-7},
  keywords = {Education,Qualitative studies,Theory-practice gap},
  langid = {english},
  options = {useprefix=true},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{nassif_mokarzel_filho_collaboration_2019,
  ids = {filho\_collaboration\_2019},
  title = {Collaboration {{Tool}} for {{Distributed Open Source Verification}}},
  booktitle = {2019 {{ACM}}/{{IEEE}} 14th {{International Conference}} on {{Global Software Engineering}} ({{ICGSE}})},
  author = {Nassif Mokarzel Filho, Roger and de Souza Pereira, Matheus and Scaranello Faria, Cassia and Sandrini Lemos, Gizelle},
  date = {2019-05},
  pages = {139--142},
  doi = {10.1109/ICGSE.2019.00034},
  abstract = {Samsung R\&D Institute Brazil (SRBR) is one of Samsung's research centers around the world. SRBR work is focused on research on software development areas. SRBR software development teams have worked in collaboration with Samsung headquarters (HQ), located at South Korea, and Brazilian outsourcing companies (SIDI Institute and other Brazilian partners). Considering the massive volume of software developed by SRBR and partners teams, there naturally has been an enormous use and contribution of open source software. The usage of open source software (OSS) by Samsung and its research centers follows a process to ensure that all use is compliant with OSS licenses. This experience report describes OSKB (Open Source Knowledge Base) tool, a distributed collaboration Web application fully integrated with a tracking issue system, currently used by SRBR teams involved with software development for avoiding duplicated work and improving knowledge sharing among SRBR internal and partners teams. The main reasons behind OSKB development were automating the first step of OSS licenses verification activity reducing duplicated work, serving as a knowledge base of OSS analysis, reducing the time spent in back office operations related with OSS usage and mitigating OSS usage compliance risks.},
  eventtitle = {2019 {{ACM}}/{{IEEE}} 14th {{International Conference}} on {{Global Software Engineering}} ({{ICGSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B8IRREYJ/Nassif Mokarzel Filho et al. - 2019 - Collaboration Tool for Distributed Open Source Ver.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X8TGNBGP/Filho et al. - 2019 - Collaboration tool for distributed open source ver.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FRRHI5ZH/8807749.html},
  keywords = {collaboration tool,Companies,distributed collaboration tool,distributed collaboration Web application,distributed open source verification,Internet,knowledge based systems,Knowledge based systems,knowledge management,knowledge sharing,Licenses,open source knowledge base,open source license compliance,open source software,open source verification,OSKB development,OSKB tool,OSS licenses verification activity,outsourcing,public domain software,Research and development,Samsung headquarters,Samsung R&D Institute Brazil,Samsung research centers,Software,software engineering,Software engineering,SRBR software development teams,SRBR teams,Tools},
  options = {useprefix=true}
}

@report{national_institute_of_standards_and_technology_framework_2018,
  title = {Framework for {{Improving Critical Infrastructure Cybersecurity}}, {{Version}} 1.1},
  author = {{National Institute of Standards and Technology}},
  date = {2018-04-16},
  institution = {{National Institute of Standards and Technology}},
  location = {{Gaithersburg, MD}},
  doi = {10.6028/NIST.CSWP.04162018},
  url = {http://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.04162018.pdf},
  urldate = {2018-08-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7T5V8UTA/National Institute of Standards and Technology - 2018 - Framework for Improving Critical Infrastructure Cy.pdf},
  langid = {english},
  number = {NIST Cybersecurity White Paper}
}

@incollection{negara_is_2012,
  title = {Is It Dangerous to Use Version Control Histories to Study Source Code Evolution?},
  booktitle = {{{ECOOP}} 2012–{{Object}}-{{Oriented Programming}}},
  author = {Negara, Stas and Vakilian, Mohsen and Chen, Nicholas and Johnson, Ralph E. and Dig, Danny},
  date = {2012},
  pages = {79--103},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-31057-7_5},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U67H7IGH/studyVCSForEvolution.pdf}
}

@book{negyesi_imre_nyilt_nodate,
  title = {Nyílt Forráskódú Rendszerek Alkalmazása},
  author = {{Négyesi Imre} and {Muha Lajos}},
  publisher = {{NT Nonprofit Közhasznú Kft.}},
  location = {{Budapest}},
  isbn = {978-963-88855-1-7},
  keywords = {nyílt forrás}
}

@article{nelson_labkey_2011,
  title = {{{LabKey Server}}: An Open Source Platform for Scientific Data Integration, Analysis and Collaboration},
  shorttitle = {{{LabKey Server}}},
  author = {Nelson, Elizabeth K. and Piehler, Britt and Eckels, Josh and Rauch, Adam and Bellew, Matthew and Hussey, Peter and Ramsay, Sarah and Nathe, Cory and Lum, Karl and Krouse, Kevin},
  date = {2011},
  journaltitle = {BMC bioinformatics},
  volume = {12},
  pages = {71},
  url = {http://www.biomedcentral.com/1471-2105/12/71},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7GAX9K2E/art%3A10.1186%2F1471-2105-12-71.pdf},
  number = {1}
}

@misc{netproject_ltd_ida_nodate,
  title = {The {{IDA Open Source Migration Guidelines}}},
  author = {netproject Ltd},
  abstract = {Hogyan kell átállni OS-ra üzleti szoftverekből.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JWWPGHAN/IDA_OS_migration_guideline.pdf},
  options = {useprefix=true}
}

@incollection{neuhaus_software_2013,
  title = {Software Security Economics: {{Theory}}, in Practice},
  shorttitle = {Software Security Economics},
  booktitle = {The {{Economics}} of {{Information Security}} and {{Privacy}}},
  author = {Neuhaus, Stephan and Plattner, Bernhard},
  date = {2013},
  pages = {75--92},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-39498-0_4},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8A3V72BR/chp%3A10.1007%2F978-3-642-39498-0_4.pdf},
  keywords = {development,nyílt forrás,source}
}

@online{nfm_kormanyzati_nodate,
  title = {Kormányzati Informatika},
  author = {NFM},
  journaltitle = {Kormányportál},
  url = {http://www.kormany.hu/hu/nemzeti-fejlesztesi-miniszterium/infokommunikacioert-felelos-allamtitkarsag/felelossegi-teruletek/kormanyzati-informatika},
  urldate = {2013-05-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A9TGBPC4/kormanyzati-informatika.html}
}

@article{nguyen_crossrec_2020,
  title = {{{CrossRec}}: {{Supporting}} Software Developers by Recommending Third-Party Libraries},
  shorttitle = {{{CrossRec}}},
  author = {Nguyen, Phuong T. and Di Rocco, Juri and Di Ruscio, Davide and Di Penta, Massimiliano},
  date = {2020-03-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {161},
  pages = {110460},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2019.110460},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121219302341},
  urldate = {2020-04-22},
  abstract = {When creating a new software system, or when evolving an existing one, developers do not reinvent the wheel but, rather, seek available libraries that suit their purpose. In such a context, open source software repositories contain rich resources that can provide developers with helpful advice to support their tasks. However, the heterogeneity of resources and the dependencies among them are the main obstacles to the effective mining and exploitation of the available data. In this sense, advanced techniques and tools are needed to mine the metadata to bring in meaningful recommendations. In this paper, we present CrossRec, a recommender system to assist open source software developers in selecting suitable third-party libraries. CrossRec exploits a collaborative filtering technique to recommend libraries to developers by relying on the set of dependencies, which are currently included in the project being developed. We perform an empirical evaluation to compare the proposed approach with three state-of-the-art baselines, i.e., LibRec, LibFinder, and LibCUP on three considerably large datasets. The experimental results show that CrossRec overcomes the limitation of the baselines by recommending also libraries with a specific version. More importantly, it outperforms LibRec and LibCUP with respect to various quality metrics.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LA9UKX2F/Nguyen et al. - 2020 - CrossRec Supporting software developers by recomm.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F35L8SF8/S0164121219302341.html},
  keywords = {Mining software repositories,Open Source software,Recommender systems},
  langid = {english}
}

@inproceedings{nguyen_crosssim_2018,
  title = {{{CrossSim}}: {{Exploiting Mutual Relationships}} to {{Detect Similar OSS Projects}}},
  shorttitle = {{{CrossSim}}},
  booktitle = {2018 44th {{Euromicro Conference}} on {{Software Engineering}} and {{Advanced Applications}} ({{SEAA}})},
  author = {Nguyen, Phuong T. and Di Rocco, Juri and Rubei, Riccardo and Di Ruscio, Davide},
  date = {2018-08},
  pages = {388--395},
  doi = {10.1109/SEAA.2018.00069},
  abstract = {Software development is a knowledge-intensive activity, which requires mastering several languages, frameworks, technology trends (among other aspects) under the pressure of ever-increasing arrays of external libraries and resources. Recommender systems are gaining high relevance in software engineering since they aim at providing developers with real-time recommendations, which can reduce the time spent on discovering and understanding reusable artifacts from software repositories, and thus inducing productivity and quality gains. In this paper, we focus on the problem of mining open source software repositories to identify similar projects, which can be evaluated and eventually reused by developers. To this end, CrossSim is proposed as a novel approach to model open source software projects and related artifacts and to compute similarities among them. An evaluation on a dataset containing 580 GitHub projects shows that CrossSim outperforms an existing technique, which has been proven to have a good performance in detecting similar GitHub repositories.},
  eventtitle = {2018 44th {{Euromicro Conference}} on {{Software Engineering}} and {{Advanced Applications}} ({{SEAA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TMGIBS8J/Nguyen et al. - 2018 - CrossSim Exploiting Mutual Relationships to Detec.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3XWZJQV2/8498236.html},
  keywords = {Computational modeling,CrossSim,data mining,detect similar OSS projects,Ecosystems,exploiting mutual relationships,external libraries,knowledge-intensive activity,Libraries,Mining software repositories; software similarities; SimRank,Open source software,open source software projects,open source software repositories,project management,public domain software,real-time recommendations,recommender systems,related artifacts,reusable artifacts,Semantics,similar GitHub repositories,software development,software development management,software engineering,software reusability,Software systems,technology trends}
}

@inproceedings{nguyen_duc_coopetition_2017,
  ids = {duc\_coopetition\_2017},
  title = {Coopetition of {{Software Firms}} in {{Open Source Software Ecosystems}}},
  booktitle = {Software {{Business}}},
  author = {Nguyen Duc, Anh and Cruzes, Daniela S. and Hanssen, Geir K. and Snarby, Terje and Abrahamsson, Pekka},
  editor = {Ojala, Arto and Holmström Olsson, Helena and Werder, Karl},
  date = {2017},
  pages = {146--160},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-69191-6_10},
  abstract = {Software firms participate in an ecosystem as a part of their innovation strategy to extend value creation beyond the firm’s boundary. Participation in an open and independent environment also implies the competition among firms with similar business models and targeted markets. Hence, firms need to consider potential opportunities and challenges upfront. This study explores how software firms interact with others in OSS ecosystems from a coopetition perspective. We performed a quantitative and qualitative analysis of three OSS projects. Finding shows that software firms emphasize the co-creation of common value and partly react to the potential competitiveness on OSS ecosystems. Six themes about coopetition were identified, including spanning gatekeepers, securing communication, open-core sourcing and filtering shared code. Our work contributes to software engineering research with a rich description of coopetition in OSS ecosystems. Moreover, we also come up with several implications for software firms in pursing a harmony participation in OSS ecosystems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9TE8USCN/Duc et al. - 2017 - Coopetition of Software Firms in Open Source Softw.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D9L62ZV4/Nguyen Duc et al. - 2017 - Coopetition of Software Firms in Open Source Softw.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4BMIL2JC/978-3-319-69191-6_10.html},
  isbn = {978-3-319-69191-6},
  keywords = {Case study,Collaboration,Competition,Coopetition,SECO,Software ecosystem},
  langid = {english},
  series = {Lecture {{Notes}} in {{Business Information Processing}}}
}

@inproceedings{nguyen_large-scale_2016,
  title = {A {{Large}}-{{Scale Study}} on {{Repetitiveness}}, {{Containment}}, and {{Composability}} of {{Routines}} in {{Open}}-{{Source Projects}}},
  booktitle = {2016 {{IEEE}}/{{ACM}} 13th {{Working Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tien N.},
  date = {2016-05},
  pages = {362--373},
  abstract = {Source code in software systems has been shown to have a good degree of repetitiveness at the lexical, syntactical, and API usage levels. This paper presents a large-scale study on the repetitiveness, containment, and composability of source code at the semantic level. We collected a large dataset consisting of 9,224 Java projects with 2.79M class files, 17.54M methods with 187M SLOCs. For each method in a project, we build the program dependency graph (PDG) to represent a routine, and compare PDGs with one another as well as the subgraphs within them. We found that within a project, 12.1\% of the routines are repeated, and most of them repeat from 2-7 times. As entirety, the routines are quite project-specific with only 3.3\% of them exactly repeating in 1-4 other projects with at most 8 times. We also found that 26.1\% and 7.27\% of the routines are contained in other routine(s), i.e., implemented as part of other routine(s) elsewhere within a project and in other projects, respectively. Except for trivial routines, their repetitiveness and containment is independent of their complexity. Defining a subroutine via a per-variable slicing subgraph in a PDG, we found that 14.3\% of all routines have all of their subroutines repeated. A high percentage of subroutines in a routine can be found/reused elsewhere. We collected 8,764,971 unique subroutines (with 323,564 unique JDK subroutines) as basic units for code searching/synthesis. We also provide practical implications of our findings to automated tools.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 13th {{Working Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6V3QYBWK/Nguyen et al. - 2016 - A Large-Scale Study on Repetitiveness, Containment.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TR8CGN9T/7832915.html},
  keywords = {Algorithms,API usage levels,Code Reuse,code searching,code synthesis,Complexity theory,Composability,Containment,graph theory,Java,Java projects,JDK subroutines,lexical usage levels,Libraries,open-source projects,PDG,per-variable slicing subgraph,program dependency graph,public domain software,Repetitiveness,semantic level,Semantics,Software,software systems,source code (software),source code composability,source code containment,source code repetitiveness,subroutines,syntactical usage levels,Syntactics}
}

@article{nicholson_scada_2012,
  title = {{{SCADA}} Security in the Light of {{Cyber}}-{{Warfare}}},
  author = {Nicholson, A. and Webber, S. and Dyer, S. and Patel, T. and Janicke, H.},
  date = {2012-06},
  journaltitle = {Computers \& Security},
  volume = {31},
  pages = {418--436},
  issn = {01674048},
  doi = {10.1016/j.cose.2012.02.009},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167404812000429},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V4DNINIA/1-s2.0-S0167404812000429-main.pdf},
  langid = {english},
  number = {4}
}

@inproceedings{nidy_community_2005,
  title = {Community Source Development: An Emerging Model with New Opportunities},
  shorttitle = {Community Source Development},
  booktitle = {{{CHI}}'05 {{Extended Abstracts}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Nidy, Dawn Ressel and Kwok, Fong},
  date = {2005},
  pages = {1697--1700},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1057000},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UT34IZEQ/p1697-nidy.pdf},
  keywords = {adoption,nyílt forrás}
}

@misc{niemeyer_challenge_2016,
  title = {The {{Challenge}} and {{Promise}} of {{Software Citation}} for {{Credit}}, {{Identification}}, {{Discovery}}, and {{Reuse}}},
  author = {Niemeyer, Kyle E. and Smith, Arfon M. and Katz, Daniel S.},
  date = {2016-10-06},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/2968452},
  urldate = {2020-04-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GEXP3NWX/Niemeyer et al. - 2016 - The Challenge and Promise of Software Citation for.pdf},
  keywords = {attribution,Software citation,software credit}
}

@article{nijhawan_srgm_2018,
  title = {An {{SRGM}} for {{Multi}}-{{Release Open Source Software System}}},
  author = {Nijhawan, Nidhi and Aggarwal, Anu G. and Dhaka, Vikas},
  date = {2018-03-15},
  journaltitle = {International Journal of Innovation and Technology Management},
  shortjournal = {Int. J. Innovation Technol. Management},
  volume = {15},
  pages = {1850011},
  issn = {0219-8770},
  doi = {10.1142/S0219877018500116},
  url = {https://www.worldscientific.com/doi/abs/10.1142/S0219877018500116},
  urldate = {2018-08-13},
  abstract = {A number of software reliability growth models have been reported in the literature for open source software (OSS) systems but the effect of up-gradations on the reliability growth of multi-releases of such software systems has been discussed by a few. In this paper, the discrete modeling framework has been proposed to study the reliability growth process of OSS systems with multiple releases. The proposed model is based upon the assumption that during up-gradation some new faults are introduced in the code in addition to the left over fault content of the previous version. To validate our model, we have chosen two successful open source projects-Mozilla and Apache for its multi release failure datasets. Graphs representing goodness of fit of the proposed model have been drawn. The parameter estimates and measures of goodness of fit criteria suggest that the proposed software reliability growth model for multi-release OSS fits the actual datasets very well. An optimal release policy has been formulated by taking into account the cost of fault removal during testing and operational phases and reliability targets pre-specified by the decision makers. In addition, numerical example along with the sensitivity analysis has been provided to illustrate optimal release policy.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XNN3P23H/S0219877018500116.html},
  number = {02}
}

@inproceedings{nishimura_analysis_2009,
  title = {Analysis of a {{Security Incident}} of {{Open Source Middleware}} \&\#150; {{Case Analysis}} of 2008 {{Debian Incident}} of {{OpenSSL}}},
  author = {Nishimura, Takeshi and Sato, Hiroyuki},
  date = {2009-07},
  pages = {247--250},
  publisher = {{IEEE}},
  doi = {10.1109/SAINT.2009.73},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5230786},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NIPJ8GWD/05230786.pdf},
  isbn = {978-1-4244-4776-3},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{nissanke_component_2005,
  title = {Component Security-Issues and an Approach},
  booktitle = {Computer {{Software}} and {{Applications Conference}}, 2005. {{COMPSAC}} 2005. 29th {{Annual International}}},
  author = {Nissanke, Nimal},
  date = {2005},
  volume = {2},
  pages = {152--155},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1508103},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KC8XDJBI/01508103.pdf},
  keywords = {computer security,nyílt forrás}
}

@article{nivethan_use_2016,
  title = {On the Use of Open-Source Firewalls in {{ICS}}/{{SCADA}} Systems},
  author = {Nivethan, Jeyasingam},
  date = {2016-04-29},
  journaltitle = {Information Security Journal A Global Perspective},
  shortjournal = {Information Security Journal A Global Perspective},
  volume = {25},
  pages = {83--93},
  doi = {10.1080/19393555.2016.1172283},
  abstract = {Firewalls are one of the most widely used security devices to protect a communications network. They help secure it by blocking unwanted traffic from entering or leaving the protected network. Several commercial vendors have extended their firewall capabilities to support SCADA protocols or designed SCADA-specific firewalls. Although open-source firewalls are used successfully in IT networks, their use in SCADA networks has not been properly investigated. In this research we investigate the major open-source firewalls for their use in SCADA networks and identify Linux iptables’ potential as an effective SCADA firewall. Iptables is a powerful open-source firewall solution available as part of most Linux distributions in use today. In general, use of iptables as a network-level firewall for SCADA systems has been limited to basic port and host filtering, without further inspection of control messages. We propose and demonstrate a novel methodology to use iptables as an effective firewall for SCADA systems. This is achieved by utilizing advanced iptables features that allow for dynamic inspection of packet data. It is noteworthy to mention that the proposed solution does not require any modification to the netfilter/iptables framework, making it possible to turn a Linux system into an effective SCADA firewall. The approach has been tested by defining filtering rules for the Modbus TCP protocol and validating its ability to defend against various attacks on the protocol.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MHHJLEZ4/Nivethan - 2016 - On the use of open-source firewalls in ICSSCADA s.pdf}
}

@legislation{noauthor_1479/2011._nodate,
  title = {1479/2011. ({{XII}}. 23.) {{Korm}}. Határozat Az Egyes Közigazgatási Szervek Által Használt Elektronikus Dokumentumok Formátumáról És a Nyílt Forráskódú Irodai Szoftverek Használatáról},
  shorttitle = {1479/2011. ({{XII}}. 23.) {{Korm}}. Határozat},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8VJKG5AB/1479-2011_Korm_hat.pdf},
  number = {1479/2011.}
}

@legislation{noauthor_2009._nodate,
  title = {2009. Évi {{CLV}}. Törvény  a Minősített Adat Védelméről},
  url = {http://net.jogtar.hu/jr/gen/hjegy_doc.cgi?docid=A0900155.TV},
  number = {2009. évi CLV. törvény}
}

@legislation{noauthor_2012._2012,
  title = {2012. Évi {{CLXVI}}. Törvény {{A}} Létfontosságú Rendszerek És Létesítmények Azonosításáról, Kijelölésérõl És Védelmérõl},
  date = {2012},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R6WUNAZQ/MK_12_154.pdf}
}

@misc{noauthor_2013_nodate,
  title = {2013 {{Sonatype Survey Findings}}},
  publisher = {{The Component Lifecycle Management Company}},
  url = {http://blog.sonatype.com/people/2013/04/sonatype-announces-results-from-oss-survey/},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QUHKWS9X/Sonatype_2013Survey.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SNFK2ZSS/chp%3A10.1007%2F978-0-387-09684-1_3.pdf}
}

@misc{noauthor_2013._2013,
  title = {2013. évi L. törvény},
  date = {2013-04-25},
  publisher = {{Magyar Közlöny Lap- és Könyvkiadó}},
  url = {http://www.kozlonyok.hu/nkonline/MKPDF/hiteles/MK13069.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7UDKBARV/Módosították az információbiztonsági törvényt - első benyomások - Blog az információbiztonsági törvényről.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T8FER7X9/MK13069.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XP9WC3GW/Módosult információbiztonsági előírások _ hírek _ Jogi Fórum.pdf},
  keywords = {IBTV},
  langid = {magyar}
}

@article{noauthor_2080/2008._2008,
  title = {2080/2008. ({{VI}}. 30.) {{Korm}}. Határozat a {{Kritikus Infrastruktúra Védelem Nemzeti Programjáról}}},
  shorttitle = {2080/2008. ({{VI}}. 30.) {{Korm}}. Határozat},
  date = {2008},
  journaltitle = {Határozatok Tára},
  volume = {2008},
  pages = {216--231},
  issn = {1217-3533},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9BP3TDNB/Krit_Infrast_Ved_Nemz_Prog.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DNX853PR/31.pdf},
  number = {31}
}

@legislation{noauthor_233/2013._nodate,
  title = {233/2013. ({{VI}}. 30.) {{Korm}}. Rendelet Az Elektronikus Információs Rendszerek Kormányzati Eseménykezelő Központjának, Ágazati Eseménykezelő Központjainak, Valamint a Létfontosságú Rendszerek És Létesítmények Eseménykezelő Központja Feladat- És Hatásköréről},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CVBCE8D4/233-2013_(VI_30)_Korm_rendelet.pdf}
}

@legislation{noauthor_41/2015._2018,
  title = {41/2015. ({{VII}}. 15.) {{BM}} Rendelet},
  date = {2018-05-10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DBEH5M9N/41-2015.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MCLWBJ8I/41_2015. (VII. 15.) BM rendelet.pdf}
}

@online{noauthor_7_nodate,
  title = {7 {{Reasons Not}} to {{Use Open Source Software}} | {{CIO}}},
  url = {http://www.cio.com/article/2378859/open-source-tools/7-reasons-not-to-use-open-source-software.html},
  urldate = {2015-07-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CH5GB9VD/7 Reasons Not to Use Open Source Software _ CIO.pdf}
}

@legislation{noauthor_77/2013._nodate,
  title = {77/2013. ({{XII}}. 19.) {{NFM}} Rendelet Az Állami És Önkormányzati Szervek Elektronikus Információbiztonságáról Szóló 2013. Évi {{L}}. Törvényben Meghatározott Technológiai Biztonsági, Valamint Biztonságos Információs Eszközökre, Termékekre Vonatkozó, Valamint a Biztonsági Osztályba És Biztonsági Szintbe Sorolási Követelményeiről},
  shorttitle = {77/2013. ({{XII}}. 19.) {{NFM}} Rendelet},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U95HGQF2/Lajos_tv_nfmrend0813.pdf}
}

@online{noauthor_about_nodate,
  title = {About {{Ohloh}}},
  journaltitle = {Ohloh Meta},
  url = {http://meta.ohloh.net/us/},
  urldate = {2012-10-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HMZGRTMT/us.html}
}

@online{noauthor_about_nodate-1,
  title = {About {{Open}}-{{DO}}},
  url = {http://www.open-do.org/about/},
  urldate = {2013-04-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XNZ4TCND/about.html}
}

@online{noauthor_about_nodate-2,
  title = {About {{OSSI}} - {{Open Source Software Institute}}},
  url = {http://oss-institute.org/about-ossi/about},
  urldate = {2013-05-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FK9AIKGS/about.html}
}

@online{noauthor_about_nodate-3,
  title = {About {{Open Source}} for {{America}}},
  url = {http://opensourceforamerica.org/about-osfa/about/},
  urldate = {2013-05-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R24SVADK/about.html}
}

@online{noauthor_alitheia_nodate,
  title = {Alitheia {{Core}} - {{A}} Platform for Software Engineering Research},
  journaltitle = {SQO-OSS},
  url = {http://www.sqo-oss.org/},
  urldate = {2012-10-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BVVATDTW/www.sqo-oss.org.html}
}

@misc{noauthor_application_nodate,
  title = {Application {{Security}}: {{The}} Case for {{Open Source Software}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WNZW233X/___06.pdf},
  keywords = {Application Security,open source}
}

@online{noauthor_association_nodate,
  title = {Association for {{Computing Machinery}}},
  url = {http://www.acm.org/search?SearchableText=libre+software},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ISI6JJ4B/search.html}
}

@online{noauthor_az_nodate,
  title = {Az Informatikai Biztonság Fogalma Tartalma És Határai},
  journaltitle = {ITB.hu},
  url = {http://www.itb.hu/ajanlasok/a12/html/a12_1.htm},
  urldate = {2012-10-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PN9QN8V9/a12_1.html}
}

@misc{noauthor_az_nodate-1,
  title = {Az {{Ibtv}}.-Ben Meghatározott Feladatok  a Áttekintése a Törvény Hatálya Alá Tartozó Szervezetek Vonatkozásában},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R6BA8HBT/utmutato_ibtv_final.pdf},
  keywords = {IBTV}
}

@inproceedings{noauthor_best_nodate,
  title = {Best Practices in Open Source Governance :},
  url = {http://www.slideshare.net/eurolinux/governance-v25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AVEMVNB9/Best_practices_in_open_source_governance_lowres.pdf}
}

@online{noauthor_biztonsag_nodate,
  title = {Biztonság: {{Google}}-Ultimátum És Két Támadás},
  journaltitle = {hwsw},
  url = {http://www.hwsw.hu/hirek/50355/google-biztonsag-drupal-ruby-on-rails.html},
  urldate = {2013-06-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XD66ZB4F/7n1eljjk.html}
}

@misc{noauthor_bonnyai_tunde_phd.pdf_nodate,
  title = {Bonnyai\_tunde\_phd.Pdf}
}

@misc{noauthor_brazil_nodate,
  title = {Brazil and {{Open Source}}},
  url = {http://www.charlesleadbeater.net/cms/xstandard/Brazil_Open_Source.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3DWMAGQ2/Brazil_Open_Source.pdf}
}

@online{noauthor_brazil_nodate-1,
  title = {Brazil and Open Source | {{Baud Labs}}},
  url = {http://www.baudlabs.com/brazil-and-open-source/},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S66D84U7/brazil-and-open-source.html}
}

@online{noauthor_browser_nodate,
  title = {Browser Market Share},
  url = {https://netmarketshare.com/browser-market-share.aspx},
  urldate = {2018-08-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KCQ7I2ZN/browser-market-share.html}
}

@misc{noauthor_case_nodate,
  title = {Case {{Study}}: {{Userful MultiSeat Education}}},
  url = {http://www.userful.com/downloads/case-studies/Userful-CaseStudy-Brazil.pdf},
  urldate = {2013-05-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C4CF6MC7/Userful-CaseStudy-Brazil.pdf}
}

@online{noauthor_choosing_nodate,
  title = {Choosing Technology — {{Government Service Design Manual}}},
  url = {https://www.gov.uk/service-manual/making-software/choosing-technology},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VRD28HB4/choosing-technology.html}
}

@report{noauthor_common_2012,
  title = {Common {{Criteria}} for {{Information Technology Security Evaluation}}},
  date = {2012},
  url = {http://www.commoncriteriaportal.org/cc/},
  urldate = {2013-04-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6V8F78FN/CCPART1V3.1R4.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EGDXA2NH/CCPART2V3.1R4.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GDMTP57J/CCPART3V3.1R4.pdf},
  keywords = {information security},
  langid = {english}
}

@online{noauthor_companies_nodate,
  title = {Companies {{Supporting The OpenStack Foundation}}},
  journaltitle = {www.openstack.org},
  url = {http://www.openstack.org/foundation/companies/},
  urldate = {2012-10-20}
}

@misc{noauthor_council_2008,
  title = {{{COUNCIL DIRECTIVE}} 2008/114/{{EC}}},
  date = {2008-12-08},
  url = {http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2008:345:0075:0082:EN:PDF},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QTN8CBKG/COUNCIL_DIRECTIVE_2008_114_EC.pdf}
}

@misc{noauthor_critical_nodate,
  title = {Critical '{{Ghost}}' {{Linux}} Flaw Can Be Exploited through {{WordPress}}, Other {{PHP}} Apps},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8Q6SQ68P/Critical 'Ghost' Linux flaw can be exploited through WordPress, other PHP apps _ PCWorld.pdf}
}

@online{noauthor_croatian_nodate,
  title = {Croatian Government Creates Working Group on Open Source and Open Standards | {{Joinup}}},
  url = {https://joinup.ec.europa.eu/community/osor/news/croatian-government-creates-working-group-open-source-and-open-standards},
  urldate = {2013-05-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/73FS5VZ6/croatian-government-creates-working-group-open-source-and-open-standards.html}
}

@online{noauthor_cs231n_nodate,
  title = {{{CS231n Convolutional Neural Networks}} for {{Visual Recognition}}},
  url = {https://cs231n.github.io/neural-networks-case-study/#grad},
  urldate = {2020-06-08},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/866B8YVL/neural-networks-case-study.html}
}

@online{noauthor_cyber_nodate,
  title = {Cyber {{Risk Remediation Analysis}} | {{The MITRE Corporation}}},
  url = {http://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/cyber-risk-remediation-analysis},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UMRSUJQB/cyber-risk-remediation-analysis.html},
  keywords = {Cyber-Security,Risk management}
}

@online{noauthor_data.gov_nodate,
  title = {Data.Gov Empowering People},
  journaltitle = {Data.gov},
  url = {http://www.data.gov/about},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B5TFUU5E/About Data.gov — www.data.pdf}
}

@misc{noauthor_department_2007,
  title = {Department of the {{Navy Open Source Software Guidance}}},
  date = {2007-06-05},
  publisher = {{Department of the Navy}},
  url = {http://oss-institute.org/storage/documents/Resources/policy/2007_doncio_oss_guidance.pdf},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HUMQ3UWJ/2007_doncio_oss_guidance.pdf}
}

@online{noauthor_digital_2013,
  title = {Digital {{Government}}: {{Building}} a 21st {{Century Platform}} to {{Better Serve}} the {{American People}}},
  date = {2013},
  url = {https://www.whitehouse.gov/sites/default/files/omb/egov/digital-government/digital-government.html},
  urldate = {2016-01-07},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PTGQHC5X/digital-government.html}
}

@book{noauthor_e-commerce_2003,
  title = {E-Commerce and Development Report 2003},
  date = {2003},
  publisher = {{United Nations}},
  location = {{Geneva}},
  url = {http://unctad.org/en/docs/ecdr2003_en.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FTGTB7PK/2003 - E-commerce and development report 2003.pdf},
  isbn = {92-1-112602-9}
}

@misc{noauthor_e-kozigazgatasi_2012,
  title = {E-Közigazgatási {{Szabad Szoftver Kompetencia Központ}} Létrehozása {{EKOP}}-1.2.15-2011-2011-0001},
  shorttitle = {E-Közigazgatási Komp. Központ},
  date = {2012},
  url = {http://magyaryprogram.kormany.hu/e-kozigazgatasi-szabad-szoftver-kompetencia-kozpont-letrehozasa},
  urldate = {2013-05-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M8DQRENM/Sajtóközlemény_20121126.pdf}
}

@article{noauthor_emergence_2007,
  title = {The {{Emergence}} of {{Open}}-{{Source Software}} in {{China}}},
  date = {2007},
  journaltitle = {The International Review of Research in Open and Distance Learning},
  volume = {Vol 8.},
  url = {http://www.irrodl.org/index.php/irrodl/article/view/331/762},
  urldate = {2013-05-22},
  abstract = {The open-source software movement is gaining increasing momentum in China. Of the limited numbers of open-source software in China, Red Flag Linux stands out most strikingly, commanding 30 percent share of the Chinese software market. Unlike the spontaneity of open-source movement in North America, open-source software development in China, such as Red Flag Linux, is an orchestrated activity wherein different levels of China's government play a vital role in sponsoring, incubating, and using open-source software, most conspicuously, Red Flag Linux. While there are no reports on open-source course management system in China, there are reports on the study and use of Western open-source course management systems for instruction and learning in Chinese higher education institutions. This paper discusses the current status of open-source software in China, including open-source course management software and associated tools and resources. Importantly, it describes the development model of Red Flag Linux, the most successful open-source software initiative in China. In addition, it explores the possibility of Chinese higher education institutions joining efforts to develop China’s own open-source course management system using the open-source development model established in North America. A timeline of current and major open-source projects of significance in China is provided. The paper concludes with a discussion of the potential for applying the open-source software development model to open and distance education in China.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FX85XNHZ/762.html},
  keywords = {China,online communities,open source},
  number = {1}
}

@online{noauthor_eurograbber_nodate,
  title = {Eurograbber Online Banking Scam\_banking {{Trojan}}},
  journaltitle = {Techworld},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4A3EBQ5S/Eurograbber online banking scam_banking Trojan - Techworld.pdf}
}

@online{noauthor_explore_nodate,
  title = {Explore {{The Eclipse Membership}}},
  journaltitle = {eclipse.org},
  url = {http://www.eclipse.org/membership/exploreMembership.php},
  urldate = {2012-10-18}
}

@report{noauthor_federal_2007,
  title = {The {{Federal Open Source Referendum}}},
  date = {2007},
  institution = {{Federal Open Source Alliance}},
  url = {http://www.meritalk.com/uploads_legacy/presentations/Federal%20Open%20Source%20Alliance%20-%20Referendum%20Study.pdf},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RFV2SG5K/Federal Open Source Alliance - Referendum Study.pdf}
}

@online{noauthor_free-gov_nodate,
  title = {Free-Gov Free Software Initiative},
  url = {https://free-gov.org/about_free-gov},
  urldate = {2013-05-06},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9Z3RRUQ7/about_free-gov.html}
}

@misc{noauthor_fusesource_nodate,
  title = {{{FuseSource Overview}}},
  publisher = {{RedHat}},
  url = {http://fusesource.com/collateral/50/},
  urldate = {2012-10-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V7T8J4EZ/FuseSource Overview.pdf}
}

@online{noauthor_gaping_nodate,
  title = {Gaping {{Hole}} in {{Apple Device Security Affects ALL iOS}} and {{OSX Machines}}},
  journaltitle = {GeekBeat.tv},
  url = {http://geekbeat.tv/gaping-hole-in-apple-device-security-affects-all-ios-and-osx-machines/},
  keywords = {biztonság,eset,mac,OSS}
}

@online{noauthor_general_nodate,
  title = {General Information about the {{Joinup}} Platform.},
  journaltitle = {Joinup},
  url = {https://joinup.ec.europa.eu/page/about_us},
  urldate = {2013-05-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DBE8WJUT/about_us.html}
}

@online{noauthor_github_nodate,
  title = {{{GitHub}} and {{HSBC}} Hit by {{DDoS}} Attacks — Www.h-Online.Com — {{Readability}}},
  url = {http://www.h-online.com/security/news/item/GitHub-and-HSBC-hit-by-DDoS-attacks-1732898.html},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QV5I9HMA/twjxi1u5.html}
}

@online{noauthor_government_nodate,
  title = {Government Mandates 'preference' for Open Source},
  url = {http://www.computerweekly.com/news/2240179643/Government-mandates-preference-for-open-source},
  urldate = {2013-03-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5QM7UI7B/Government mandates 'preference' for open source — www.computerweekly.pdf}
}

@online{noauthor_graphing_nodate,
  title = {Graphing {{Calculator}} - {{GeoGebra}}},
  url = {https://www.geogebra.org/graphing},
  urldate = {2018-12-08},
  abstract = {Interactive, free online graphing calculator from GeoGebra: graph functions, plot data, drag sliders, and much more!},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TWIZQLU2/graphing.html},
  langid = {english}
}

@online{noauthor_hacking_nodate,
  title = {Hacking {{BIOS Chips Isn}}'t {{Just}} the {{NSA}}'s {{Domain Anymore}} | {{WIRED}}},
  url = {http://www.wired.com/2015/03/researchers-uncover-way-hack-bios-undermine-secure-operating-systems/},
  urldate = {2015-07-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z7BF7NWM/Hacking BIOS Chips Isn't Just the NSA's Domain Anymore _ WIRED.pdf}
}

@misc{noauthor_halozati_2019,
  title = {A Hálózati És Információs Rendszerek Biztonságára Vonatkozó {{Stratégia}}},
  date = {2019},
  publisher = {{Belügyminisztérium}},
  url = {https://www.kormany.hu/download/2/f9/81000/Strat%C3%A9gia%20honlapon%20k%C3%B6zz%C3%A9t%C3%A9telre-20180103_4829494_2_20190103130721.pdf#!DocumentBrowse},
  urldate = {2020-07-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4CHNW928/Stratégia honlapon közzétételre-20180103_4829494_2_20190103130721.pdf}
}

@online{noauthor_heartbleed_nodate,
  title = {Heartbleed {{Bug}}},
  url = {http://heartbleed.com/},
  urldate = {2014-04-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6I2V2R8U/heartbleed.com.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CWHBNICS/heartbleed.com.html},
  keywords = {SSH,SSL,vulnerability}
}

@online{noauthor_history_nodate,
  title = {History of the {{OSI}} | {{Open Source Initiative}}},
  url = {http://opensource.org/history},
  urldate = {2013-05-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/U32IBIDK/history.html}
}

@online{noauthor_how_nodate,
  title = {How to Use the {{EUPL}}},
  journaltitle = {Joinup},
  url = {https://joinup.ec.europa.eu/software/page/eupl/how-use-eupl},
  urldate = {2015-07-09},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SZKSPNDQ/How to use the EUPL _ Joinup.pdf}
}

@online{noauthor_ibm_2007,
  title = {{{IBM}} and {{Raytheon Deliver Technology Solution}} for {{DDG}} 1000 {{Next Generation Navy Destroyers}}},
  date = {2007},
  url = {http://www-03.ibm.com/press/us/en/pressrelease/21033.wss},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2P88EUSF/21033.html}
}

@online{noauthor_information_nodate,
  title = {Information {{Rules}}: {{A Strategic Guide}} to {{The Network Economy}}},
  shorttitle = {(2) ({{PDF}}) {{Information Rules}}},
  journaltitle = {ResearchGate},
  url = {https://www.researchgate.net/publication/200167344_Information_Rules_A_Strategic_Guide_to_The_Network_Economy},
  urldate = {2020-05-30},
  abstract = {ResearchGate is a network dedicated to science and research. Connect, collaborate and discover scientific publications, jobs and conferences. All for free.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TP5D7GTW/200167344_Information_Rules_A_Strategic_Guide_to_The_Network_Economy.html},
  langid = {english}
}

@online{noauthor_interbase_nodate,
  title = {Interbase Back Door Exposed},
  url = {http://www.securityfocus.com/news/136},
  urldate = {2013-04-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EP547BP5/136.html},
  keywords = {Closed source,Példa,security}
}

@online{noauthor_iran_nodate,
  title = {Iran Develops National Operating System},
  journaltitle = {PressTV},
  url = {http://presstv.com/detail/199171.html},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6IEB9CTJ/PressTV - Iran develops national operating system.pdf}
}

@misc{noauthor_iso/fdis_2009,
  title = {{{ISO}}/{{FDIS}} 31000 {{Risk}} Management — {{Principles}} and Guidelines},
  date = {2009},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8GUH4VNG/ISO 31000-2009 Risk Management.pdf},
  keywords = {Risk management,Standard}
}

@book{noauthor_iso/iec_2002,
  title = {{{ISO}}/{{IEC Guide}} 73:2002 {{Risk}} Management - {{Vocabulary}} - {{Guidelines}} for Use in Standards},
  date = {2002},
  edition = {first edition},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9UFKQRTN/ISO-IEC Guide 73 2002 Risk Management - Vocabulary.pdf},
  isbn = {0-580-40178-2},
  keywords = {Definitions,Risk management,Standard}
}

@misc{noauthor_iso/iec_2013,
  title = {{{ISO}}/{{IEC}} 27002 {{Information}} Technology — {{Security}} Techniques — {{Code}} of Practice for Information Security Controls},
  date = {2013},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DHQXWDN6/ISO-IEC_27002-.pdf}
}

@misc{noauthor_iso/iec_nodate,
  title = {{{ISO}}/{{IEC}} 7498-2-1998 {{Security Architecture Framework}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XBQ4MCF6/7498-2-1988_ISO-OSI.pdf},
  keywords = {Audit,Security framework}
}

@misc{noauthor_iso/iec_nodate-1,
  title = {{{ISO}}/{{IEC}} 7498-1 {{Information}} Technology -- {{Open Systems Interconnection}} -- {{Basic Reference Model}}: {{The Basic Model}}},
  shorttitle = {{{ISO}}/{{IEC}} 7498-1},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7Q7N7XX7/iso_iec-7498-1.pdf}
}

@misc{noauthor_iso/iec_nodate-2,
  title = {{{ISO}}/{{IEC}} 7498-4},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VJEG4344/iso_iec-7498-4.pdf}
}

@legislation{noauthor_kozigazgatasi_2008,
  title = {Közigazgatási {{Informatikai Bizottság}} 25. Számú {{Ajánlása}}: {{Az}} Informatikai Biztonság Irányításának Vizsgálata},
  date = {2008},
  url = {http://www.ekk.gov.hu/hu/kib/KIB-25-1-3_IBIV_V1_0_vegl.pdf},
  urldate = {2013-03-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EI7I7R2M/KIB-25-1-3_IBIV_V1_0_vegl.pdf}
}

@online{noauthor_lipsz_nodate,
  title = {{{LIPSZ}} - {{Mi}} a Szabad Szoftver És a Nyílt Forráskód Közötti Különbség?},
  url = {http://www.lipsz.hu/tudasbazis/212-mi-a-szabad-szoftver-es-a-nyilt-forraskod-koezoetti-kueloenbseg.html},
  urldate = {2013-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TAQUE35N/212-mi-a-szabad-szoftver-es-a-nyilt-forraskod-koezoetti-kueloenbseg.html}
}

@online{noauthor_magunkrol_2015,
  title = {Magunkról | {{GovCERT}}-{{Hungary}}},
  date = {2015},
  url = {http://www.cert-hungary.hu/node/1},
  urldate = {2015-06-08},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QNIZ6WPB/1.html}
}

@online{noauthor_meet_nodate,
  title = {Meet ‘{{Project Zero}},’ {{Google}}’s {{Secret Team}} of {{Bug}}-{{Hunting Hackers}} | {{Threat Level}} | {{WIRED}}},
  url = {http://www.wired.com/2014/07/google-project-zero/?mbid=social_gplus},
  urldate = {2014-07-15},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SZ2B7J6Z/google-project-zero.html}
}

@online{noauthor_melquiades_nodate,
  title = {Melquiades - Data about {{FLOSS}} Projects},
  url = {http://melquiades.flossmetrics.org/},
  urldate = {2012-10-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HT3M2ZI/melquiades.flossmetrics.org.html}
}

@online{noauthor_microsoft_2015,
  title = {Microsoft Opens First {{Transparency Center}} in {{Europe}}},
  date = {2015},
  journaltitle = {Silicon Angle},
  url = {http://siliconangle.com/blog/2015/06/08/microsoft-opens-first-transparency-center-in-europe/},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F2K79G8M/Microsoft opens first Transparency Center in Europe _ SiliconANGLE.pdf},
  keywords = {Forrás1}
}

@online{noauthor_microsoft_nodate,
  title = {Microsoft Partly Releases Study on {{Munich}}'s {{Linux}} Migration — Www.h-Online.Com — {{Readability}}},
  url = {http://www.h-online.com/open/news/item/Microsoft-partly-releases-study-on-Munich-s-Linux-migration-1792733.html},
  urldate = {2013-04-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CBZ8D8RJ/2alfs8sl.html}
}

@online{noauthor_miniduke_nodate,
  title = {Miniduke » {{CrySyS Blog}}},
  url = {http://blog.crysys.hu/2013/02/miniduke/},
  urldate = {2013-03-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TUX5SCT9/miniduke.html}
}

@online{noauthor_nsas_nodate,
  title = {{{NSA}}'s Open-Source {{Accumulo}} Software Project Aims for Secure, Large-Scale Storage},
  journaltitle = {GCN},
  url = {http://gcn.com/Articles/2011/09/07/NSA-Accumulo-Apache-storage-access.aspx?p=1},
  urldate = {2012-10-30},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RP5TUTWD/NSA-Accumulo-Apache-storage-access.html}
}

@online{noauthor_open_2008,
  title = {Open {{Source Census}}: {{OSS Adoption Rising}} in {{Government}} and {{Finance}}},
  date = {2008},
  journaltitle = {ostatic.com},
  url = {http://ostatic.com/blog/open-source-census-oss-adoption-rising-in-government-and-finance},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UHGH8CKI/Best_practices_in_open_source_governance_lowres.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8RJUXWKU/v72dtcj6.html}
}

@online{noauthor_open_2015,
  title = {Open {{Definition}} 2.1 - {{Open Definition}} - {{Defining Open}} in {{Open Data}}, {{Open Content}} and {{Open Knowledge}}},
  date = {2015},
  url = {http://opendefinition.org/od/2.1/en/},
  urldate = {2016-01-15},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MR4P3T46/en.html}
}

@online{noauthor_open_nodate,
  title = {Open {{Source EC Funded Projects}}: {{EDOS}}},
  journaltitle = {Commercial Open Source Software},
  url = {http://robertogaloppini.net/2009/07/31/open-source-ec-funded-projects-edos/},
  urldate = {2012-10-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VE64JGFZ/open-source-ec-funded-projects-edos.html},
  keywords = {apt,EC,FLOSS,package management}
}

@online{noauthor_open_nodate-1,
  title = {Open Source — {{Government Service Design Manual}}},
  journaltitle = {GOV.UK},
  url = {https://www.gov.uk/service-manual/making-software/open-source.html},
  urldate = {2013-03-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JABUH7XK/open-source.html}
}

@online{noauthor_open_nodate-2,
  title = {The {{Open Source Definition}} | {{Open Source Initiative}}},
  url = {http://opensource.org/docs/osd},
  urldate = {2013-05-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VMZZG4NW/osd.html}
}

@online{noauthor_open_nodate-3,
  title = {The {{Open Source Software Developer Career}} and {{Its Benefits}} | {{Software Research}} and the {{Industry}}},
  url = {http://dirkriehle.com/publications/2014-2/the-open-source-software-developer-career-and-its-benefits/},
  urldate = {2014-09-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SA8HJAEM/the-open-source-software-developer-career-and-its-benefits.html},
  keywords = {community,development,Forrás3,open source}
}

@online{noauthor_open_nodate-4,
  title = {Open Source Impossible to Avoid, {{Gartner}} Says | {{Network World}}},
  url = {http://www.networkworld.com/article/2285849/software/open-source-impossible-to-avoid--gartner-says.html},
  urldate = {2015-06-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5SS6VQKE/open-source-impossible-to-avoid--gartner-says.html}
}

@online{noauthor_open-source_nodate,
  title = {Open-{{Source Government}} « {{Open Advantage Open Advantage}}},
  url = {http://openadvantage.redhat.com/2011/02/14/open-source-government/},
  urldate = {2013-04-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2NMZDKKD/open-source-government.html}
}

@online{noauthor_open-source_nodate-1,
  title = {Open-{{Source Software}}},
  journaltitle = {SAFETY AND THE STAFFING INDUSTRY},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/54PSFAJT/os.pdf}
}

@online{noauthor_opensource_nodate,
  title = {{{OpenSource}} Im {{Rathaus}} – {{Stadt Schwäbisch Hall}}},
  url = {http://www.schwaebischhall.de/buergerstadt/rathaus/linux.html},
  urldate = {2013-04-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/34H8C2JC/linux.html}
}

@online{noauthor_osepa_nodate,
  title = {{{OSEPA}}},
  url = {http://www.osepa.eu/index.php?em_cat=1},
  urldate = {2013-05-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZS955S3K/index.html}
}

@online{noauthor_ot_nodate,
  title = {{{OT}}, {{ICS}}, {{SCADA}} – {{What}}’s the Difference?},
  journaltitle = {KuppingerCole},
  url = {https://www.kuppingercole.com/blog/williamson/ot-ics-scada-whats-the-difference},
  urldate = {2020-06-08},
  abstract = {Operational Technology (OT) refers to computing systems that are used to manage industrial operations as opposed to administrative operations. Operational systems include production line management, mining operations control, oil \& gas monitoring etc. Industrial control systems (ICS) is a major segment within the operational technology sector. It comprises systems that are used to monitor and control industrial processes. This could be mine site conveyor belts, oil refinery cracking...},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XZ2JFPL5/ot-ics-scada-whats-the-difference.html}
}

@online{noauthor_poweredby_nodate,
  title = {{{PoweredBy Hadoop}}},
  journaltitle = {Hadoop Wiki},
  url = {http://wiki.apache.org/hadoop/PoweredBy},
  urldate = {2012-10-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5MC2TSTD/PoweredBy.html}
}

@online{noauthor_prisma_nodate,
  title = {{{PRISMA}}},
  url = {http://www.prisma-statement.org/index.htm},
  urldate = {2015-02-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AUJCD9PI/index.html},
  keywords = {research method,systematic review}
}

@report{noauthor_protecting_2009,
  title = {Protecting {{Europe}} from Large Scale Cyber-Attacks and Disruptions: Enhancing Preparedness, Security and Resilience},
  date = {2009},
  institution = {{Stationery Office}},
  url = {http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=COM:2009:0149:FIN:EN:PDF},
  urldate = {2013-03-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5S89DCND/com2009_0149en01.pdf},
  number = {COM(2009) 149 final}
}

@misc{noauthor_quality_nodate,
  title = {Quality of {{Open}} Source {{Software}}},
  url = {http://cordis.europa.eu/documents/documentlibrary/101903601EN6.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VIFAWXWE/qualoss.pdf}
}

@online{noauthor_qualoss_nodate,
  title = {{{QualOSS}}},
  journaltitle = {CETIC},
  url = {http://www.cetic.be/QualOSS,500},
  urldate = {2012-10-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FDJ9IPXT/QualOSS,500.html}
}

@online{noauthor_qualoss_nodate-1,
  title = {Qualoss Publikációk},
  journaltitle = {https://www.cetic.be/Scientific-publications}
}

@online{noauthor_reproducible-builds.org_nodate,
  title = {Reproducible-Builds.Org},
  url = {https://reproducible-builds.org/},
  urldate = {2018-08-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AMHGCHZI/reproducible-builds.org.html}
}

@online{noauthor_reproduciblebuilds_nodate,
  title = {{{ReproducibleBuilds}}},
  journaltitle = {Debian Wiki},
  url = {https://wiki.debian.org/ReproducibleBuilds},
  urldate = {2018-09-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7BMGUDGU/ReproducibleBuilds.html}
}

@online{noauthor_romania_nodate,
  title = {Romania to Develop National Open Source {{IT}} Policy at {{Lin}}.{{OSS}}.{{Gov}}},
  url = {http://infopoly.info/linossgov/2010/10/romania-to-develop-national-open-source-it-policy/},
  urldate = {2013-05-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6F3RABCF/romania-to-develop-national-open-source-it-policy.html}
}

@online{noauthor_russia_nodate,
  title = {Russia: {{Hidden}} Chips 'Launch Spam Attacks from Irons'},
  url = {http://www.bbc.co.uk/news/blogs-news-from-elsewhere-24707337}
}

@misc{noauthor_safe_nodate,
  title = {Safe {{Haskell}}}
}

@online{noauthor_samate_nodate,
  title = {Samate  {{NIST}} Publikációk},
  journaltitle = {http://samate.nist.gov/index.php/SAMATE\_Publications.html},
  keywords = {nyílt forrás,security,security testing}
}

@online{noauthor_scratch_2016,
  title = {Scratch - {{Imagine}}, {{Program}}, {{Share}}},
  date = {2016-07-16},
  url = {https://scratch.mit.edu/},
  urldate = {2016-07-16},
  abstract = {Scratch is a free programming language and online community where you can create your own interactive stories, games, and animations.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2KHX9D47/scratch.mit.edu.html}
}

@online{noauthor_software_nodate,
  title = {The {{Software Security Framework}} ({{SSF}})},
  url = {http://bsimm.com/online/},
  urldate = {2014-05-16},
  keywords = {computer security,penetration testing,security testing}
}

@misc{noauthor_towards_nodate,
  title = {Towards the Freedom of the Operating System: {{The French Gendarmerie}} Goes for {{Ubuntu}}},
  url = {http://joinup.ec.europa.eu/sites/default/files/studies/IDABC.OSOR.casestudy.Gendarmerie.10.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9G8SJP8X/IDABC.OSOR.casestudy.Gendarmerie.10.pdf}
}

@online{noauthor_transparency_nodate,
  title = {Transparency and {{Open Government}}},
  url = {http://www.whitehouse.gov/the_press_office/TransparencyandOpenGovernment},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XRF7G2SP/TransparencyandOpenGovernment.html}
}

@online{noauthor_unu-merit_nodate,
  title = {{{UNU}}-{{MERIT}}: Research - Project Details},
  url = {http://www.merit.unu.edu/research/projects_view.php?id=18},
  urldate = {2013-05-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TRZ2HIHI/projects_view.html}
}

@online{noauthor_us_nodate,
  title = {{{US Navy}} Buys {{Linux}} to Guide Drone Fleet • {{The Register}}},
  url = {http://www.theregister.co.uk/2012/06/08/us_navy_linux_drones/},
  urldate = {2013-05-10},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/958ZVR3K/us_navy_linux_drones.html}
}

@online{noauthor_virtualbox_nodate,
  title = {{{VirtualBox}} - {{Gentoo Wiki}}},
  url = {https://wiki.gentoo.org/wiki/VirtualBox#Kernel_modules},
  urldate = {2016-06-07},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4H63QT9X/VirtualBox.html}
}

@online{noauthor_vulnerability_2017,
  title = {Vulnerability Found in Solar Panels Could Knock out Power Grids across {{Europe}}},
  date = {2017-08-19},
  url = {https://thenextweb.com/eu/2017/08/04/vulnerability-found-solar-panels-knock-power-grids-europe/#.tnw_8joz0rpX},
  urldate = {2017-08-19}
}

@online{noauthor_whos_nodate,
  title = {Who's {{Using Boost}}?},
  journaltitle = {Boost C++ Libraries},
  url = {http://www.boost.org/users/uses.html#Submissions},
  urldate = {2012-10-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SRG4V8IA/uses.html}
}

@incollection{noda_effect_2012,
  title = {The {{Effect}} of {{Open Source Licensing}} on the {{Evolution}} of {{Business Strategy}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Noda, Tetsuo and Tansho, Terutaka and Coughlan, Shane},
  date = {2012},
  pages = {344--349},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_32},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FDNRUUT9/chp%3A10.1007%2F978-3-642-33442-9_32.pdf}
}

@incollection{noda_effect_2013,
  title = {Effect on {{Business Growth}} by {{Utilization}} and {{Contribution}} of {{Open Source Software}} in {{Japanese IT Companies}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Noda, Tetsuo and Tansho, Terutaka and Coughlan, Shane},
  date = {2013},
  pages = {222--231},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_16},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2296HC9Q/chp%3A10.1007%2F978-3-642-38928-3_16.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BAP7QXI4/chp%3A10.1007%2F978-3-642-38928-3_16.pdf},
  keywords = {adoption,nyílt forrás}
}

@incollection{noda_standing_2011,
  title = {Standing {{Situations}} and {{Issues}} of {{Open Source Policy}} in {{East Asian Nations}}: {{Outcomes}} of {{Open Source Research Workshop}} of {{East Asia}}},
  shorttitle = {Standing {{Situations}} and {{Issues}} of {{Open Source Policy}} in {{East Asian Nations}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Noda, Tetsuo and Tansho, Terutaka and Coughlan, Shane},
  date = {2011},
  pages = {379--384},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_32},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CHNP4RPP/chp%3A10.1007%2F978-3-642-24418-6_32.pdf}
}

@incollection{noll_innovation_2007,
  title = {Innovation in Open Source Software Development: {{A}} Tale of Two Features},
  shorttitle = {Innovation in Open Source Software Development},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Noll, John},
  date = {2007},
  pages = {109--120},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PE7493TZ/chp%3A10.1007%2F978-0-387-72486-7_9.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{noll_qualitative_2012,
  title = {A {{Qualitative Method}} for {{Mining Open Source Software Repositories}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Noll, John and Seichter, Dominik and Beecham, Sarah},
  date = {2012},
  pages = {256--261},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_18},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2UT5JQVB/A Qualitative Method for Mining Open Source Software Repositories.pdf}
}

@incollection{noll_requirements_2008,
  title = {Requirements Acquisition in Open Source Development: {{Firefox}} 2.0},
  shorttitle = {Requirements Acquisition in Open Source Development},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Noll, John},
  date = {2008},
  pages = {69--79},
  publisher = {{Springer}},
  url = {http://link.springer.com/content/pdf/10.1007/978-0-387-09684-1_6.pdf},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XGQVQEFA/chp%3A10.1007%2F978-0-387-09684-1_6.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{noll_requirements_2010,
  title = {Requirements {{Elicitation}} in {{Open Source Software Development}}: {{A Case Study}}},
  shorttitle = {Requirements {{Elicitation}} in {{Open Source Software Development}}},
  booktitle = {Proceedings of the 3rd {{International Workshop}} on {{Emerging Trends}} in {{Free}}/{{Libre}}/{{Open Source Software Research}} and {{Development}}},
  author = {Noll, John and Liu, Wei-Ming},
  date = {2010},
  pages = {35--40},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1833272.1833279},
  url = {http://doi.acm.org/10.1145/1833272.1833279},
  urldate = {2015-11-24},
  abstract = {A growing body of empirical research has examined large, successful open source software projects such as the Linux kernel, Apache web server, and Mozilla web browser. Do these results extend to small open source efforts involving a handful of developers? A study of the OpenEMR open source electronic medical record project was conducted, with the goal of understanding how requirements are elicited, documented, agreed, and validated in a small open source software project The results show that the majority of features are asserted by developers, based on either their personal experience, or knowledge of users' needs. Relatively few were requested directly by users. Validation and documentation took the form of informal discussions via the project's developer mailing list. These results are consistent with an earlier study of the Firefox web browser, suggesting that there is a common open source requirements approach that is independent of project size.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H7VU5AT9/Noll és Liu - 2010 - Requirements Elicitation in Open Source Software D.pdf},
  isbn = {978-1-60558-978-7},
  keywords = {development,electronic health record,electronic medical record,nyílt forrás,Open source software,procedures,software requirements},
  series = {{{FLOSS}} '10}
}

@incollection{noll_what_2009,
  title = {What Constitutes Open Source? {{A}} Study of the Vista Electronic Medical Record Software},
  shorttitle = {What Constitutes Open Source?},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Noll, John},
  date = {2009},
  pages = {310--319},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_27},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VC6KCKZN/chp%3A10.1007%2F978-3-642-02032-2_27.pdf},
  keywords = {community,development,license,nyílt forrás}
}

@inproceedings{norikane_which_2017,
  title = {Which Review Feedback Did Long-Term Contributors Get on {{OSS}} Projects?},
  booktitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Norikane, Takuto and Ihara, Akinori and Matsumoto, Kenichi},
  date = {2017-02},
  pages = {571--572},
  doi = {10.1109/SANER.2017.7884682},
  abstract = {Open Source Software (OSS) cannot exist without contributions from the community. In particular, long-term contributors (LTCs) (e.g., committer), defined as contributors who spend at least one year on OSS projects, play crucial role in a project success because they would have permission to add (commit) code changes to a project's version control system, and to become a mentor for a beginner in OSS projects. However, contributors often leave a project before becoming a LTC because most contributors are volunteers. If contributors are motivated in their work in OSS projects, they might not leave the projects. In this study, we examine the phenomena involved in becoming a LTC in terms of motivation to continue in OSS projects. In particular, our target motivation is to understand what is involved in long-term contribution with other expert contributors. We study classifier to identify a LTC who will contribute patch submissions for more than one year based on collaboration in terms of the code review process. In detail, we analyze what review feedbacks encourage a contributor to continue with OSS project. Using a Qt project dataset, we understand review feedback which affected contribution period of the developer.},
  eventtitle = {2017 {{IEEE}} 24th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PZT2WQC7/Norikane et al. - 2017 - Which review feedback did long-term contributors g.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P9EFM8HD/7884682.html},
  keywords = {code review process,Collaboration,commit code changes,configuration management,Control systems,Databases,Documentation,long-term contributors,LTC,open source software,Open source software,OSS projects,patch submissions,project version control system,public domain software,Qt project dataset,review feedbacks,Software engineering}
}

@inproceedings{noroozi_proposing_2018,
  title = {Proposing Novel Measures to Alleviate the Risks of Migration to Open Source Software},
  booktitle = {Proceedings of the 10th {{International Conference}} on {{Computer Modeling}} and {{Simulation}}},
  author = {Noroozi, Ehsan and Seifzadeh, Habib},
  date = {2018-01-08},
  pages = {134--139},
  publisher = {{Association for Computing Machinery}},
  location = {{Sydney, Australia}},
  doi = {10.1145/3177457.3177478},
  url = {https://doi.org/10.1145/3177457.3177478},
  urldate = {2020-04-22},
  abstract = {Nowadays, companies and organizations pay more attention to the use of open source software. In this regard, organizations can benefit from the advantages of this kind of software, such as less cost and more flexibility. However, migration to open source software has its own risks, such as training of employee, lack of compatibility, and support. Reviewing numerous papers found in the literature, this study aims to collect a complete list of risks that may influence the open source migration process as much as possible. It also provides a new categorization of the risks by which each risk is classified based on its type (organizational, technical, and environmental), and its time of occurrence (before, during, and after migration). Moreover, this paper proposes a number of conceivable measures to mitigate each risk; some of them are proposed for the first time in this area of research. The results of this study can help organizations' decision makers to make better decisions in the open source migration process.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GCXU3KKQ/Noroozi and Seifzadeh - 2018 - Proposing novel measures to alleviate the risks of.pdf},
  isbn = {978-1-4503-6339-6},
  keywords = {Open source software,Risk,Risk Mitigation,Software Maintenance,Software Migration},
  series = {{{ICCMS}} 2018}
}

@inproceedings{norris_e-government_2010,
  title = {E-Government, Not e-Governance, Not e-Democracy Not Now!: Not Ever?},
  shorttitle = {E-Government... Not e-Governance... Not e-Democracy Not Now!},
  booktitle = {Proceedings of the 4th {{International Conference}} on {{Theory}} and {{Practice}} of {{Electronic Governance}}},
  author = {Norris, Donald F.},
  date = {2010},
  pages = {339--346},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1930391},
  urldate = {2016-01-11},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4TKIRFPR/p339-norris.pdf}
}

@article{nov_open_2008,
  title = {Open Source Content Contributors’ Response to Free-Riding: {{The}} Effect of Personality and Context},
  shorttitle = {Open Source Content Contributors’ Response to Free-Riding},
  author = {Nov, Oded and Kuk, George},
  date = {2008-09},
  journaltitle = {Computers in Human Behavior},
  volume = {24},
  pages = {2848--2861},
  issn = {07475632},
  doi = {10.1016/j.chb.2008.04.009},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0747563208000915},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VSNEG9CW/1-s2.0-S0747563208000915-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {6}
}

@inproceedings{novak_ict_2018,
  title = {{{ICT}} as an {{Enabler}} for a {{Society}} Where {{No One}} Is {{Left Behind}}},
  booktitle = {Proceedings of the 20th {{International Conference}} on {{Information Integration}} and {{Web}}-Based {{Applications}} \& {{Services}}},
  author = {Novak, Niina Maarit and Tjoa, A. Min},
  date = {2018-11-19},
  pages = {3--7},
  publisher = {{Association for Computing Machinery}},
  location = {{Yogyakarta, Indonesia}},
  doi = {10.1145/3282373.3282381},
  url = {https://doi.org/10.1145/3282373.3282381},
  urldate = {2020-04-22},
  abstract = {The United Nations Agenda for Sustainable Development was unanimously adopted by all its 193 heads of member states or their representatives. "No-one should be left behind" is the ethical imperative of this development agenda. The agenda consists of seventeen Sustainable Development Goals (SDGs) with 169 targets. Unfortunately not even one of the (SDGs) is dedicated to ICT or Digitalization. Prima facie, the potential impact of ICT and digitalization is highly underestimated in the text of the 2030 Sustainable Development Agenda. This paper is aiming at pointing out the indispensable role of ICT for reaching the SDGs by 2030.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6ASNL3U4/Novak and Tjoa - 2018 - ICT as an Enabler for a Society where No One is Le.pdf},
  isbn = {978-1-4503-6479-9},
  keywords = {ICTs,Inclusive Societies,Innovation,Sustainable Development,United Nations Sustainable Development Goals},
  series = {{{iiWAS2018}}}
}

@online{novell_nyilt_2011,
  title = {Nyílt Forráskód Az {{EU}} Tagországok Közigazgatásában},
  author = {Novell},
  date = {2011},
  journaltitle = {Novell},
  url = {http://www.novell.com/hu-hu/hirek/opensource_in_eu_member_states.html},
  urldate = {2012-10-26},
  abstract = {Az Európai Unió évek óta elkötelezett támogatója a nyílt forráskódú megoldások használatának, a tagországokban pedig egyre több intézmény és szervezet áll át nyílt forráskódú operációs rendszerek és ráépülő szoftverek, irodai alkalmazások használatára.}
}

@incollection{nuno_ramos_carvalho_open_2013,
  title = {Open {{Source Software Documentation Mining}} for {{Quality Assessment}}},
  booktitle = {Advances in {{Information Systems}} and {{Technologies}}},
  author = {{Nuno Ramos Carvalho} and {Alberto Simoes} and {José Joao Almeida}},
  date = {2013},
  volume = {206},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-36981-0},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KNICEVE4/oss_documentation_mining_quality.pdf},
  isbn = {978-3-642-36980-3 978-3-642-36981-0}
}

@article{nuvolari_curious_2012,
  title = {Curious {{Exceptions}}?: {{Open Source Software}} and "{{Open}}" {{Technology}}},
  shorttitle = {Curious {{Exceptions}}?},
  author = {Nuvolari, Alessandro and Rullani, Francesco},
  date = {2012-10},
  journaltitle = {Int. J. Open Source Softw. Process.},
  volume = {4},
  pages = {44--55},
  issn = {1942-3926},
  doi = {10.4018/ijossp.2012100104},
  url = {http://dx.doi.org/10.4018/ijossp.2012100104},
  urldate = {2015-11-24},
  abstract = {The aim of this article is to explore the differences and commonalities between open source software and other cases of open technology. The concept of open technology is used here to indicate various models of innovation based on the participation of a wide range of different actors who freely share the innovations they have produced. The article begins with a review of the problems connected to the production of public goods and explains why open source software seems to be a "curious exception" for traditional economic reasoning. Then it describes the successful operation of similar models of innovation open technology in other technological fields. The third section investigates the literature in relation to three fundamental issues in the current open source research agenda, namely, developers' motivations, performance, and sustainability of the model. Finally, the fourth section provides a final comparison between open source software and the other cases of open technology.},
  keywords = {Innovations,Models of Innovation,Open source software,Open Technology,Public Goods},
  number = {4}
}

@incollection{nyman_fork_2011,
  title = {To Fork or Not to Fork: {{Fork}} Motivations in {{SourceForge}} Projects},
  shorttitle = {To Fork or Not to Fork},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Nyman, Linus and Mikkonen, Tommi},
  date = {2011},
  pages = {259--268},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GZEEPPMC/chp%3A10.1007%2F978-3-642-24418-6_18.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{nyman_hackers_2014,
  title = {Hackers on {{Forking}}},
  author = {Nyman, Linus},
  date = {2014},
  pages = {1--10},
  publisher = {{ACM Press}},
  doi = {10.1145/2641580.2641590},
  url = {http://dl.acm.org/citation.cfm?doid=2641580.2641590},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6KQJQ7GQ/p06.pdf},
  isbn = {978-1-4503-3016-9},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@incollection{nyman_perspectives_2012,
  title = {Perspectives on {{Code Forking}} and {{Sustainability}} in {{Open Source Software}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Nyman, Linus and Mikkonen, Tommi and Lindman, Juho and Fougère, Martin},
  date = {2012},
  pages = {274--279},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_21},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I6TDHIWM/chp%3A10.1007%2F978-3-642-33442-9_21.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J6MKXV9T/chp%3A10.1007%2F978-3-642-33442-9_21.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SKHCR7DC/Perspectives on Code Forking and Sustainability in Open Source Software.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{oezbek_introducing_2010,
  title = {Introducing {{Automated Unit Testing}} into {{Open Source Projects}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Oezbek, Christopher},
  date = {2010},
  pages = {361--366},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_32},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/27TMHDPF/chp%3A10.1007%2F978-3-642-13244-5_32.pdf}
}

@inproceedings{oezbek_onion_2010,
  title = {The {{Onion Has Cancer}}: {{Some Social Network Analysis Visualizations}} of {{Open Source Project Communication}}},
  shorttitle = {The {{Onion Has Cancer}}},
  booktitle = {Proceedings of the 3rd {{International Workshop}} on {{Emerging Trends}} in {{Free}}/{{Libre}}/{{Open Source Software Research}} and {{Development}}},
  author = {Oezbek, Christopher and Prechelt, Lutz and Thiel, Florian},
  date = {2010},
  pages = {5--10},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1833272.1833274},
  url = {http://doi.acm.org/10.1145/1833272.1833274},
  urldate = {2015-11-24},
  abstract = {Background: People contribute to OSS projects in wildly different degrees, from reporting a single defect once and never coming back to spending many hours each workday on the project over several years - or anything in between. It is a common conception that these degrees of participation sort the participants into a number of similar groups which are layered like the peels of an onion: The onion model. Objective: We check whether this model of gradually different degrees of participation is valid with respect to the participation in OSS project mailing-list traffic. Methods: We perform social network analysis based on replies to mailing-list messages and use visualization to check the nature of three different groups of participants. Results: There appears to be a discontinuity with respect to core members: The degree to which very active core members (as opposed to less active co-developers) react to e-mails of senders from the project's periphery is significantly higher than would be expected from their level of activity in general. Limitations: The effect might be an artifact of the assumption that each mailing-list message can be treated the same. Conclusions: We conclude that core member status may be qualitatively (rather than just quantitatively) different and the transition of individual mailing-list participants towards ever higher participation is qualitatively discontinuous.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6QBUWS4N/Oezbek és mtsai. - 2010 - The Onion Has Cancer Some Social Network Analysis.pdf},
  isbn = {978-1-60558-978-7},
  keywords = {communication structure,community,development,nyílt forrás,open source process,social network analysis},
  series = {{{FLOSS}} '10}
}

@inproceedings{oh_security_2017,
  title = {Security {{Requirements Analysis}} for the {{IoT}}},
  booktitle = {2017 {{International Conference}} on {{Platform Technology}} and {{Service}} ({{PlatCon}})},
  author = {Oh, S. R. and Kim, Y. G.},
  date = {2017-02},
  pages = {1--6},
  doi = {10.1109/PlatCon.2017.7883727},
  abstract = {Due to the rapid growth of network infrastructure and sensor, the age of the IoT (internet of things) that can be implemented into the smart car, smart home, smart building, and smart city is coming. IoT is a very useful ecosystem that provides various services (e.g., amazon echo); however, at the same time, risk can be huge too. Collecting information to help people could lead serious information leakage, and if IoT is combined with critical control system (e.g., train control system), security attack would cause loss of lives. Furthermore, research on IoT security requirements is insufficient now. Therefore, this paper focuses on IoT security, and its requirements. First, we propose basic security requirements of IoT by analyzing three basic characteristics (i.e., heterogeneity, resource constraint, dynamic environment). Then, we suggest six key elements of IoT (i.e., IoT network, cloud, user, attacker, service, platform) and analyze their security issues for overall security requirements. In addition, we evaluate several IoT security requirement researches.},
  eventtitle = {2017 {{International Conference}} on {{Platform Technology}} and {{Service}} ({{PlatCon}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K4ZQQF64/Oh és Kim - 2017 - Security Requirements Analysis for the IoT.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H84GVUCG/7883727.html},
  keywords = {computer network security,formal specification,Internet of Things,IoT,security requirements analysis}
}

@inproceedings{ojamaa_security_2012,
  title = {Security {{Assessment}} of {{Node}}.Js {{Platform}}},
  booktitle = {Information {{Systems Security}}},
  author = {Ojamaa, Andres and Düüna, Karl},
  date = {2012-12-15},
  pages = {35--43},
  publisher = {{Springer, Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-35130-3_3},
  url = {https://link.springer.com/chapter/10.1007/978-3-642-35130-3_3},
  urldate = {2018-08-14},
  abstract = {Node.js is a novel event-based network application platform which forces developers to use asynchronous programming interfaces for I/O operations. The native language for developing applications on this platform is JavaScript. Despite its young age the platform has attracted a significant community of developers and gained support from the industry. The Node.js community generally has a strong focus on the scalability of the platform but little research has been done on how the platform’s design decisions affect the security of its applications. This paper outlines several possible security pitfalls to be aware of when using Node.js platform and server side JavaScript. We also describe two discovered vulnerabilities and give recommendations for developing and configuring resilient web applications on the Node.js platform.},
  eventtitle = {International {{Conference}} on {{Information Systems Security}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NMVCVE9U/Ojamaa and Düüna - 2012 - Security Assessment of Node.js Platform.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LYM68LNS/978-3-642-35130-3_3.html},
  isbn = {978-3-642-35129-7 978-3-642-35130-3},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@article{okoli_investigating_2007,
  title = {Investigating Recognition-Based Performance in an Open Content Community: {{A}} Social Capital Perspective},
  shorttitle = {Investigating Recognition-Based Performance in an Open Content Community},
  author = {Okoli, Chitu and Oh, Wonseok},
  date = {2007-04},
  journaltitle = {Information \& Management},
  volume = {44},
  pages = {240--252},
  issn = {03787206},
  doi = {10.1016/j.im.2006.12.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720607000195},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XGA8WJJ5/1-s2.0-S0378720607000195-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {3}
}

@article{olah_forms_2006,
  title = {{{THE FORMS AND DEFENCE POSSIBILITIES OF THE THREATS AGAINST COMPUTER NETWORKS}}},
  author = {Oláh, V. P.},
  date = {2006},
  journaltitle = {Hadmérnök},
  volume = {1},
  pages = {12--24},
  issn = {1788-1919},
  url = {http://zrinyi.zmne.hu/hadmernok/archivum/2006/1/2006_1_haig.pdf},
  urldate = {2012-10-30},
  abstract = {In developed countries, the growing danger of attacks against information is one of the major problems of the present age, especially because by now, the Internet has become wide-spread almost everywhere from the civil sphere of the world economy up to the administrations. Illegal offence against any information system can turn out to be critical, be it either bank, financial system, telecommunication, traffic, energy provisions or any military or other defence institutions. Furthermore, a possible attack can damage the state infrastructure seriously. Therefore, the main aim of this article is to introduce the different kinds of computer criminals and their devices as well as map the illegal invasion possibilities and show some modes of prevention.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZNBV45F2/Hadmernok_06_1_haig.pdf},
  number = {1}
}

@article{olga_considerations_2010,
  title = {{{CONSIDERATIONS REGARDING THE COMPANIES}}’{{OBLIGATIONS TOWARDS THE DIRECTIVE}} 2008/114/{{CE CONCERNING CRITICAL INFRASTRUCTURES}}},
  author = {Olga, BUCOVETCHI and Petronela, SIMION Cristina and Radu, DRAGOMIR and Constantin, MANOLACHE},
  date = {2010},
  journaltitle = {Fascicle of Management and Technological Engineering},
  volume = {IX},
  issn = {1583-0691},
  url = {http://imtuoradea.ro/auo.fmte/files-2010-v3/MANAGEMENT/BUCOVETCHI%20Olga%20L.pdf},
  urldate = {2013-03-13},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QTG5E65S/BUCOVETCHI Olga L.pdf}
}

@online{oliver_diedrich_openoffices_nodate,
  title = {{{OpenOffice}}'s {{Tale}} of {{Two Cities}}},
  author = {{Oliver Diedrich}},
  journaltitle = {www.h-online.com},
  url = {http://www.h-online.com/open/news/item/Microsoft-partly-releases-study-on-Munich-s-Linux-migration-1792733.html},
  urldate = {2013-04-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ESE5Q3J4/y08svutx.html}
}

@article{olson_crowdsourcing_2013,
  title = {Crowdsourcing and Open Source Software Participation},
  author = {Olson, David L. and Rosacker, Kirsten},
  date = {2013-12},
  journaltitle = {Service Business},
  volume = {7},
  pages = {499--511},
  issn = {1862-8516, 1862-8508},
  doi = {10.1007/s11628-012-0176-4},
  url = {http://link.springer.com/10.1007/s11628-012-0176-4},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AC6CQIBV/art%3A10.1007%2Fs11628-012-0176-4.pdf},
  langid = {english},
  number = {4}
}

@inproceedings{omar_simulation_2018,
  title = {Simulation {{Comparison}} on {{PRICO LNG Process Using Open}} and {{Proprietary Sources}}},
  booktitle = {Proceedings of the 2018 7th {{International Conference}} on {{Software}} and {{Computer Applications}}},
  author = {Omar, Mohd Nazri and Shaidan, Muhammad Nur Hafiz and Hussain, Suhaila},
  date = {2018-02-08},
  pages = {36--39},
  publisher = {{Association for Computing Machinery}},
  location = {{Kuantan, Malaysia}},
  doi = {10.1145/3185089.3185106},
  url = {https://doi.org/10.1145/3185089.3185106},
  urldate = {2020-04-22},
  abstract = {The simulation using computer software in simulating LNG processes becomes quite popular among researchers today. Publications regarding this field using open-sourced as their simulation platform are yet to be viewed. This paper simulated the energy analysis on PRICO LNG process and compare with an existing results from another publication on the similar topic that use proprietary software. The coefficient of performance value (COP) was obtained and compared with that existing results to examine which platform performs better or at least have same ability. The COP for PRICO through DWSIM was 0.59 and through Aspen Plus was 0.44 hence proved the similar performance of the open and proprietary source platform.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PJ9DVPB9/Omar et al. - 2018 - Simulation Comparison on PRICO LNG Process Using O.pdf},
  isbn = {978-1-4503-5414-1},
  keywords = {comparison,LNG,PRICO,Simulation software},
  series = {{{ICSCA}} 2018}
}

@inproceedings{onoue_software_2014,
  title = {Software Population Pyramids: The Current and the Future of {{OSS}} Development Communities},
  shorttitle = {Software Population Pyramids},
  booktitle = {Proceedings of the 8th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Onoue, Saya and Hata, Hideaki and Matsumoto, Kenichi},
  date = {2014},
  pages = {34},
  publisher = {{ACM}},
  url = {http://pkuas.sei.pku.edu.cn/wp/papers/ESEM2014/short/Paper210.pdf},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MTQQ4VZ3/esem2014_submission_210.pdf},
  keywords = {community,open source}
}

@article{oreg_exploring_2008,
  title = {Exploring Motivations for Contributing to Open Source Initiatives: {{The}} Roles of Contribution Context and Personal Values},
  shorttitle = {Exploring Motivations for Contributing to Open Source Initiatives},
  author = {Oreg, Shaul and Nov, Oded},
  date = {2008-09},
  journaltitle = {Computers in Human Behavior},
  volume = {24},
  pages = {2055--2073},
  issn = {07475632},
  doi = {10.1016/j.chb.2007.09.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0747563207001537},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I2TG7BZ2/1-s2.0-S0747563207001537-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {5}
}

@incollection{orsila_update_2008,
  title = {Update Propagation Practices in Highly Reusable Open Source Components},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Orsila, Heikki and Geldenhuys, Jaco and Ruokonen, Anna and Hammouda, Imed},
  date = {2008},
  pages = {159--170},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_13},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BG7TFIW8/chp%3A10.1007%2F978-0-387-09684-1_13.pdf},
  keywords = {computer security,nyílt forrás}
}

@inproceedings{ortu_measuring_2016,
  title = {Measuring High and Low Priority Defects on Traditional and Mobile Open Source Software},
  booktitle = {Proceedings of the 7th {{International Workshop}} on {{Emerging Trends}} in {{Software Metrics}}},
  author = {Ortu, Marco and Destefanis, Giuseppe and Swift, Stephen and Marchesi, Michele},
  date = {2016-05-14},
  pages = {1--7},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2897695.2897696},
  url = {https://doi.org/10.1145/2897695.2897696},
  urldate = {2020-04-22},
  abstract = {Software defects are the major cause for system failures. To effectively design tools and provide support for detecting and recovering from software failures, requires a deep understanding of defect features. In this paper we present an analysis of defect characteristics in two different open source software development domains: Mobile and Traditional. Our attention is focused on measuring the differences between High-Priority and Low-Priority defects. High or Low priority of a given defect is decided by a developer when creating a bug report for an issue tracking system. We sampled hundreds of real world bugs in hundreds of large and representative open-source projects. We used natural language text classification techniques to automatically analyse roughly 700,000 bug reports from the Bugzilla, Jira and Google Issues issue tracking systems. Results show that there are differences between High-Priority and Low-Priority defects classification in Mobile and Traditional development domains.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AXYILANK/Ortu et al. - 2016 - Measuring high and low priority defects on traditi.pdf},
  isbn = {978-1-4503-4177-6},
  keywords = {bug categorisation,bug reports,data mining},
  series = {{{WETSoM}} '16}
}

@inproceedings{orucevic-alagic_advancing_2013,
  title = {Advancing {{Software Development Efficiency}} in an {{Open Source Software Context}}},
  booktitle = {Licentiate {{Thesis}}},
  author = {Orucevic-Alagic, Alma},
  date = {2013},
  publisher = {{Lund University}},
  location = {{Sweden}},
  url = {http://lup.lub.lu.se/record/4249504},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8KBMFA3U/thesis.pdf},
  keywords = {community,open source,OS-CS comparision}
}

@incollection{orucevic-alagic_case_2010,
  title = {A Case Study on the Transformation from Proprietary to Open Source Software},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Oručević-Alagić, Alma and Höst, Martin},
  date = {2010},
  pages = {367--372},
  publisher = {{Springer}},
  url = {http://link.springer.com/10.1007/978-3-642-13244-5_33},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8ZP2V393/chp%3A10.1007%2F978-3-642-13244-5_33.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K7N4P7VW/A Case Study on the Transformation from Proprietary to Open Source Software.pdf},
  keywords = {_SMS_untagged,case study,nyílt forrás,source analysis}
}

@inproceedings{orucevic-alagic_network_2014,
  title = {Network {{Analysis}} of a {{Large Scale Open Source Project}}},
  author = {Orucevic-Alagic, Alma and Hö st, Martin},
  date = {2014},
  location = {{Verona}},
  abstract = {Industry involvement in open source software development has become a popular practice among companies which, e.g., share software development costs with other community participants or implement an open source based business model. An increased understanding of the underlying development structure, especially in a case where the community participants are composed of competing industry members, can be viewed as an important component of a company’ s business strategy planning and management. One way to understand the social structure of an open source community is by applying network analysis to its source code repositories. This case study shows how a large, company sponsored, and industry backed open source project, i.e. an open source project with the majority of the community members affiliated with the industry, is structured. In particular, it shows that the involvement of an entire industry eco system within a company sponsored open source project does not imply more equal distribution of the participating community members’ influences in terms of committers’ social networks. This setup of an open source community by itself does not imply any particular, either positive or negative, connotations. Consequently, the results of the study should be interpreted on a case basis, within a context of a company’ s strategy to participate or base products around a company sponsored open source product.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9KIBRPPD/thesis.pdf},
  keywords = {Closed source,community,open source},
  langid = {english}
}

@inproceedings{oscar_queso_2014,
  title = {{{QuESo}}: A {{Quality Model}} for {{Open Source Software Ecosystems}}},
  shorttitle = {{{QuESo}}},
  booktitle = {{{ICSOFT}}-{{EA}} 2014 - {{Proceedings}} of the 9th {{International Conference}} on {{Software Engineering}} and {{Applications}}},
  author = {Oscar, Franco-Bedoya and Ameller, David and Costal, Dolors and Franch, Xavier},
  date = {2014-08-28},
  doi = {10.5220/0004993702090221},
  abstract = {Open source software has witnessed an exponential growth in the last two decades and it is playing an increas-ingly important role in many companies and organizations leading to the formation of open source software ecosystems. In this paper we present a quality model that will allow the evaluation of those ecosystems in terms of their relevant quality characteristics such as health or activeness. To design this quality model we started by analysing the quality measures found during the execution of a systematic literature review on open source software ecosystems and, then, we classified and reorganized the set of measures in order to build a solid quality model.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/USV5BJAK/Oscar et al. - 2014 - QuESo a Quality Model for Open Source Software Ec.pdf}
}

@incollection{osinski_introducing_2007,
  title = {Introducing Usability Practices to {{OSS}}: {{The}} Insiders’ Experience},
  shorttitle = {Introducing Usability Practices to {{OSS}}},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Osiński, Stanis\textbackslash law and Weiss, Dawid},
  date = {2007},
  pages = {313--318},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_34},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q6H7QZJC/chp%3A10.1007%2F978-0-387-72486-7_34.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{osman_tracking_2016,
  title = {Tracking {{Null Checks}} in {{Open}}-{{Source Java Systems}}},
  booktitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  author = {Osman, Haidar and Leuenberger, Manuel and Lungu, Mircea and Nierstrasz, Oscar},
  date = {2016-03},
  volume = {1},
  pages = {304--313},
  doi = {10.1109/SANER.2016.57},
  abstract = {It is widely acknowledged that null values should be avoided if possible or carefully used when necessary in Java code. The careless use of null has negative effects on maintainability, code readability, and software performance. However, a study on understanding null usage is still missing. In this paper we analyze null checks in 810 open-source Java systems and manually inspect 100 code samples to understand when and why developers use null. We find that 35\% of all conditional statements contain null checks. A deeper investigation reveals many questionable practices with respect to using null. Uninitialized member variables, returning null in methods, and passing null as a method parameter are among the most recurrent reasons for introducing null checks. Developers often return null in methods to signal errors instead of throwing a proper exception. As a result, 71\% of the values checked for null are returned from method calls. Our study provides a novel evidence of an overuse of null checks and of the null value itself in Java, and at the same time, reveals actionable recommendations to reduce this null usage.},
  eventtitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I6TW7HAU/Osman et al. - 2016 - Tracking Null Checks in Open-Source Java Systems.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NZWGRJ5G/7476652.html},
  keywords = {code readability,code samples,Computer bugs,Context,Debugging,Java,Java code,maintainability,Maintenance engineering,null check tracking,Null Checks,Null Usage,Null value,open-source Java systems,program diagnostics,public domain software,signal errors,Software,software maintenance,software performance,software performance evaluation,Static Analysis}
}

@incollection{osterlie_producing_2006,
  title = {Producing and {{Interpreting Debug Texts}}},
  booktitle = {Open {{Source Systems}}},
  author = {Østerlie, Thomas},
  date = {2006},
  pages = {335--336},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_34},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JHXS94G9/chp%3A10.1007%2F0-387-34226-5_34.pdf}
}

@inproceedings{ott_iot_2016,
  title = {{{IoT Security}} through the {{Lens}} of {{Energy Efficiency}}: {{Energy}} as a {{First}}-{{Order Security Consideration}}},
  shorttitle = {{{IoT Security}} through the {{Lens}} of {{Energy Efficiency}}},
  booktitle = {2016 {{Cybersecurity Symposium}} ({{CYBERSEC}})},
  author = {Ott, D. E.},
  date = {2016-04},
  pages = {20--25},
  doi = {10.1109/CYBERSEC.2016.011},
  abstract = {IoT devices are expected to proliferate significantly in the coming years. While computational requirements have, in general, become more demanding, capacity gains in device battery technology have increased only incrementally. The result is the well-known battery gap. In this position paper, we highlight the need for security researchers to consider the energy implications of their approaches, technologies, and solutions for IoT devices. First, we motivate and describe the problem of energy efficiency in IoT device security. Next, we discuss power measurement methodologies available to researchers for examining the energy efficiency implications of new algorithms and solutions within their work. We then describe a case study of academic research illustrating how energy efficiency can be treated as a first order consideration within an IoT security research investigation. Finally, we discuss the handling of energy efficiency goals and metrics within research on IoT devices. Our objective is to build awareness of energy efficiency as a first-order consideration for the IoT security research community. Overall, we provide information on how and why energy efficiency should be addressed in IoT device security research, including measurement frameworks, goals metrics, and an illustrative case study.},
  eventtitle = {2016 {{Cybersecurity Symposium}} ({{CYBERSEC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H3WHFGE3/Ott - 2016 - IoT Security through the Lens of Energy Efficiency.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J85E3TC9/7942420.html},
  keywords = {Atomic measurements,energy efficiency,energy efficient security,Energy measurement,first-order security consideration,goals metrics,Hardware,Internet of Things,IoT,IoT device security,measurement frameworks,Monitoring,power aware computing,power measurement,power measurement methodologies,security,security of data}
}

@inproceedings{otte_applied_2008,
  title = {Applied {{Quality Assurance Methods}} under the {{Open Source Development Model}}},
  author = {Otte, Tobias and Moreton, Robert and Knoell, Heinz D.},
  date = {2008},
  pages = {1247--1252},
  publisher = {{IEEE}},
  doi = {10.1109/COMPSAC.2008.65},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4591759},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CMMEKKDF/04591759.pdf},
  isbn = {978-0-7695-3262-2},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{ouattara_open_2013,
  title = {Open {{Source}} in {{Africa}}: {{An Opportunity Wasted}}?},
  shorttitle = {Open {{Source}} in {{Africa}}},
  booktitle = {E-{{Infrastructure}} and e-{{Services}} for {{Developing Countries}}},
  author = {Ouattara, Hadja and Ouoba, Jonathan and Bissyandé, Tegawendé F.},
  date = {2013},
  pages = {184--188},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-41178-6_19},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SCVM8GFK/chp%3A10.1007%2F978-3-642-41178-6_19.pdf}
}

@article{ouedraogo_taxonomy_2013,
  title = {Taxonomy of Quality Metrics for Assessing Assurance of Security Correctness},
  author = {Ouedraogo, Moussa and Savola, Reijo M. and Mouratidis, Haralambos and Preston, David and Khadraoui, Djamel and Dubois, Eric},
  date = {2013-03},
  journaltitle = {Software Quality Journal},
  volume = {21},
  pages = {67--97},
  issn = {0963-9314, 1573-1367},
  doi = {10.1007/s11219-011-9169-0},
  url = {http://link.springer.com/10.1007/s11219-011-9169-0},
  urldate = {2015-01-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SHAWG4HN/art_10.1007_s11219-011-9169-0.pdf},
  keywords = {Software Assurance},
  langid = {english},
  number = {1}
}

@inproceedings{oyetoyan_myths_2018,
  title = {Myths and {{Facts About Static Application Security Testing Tools}}: {{An Action Research}} at {{Telenor Digital}}},
  shorttitle = {Myths and {{Facts About Static Application Security Testing Tools}}},
  booktitle = {Agile {{Processes}} in {{Software Engineering}} and {{Extreme Programming}}},
  author = {Oyetoyan, Tosin Daniel and Milosheska, Bisera and Grini, Mari and Soares Cruzes, Daniela},
  editor = {Garbajosa, Juan and Wang, Xiaofeng and Aguiar, Ademar},
  date = {2018},
  pages = {86--103},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-91602-6_6},
  abstract = {It is claimed that integrating agile and security in practice is challenging. There is the notion that security is a heavy process, requires expertise, and consumes developers’ time. These contrast with the agile vision. Regardless of these challenges, it is important for organizations to address security within their agile processes since critical assets must be protected against attacks. One way is to integrate tools that could help to identify security weaknesses during implementation and suggest methods to refactor them. We used quantitative and qualitative approaches to investigate the efficiency of the tools and what they mean to the actual users (i.e. developers) at Telenor Digital. Our findings, although not surprising, show that several barriers exist both in terms of tool’s performance and developers’ perceptions. We suggest practical ways for improvement.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FHHMX3VJ/Oyetoyan et al. - 2018 - Myths and Facts About Static Application Security .pdf},
  isbn = {978-3-319-91602-6},
  keywords = {Agile,Security defects,Software security,Static analysis,Static application security testing},
  langid = {english},
  series = {Lecture {{Notes}} in {{Business Information Processing}}}
}

@incollection{oyvind_hauge_risks_2010,
  title = {Risks and {{Risk Mitigation}} in {{Open Source Software Adoption}}: {{Bridging}} the {{Gap}} between {{Literature}} and {{Practice}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {{Øyvind Hauge} and {Daniela S. Cruzes} and {Reidar Conradi} and {Ketil S. Velle} and {Tron André Skarpenes}},
  date = {2010},
  volume = {I},
  pages = {105--118},
  publisher = {{Springer Berlin Heidelberg}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SWSM3JUE/10.1.1.211.8983.pdf},
  isbn = {978-3-642-13243-8},
  keywords = {felmérés,mitigation,open source,Risk management}
}

@inproceedings{ozcan_kini_[research_2018,
  title = {[{{Research Paper}}] {{Periodic Developer Metrics}} in {{Software Defect Prediction}}},
  booktitle = {2018 {{IEEE}} 18th {{International Working Conference}} on {{Source Code Analysis}} and {{Manipulation}} ({{SCAM}})},
  author = {Ozcan Kini, Seldag and Tosun, Ayse},
  date = {2018-09},
  pages = {72--81},
  issn = {2470-6892},
  doi = {10.1109/SCAM.2018.00016},
  abstract = {Defect prediction studies have proposed several data-driven approaches, and recently, this field has put more emphasis on whether the people factor is associated software defects. Developer metrics can capture experience, code ownership, coding skills and techniques, and commit activities. These metrics have so far been measured at a specified snapshot of the codebase although developer's knowledge on a source module could change over time. In this paper, we propose to measure periodic developer experience with regard to contextual knowledge on files and directories. We extract periodic experience metrics capturing the previous activities of developers on source files and investigate the explanatory effect of these metrics on defects. We also use activity-based (churn) metrics to observe the performance of both metric types on defect prediction. We used two large-scale open source projects, Lucene and Jackrabbit, for model evaluation. We calculate periodic developer experience metrics and churn metrics at two granularity levels: file level and commit level. We build the models using five popular machine learning algorithms in defect prediction literature. The models with the two best performing algorithms are assessed in terms of Precision, Recall, False Positive Rate, and F-measure. The set of metrics that explains software defects the best is also identified using correlation-based feature selection method. Results show that periodic developer experience metrics extracted at file level are good merits for defect prediction, accompanied with churn. When there is not enough data to extract the contextual knowledge of developers on source files, churn metrics play an important role on defect prediction.},
  eventtitle = {2018 {{IEEE}} 18th {{International Working Conference}} on {{Source Code Analysis}} and {{Manipulation}} ({{SCAM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IZV4NCYN/Ozcan Kini and Tosun - 2018 - [Research Paper] Periodic Developer Metrics in Sof.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XBZMHDTE/8530720.html},
  keywords = {activity-based metrics,churn metrics,coding skills,coding techniques,commit level,Computer bugs,contextual knowledge,correlation-based feature selection method,defect prediction literature,developers knowledge,feature selection,file level,History,large-scale open source projects,learning (artificial intelligence),machine learning algorithms,Measurement,model evaluation,periodic developer experience metrics,periodic developer metrics,Prediction algorithms,Predictive models,public domain software,software defect prediction,software defect prediction; periodic developer experience; code ownership; churn metrics,software metrics,software quality,Software quality,source files}
}

@incollection{ozel_perceptions_2007,
  title = {Perceptions on {{F}}/{{OSS}} Adoption},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Ozel, Bulent and Jovanovic, Uros and Oba, Beyza and van Leeuwen, Manon},
  date = {2007},
  pages = {319--324},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_35},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3WFNDRXC/chp%3A10.1007%2F978-0-387-72486-7_35.pdf},
  keywords = {adoption,nyílt forrás},
  options = {useprefix=true}
}

@online{pablo_santos_distributed_2012,
  title = {Distributed {{Version Control Systems}} in the {{Enterprise}}},
  author = {{Pablo Santos}},
  date = {2012-05-17},
  journaltitle = {InfoQ},
  url = {http://www.infoq.com/articles/DVCS-Enterprise},
  urldate = {2014-04-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MWX7RMDC/distr.vers.contr.sys.in.the.Enterprise.pdf}
}

@incollection{pagano_eud_2011,
  title = {{{EUD}} in Enterprise Open Source Learning Environments},
  booktitle = {End-{{User Development}}},
  author = {Pagano, Alessandro},
  date = {2011},
  pages = {363--366},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-21530-8_41},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QPIMTIFD/chp%3A10.1007%2F978-3-642-21530-8_41.pdf},
  keywords = {adoption,nyílt forrás}
}

@inproceedings{pagano_how_2011,
  title = {How {{Do Developers Blog}}?: {{An Exploratory Study}}},
  shorttitle = {How {{Do Developers Blog}}?},
  booktitle = {Proceedings of the 8th {{Working Conference}} on {{Mining Software Repositories}}},
  author = {Pagano, Dennis and Maalej, Walid},
  date = {2011},
  pages = {123--132},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1985441.1985461},
  url = {http://doi.acm.org/10.1145/1985441.1985461},
  urldate = {2015-11-24},
  abstract = {We report on an exploratory study, which aims at understanding how software developers use social media compared to conventional development infrastructures. We analyzed the blogging and the committing behavior of 1,100 developers in four large open source communities. We observed that these communities intensively use blogs with one new entry about every 8 hours. A blog entry includes 14 times more words than a commit message. When analyzing the content of the blogs, we found that most popular topics represent high-level concepts such as functional requirements and domain concepts. Source code related topics are covered in less than 15\% of the posts. Our results also show that developers are more likely to blog after corrective engineering and management activities than after forward engineering and re-engineering activities. Our findings call for a hypothesis-driven research to further understand the role of social media in software engineering and integrate it into development processes and tools.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UJWVX9SJ/Pagano és Maalej - 2011 - How Do Developers Blog An Exploratory Study.pdf},
  isbn = {978-1-4503-0574-7},
  keywords = {blogs,community,data mining,development,nyílt forrás,Open Source,social software},
  series = {{{MSR}} '11}
}

@article{pagano_how_2013,
  title = {How Do Open Source Communities Blog?},
  author = {Pagano, Dennis and Maalej, Walid},
  date = {2013-12},
  journaltitle = {Empirical Software Engineering},
  volume = {18},
  pages = {1090--1124},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-012-9211-2},
  url = {http://link.springer.com/10.1007/s10664-012-9211-2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CQM6XBAC/art%3A10.1007%2Fs10664-012-9211-2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RDUAMEQH/art%3A10.1007%2Fs10664-012-9211-2.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {6}
}

@inproceedings{paixao_crop_2018,
  title = {{{CROP}}: {{Linking Code Reviews}} to {{Source Code Changes}}},
  shorttitle = {{{CROP}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Paixao, Matheus and Krinke, Jens and Han, Donggyun and Harman, Mark},
  date = {2018-05},
  pages = {46--49},
  issn = {2574-3864},
  abstract = {Code review has been widely adopted by both industrial and open source software development communities. Research in code review is highly dependant on real-world data, and although existing researchers have attempted to provide code review datasets, there is still no dataset that links code reviews with complete versions of the system's code base mainly because reviewed versions are not kept in the system's version control repository. Thus, we present CROP, the Code Review Open Platform, the first curated code review repository that links review data with isolated complete versions (snapshots) of the source code at the time of review. CROP currently provides data for 8 software systems, 48,975 reviews and 112,617 patches, including versions of the systems that are inaccessible in the systems' original repositories. Moreover, CROP is extensible, and it will be continuously curated and extended.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 15th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EUHPVHUP/Paixao et al. - 2018 - CROP Linking Code Reviews to Source Code Changes.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XFTWLMCK/8595176.html},
  keywords = {Agriculture,Code Review,code review datasets,Code Review Open Platform,code review repository,configuration management,CROP,Data mining,History,Metadata,Open source software,open source software development,Platform,public domain software,Repository,Servers,Software Change Analysis,software engineering,software reviews,source code,source code (software)}
}

@inproceedings{palomba_poster_2018,
  title = {Poster: {{How Do Community Smells Influence Code Smells}}?},
  shorttitle = {Poster},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  author = {Palomba, Fabio and Tamburri, Damian A. and Serebrenik, Alexander and Zaidman, Andy and Arcelli Fontana, Francesca and Oliveto, Rocco},
  date = {2018-05},
  pages = {240--241},
  issn = {2574-1934},
  abstract = {Code smells reflect sub-optimal patterns of code that often lead to critical software flaws or failure. In the same way, community smells reflect sub-optimal organisational and socio-technical patterns in the organisational structure of the software community. To understand the relation between the community smells and code smells we start by surveying 162 developers of nine open-source systems. Then we look deeper into this connection by conducting an empirical study of 117 releases from these systems. Our results indicate that community-related factors are intuitively perceived by most developers as causes of the persistence of code smells. Inspired by this observation we design a community-aware prediction model for code smells and show that it outperforms a model that does not consider community factors.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E3VFLAKU/Palomba et al. - 2018 - Poster How Do Community Smells Influence Code Sme.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4PYP4A39/8449519.html},
  keywords = {Cloning,code smells,Code Smells,community smells,Community Smells,community-aware prediction model,community-related factors,critical software flaws,Measurement,open-source systems,organisational aspects,organisational structure,Organisational Structure,Organizational aspects,Organizations,Predictive models,public domain software,socio-technical patterns,Software,software community,software development management,Software engineering,software failure,software quality,source code (software),sub-optimal code patterns}
}

@article{palyart_study_2018,
  title = {A {{Study}} of {{Social Interactions}} in {{Open Source Component Use}}},
  author = {Palyart, Marc and Murphy, Gail C. and Masrani, Vaden},
  date = {2018-12},
  journaltitle = {IEEE Transactions on Software Engineering},
  volume = {44},
  pages = {1132--1145},
  issn = {1939-3520},
  doi = {10.1109/TSE.2017.2756043},
  abstract = {All kinds of software projects, whether open or closed source, rely on open source components. Repositories that serve open source components to organizations, such as the Central Repository and npmjs.org, report billions of requests per year. Despite the widespread reliance of projects on open source components, little is known about the social interactions that occur between developers of a project using a component and developers of the component itself. In this paper, we investigate the social interactions that occur for 5,133 pairs of projects, from two different communities (Java and Ruby) representing user projects that depend on a component project. We consider such questions as how often are there social interactions when a component is used? When do the social interactions occur? And, why do social interactions occur? From our investigation, we observed that social interactions typically occur after a component has been chosen for use and relied upon. When social interactions occur, they most frequently begin with creating issues or feature requests. We also found that the more use a component receives, the less likely it is that developers of project using the component will interact with the component project, and when those interactions occur, they will be shorter in duration. Our results provide insight into how socio-technical interactions occur beyond the level of an individual or small group of projects previously studied by others and identify the need for a new model of socio-technical congruence for dependencies between, instead of within, projects.},
  eventtitle = {{{IEEE Transactions}} on {{Software Engineering}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5KG5YSLF/Palyart et al. - 2018 - A Study of Social Interactions in Open Source Comp.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GFJB5J9J/8049385.html},
  keywords = {collaboration,Collaboration,component project,Computer bugs,human computer interaction,Java,object-oriented programming,open source components,Open source software,OSS components,project management,Project management,public domain software,Ruby,Social factors,social interactions,sociotechnical congruence,sociotechnical interactions,software development management,software projects,Software reusability,Software reuse},
  number = {12}
}

@book{papadopoulos_information_2010,
  title = {Information {{Systems Development}}},
  editor = {Papadopoulos, George Angelos and Wojtkowski, Wita and Wojtkowski, Gregory and Wrycza, Stanislaw and Zupancic, Jože},
  date = {2010},
  publisher = {{Springer US}},
  location = {{Boston, MA}},
  url = {http://www.springerlink.com/index/10.1007/b137171},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MB3ASV9H/Determinants of Open Source Software Adoption – An Application of TOE Framework.pdf},
  isbn = {978-0-387-84809-9 978-0-387-84810-5},
  langid = {english}
}

@inproceedings{papamichail_user-perceived_2016,
  title = {User-{{Perceived Source Code Quality Estimation Based}} on {{Static Analysis Metrics}}},
  booktitle = {2016 {{IEEE International Conference}} on {{Software Quality}}, {{Reliability}} and {{Security}} ({{QRS}})},
  author = {Papamichail, Michail and Diamantopoulos, Themistoklis and Symeonidis, Andreas},
  date = {2016-08},
  pages = {100--107},
  doi = {10.1109/QRS.2016.22},
  abstract = {The popularity of open source software repositories and the highly adopted paradigm of software reuse have led to the development of several tools that aspire to assess the quality of source code. However, most software quality estimation tools, even the ones using adaptable models, depend on fixed metric thresholds for defining the ground truth. In this work we argue that the popularity of software components, as perceived by developers, can be considered as an indicator of software quality. We present a generic methodology that relates quality with source code metrics and estimates the quality of software components residing in popular GitHub repositories. Our methodology employs two models: a one-class classifier, used to rule out low quality code, and a neural network, that computes a quality score for each software component. Preliminary evaluation indicates that our approach can be effective for identifying high quality software components in the context of reuse.},
  eventtitle = {2016 {{IEEE International Conference}} on {{Software Quality}}, {{Reliability}} and {{Security}} ({{QRS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XQ7EYCUJ/Papamichail et al. - 2016 - User-Perceived Source Code Quality Estimation Base.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3D24M73G/7589790.html},
  keywords = {Computational modeling,Estimation,GitHub repositories,neural networks,one class classifier,one-class classification,open source software repositories,pattern classification,program diagnostics,public domain software,Software metrics,software quality,Software quality,Software quality estimation,software quality estimation tools,software reusability,source code (software),source code quality estimation,static analysis,static analysis metrics,user perceived quality,user-perceived quality}
}

@inproceedings{park_software_2012,
  title = {Software Decoys for Insider Threat},
  booktitle = {Proceedings of the 7th {{ACM Symposium}} on {{Information}}, {{Computer}} and {{Communications Security}}},
  author = {Park, Younghee and Stolfo, Salvatore J.},
  date = {2012},
  pages = {93--94},
  url = {http://dl.acm.org/citation.cfm?id=2414511},
  urldate = {2013-06-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5ZQQ4T2Q/softwaredecoy.pdf}
}

@book{parno_bootstrapping_2011,
  title = {Bootstrapping {{Trust}} in {{Modern Computers}}},
  author = {Parno, Bryan and McCune, Jonathan M. and Perrig, Adrian},
  date = {2011},
  volume = {10},
  publisher = {{Springer New York}},
  location = {{New York, NY}},
  url = {http://www.springerlink.com/index/10.1007/978-1-4614-1460-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KB8FZBMC/Implementing Trust Bootstrapping- Open Source Tools.pdf},
  isbn = {978-1-4614-1459-9 978-1-4614-1460-5},
  series = {{{SpringerBriefs}} in {{Computer Science}}}
}

@inproceedings{pascarella_classifying_2017,
  title = {Classifying Code Comments in {{Java}} Open-Source Software Systems},
  booktitle = {Proceedings of the 14th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Pascarella, Luca and Bacchelli, Alberto},
  date = {2017-05-20},
  pages = {227--237},
  publisher = {{IEEE Press}},
  location = {{Buenos Aires, Argentina}},
  doi = {10.1109/MSR.2017.63},
  url = {https://doi.org/10.1109/MSR.2017.63},
  urldate = {2020-04-22},
  abstract = {Code comments are a key software component containing information about the underlying implementation. Several studies have shown that code comments enhance the readability of the code. Nevertheless, not all the comments have the same goal and target audience. In this paper, we investigate how six diverse Java OSS projects use code comments, with the aim of understanding their purpose. Through our analysis, we produce a taxonomy of source code comments; subsequently, we investigate how often each category occur by manually classifying more than 2,000 code comments from the aforementioned projects. In addition, we conduct an initial evaluation on how to automatically classify code comments at line level into our taxonomy using machine learning; initial results are promising and suggest that an accurate classification is within reach.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WUGYUWPF/Pascarella and Bacchelli - 2017 - Classifying code comments in Java open-source soft.pdf},
  isbn = {978-1-5386-1544-7},
  series = {{{MSR}} '17}
}

@inproceedings{pascarella_how_2018,
  title = {How Is Video Game Development Different from Software Development in Open Source?},
  booktitle = {Proceedings of the 15th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Pascarella, Luca and Palomba, Fabio and Di Penta, Massimiliano and Bacchelli, Alberto},
  date = {2018-05-28},
  pages = {392--402},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3196398.3196418},
  url = {https://doi.org/10.1145/3196398.3196418},
  urldate = {2020-04-22},
  abstract = {Recent research has provided evidence that, in the industrial context, developing video games diverges from developing software systems in other domains, such as office suites and system utilities. In this paper, we consider video game development in the open source system (OSS) context. Specifically, we investigate how developers contribute to video games vs. non-games by working on different kinds of artifacts, how they handle malfunctions, and how they perceive the development process of their projects. To this purpose, we conducted a mixed, qualitative and quantitative study on a broad suite of 60 OSS projects. Our results confirm the existence of significant differences between game and non-game development, in terms of how project resources are organized and in the diversity of developers' specializations. Moreover, game developers responding to our survey perceive more difficulties than other developers when reusing code as well as performing automated testing, and they lack a clear overview of their system's requirements.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2XDBN37N/Pascarella et al. - 2018 - How is video game development different from softw.pdf},
  isbn = {978-1-4503-5716-6},
  keywords = {empirical studies,mining software repositories,video games},
  series = {{{MSR}} '18}
}

@article{paschali_reusability_2017,
  title = {Reusability of Open Source Software across Domains: {{A}} Case Study},
  shorttitle = {Reusability of Open Source Software across Domains},
  author = {Paschali, Maria-Eleni and Ampatzoglou, Apostolos and Bibi, Stamatia and Chatzigeorgiou, Alexander and Stamelos, Ioannis},
  date = {2017-12-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {134},
  pages = {211--227},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2017.09.009},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121217301991},
  urldate = {2020-04-22},
  abstract = {Exploiting the enormous amount of open source software (OSS) as a vehicle for reuse is a promising opportunity for software engineers. However, this task is far from trivial, since such projects are sometimes not easy to understand and adapt to target systems, whereas at the same time the reusable assets are not obvious to identify. In this study, we assess open source software projects, with respect to their reusability, i.e., the easiness to adapt them in a new system. By taking into account that domain-specific reuse is more beneficial than domain-agnostic; we focus this study on identifying the application domains that contain the most reusable software projects. To achieve this goal, we compared the reusability of approximately 600 OSS projects from ten application domains through a case study. The results of the study suggested that in every aspect of reusability, there are different dominant application domains. However, Science and Engineering Applications and Software Development Tools, have proven to be the ones that are the most reuse-friendly. Based on this observation, we suggest software engineers, who are focusing on the specific application domains, to consider reusing assets from open source software projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/28YNYBVD/Paschali et al. - 2017 - Reusability of open source software across domains.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VU7W7HSH/S0164121217301991.html},
  keywords = {Application domains,Open source,Reusability},
  langid = {english}
}

@book{pascuzzi_comparative_2013,
  title = {Comparative {{Issues}} in the {{Governance}} of {{Research Biobanks}}},
  editor = {Pascuzzi, Giovanni and Izzo, Umberto and Macilotti, Matteo},
  date = {2013},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-33116-9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9TX4EH2G/chp%3A10.1007%2F978-3-642-33116-9_11.pdf},
  isbn = {978-3-642-33115-2 978-3-642-33116-9},
  langid = {english}
}

@inproceedings{pashchenko_delta-bench_2017,
  title = {Delta-{{Bench}}: {{Differential Benchmark}} for {{Static Analysis Security Testing Tools}}},
  shorttitle = {Delta-{{Bench}}},
  booktitle = {2017 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  author = {Pashchenko, Ivan and Dashevskyi, Stanislav and Massacci, Fabio},
  date = {2017-11},
  pages = {163--168},
  doi = {10.1109/ESEM.2017.24},
  abstract = {Background: Static analysis security testing (SAST) tools may be evaluated using synthetic micro benchmarks and benchmarks based on real-world software. Aims: The aim of this study is to address the limitations of the existing SAST tool benchmarks: lack of vulnerability realism, uncertain ground truth, and large amount of findings not related to analyzed vulnerability. Method: We propose Delta-Bench - a novel approach for the automatic construction of benchmarks for SAST tools based on differencing vulnerable and fixed versions in Free and Open Source (FOSS) repositories. To test our approach, we used 7 state of the art SAST tools against 70 revisions of four major versions of Apache Tomcat spanning 62 distinct Common Vulnerabilities and Exposures (CVE) fixes and vulnerable files totalling over 100K lines of code as the source of ground truth vulnerabilities. Results: Our experiment allows us to draw interesting conclusions (e.g., tools perform differently due to the selected benchmark). Conclusions: Delta-Bench allows SAST tools to be automatically evaluated on the real-world historical vulnerabilities using only the findings that a tool produced for the analysed vulnerability.},
  eventtitle = {2017 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FJEPNX3M/Pashchenko et al. - 2017 - Delta-Bench Differential Benchmark for Static Ana.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7JBZALTC/8170097.html},
  keywords = {Apache Tomcat,benchmark testing,Benchmark testing,Computer languages,Delta-bench,file vulnerabilities,FOSS repositories,Free and Open Source repositories,Large-scale Benchmark,Noise measurement,program diagnostics,program testing,public domain software,SAST tool benchmarks,Security,security of data,Software,Software Security,software tools,Static Analysis,static analysis security testing tools,Static Application Security Testing Tool,Tools,uncertain ground truth,Vulnerability}
}

@inproceedings{pashchenko_foss_2017,
  title = {{{FOSS}} Version Differentiation as a Benchmark for Static Analysis Security Testing Tools},
  booktitle = {Proceedings of the 2017 11th {{Joint Meeting}} on {{Foundations}} of {{Software Engineering}}},
  author = {Pashchenko, Ivan},
  date = {2017-08-21},
  pages = {1056--1058},
  publisher = {{Association for Computing Machinery}},
  location = {{Paderborn, Germany}},
  doi = {10.1145/3106237.3121276},
  url = {https://doi.org/10.1145/3106237.3121276},
  urldate = {2020-04-22},
  abstract = {We propose a novel methodology that allows automatic construction of benchmarks for Static Analysis Security Testing (SAST) tools based on real-world software projects by differencing vulnerable and fixed versions in FOSS repositories. The methodology allows us to evaluate ``actual'' performance of SAST tools (without unrelated alarms). To test our approach, we benchmarked 7 SAST tools (although we report only results for the two best tools), against 70 revisions of four major versions of Apache Tomcat with 62 distinct CVEs as the source of ground truth vulnerabilities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MCBKPE2V/Pashchenko - 2017 - FOSS version differentiation as a benchmark for st.pdf},
  isbn = {978-1-4503-5105-8},
  keywords = {Large-scale Benchmark,Software Security,Static Analysis,Static Application Security Testing Tool,Vulnerability},
  series = {{{ESEC}}/{{FSE}} 2017}
}

@inproceedings{pashchenko_vulnerable_2018,
  title = {Vulnerable Open Source Dependencies: Counting Those That Matter},
  shorttitle = {Vulnerable Open Source Dependencies},
  booktitle = {Proceedings of the 12th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Pashchenko, Ivan and Plate, Henrik and Ponta, Serena Elisa and Sabetta, Antonino and Massacci, Fabio},
  date = {2018-10-11},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Oulu, Finland}},
  doi = {10.1145/3239235.3268920},
  url = {https://doi.org/10.1145/3239235.3268920},
  urldate = {2020-04-22},
  abstract = {Background: Vulnerable dependencies are a known problem in today's open-source software ecosystems because OSS libraries are highly interconnected and developers do not always update their dependencies. Aim: Our paper addresses the over-inflation problem of academic and industrial approaches for reporting vulnerable dependencies in OSS software, and therefore, caters to the needs of industrial practice for correct allocation of development and audit resources. Method: Careful analysis of deployed dependencies, aggregation of dependencies by their projects, and distinction of halted dependencies allow us to obtain a counting method that avoids over-inflation. To understand the industrial impact of a more precise approach, we considered the 200 most popular OSS Java libraries used by SAP in its own software. Our analysis included 10905 distinct GAVs (group, artifact, version) in Maven when considering all the library versions. Results: We found that about 20\% of the dependencies affected by a known vulnerability are not deployed, and therefore, they do not represent a danger to the analyzed library because they cannot be exploited in practice. Developers of the analyzed libraries are able to fix (and actually responsible for) 82\% of the deployed vulnerable dependencies. The vast majority (81\%) of vulnerable dependencies may be fixed by simply updating to a new version, while 1\% of the vulnerable dependencies in our sample are halted, and therefore, potentially require a costly mitigation strategy. Conclusions: Our case study shows that the correct counting allows software development companies to receive actionable information about their library dependencies, and therefore, correctly allocate costly development and audit resources, which is spent inefficiently in case of distorted measurements.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D7JWC4VD/Pashchenko et al. - 2018 - Vulnerable open source dependencies counting thos.pdf},
  isbn = {978-1-4503-5823-1},
  keywords = {mining software repositories,open-source software,vulnerable dependency},
  series = {{{ESEM}} '18}
}

@inproceedings{patil_i3fs_2004,
  title = {{{I3FS}}: {{An In}}-{{Kernel Integrity Checker}} and {{Intrusion Detection File System}}.},
  shorttitle = {{{I3FS}}},
  booktitle = {{{LISA}}},
  author = {Patil, Swapnil and Kashyap, Anand and Sivathanu, Gopalan and Zadok, Erez},
  date = {2004},
  volume = {4},
  pages = {67--78},
  url = {https://www.usenix.org/legacy/event/lisa04/tech/full_papers/patil/patil_html/},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FWBEV4MQ/__patil.pdf}
}

@inproceedings{patrick_stewin_primitive_2013,
  title = {A {{Primitive}} for {{Revealing Stealthy Peripheral}}-{{Based Attacks}} on the {{Computing Platform}}’s {{Main Memory}}},
  author = {{Patrick Stewin}},
  date = {2013-10-23/2013-10-25},
  location = {{St. Lucia}},
  abstract = {Computer platform peripherals such as network and man- agement controller can be used to attack the host computer via direct memory access (DMA). DMA-based attacks launched from peripherals are capable of compromising the host without exploiting vulnerabilities present in the operating system running on the host. Therefore they present a highly critical threat to system security and integrity. Un- fortunately, to date no OS implements security mechanisms that can detect DMA-based attacks. Furthermore, attacks against memory man- agement units have been demonstrated in the past and therefore cannot be considered trustworthy. We are the first to present a novel method for detecting and preventing DMA-based attacks. Our method is based on modeling the expected memory bus activity and comparing it with the actual activity. We implement BARM, a runtime monitor that perma- nently monitors bus activity to expose malicious memory access carried out by peripherals. Our evaluation reveals that BARM not only detects and prevents DMA-based attacks but also runs without significant over- head due to the use of commonly available CPU features of the x86 platform.},
  eventtitle = {16th {{International Symposium}} on {{Research}} in {{Attacks}}, {{Intrusions}} and {{Defenses}} ({{RAID}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WWME3XZG/raid2013_submission_62.pdf}
}

@article{paul_verifying_nodate,
  title = {Verifying the {{Integrity}} of {{Shared Libraries}}},
  author = {Paul, Richard},
  url = {https://www.cs.auckland.ac.nz/courses/compsci725s2c/archive/termpapers/rp.pdf},
  urldate = {2014-10-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2IRMDA8C/rp.pdf}
}

@article{pearce_case_2012,
  title = {The Case for Open Source Appropriate Technology},
  author = {Pearce, Joshua M.},
  date = {2012-06},
  journaltitle = {Environment, Development and Sustainability},
  volume = {14},
  pages = {425--431},
  issn = {1387-585X, 1573-2975},
  doi = {10.1007/s10668-012-9337-9},
  url = {http://link.springer.com/10.1007/s10668-012-9337-9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FG9EIXTK/art%3A10.1007%2Fs10668-012-9337-9.pdf},
  langid = {english},
  number = {3}
}

@inproceedings{pecorelli_comparing_2019,
  title = {Comparing Heuristic and Machine Learning Approaches for Metric-Based Code Smell Detection},
  booktitle = {Proceedings of the 27th {{International Conference}} on {{Program Comprehension}}},
  author = {Pecorelli, Fabiano and Palomba, Fabio and Di Nucci, Dario and De Lucia, Andrea},
  date = {2019-05-25},
  pages = {93--104},
  publisher = {{IEEE Press}},
  location = {{Montreal, Quebec, Canada}},
  doi = {10.1109/ICPC.2019.00023},
  url = {https://doi.org/10.1109/ICPC.2019.00023},
  urldate = {2020-04-22},
  abstract = {Code smells represent poor implementation choices performed by developers when enhancing source code. Their negative impact on source code maintainability and comprehensibility has been widely shown in the past and several techniques to automatically detect them have been devised. Most of these techniques are based on heuristics, namely they compute a set of code metrics and combine them by creating detection rules; while they have a reasonable accuracy, a recent trend is represented by the use of machine learning where code metrics are used as predictors of the smelliness of code artefacts. Despite the recent advances in the field, there is still a noticeable lack of knowledge of whether machine learning can actually be more accurate than traditional heuristic-based approaches. To fill this gap, in this paper we propose a large-scale study to empirically compare the performance of heuristic-based and machine-learning-based techniques for metric-based code smell detection. We consider five code smell types and compare machine learning models with Decor, a state-of-the-art heuristic-based approach. Key findings emphasize the need of further research aimed at improving the effectiveness of both machine learning and heuristic approaches for code smell detection: while Decor generally achieves better performance than a machine learning baseline, its precision is still too low to make it usable in practice.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IPPFZ9LC/Pecorelli et al. - 2019 - Comparing heuristic and machine learning approache.pdf},
  keywords = {code smells detection,empirical study,heuristics,machine learning},
  series = {{{ICPC}} '19}
}

@article{peng_network_2013,
  title = {Network Ties and the Success of Open Source Software Development},
  author = {Peng, Gang and Wan, Yun and Woodlock, Peter},
  date = {2013-12},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {22},
  pages = {269--281},
  issn = {09638687},
  doi = {10.1016/j.jsis.2013.05.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0963868713000474},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7FM6UMJN/1-s2.0-S0963868713000474-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {4}
}

@article{petersen_guidelines_2015,
  title = {Guidelines for Conducting Systematic Mapping Studies in Software Engineering: {{An}} Update},
  shorttitle = {Guidelines for Conducting Systematic Mapping Studies in Software Engineering},
  author = {Petersen, Kai and Vakkalanka, Sairam and Kuzniarz, Ludwik},
  date = {2015-08-01},
  journaltitle = {Information and Software Technology},
  shortjournal = {Information and Software Technology},
  volume = {64},
  pages = {1--18},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2015.03.007},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584915000646},
  urldate = {2018-08-15},
  abstract = {Context Systematic mapping studies are used to structure a research area, while systematic reviews are focused on gathering and synthesizing evidence. The most recent guidelines for systematic mapping are from 2008. Since that time, many suggestions have been made of how to improve systematic literature reviews (SLRs). There is a need to evaluate how researchers conduct the process of systematic mapping and identify how the guidelines should be updated based on the lessons learned from the existing systematic maps and SLR guidelines. Objective To identify how the systematic mapping process is conducted (including search, study selection, analysis and presentation of data, etc.); to identify improvement potentials in conducting the systematic mapping process and updating the guidelines accordingly. Method We conducted a systematic mapping study of systematic maps, considering some practices of systematic review guidelines as well (in particular in relation to defining the search and to conduct a quality assessment). Results In a large number of studies multiple guidelines are used and combined, which leads to different ways in conducting mapping studies. The reason for combining guidelines was that they differed in the recommendations given. Conclusion The most frequently followed guidelines are not sufficient alone. Hence, there was a need to provide an update of how to conduct systematic mapping studies. New guidelines have been proposed consolidating existing findings.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SKNJC7NG/Petersen et al. - 2015 - Guidelines for conducting systematic mapping studi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PFVL5YCB/S0950584915000646.html},
  keywords = {Guidelines,Software engineering,Systematic mapping studies}
}

@inproceedings{petersen_systematic_2008,
  title = {Systematic Mapping Studies in Software Engineering},
  booktitle = {12th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Petersen, Kai and Feldt, Robert and Mujtaba, Shahid and Mattsson, Michael},
  date = {2008},
  volume = {17},
  pages = {68--77},
  publisher = {{sn}},
  url = {http://www.rbsv.eu/courses/rmtw/mtrl/SM.pdf},
  urldate = {2015-07-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HB5DZA4U/SM.pdf}
}

@book{peterson_online_2012,
  title = {Online {{Maps}} with {{APIs}} and {{WebServices}}},
  editor = {Peterson, Michael P.},
  date = {2012},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://www.springerlink.com/index/10.1007/978-3-642-27485-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UAFUDIHB/chp%3A10.1007%2F978-3-642-27485-5_17.pdf},
  isbn = {978-3-642-27484-8 978-3-642-27485-5},
  series = {Lecture {{Notes}} in {{Geoinformation}} and {{Cartography}}}
}

@incollection{petrinja_adoption_2011,
  title = {Adoption of Oss Development Practices by the Software Industry: {{A}} Survey},
  shorttitle = {Adoption of Oss Development Practices by the Software Industry},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Petrinja, Etiel and Sillitti, Alberto and Succi, Giancarlo},
  date = {2011},
  pages = {233--243},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_16},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3W3DBJ87/chp%3A10.1007%2F978-3-642-24418-6_16.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{petrinja_comparing_2010,
  title = {Comparing {{OpenBRR}}, {{QSOS}}, and {{OMM}} Assessment Models},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Petrinja, Etiel and Sillitti, Alberto and Succi, Giancarlo},
  date = {2010},
  pages = {224--238},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PFGJ2ZKT/chp%3A10.1007%2F978-3-642-13244-5_18.pdf},
  keywords = {nyílt forrás,quality}
}

@incollection{petrinja_overview_2008,
  title = {Overview on Trust in Large {{FLOSS}} Communities},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Petrinja, Etiel and Sillitti, Alberto and Succi, Giancarlo},
  date = {2008},
  pages = {47--56},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_4},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J7VWRQ8V/chp%3A10.1007%2F978-0-387-09684-1_4.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QZDRKM8X/chp%3A10.1007%2F978-0-387-09684-1_4.pdf},
  keywords = {case study,community,development,Empirikus,nyílt forrás,open source,Software Assurance}
}

@incollection{petrinja_two_2012,
  title = {Two {{Evolution Indicators}} for {{FOSS Projects}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Petrinja, Etiel and Succi, Giancarlo},
  date = {2012},
  pages = {216--232},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_14},
  urldate = {2015-11-27},
  abstract = {In this paper we introduce two project evolution indicators. One is showing an increase of downloads of the project and therefore a growing interest of users in the results of the project. The second indicator is predicting the future evolution of the project with the submission of new revisions to the concurrent versioning system. Both indicators can provide evidence of the sustainability of a software project. We used the General Linear Model method to statistically formulate the two linear equations that can be used to predict the two indicators. The predicting equations were build by using two stratified data samples one of 760 projects and the second of 880 projects extracted from the SourceForge repository. The six metrics included into the final version of the two models were extracted from a set of thirty project and product metrics as: the number of downloads, the number of developers, etc. We have validated the discriminant and the concurrent validity of the two models by using different statistical tests as the goodness-of-fit and we have used the two models to predict the indicators on two hold-out validation samples. The model predicting the increment of downloads was correct in 75 percent of the cases, the model predicting the submission of new revisions was correct in 93 percent of the cases.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DR8V7XVH/chp%3A10.1007%2F978-3-642-33442-9_14.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{pezer_free_2017,
  ids = {pezer\_free\_2017-1},
  title = {Free and {{Open Source Software}} in the Secondary Education in {{Bosnia}} and {{Herzegovina}}},
  booktitle = {2017 40th {{International Convention}} on {{Information}} and {{Communication Technology}}, {{Electronics}} and {{Microelectronics}} ({{MIPRO}})},
  author = {Pezer, M. and Lazić, N. and Odak, M.},
  date = {2017-05},
  pages = {882--886},
  doi = {10.23919/MIPRO.2017.7973546},
  abstract = {Significant benefits, like an IT cost savings, security, customability, knowledge sharing, can be achieved through the introduction and use of Free/Libre and Open Source Software (FLOSS) in high schools. By using FLOSS, level of students' innovation, computer literacy, knowledge and creativity could be increased. That benefit could be important for developing countries as a chance for strengthen local IT industry. This paper shows differences regarding FLOSS and proprietary source software treatment in a computer science classroom in high schools with curriculum in Croatian language in Bosnia and Herzegovina (BiH). In this paper survey of computer course teachers' interest and their knowledge regarding use of free and open source software was conducted by on-line questionnaire. The FLOSS presence regarding operating systems and office package at computer classrooms was also explored. An additional analysis of curriculum in secondary education in schools with curriculum in Croatian language in Bosnia and Herzegovina was performed.},
  eventtitle = {2017 40th {{International Convention}} on {{Information}} and {{Communication Technology}}, {{Electronics}} and {{Microelectronics}} ({{MIPRO}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R8FHDG9L/Pezer et al. - 2017 - Free and Open Source Software in the secondary edu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RC9AI78B/7973546.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RPIEN3Q9/7973546.html},
  keywords = {BiH,Bosnia and Herzegovina,computer literacy,Computer science,computer science classroom,computer science education,Computers,courseware,Croatian language,curriculum,Education,FLOSS,free/libre and open source software,further education,high schools,IT industry,office package,Open source software,operating systems,Operating systems,proprietary source software treatment,public domain software,secondary education,Security,student creativity,student knowledge,students innovation}
}

@article{pfaffenberger_open_1999,
  title = {Open Source Software and Software Patents: {{A}} Constitutional Perspective},
  shorttitle = {Open Source Software and Software Patents},
  author = {Pfaffenberger, Bryan},
  date = {1999},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {12},
  pages = {94--112},
  url = {http://link.springer.com/article/10.1007/s12130-999-1029-x},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NNCGVWNC/art%3A10.1007%2Fs12130-999-1029-x.pdf},
  number = {3}
}

@article{pfaffman_its_2007,
  title = {It’s Time to Consider Open Source Software},
  author = {Pfaffman, Jay},
  date = {2007},
  journaltitle = {TechTrends},
  volume = {51},
  pages = {38--43},
  url = {http://www.springerlink.com/index/WJ6287373T22T196.pdf},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8E7ZZDNW/art%3A10.1007%2Fs11528-007-0040-x.pdf},
  number = {3}
}

@inproceedings{phadke_predicting_2005,
  title = {Predicting Risky Modules in Open-Source Software for High-Performance Computing},
  booktitle = {Proceedings of the Second International Workshop on {{Software}} Engineering for High Performance Computing System Applications},
  author = {Phadke, Amit A. and Allen, Edward B.},
  date = {2005},
  pages = {60--64},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1145337},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9W3VRVMF/p60-phadke.pdf},
  keywords = {nyílt forrás,quality}
}

@unpublished{phil_marshall_oss_2012,
  title = {{{OSS GovernmentManagement}} Using {{COBIT}} 5},
  author = {{Phil Marshall}},
  date = {2012},
  url = {https://www.isaca.org/Education/Online-Learning/Documents/OSS-Government-Management-using-COBIT-5.pdf},
  urldate = {2015-05-23},
  eventtitle = {2012 {{ISACA Webinar Program}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X66RAWTH/OSS-Government-Management-using-COBIT-5.pdf},
  keywords = {FLOSS}
}

@article{pianosi_how_2020,
  title = {How Successfully Is Open-Source Research Software Adopted? {{Results}} and Implications of Surveying the Users of a Sensitivity Analysis Toolbox},
  shorttitle = {How Successfully Is Open-Source Research Software Adopted?},
  author = {Pianosi, Francesca and Sarrazin, Fanny and Wagener, Thorsten},
  date = {2020-02-01},
  journaltitle = {Environmental Modelling \& Software},
  shortjournal = {Environmental Modelling \& Software},
  volume = {124},
  pages = {104579},
  issn = {1364-8152},
  doi = {10.1016/j.envsoft.2019.104579},
  url = {http://www.sciencedirect.com/science/article/pii/S136481521930619X},
  urldate = {2020-04-22},
  abstract = {Open-source research software is an important element of open science. While the number of software packages made available by researchers is increasing, there has been little analysis about their subsequent uptake. We collect basic information about prospective users when sharing our open-source sensitivity analysis toolbox. This enabled us to carry out a user survey to assess adoption success – beyond simply counting download numbers. Survey results confirm the key role of extensive documentation to ensure adoption, to enhance learning and to enable research implementation. We found that workflows are an effective tool to guide users to tailor methods to their problems. However, workflows also need to include guidance for interpretation of results, otherwise sophisticated functionalities are overlooked as their value is unclear. Developing effective documentation requires significant time investment but is essential if the ultimate aim of open research software is to promote the adoption of scientific methodologies and best practices.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BFA9VZVM/Pianosi et al. - 2020 - How successfully is open-source research software .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3VMRYH5W/S136481521930619X.html},
  keywords = {Open-source software,Reproducibility,Research software,Software documentation,Workflows},
  langid = {english}
}

@inproceedings{piantadosi_fixing_2019,
  title = {Fixing of {{Security Vulnerabilities}} in {{Open Source Projects}}: {{A Case Study}} of {{Apache HTTP Server}} and {{Apache Tomcat}}},
  shorttitle = {Fixing of {{Security Vulnerabilities}} in {{Open Source Projects}}},
  booktitle = {2019 12th {{IEEE Conference}} on {{Software Testing}}, {{Validation}} and {{Verification}} ({{ICST}})},
  author = {Piantadosi, Valentina and Scalabrino, Simone and Oliveto, Rocco},
  date = {2019-04},
  pages = {68--78},
  issn = {2159-4848},
  doi = {10.1109/ICST.2019.00017},
  abstract = {Software vulnerabilities are particularly dangerous bugs that may allow an attacker to violate the confidentiality, integrity or availability constraints of a software system. Fixing vulnerabilities soon is of primary importance; besides, it is crucial to release complete patches that do not leave any corner case not covered. In this paper we study the process of vulnerability fixing in Open Source Software. We focus on three dimensions: personal, i.e., who fixes software vulnerabilities; temporal, i.e., how long does it take to release a patch; procedural, i.e., what is the process followed to fix the vulnerability. In the context of our study we analyzed 337 CVE Entries regarding Apache HTTP Server and Apache Tomcat and we manually linked them to the patches written to fix such vulnerabilities and their related commits. The results show that developers who fix software vulnerabilities are much more experienced than the average. Furthermore, we observed that the vulnerabilities are fixed through more than a commit and, surprisingly, that in about 3\% of the cases such vulnerabilities show up again in future releases (i.e., they are not actually fixed). In the light of such results, we derived some lessons learned that represent a starting point for future research directions aiming at better supporting developers during the documentation and fixing of vulnerabilities.},
  eventtitle = {2019 12th {{IEEE Conference}} on {{Software Testing}}, {{Validation}} and {{Verification}} ({{ICST}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JMHSWX22/Piantadosi et al. - 2019 - Fixing of Security Vulnerabilities in Open Source .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4MGGZHGP/8730158.html},
  keywords = {Apache HTTP Server,Apache Tomcat,Computer bugs,Databases,Ecosystems,History,Internet,Java,open source projects,open source software,program diagnostics,public domain software,Security,security of data,security vulnerabilities,Servers,Software,software maintenance,software vulnerabilities,Software Vulnerabilities; Empirical Studies; Mining Software Repositories; Open-Source Software,vulnerability fixing}
}

@inproceedings{pichler_can_2019,
  title = {Can {{I Depend}} on You? {{Mapping}} the {{Dependency}} and {{Quality Landscape}} of {{ROS Packages}}},
  shorttitle = {Can {{I Depend}} on You?},
  booktitle = {2019 {{Third IEEE International Conference}} on {{Robotic Computing}} ({{IRC}})},
  author = {Pichler, Marc and Dieber, Bernhard and Pinzger, Martin},
  date = {2019-02},
  pages = {78--85},
  doi = {10.1109/IRC.2019.00020},
  abstract = {Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.},
  eventtitle = {2019 {{Third IEEE International Conference}} on {{Robotic Computing}} ({{IRC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VT6R3X7X/Pichler et al. - 2019 - Can I Depend on you Mapping the Dependency and Qu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FX7CA6K6/8675680.html},
  keywords = {dependency analysis,highlevel data processing functions,Indexes,Open source software,open-source framework,open-source ROS packages,operating systems (computers),public domain software,repository quality,Robot Operating System,robotic software quality,robots,ros,Service robots,software packages,software quality,Software quality,Tools}
}

@incollection{pino_open_2010,
  title = {An Open Source/Freeware Assistive Technology Software Inventory},
  booktitle = {Computers {{Helping People}} with {{Special Needs}}},
  author = {Pino, Alexandros and Kouroupetroglou, Georgios and Kacorri, Hernisa and Sarantidou, Anna and Spiliotopoulos, Dimitris},
  date = {2010},
  pages = {178--185},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-14097-6_29},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z6X5PGDG/chp%3A10.1007%2F978-3-642-14097-6_29.pdf}
}

@incollection{pinto_census_2014,
  title = {The {{Census}} of the {{Brazilian Open}}-{{Source Community}}},
  booktitle = {Open {{Source Software}}: {{Mobile Open Source Technologies}}},
  author = {Pinto, Gustavo and Kamei, Fernando},
  date = {2014},
  pages = {202--211},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-55128-4_30},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UVWR49SH/oss2014.pdf},
  keywords = {community,Empirikus,open source}
}

@article{pinto_challenges_2018,
  ids = {pinto\_challenges\_2018-1},
  title = {On the Challenges of Open-Sourcing Proprietary Software Projects},
  author = {Pinto, Gustavo and Steinmacher, Igor and Dias, Luiz Felipe and Gerosa, Marco},
  date = {2018-03-09},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  pages = {1--27},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-018-9609-6},
  url = {https://link.springer.com/article/10.1007/s10664-018-9609-6},
  urldate = {2018-08-15},
  abstract = {The open source software (OSS) movement has become widely recognized as an effective way to deliver software. Even big software companies, well-known for being restrictive when it comes to publishing their source code artifacts, have recently adopted open source initiatives and released for general use the source code of some of their most notable products. We conducted an exploratory study on merits of the widespread belief that open-sourcing a proprietary software project will attract external developers, like casual contributors, and therefore improve software quality (e.g., “given enough eyeballs, all bugs are shallow”). By examining the pre- and post-migration software history of eight active, popular, non-trivial proprietary projects that became open source, we characterize the phenomenon and identify some challenges. Contrary to what many believe, we found that only a few projects experienced a growth in newcomers, contributions, and popularity; furthermore, this growth does not last long. The results from the study can be useful for helping software companies to better understand the hidden challenges of open-sourcing their software projects to attract external developers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LKCE77NV/Pinto et al. - 2018 - On the challenges of open-sourcing proprietary sof.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YE6E6NFR/Pinto et al. - 2018 - On the challenges of open-sourcing proprietary sof.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H4NHYJBV/s10664-018-9609-6.html},
  langid = {english}
}

@inproceedings{pinto_leaving_2018,
  title = {Leaving {{Behind}} the {{Software History When Transitioning}} to {{Open Source}}: {{Reasons}} and {{Implications}}},
  shorttitle = {Leaving {{Behind}} the {{Software History When Transitioning}} to {{Open Source}}},
  booktitle = {Open {{Source Systems}}: {{Enterprise Software}} and {{Solutions}}},
  author = {Pinto, Gustavo and Steinmacher, Igor and Gerosa, Marco},
  editor = {Stamelos, Ioannis and Gonzalez-Barahoña, Jesus M. and Varlamis, Iraklis and Anagnostopoulos, Dimosthenis},
  date = {2018},
  pages = {50--60},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-92375-8_5},
  abstract = {Maintenance of software history is regarded to be one of the most relevant features of Version Control Systems (VCS) and is well-known to be indispensable for software developers. However, transitioning from proprietary to open source software poses a challenge: keeping the software history might make available years of historical records and internal matters from the company that built the software. On the other hand, removing the software history may disturb the development and may be harmful to new contributors. We conducted a survey with open source software projects that made this shift to investigate (1) the reasons why they removed the software history and (2) the challenges that developers face with the lack of availability of software history. Among the results, we found that the most common reason for removing the software history is because it is entangled with proprietary code (the fact that the history contains sensitive information appears next). Interestingly, most core developers believed that the lack of software history is, in the worst case, “a very minor inconvenience.”},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9SN8TMXW/Pinto et al. - 2018 - Leaving Behind the Software History When Transitio.pdf},
  isbn = {978-3-319-92375-8},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{pinto_training_2017,
  title = {Training {{Software Engineers Using Open}}-{{Source Software}}: {{The Professors}}' {{Perspective}}},
  shorttitle = {Training {{Software Engineers Using Open}}-{{Source Software}}},
  booktitle = {2017 {{IEEE}} 30th {{Conference}} on {{Software Engineering Education}} and {{Training}} ({{CSEE T}})},
  author = {Pinto, Gustavo Henrique Lima and Filho, Fernando Figueira and Steinmacher, Igor and Gerosa, Marco Aurelio},
  date = {2017-11},
  pages = {117--121},
  issn = {2377-570X},
  doi = {10.1109/CSEET.2017.27},
  abstract = {Traditional Software Engineering (SE) courses often prioritize methodologies and concepts in small, controlled environments: naive projects used as a proof of concept instead of full-fledged real software systems. Although this strategy has clear benefits, it does not place enough care in training students to face complex, non-trivial legacy software projects. To bridge this gap, novel SE courses are leveraging the rich variety of open-source software (OSS) projects to illustrate how these methodologies and concepts are applied to existing, non-trivial software systems. To better understand the benefits, challenges, and opportunities of this transition, in this paper, we interview seven SE professors that changed their academic setting to aspire students to comprehend, maintain, and evolve OSS systems as part of their SE course. We found that there are different ways to make use of OSS projects in SE courses in terms of project choice, assessment, and learning goals. Moreover, we evidence clear benefits of this approach, including improving students' social and technical skills, and helping students enhancing their resume. Also, we observed that this strategy comes with costs: the activity demands effort and time from the professor and the barrier for one getting involved with and, therefore, placing a meaningful contribution, in an OSS community is often high.},
  eventtitle = {2017 {{IEEE}} 30th {{Conference}} on {{Software Engineering Education}} and {{Training}} ({{CSEE T}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/98TRPYKY/Pinto et al. - 2017 - Training Software Engineers Using Open-Source Soft.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IS9SFK8X/8166691.html},
  keywords = {aspire students,computer aided instruction,computer science education,controlled environments,educational courses,evolve OSS systems,Face,helping students,interview seven SE professors,Interviews,naive projects,nontrivial legacy software projects,novel SE courses,Open source software,Open-Source Contributions,Open-source software,open-source software projects,OSS community,OSS projects,public domain software,SE course,software maintenance,software quality,software systems,Software systems,Teaching Software Engineering,Traditional Software Engineering courses,Training,training Software engineers,training students}
}

@inproceedings{pinto_training_2019,
  title = {Training Software Engineers Using Open-Source Software: The Students' Perspective},
  shorttitle = {Training Software Engineers Using Open-Source Software},
  booktitle = {Proceedings of the 41st {{International Conference}} on {{Software Engineering}}: {{Software Engineering Education}} and {{Training}}},
  author = {Pinto, Gustavo and Ferreira, Clarice and Souza, Cleice and Steinmacher, Igor and Meirelles, Paulo},
  date = {2019-05-27},
  pages = {147--157},
  publisher = {{IEEE Press}},
  location = {{Montreal, Quebec, Canada}},
  doi = {10.1109/ICSE-SEET.2019.00024},
  url = {https://doi.org/10.1109/ICSE-SEET.2019.00024},
  urldate = {2020-04-22},
  abstract = {Software Engineering courses often emphasize teaching methodologies and concepts in small and controlled environments over teaching, say, maintenance aspects of full-fledged real software systems. This decision is partly justified due to the difficulty of bringing to the context of a classroom a real software project. The widespread presence of open source projects, however, is contributing to alleviating this problem. Several instructors have already adopted contributions to open source projects as part of their evaluation process, and these instructors reported many benefits, including the improvement on students' technical and social skills. However, little is known about the students' perceptions regarding the need to contribute to an open source project as part of a Software Engineering course. To better understand the students' challenges, benefits, and attitudes, we conducted 21 semi-structured interviews with students who took these courses in five different Brazilian universities. We also enriched this data with an analysis of commits performed in the repositories that students contributed to. We observed that even though some instructors chose the open source projects to students to work themselves, some students and even the open source community participated in the process of choosing projects and tasks. Students' contributions varied concerning both complexity (measured by the number of additions, deletions, and edited files) and diversity (measured regarding the different programming languages used). Among the benefits, students reported improving their technical skills and their self-confidence. Finally, some students found extremely important for instructors' being involved with open source initiatives (extra-classroom).},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J4EDWPNB/Pinto et al. - 2019 - Training software engineers using open-source soft.pdf},
  keywords = {open source communities,open source software,software engineering courses},
  series = {{{ICSE}}-{{SEET}} '19}
}

@inproceedings{pinto_who_2018,
  title = {Who {{Gets}} a {{Patch Accepted First}}? {{Comparing}} the {{Contributions}} of {{Employees}} and {{Volunteers}}},
  shorttitle = {Who {{Gets}} a {{Patch Accepted First}}?},
  booktitle = {2018 {{IEEE}}/{{ACM}} 11th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  author = {Pinto, Gustavo and Dias, Luiz Felipe and Steinmacher, Igor},
  date = {2018-05},
  pages = {110--113},
  issn = {2574-1837},
  abstract = {Although many software companies have recently embraced Open Source Software (OSS) initiatives, volunteers (i.e., developers who contribute to OSS in their spare time) still represent a wealthy workforce that have the potential of driving many non-trivial open source projects. Such volunteers face well-known barriers when attempting to contribute to OSS projects. However, what is still unclear is how the problems that volunteers face transcend to the problems that employees (i.e., developers hired by a software company to work on OSS projects) face. In this paper we aim to investigate the differences on the acceptance of patches submitted by volunteers and employees to company-owned OSS projects. We explore different characteristics of the patches submitted to company-owned OSS project, including: the frequency of acceptance and rejection; the total time to review and process a patch, and; whether the changes proposed follow some contribution best practices. We found that volunteers face 26x more rejections than employees. Volunteers have to wait, on average, 11 days to have a patch processed (employees wait 2 days, on average). 92\% of the dormant pull-requests (e.g., pull-requests that take too long to be processed) were submitted by employees. Finally, we observed that the best practices that had the patches are most adherent to is "commit messages need to be written in English".},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 11th {{International Workshop}} on {{Cooperative}} and {{Human Aspects}} of {{Software Engineering}} ({{CHASE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WZU6M4IJ/Pinto et al. - 2018 - Who Gets a Patch Accepted First Comparing the Con.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P7KMENTZ/8445549.html},
  keywords = {Best practices,Companies,company-owned OSS projects,Company-Owned OSS Projects,Conferences,dormant pull-requests,employees,Employees,Face,GitHub,Measurement,nontrivial open source projects,Open source software,Open Source Software initiatives,OSS project,personnel,project management,public domain software,software companies,software houses,Volunteers}
}

@article{pittenger_know_2016,
  ids = {pittenger\_know\_2016-1},
  title = {Know Your Open Source Code},
  author = {Pittenger, Mike},
  date = {2016-05-01},
  journaltitle = {Network Security},
  shortjournal = {Network Security},
  volume = {2016},
  pages = {11--15},
  issn = {1353-4858},
  doi = {10.1016/S1353-4858(16)30048-4},
  url = {http://www.sciencedirect.com/science/article/pii/S1353485816300484},
  urldate = {2018-08-16},
  abstract = {Open source software use has moved from the fringes into the mainstream of software development, accelerating time to market and generating cost savings. But despite these benefits, a thoughtful approach to adoption is essential. Lack of visibility into the open source software in use – particularly to known open source security vulnerabilities that have found their way into the codebase – exposes organisations to exploitation that could result in financial losses, business disruption, customer defection, legal action and brand risk. Open source software use has moved from the fringes into the mainstream of software development, accelerating time to market and generating cost savings. However, a thoughtful approach to adoption is essential, says Mike Pittenger of Black Duck Software. Lack of visibility into the open source in use – particularly to known security vulnerabilities that have found their way into the codebase – exposes organisations to exploitation that could result in financial losses, business disruption, customer defection, legal action and brand risk.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RS22W37Q/Pittenger - 2016 - Know your open source code.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZXIUT6P8/Pittenger - 2016 - Know your open source code.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M7V99E8V/S1353485816300484.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UL28FTK3/S1353485816300484.html},
  number = {5}
}

@article{poba-nzaou_worries_2019,
  title = {Worries of Open Source Projects' Contributors: {{Patterns}}, Structures and Engagement Implications},
  shorttitle = {Worries of Open Source Projects' Contributors},
  author = {Poba-Nzaou, Placide and Uwizeyemungu, Sylvestre},
  date = {2019-07-01},
  journaltitle = {Computers in Human Behavior},
  shortjournal = {Computers in Human Behavior},
  volume = {96},
  pages = {174--185},
  issn = {0747-5632},
  doi = {10.1016/j.chb.2019.02.005},
  url = {http://www.sciencedirect.com/science/article/pii/S0747563219300573},
  urldate = {2020-04-22},
  abstract = {Several organizations depend on open source software (OSS) code or talent but scholars have expressed concerns about OSS projects sustainability because of the challenges they face and their high dependency on volunteers' contributions. Acknowledging that (1) challenges that contributors worry about may impact their level of engagement (2) there have been few research on nonpathological worry with non-clinical samples in work-related context as opposed to the pathological and clinical focus (3) calls have been made for further empirical research on equifinality perspective at a micro- and meso-level (or group level) as opposed to organizational level, and from a behavioral perspective. This exploratory research uses factor and cluster analysis to derive empirical worrying profiles and examines profile differences in the relative level of relevant antecedents as well as equifinality in terms of contributors' engagement (hours per week working on OSS projects). Based on an open dataset from a worldwide survey (N = 1024), the study reveals the existence of four dimensions of OSS worry construct and five worrying profiles with marked configurational differences: no major worry (34.70\%), major worry on software quality (19.30\%), major worry on attraction and retention (18.60\%), major worry on entrepreneurial responsibilities (12.40\%), and major worry on communications (15\%). Among the five profiles, two profiles exhibit equifinality with high (equifinal) engagement level.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MFBMWWQH/Poba-Nzaou and Uwizeyemungu - 2019 - Worries of open source projects' contributors Pat.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RHMB63QB/S0747563219300573.html},
  keywords = {_test,_test2,Configurational analysis,Contributors worries,Engagement,Equifinality,Open source},
  langid = {english}
}

@inproceedings{poderi_simple_2012,
  title = {Simple {{Conversational Practices}} in the {{Case}} of {{Free}} and {{Open Source Software Infrastructure}}},
  booktitle = {Proceedings of the 12th {{Participatory Design Conference}}: {{Exploratory Papers}}, {{Workshop Descriptions}}, {{Industry Cases}} - {{Volume}} 2},
  author = {Poderi, Giacomo},
  date = {2012},
  pages = {45--48},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2348144.2348159},
  url = {http://doi.acm.org/10.1145/2348144.2348159},
  urldate = {2015-11-24},
  abstract = {The aim of this paper is to provide insights on how the infrastructure of a Free and Open Source Software (FOSS) project is used by the participants while they bring forward their own contributions. Specific case used for this paper is a mature development project of a video game. Several discussions were collected from the development board of the project's Internet forum and analysed through the inductive and iterative process of the Grounded Theory methodology. The paper identifies the emerging conversational practices of positioning, linking the scattered, setting a positive atmosphere, constructing citizenship and it discusses them in relation to the distributed nature of the project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JQM7M7DT/Poderi - 2012 - Simple Conversational Practices in the Case of Fre.pdf},
  isbn = {978-1-4503-1296-7},
  keywords = {community,conversational practices,development,distributed participation,free and open source software,internet forum,nyílt forrás},
  series = {{{PDC}} '12}
}

@article{podins_towards_nodate,
  title = {Towards a {{Cyber Conflict Taxonomy}}},
  author = {Podins, K. and Stinissen, J. and Maybaum, M.},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.361.9102&rep=rep1&type=pdf},
  urldate = {2014-03-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/II8R26KD/d3r1s2_applegate.pdf},
  keywords = {Cyber War,Cyber-Security,Forrás1,Military,taxonomy}
}

@online{pollitt_cyberterrorism_nodate,
  title = {{{CYBERTERRORISM}} - {{Fact}} or {{Fancy}}?},
  author = {Pollitt, Mark M.},
  url = {http://www.cs.georgetown.edu/~denning/infosec/pollitt.html},
  urldate = {2012-10-14},
  abstract = {This paper discusses the definition of cyberterrorism, its potential, and suggests an approach to the minimization of its’ dangers. The definition of cyberterrorism used in this paper is combines the United States Department of State’s definition of terrorism as politically motivated acts of violence against non-combatants with a definition of cyberspace as the computers, networks, programs and data which make up the information infrastructure. The conclusion is that by limiting the physical capabilities of the information infrastructure, we can limit it potential for physical destruction.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AWBHCZX4/CYBERTERRORISM - Fact or Fancy.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W4RDC522/CYBERTERRORISM - Fact or Fancy.html},
  keywords = {computer security,cyberspace,cyberterrorism,information infrastructure,Terrorism}
}

@inproceedings{poltavtseva_automation_2019,
  title = {Automation of {{Open Sources Data Processing}} for the {{Security Assessment}}},
  booktitle = {2019 {{Ivannikov Memorial Workshop}} ({{IVMEM}})},
  author = {Poltavtseva, Maria A. and Bazarnova, D.A.},
  date = {2019-09},
  pages = {64--67},
  doi = {10.1109/IVMEM.2019.00016},
  abstract = {The work is devoted to the automation of security assessment on the basis of open source data. The authors analyzed the work in this area and considered problems of the popular search engines use for automatic data collection and determining the attacker awareness. The authors use data analysis using Named Entity recognition The article presents the developed parameters of the recognition system and the training sample. It presents a data search and processing method and analysis of its effectiveness in detecting in open sources the software and hardware names, where the software or hardware belongs to the organization or object.},
  eventtitle = {2019 {{Ivannikov Memorial Workshop}} ({{IVMEM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8NW7VG3Y/Poltavtseva and Bazarnova - 2019 - Automation of Open Sources Data Processing for the.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JRITKYBZ/8880755.html},
  keywords = {attacker awareness,automatic data collection,Computer security,data acquisition,data analysis,data analysis; open source data; security assessment,Data collection,data search,Hardware,hardware names,named entity recognition,natural language processing,open sources data processing,recognition system,search engines,Search engines,security assessment,security of data,Servers,Software,software names}
}

@report{polydys_software_2009,
  title = {Software {{Assurance}} in {{Acquisition}}: {{Mitigating Risks}} to the {{Enterprise}}. {{A Reference Guide}} for {{Security}}-{{Enhanced Software Acquisition}} and {{Outsourcing}}},
  shorttitle = {Software {{Assurance}} in {{Acquisition}}},
  author = {Polydys, Mary L. and Wisseman, Stan},
  date = {2009},
  institution = {{DTIC Document}},
  url = {http://oai.dtic.mil/oai/oai?verb=getRecord&metadataPrefix=html&identifier=ADA495389},
  urldate = {2014-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z8W7Q3G5/SwA_in_Acquisition_102208.pdf},
  keywords = {Forrás1,mitigation,security}
}

@inproceedings{ponta_beyond_2018,
  title = {Beyond {{Metadata}}: {{Code}}-{{Centric}} and {{Usage}}-{{Based Analysis}} of {{Known Vulnerabilities}} in {{Open}}-{{Source Software}}},
  shorttitle = {Beyond {{Metadata}}},
  booktitle = {2018 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Ponta, Serena Elisa and Plate, Henrik and Sabetta, Antonino},
  date = {2018-09},
  pages = {449--460},
  issn = {2576-3148},
  doi = {10.1109/ICSME.2018.00054},
  abstract = {The use of open-source software (OSS) is ever-increasing, and so is the number of open-source vulnerabilities being discovered and publicly disclosed. The gains obtained from the reuse of community-developed libraries may be offset by the cost of detecting, assessing, and mitigating their vulnerabilities in a timely manner. In this paper we present a novel method to detect, assess and mitigate OSS vulnerabilities that improves on state-of-the-art approaches, which commonly depend on metadata to identify vulnerable OSS dependencies. Our solution instead is code-centric and combines static and dynamic analysis to determine the reachability of the vulnerable portion of libraries used (directly or transitively) by an application. Taking this usage into account, our approach then supports developers in choosing among the existing non-vulnerable library versions. Vulas, the tool implementing our code-centric and usage-based approach, is officially recommended by SAP to scan its Java software, and has been successfully used to perform more than 250000 scans of about 500 applications since December 2016. We report on our experience and on the lessons we learned when maturing the tool from a research prototype to an industrial-grade solution.},
  eventtitle = {2018 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8X4UDIF9/Ponta et al. - 2018 - Beyond Metadata Code-Centric and Usage-Based Anal.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DZ24QVGV/8530051.html},
  keywords = {code-centric,code-centric vulnerability analysis,community-developed libraries,DP industry,dynamic analysis,industrial-grade solution,Internet,Java,Java software,known vulnerabilities,Libraries,meta data,metadata,Metadata,metric-based update support,open source software,Open source software,open-source software,open-source vulnerabilities,OSS vulnerabilities,public domain software,SAP,Silicon,static analysis,Static analysis,Tools,usage-based analysis,usage-based approach,vulnerable OSS dependencies}
}

@inproceedings{ponta_manually-curated_2019,
  title = {A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software},
  booktitle = {Proceedings of the 16th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Ponta, Serena E. and Plate, Henrik and Sabetta, Antonino and Bezzi, Michele and Dangremont, Cédric},
  date = {2019-05-26},
  pages = {383--387},
  publisher = {{IEEE Press}},
  location = {{Montreal, Quebec, Canada}},
  doi = {10.1109/MSR.2019.00064},
  url = {https://doi.org/10.1109/MSR.2019.00064},
  urldate = {2020-04-22},
  abstract = {Advancing our understanding of software vulnerabilities, automating their identification, the analysis of their impact, and ultimately their mitigation is necessary to enable the development of software that is more secure. While operating a vulnerability assessment tool, which we developed, and that is currently used by hundreds of development units at SAP, we manually collected and curated a dataset of vulnerabilities of open-source software, and the commits fixing them. The data were obtained both from the National Vulnerability Database (NVD), and from project-specific web resources, which we monitor on a continuous basis. From that data, we extracted a dataset that maps 624 publicly disclosed vulnerabilities affecting 205 distinct open-source Java projects, used in SAP products or internal tools, onto the 1282 commits that fix them. Out of 624 vulnerabilities, 29 do not have a CVE (Common Vulnerability and Exposure) identifier at all, and 46, which do have such identifier assigned by a numbering authority, are not available in the NVD yet. The dataset is released under an open-source license, together with supporting scripts that allow researchers to automatically retrieve the actual content of the commits from the corresponding repositories, and to augment the attributes available for each instance. Moreover, these scripts allow to complement the dataset with additional instances that are not security fixes (which is useful, for example, in machine learning applications). Our dataset has been successfully used to train classifiers that could automatically identify security-relevant commits in code repositories. The release of this dataset and the supporting code as open-source will allow future research to be based on data of industrial relevance; it also represents a concrete step towards making the maintenance of this dataset a shared effort involving open-source communities, academia, and the industry.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4Q4I6EFA/Ponta et al. - 2019 - A manually-curated dataset of fixes to vulnerabili.pdf},
  series = {{{MSR}} '19}
}

@inproceedings{poo-caamano_herding_2016,
  title = {Herding {{Cats}}: {{A Case Study}} of {{Release Management}} in an {{Open Collaboration Ecosystem}}},
  shorttitle = {Herding {{Cats}}},
  booktitle = {Open {{Source Systems}}: {{Integrating Communities}}},
  author = {Poo-Caamaño, Germán and Singer, Leif and Knauss, Eric and German, Daniel M.},
  date = {2016-05-30},
  pages = {147--162},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-39225-7_12},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-39225-7_12},
  urldate = {2018-08-15},
  abstract = {Release management in large-scale software development projects requires significant communication and coordination. It is particularly challenging in Free and Open Source Software (FOSS) ecosystems, in which hundreds of loosely connected developers and their projects need to be coordinated to release software to a schedule. To better understand this process and its challenges, we analyzed over two and half years of communication in the GNOME ecosystem and studied developers’ interactions. We cataloged communication channels, categorized high level communication and coordination activities in one of them, and triangulated our results by interviewing developers. We found that a release schedule, influence instead of direct control, and diversity are factors that impact positively the release process in the GNOME ecosystem. Our results can help organizations build better large-scale teams and show that research focused on individual projects might miss important parts of the picture.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZU2IMXS4/Poo-Caamaño et al. - 2016 - Herding Cats A Case Study of Release Management i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CISQQYB7/978-3-319-39225-7_12.html},
  isbn = {978-3-319-39224-0 978-3-319-39225-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@article{poo-caamano_herding_2017,
  title = {Herding Cats in a {{FOSS}} Ecosystem: A Tale of Communication and Coordination for Release Management},
  shorttitle = {Herding Cats in a {{FOSS}} Ecosystem},
  author = {Poo-Caamaño, Germán and Knauss, Eric and Singer, Leif and German, Daniel M.},
  date = {2017-08-30},
  journaltitle = {Journal of Internet Services and Applications},
  shortjournal = {J Internet Serv Appl},
  volume = {8},
  pages = {12},
  issn = {1869-0238},
  doi = {10.1186/s13174-017-0063-2},
  url = {https://doi.org/10.1186/s13174-017-0063-2},
  urldate = {2020-04-21},
  abstract = {Release management in large-scale software development projects requires significant communication and coordination. It is particularly challenging in Free and Open Source Software (FOSS) ecosystems, in which hundreds of loosely connected developers and their projects are coordinated to release software to a schedule. To better understand this process and its challenges, we analyzed over two and half years of communication in the GNOME ecosystem and studied developers’ interactions. Through a case study, we cataloged communication channels, determined the main channel from which we categorized high level communication and coordination activities spanning five releases, and triangulated our results by interviewing ten key developers. We found that a release schedule, influence (instead of direct control), and diversity are the main factors that positively impact the release process in the GNOME ecosystem. We report a set of lessons learned that encapsulates our understanding of how the Release Management process function in a FOSS ecosystem, we learned that: (1) ensure that the release team follows the main communication channels used by developers, (2) provide a common place for coordination for an ecosystem, (3) consider including both good technical and social skills in a release team, (4) aim for a diverse release team, (5) based on lack of power, lobbying and consensus based management must be followed, (6) help the release team in the coordination process with a well defined schedule, and (7) release team work is different from regular software work. Our results can help organizations build better large-scale teams and show that research focused on individual projects might miss important parts of the picture.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7BZ8232B/Poo-Caamaño et al. - 2017 - Herding cats in a FOSS ecosystem a tale of commun.pdf},
  langid = {english},
  number = {1}
}

@article{potoczki_gyorgy_attekintes_2010,
  title = {{{ÁTTEKINTÉS A KRITIKUS INFRASTRUKTÚRA VÉDELEM JELEN HELYZETÉRŐL}}, {{A TOVÁBBLÉPÉST NEHEZÍTŐ TÉNYEZŐK ELEMZÉSE ÚTJÁN}}},
  author = {{Potóczki György}},
  date = {2010},
  journaltitle = {Hadmérnök},
  volume = {V. évf.},
  pages = {203--218},
  issn = {1788-1919},
  abstract = {Ez a cikk áttekintő, problémaelemző célokat szolgál egy olyan kutatási munka kezdeti szakaszában, amely a kritikus infrastruktúra egy speciális részterületének feltárását tűzi ki célul. Elemzésre kerülnek a kritikus infrastruktúra védelem fejlesztése szempontjából lényeges témakörök. Az aktuális kihívások és kockázatok környezetében nem lehetünk elégedettek a megelőzés/védekezés jelen helyzetével. Az áttekintett szempontok (fenyegetettség, stratégiák, definíciók, azonosítás, tulajdonviszonyok, adatbázisok, jogalkotás, szervezeti kérdések, finanszírozás) egyike alapján sem megnyugtató a helyzet. A rendkívül szerteágazó, szövevényes, sokszor rajtunk kívülálló eseményektől is függő feladatsor miatt aligha várhatóak gyors és mindenre kiterjedő megoldások. A védekezési mechanizmus kiépülését egy-egy váratlan, nem kívánatos esemény jelentősen felgyorsíthatja. A döntés- előkészítés sokszereplős, részérdekektől erősen tagolt mind belföldi, mind nemzetközi vonatkozásban. A kutatási terület nyitott, az előrelépés szükségszerű, a megoldás az érintett nemzetközi, állami szereplők, a tulajdonosi-üzemeltetői körök és a szakirányú kutatók kezében van.},
  keywords = {jogszabály,LRE},
  number = {2}
}

@online{price_sun_2010,
  title = {Sun {{Tzu}}'s 13 Lessons to Combat Hackers},
  author = {Price, Keith},
  date = {2010},
  journaltitle = {Secure Business Intelligence},
  url = {http://www.scmagazine.com.au/News/230430,sun-tzus-13-lessons-to-combat-hackers.aspx/1},
  urldate = {2012-12-19},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K3ZNEUBT/Sun Tzu's 13 lessons to combat hackers - Applications - SC Magazine Australia - Secure Business Intelligence.pdf}
}

@incollection{przechlewski_determinants_2009,
  title = {Determinants of {{Open Source Software Adoption}} – {{An Application}} of {{TOE Framework}}},
  booktitle = {Information {{Systems Development}}},
  author = {Przechlewski, Tomasz and Strzała, Krystyna},
  date = {2009},
  pages = {461--469},
  publisher = {{Springer US}},
  location = {{Boston, MA}},
  url = {http://www.springerlink.com/index/10.1007/b137171_48},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NXQGQ8I2/chp%3A10.1007%2Fb137171_48.pdf},
  isbn = {978-0-387-84809-9 978-0-387-84810-5},
  keywords = {adoption,nyílt forrás},
  langid = {english}
}

@book{punch_developing_2007,
  title = {Developing {{Effective Research Proposals}}},
  author = {Punch, Keith F.},
  date = {2007},
  publisher = {{Sage}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CHX6T7KV/11390_03_PunchDERP_Ch03.pdf},
  isbn = {978-1-4129-2126-8}
}

@article{pykalainen_alleviating_2009,
  title = {Alleviating Piracy through Open Source Strategy: {{An}} Exploratory Study of Business Software Firms in {{China}}},
  shorttitle = {Alleviating Piracy through Open Source Strategy},
  author = {Pykäläinen, T. and Yang, D. and Fang, T.},
  date = {2009-12},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {18},
  pages = {165--177},
  issn = {09638687},
  doi = {10.1016/j.jsis.2009.10.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0963868709000420},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C52WIR8M/1-s2.0-S0963868709000420-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás,open source,piracy},
  langid = {english},
  number = {4}
}

@inproceedings{qaisar_fog_2016,
  title = {Fog {{Networking}}: {{An Enabler}} for {{Next Generation Internet}} of {{Things}}},
  shorttitle = {Fog {{Networking}}},
  booktitle = {Computational {{Science}} and {{Its Applications}} – {{ICCSA}} 2016},
  author = {Qaisar, Saad and Riaz, Nida},
  date = {2016-07-04},
  pages = {353--365},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-42108-7_27},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-42108-7_27},
  urldate = {2017-08-17},
  abstract = {Fog networking, an emerging concept in the context of cloud computing, is an idea to bring computation, communication and storage near to edge devices. Fog computing can offer low latency, geographically distributed mobile applications, and distributed control systems. On the other side, Software defined networking is a concept to make networking flexible and programmable. These two technologies together can create flexible and scalable networks to handle heterogeneous and massively increasing applications of IoT. In this paper we discuss how these two technologies can interplay with each other to be enabler of next generation IoT. We discuss that why these technologies are important for IoT and what current architectures are available to support IoT.},
  eventtitle = {International {{Conference}} on {{Computational Science}} and {{Its Applications}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AQRAGQH6/Qaisar és Riaz - 2016 - Fog Networking An Enabler for Next Generation Int.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8WAD7Z8P/978-3-319-42108-7_27.html},
  isbn = {978-3-319-42107-0 978-3-319-42108-7},
  langid = {english}
}

@book{qi_international_2013,
  title = {International {{Asia Conference}} on {{Industrial Engineering}} and {{Management Innovation}} ({{IEMI2012}}) {{Proceedings}}},
  editor = {Qi, Ershi and Shen, Jiang and Dou, Runliang},
  date = {2013},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-38445-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HVDHPIHJ/From Open Source Software and Open Innovation to Open Manufacturing.pdf},
  isbn = {978-3-642-38444-8 978-3-642-38445-5},
  langid = {english}
}

@incollection{qin_software_2018,
  title = {Software {{Applications}} and {{Software Culture}}},
  booktitle = {Fundamentals of {{Software Culture}}},
  author = {Qin, Zheng and Zhang, Huidi and Qin, Xin and Xu, Kaiping and Dimitrov, Kouemo Ngayo Anatoli and Wang, Guolong and Yu, Wenhui},
  editor = {Qin, Zheng and Zhang, Huidi and Qin, Xin and Xu, Kaiping and Dimitrov, Kouemo Ngayo Anatoli and Wang, Guolong and Yu, Wenhui},
  date = {2018},
  pages = {137--191},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-0701-0_4},
  url = {https://doi.org/10.1007/978-981-13-0701-0_4},
  urldate = {2020-04-21},
  abstract = {As civilization plunged into software and eventually grew coated over generations, society inevitably ran to the “every body” can use age. At that stage of development, software drew closer to mankind. Industries called for software applications to handle their data, leading to an elephantine production of database management systems in the 1970s. Later in the 80s, following the advancement in hardware, software amplified its scope into a network of disciplines such agriculture where it made possible outcome prediction and the medical sector, where software applications monitored medical equipment. Meanwhile software applications engulfed the entertainment market with virtual and augmented reality, the Internet and Mobile applications furnished completeness of services. As of emerging industries involving Space, Scientific Exploration, New energy, Internet of Things and Unmanned Aerial Vehicle areas, software applications provided ways of accelerated explorations and analysis, together with advanced data transformation and interpretation. Currently as we are writing this book, a lot of software simulation and exploration is taking place in the software industry. They are carried out in an attempt to visualize future opportunities. As mankind constantly receives threads from its environment and nature, it has been endlessly seeking for the next station. From these examples of software application, readers will have a better understanding of software culture. This chapter discusses the relationship between software applications and software culture from two aspects: software applications in traditional and emerging industries.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VCG4WKYL/Qin et al. - 2018 - Software Applications and Software Culture.pdf},
  isbn = {9789811307010},
  langid = {english}
}

@inproceedings{qiu_going_2019,
  title = {Going {{Farther Together}}: {{The Impact}} of {{Social Capital}} on {{Sustained Participation}} in {{Open Source}}},
  shorttitle = {Going {{Farther Together}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Qiu, Huilian Sophie and Nolte, Alexander and Brown, Anita and Serebrenik, Alexander and Vasilescu, Bogdan},
  date = {2019-05},
  pages = {688--699},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00078},
  abstract = {Sustained participation by contributors in opensource software is critical to the survival of open-source projects and can provide career advancement benefits to individual contributors. However, not all contributors reap the benefits of open-source participation fully, with prior work showing that women are particularly underrepresented and at higher risk of disengagement. While many barriers to participation in open-source have been documented in the literature, relatively little is known about how the social networks that open-source contributors form impact their chances of long-term engagement. In this paper we report on a mixed-methods empirical study of the role of social capital (i.e., the resources people can gain from their social connections) for sustained participation by women and men in open-source GitHub projects. After combining survival analysis on a large, longitudinal data set with insights derived from a user survey, we confirm that while social capital is beneficial for prolonged engagement for both genders, women are at disadvantage in teams lacking diversity in expertise.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FR8FVAHX/Qiu et al. - 2019 - Going Farther Together The Impact of Social Capit.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YUGBXFAK/8812044.html},
  keywords = {Bonding,Collaboration,Cultural differences,gender,gender issues,Merging,open source software,Open source software,open-source GitHub projects,open-source participation,open-source software,project management,public domain software,social aspects of automation,social capital,Social networking (online),social networks,software engineering,sustained participation,Task analysis}
}

@incollection{qiu_joining_2010,
  title = {Joining and Socialization in Open Source Women’s Groups: {{An}} Exploratory Study of {{KDE}}-Women},
  shorttitle = {Joining and Socialization in Open Source Women’s Groups},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Qiu, Yixin and Stewart, Katherine J. and Bartol, Kathryn M.},
  date = {2010},
  pages = {239--251},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_19},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HC843MF/chp%3A10.1007%2F978-3-642-13244-5_19.pdf}
}

@misc{qiu_signals_2019,
  title = {The {{Signals}} That {{Potential Contributors Look}} for {{When Choosing Open}}-Source {{Projects}}},
  author = {Qiu, Huilian Sophie and Li, Yucen Lily and Padala, Susmita and Sarma, Anita and Vasilescu, Bogdan},
  date = {2019-11-07},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3359224},
  urldate = {2020-04-22},
  abstract = {While open-source software has become ubiquitous, its sustainability is in question: without a constant supply of contributor effort, open-source projects are at risk. While prior work has extensively studied the motivations of open-source contributors in general, relatively little is known about how people choose which project to contribute to, beyond personal interest. This question is especially relevant in transparent social coding environments like GitHub, where visible cues on personal profile and repository pages, known as signals, are known to impact impression formation and decision making. In this paper, we report on a mixed-methods empirical study of the signals that influence the contributors' decision to join a GitHub project. We first interviewed 15 GitHub contributors about their project evaluation processes and identified the important signals they used, including the structure of the README and the amount of recent activity. Then, we proceeded quantitatively to test out the impact of each signal based on the data of 9,977 GitHub projects. We reveal that many important pieces of information lack easily observable signals, and that some signals may be both attractive and unattractive. Our findings have direct implications for open-source maintainers and the design of social coding environments, e.g., features to be added to facilitate better project searching experience.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J5PQIDGH/Qiu et al. - 2019 - The Signals that Potential Contributors Look for W.pdf},
  keywords = {github,open-source software,signaling theory}
}

@article{qu_multi-level_2011,
  title = {Multi-Level Framework of Open Source Software Adoption},
  author = {Qu, Wen Guang and Yang, Zhiyong and Wang, Zhongming},
  date = {2011-09},
  journaltitle = {Journal of Business Research},
  volume = {64},
  pages = {997--1003},
  issn = {01482963},
  doi = {10.1016/j.jbusres.2010.11.023},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0148296310002523},
  abstract = {Numerous studies examine potential facilitators and inhibitors of open source software (OSS) adoption at the firm level. This study represents the first attempt to propose and test a multi-level framework, examining the effects of five country-level variables and two under-explored firm-level factors on firm OSS adoption. The findings suggest that a country's uncertainty avoidance orientation has a positive impact on OSS adoption, whereas power distance orientation and economic development have a negative impact on OSS adoption. In addition, uncertainty avoidance at the country level sets boundaries for the effect of firm-level IT-based networks in a way that the impact of proprietary IT-based networks becomes stronger, but that of open IT-based networks becomes weaker when uncertainty avoidance is high rather than low. The study also develops public policy implications from these findings},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BIM9CJUP/Qu et al. - 2011 - Multi-level framework of open source software adop.pdf},
  keywords = {Economic development,Individualism,IT competence,IT-based networks,Multi-level,OSS adoption,Power distance,Uncertainty avoidance},
  number = {9}
}

@misc{rachel_gauci_smelling_2015,
  title = {Smelling out {{Code Clones}}: {{Clone Detection Tool Evaluation}} and {{Corresponding Challenges}}},
  author = {{Rachel Gauci}},
  date = {2015},
  publisher = {{The University of Edinburgh}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EZ9AZEM5/1503.00711.pdf}
}

@inproceedings{rahman_characterizing_2018,
  title = {Characterizing the Influence of Continuous Integration: Empirical Results from 250+ Open Source and Proprietary Projects},
  shorttitle = {Characterizing the Influence of Continuous Integration},
  booktitle = {Proceedings of the 4th {{ACM SIGSOFT International Workshop}} on {{Software Analytics}}},
  author = {Rahman, Akond and Agrawal, Amritanshu and Krishna, Rahul and Sobran, Alexander},
  date = {2018-11-05},
  pages = {8--14},
  publisher = {{Association for Computing Machinery}},
  location = {{Lake Buena Vista, FL, USA}},
  doi = {10.1145/3278142.3278149},
  url = {https://doi.org/10.1145/3278142.3278149},
  urldate = {2020-04-22},
  abstract = {Continuous integration (CI) tools integrate code changes by automatically compiling, building, and executing test cases upon submission of code changes. Use of CI tools is getting increasingly popular, yet how proprietary projects reap the benefits of CI remains unknown. To investigate the influence of CI on software development, we analyze 150 open source software (OSS) projects, and 123 proprietary projects. For OSS projects, we observe the expected benefits after CI adoption, e.g., improvements in bug and issue resolution. However, for the proprietary projects, we cannot make similar observations. Our findings indicate that only adoption of CI might not be enough to the improve software development process. CI can be effective for software development if practitioners use CI's feedback mechanism efficiently, by applying the practice of making frequent commits. For our set of proprietary projects we observe practitioners commit less frequently, and hence not use CI effectively for obtaining feedback on the submitted code changes. Based on our findings we recommend industry practitioners to adopt the best practices of CI to reap the benefits of CI tools for example, making frequent commits.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GC734R46/Rahman et al. - 2018 - Characterizing the influence of continuous integra.pdf},
  isbn = {978-1-4503-6056-2},
  keywords = {Continuous Integration,DevOps,GitHub,Mining Software Repositories,Software Development Practice},
  series = {{{SWAN}} 2018}
}

@incollection{rahul_de_open_2013,
  title = {Open {{Source Reuse}} and {{Strategic Imperatives}}},
  booktitle = {Finding {{Source Code}} on the {{Web}} for {{Remix}} and {{Reuse}}},
  author = {{Rahul De} and {Ravi A. Rao}},
  date = {2013},
  pages = {187--204},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4614-6596-6_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/58TCV338/Open Source Reuse and Strategic Imperatives.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QRNVCW9K/chp%3A10.1007%2F978-1-4614-6596-6_10.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@article{raja_all_2013,
  title = {All Complaints Are Not Created Equal: Text Analysis of Open Source Software Defect Reports},
  shorttitle = {All Complaints Are Not Created Equal},
  author = {Raja, Uzma},
  date = {2013-02},
  journaltitle = {Empirical Software Engineering},
  volume = {18},
  pages = {117--138},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-012-9197-9},
  url = {http://link.springer.com/10.1007/s10664-012-9197-9},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NPFD5SF4/art%3A10.1007%2Fs10664-012-9197-9.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {1}
}

@article{raja_antecedents_2009,
  title = {Antecedents of Open Source Software Defects: {{A}} Data Mining Approach to Model Formulation, Validation and Testing},
  shorttitle = {Antecedents of Open Source Software Defects},
  author = {Raja, Uzma and Tretter, Marietta J.},
  date = {2009-12},
  journaltitle = {Information Technology and Management},
  volume = {10},
  pages = {235--251},
  issn = {1385-951X, 1573-7667},
  doi = {10.1007/s10799-009-0062-5},
  url = {http://link.springer.com/10.1007/s10799-009-0062-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HJXCZX5A/art%3A10.1007%2Fs10799-009-0062-5.pdf},
  langid = {english},
  number = {4}
}

@inproceedings{raja_investigating_2005,
  title = {Investigating {{Quality}} in {{Large}}-Scale {{Open Source Software}}},
  booktitle = {Proceedings of the {{Fifth Workshop}} on {{Open Source Software Engineering}}},
  author = {Raja, Uzma and Barry, Evelyn},
  date = {2005},
  pages = {1--4},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1082983.1083268},
  url = {http://doi.acm.org/10.1145/1082983.1083268},
  urldate = {2015-11-24},
  abstract = {Open Source Software (OSS) development and use has increased significantly over recent years. Therefore, there is a need to analyze and understand these projects. Software quality is an important characteristic effecting overall system lifecycle cost, performance and useful life. The existing models for software quality are based on empirical analysis of propriety source software (PSS), and need to be verified in OSS. Research on PSS has revealed that software quality declines, as it ages. Part of this decline is associated with the lifecycle maintenance activities that introduce change in the size and complexity of the system, while introducing software errors into modified system. Lifecycle maintenance activities in OSS systems are processed under a very different paradigm. We are interested in investigating the effects of maintenance activities on OSS project outcomes. Linux is one of the most popular and complex OSS project available. In our research, we investigate the characteristics of Linux source code. In this position paper we present some preliminary results of the effects of various types of maintenance activities on quality of Linux software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BPQH9524/Raja és Barry - 2005 - Investigating Quality in Large-scale Open Source S.pdf},
  isbn = {978-1-59593-127-6},
  keywords = {linux operating system,nyílt forrás,Open Source,quality,software maintenance,software quality},
  series = {5-{{WOSSE}}}
}

@inproceedings{rajanen_introducing_2012,
  title = {Introducing {{Usability Activities}} into {{Open Source Software Development Projects}}: {{A Participative Approach}}},
  shorttitle = {Introducing {{Usability Activities}} into {{Open Source Software Development Projects}}},
  booktitle = {Proceedings of the 7th {{Nordic Conference}} on {{Human}}-{{Computer Interaction}}: {{Making Sense Through Design}}},
  author = {Rajanen, Mikko and Iivari, Netta and Keskitalo, Eino},
  date = {2012},
  pages = {683--692},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2399016.2399120},
  url = {http://doi.acm.org/10.1145/2399016.2399120},
  urldate = {2015-11-24},
  abstract = {Usability is an important quality characteristic of software products and information systems. Different approaches for introducing usability activities into open source software (OSS) development have not yet been fully evaluated. This paper experiments with the introduction of usability activities into OSS development through a participative approach. An empirical case study was carried out in a game development OSS project. The results of this study suggest that it is beneficial to introduce usability activities into OSS development through the participative approach. In the participative approach the usability experts become recognized part of the development community through adapting their ways of work into the culture of the OSS project and submitting code patches. This participative approach had a clear impact in the case project as seen in changes in the user interface and in improved usability. The challenge of adapting usability and OSS development philosophies and practices should, however, be researched further.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BSUDHS7I/Rajanen és mtsai. - 2012 - Introducing Usability Activities into Open Source .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EZQVNPJA/Rajanen és mtsai. - 2012 - Introducing Usability Activities into Open Source .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IRQXQHMZ/Rajanen és mtsai. - 2012 - Introducing Usability Activities into Open Source .pdf},
  isbn = {978-1-4503-1482-4},
  keywords = {community,development,nyílt forrás,Open source software,participative approach,usability},
  series = {{{NordiCHI}} '12}
}

@inproceedings{rajanen_non-response_2015,
  title = {Non-Response, {{Social Exclusion}}, and {{False Acceptance}}: {{Gatekeeping Tactics}} and {{Usability Work}} in {{Free}}-{{Libre Open Source Software Development}}},
  shorttitle = {Non-Response, {{Social Exclusion}}, and {{False Acceptance}}},
  booktitle = {Human-{{Computer Interaction}} – {{INTERACT}} 2015},
  author = {Rajanen, Mikko and Iivari, Netta and Lanamäki, Arto},
  date = {2015-09-14},
  pages = {9--26},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-22698-9_2},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-22698-9_2},
  urldate = {2018-08-15},
  abstract = {Usability is an important aspect of Free-Libre Open Source Software (FLOSS), but barriers exist for usability specialists’ participation in such projects. Organizational boundary literature is interested in the tensions of online communities, including FLOSS communities. While this literature recognizes the importance of managing boundaries in online communities, little empirical research has been conducted on actual gatekeeping tactics project members perform against outsiders’ contributions. Based on several years of engaged research with FLOSS projects, we characterize three gatekeeping tactics in FLOSS projects: non-response, social exclusion, and false acceptance. They all have hindered usability work. We also offer examples of usability specialists and their contributions succeeding in avoiding these gatekeeping tactics in FLOSS projects. This paper provides an important contribution to the boundary management literature through detailed examination of gatekeeping tactics in action, as well as to the Human Computer Interaction literature interested in contributing to FLOSS projects through usability work.},
  eventtitle = {{{IFIP Conference}} on {{Human}}-{{Computer Interaction}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PSLWPMPR/Rajanen et al. - 2015 - Non-response, Social Exclusion, and False Acceptan.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9IMQVUZX/978-3-319-22698-9_2.html},
  isbn = {978-3-319-22697-2 978-3-319-22698-9},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{rajanen_open_2013,
  title = {Open {{Source}} and {{Human Computer Interaction Philosophies}} in {{Open Source Projects}}: {{Incompatible}} or {{Co}}-{{Existent}}?},
  shorttitle = {Open {{Source}} and {{Human Computer Interaction Philosophies}} in {{Open Source Projects}}},
  booktitle = {Proceedings of {{International Conference}} on {{Making Sense}} of {{Converging Media}}},
  author = {Rajanen, Mikko and Iivari, Netta},
  date = {2013},
  pages = {67:67--67:74},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2523429.2523463},
  url = {http://doi.acm.org/10.1145/2523429.2523463},
  urldate = {2015-11-24},
  abstract = {The importance of introducing usability activities into open source software (OSS) development has been acknowledged in the research literature; however, there is a lack of research examining the compatibility and actual co-existence of the philosophies of OSS and Human Computer Interaction (HCI), guiding usability research and practice, in OSS projects. This paper fills in this gap through an empirical examination of two OSS projects into which usability activities were introduced. The results show that in these cases the usability specialists embraced aspects of both philosophies; hence, these philosophies coexisted. However, the usability specialists either 'became them' or 'were close while kept the distance'. In both cases the usability specialists aligned their work with the OSS philosophy. However, through this alignment, in the other case they become very immersed in the OSS project, encountering a risk of becoming misaligned with the core HCI philosophy. Implications for research and practice are discussed.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EJ9Z2VWE/Rajanen és Iivari - 2013 - Open Source and Human Computer Interaction Philoso.pdf},
  isbn = {978-1-4503-1992-8},
  keywords = {community,development,Human Computer Interaction,nyílt forrás,Open source software,usability},
  series = {{{AcademicMindTrek}} '13}
}

@inproceedings{ramanathan_qualitative_2015,
  title = {A {{Qualitative Study}} on the {{Adoption}} of {{Open Source Software}} in {{Information Technology Outsourcing Organizations}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Ramanathan, Lakshmanan and Iyer, Sundaresan Krishnan},
  date = {2015-05-16},
  pages = {103--113},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-17837-0_10},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-17837-0_10},
  urldate = {2018-08-15},
  abstract = {The purpose of this paper is to identify the influence of Outsourcing on Open source software (OSS) and further investigate the factors that impact the adoption of OSS in global Information Technology (IT) outsourcing organizations serviced by Indian IT services providers. This exploratory research adopted positivism research philosophy and qualitative approach. An in-depth interview was conducted with ten participants across IT outsourcing organizations, IT service providers, and OSS service providers. The results show that IT outsourcing was not found to have an impact on OSS adoption. However, eight factors including management support and OSS support availability was identified to influence OSS adoption. IT services providers can utilize this research model to increase their understanding of why some IT outsourcing organizations choose to adopt OSS, while seemingly similar ones facing similar market conditions do not.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FQAJSSQP/Ramanathan and Iyer - 2015 - A Qualitative Study on the Adoption of Open Source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X3IEEB6S/978-3-319-17837-0_10.html},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@online{rami_sass_beware_nodate,
  title = {Beware of Security Vulnerabilities: {{What}} You Don't Know Can Come Back to Haunt You},
  author = {{Rami Sass}},
  url = {http://opensource.com/business/13/10/security-vulnerabilities-open-source-libraries},
  urldate = {2014-05-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4SMFBTXS/open_source_and_software_maturity_models.pdf}
}

@inproceedings{ransbotham_empirical_2010,
  title = {An {{Empirical Analysis}} of {{Exploitation Attempts Based}} on {{Vulnerabilities}} in {{Open Source Software}}.},
  booktitle = {{{WEIS}}},
  author = {Ransbotham, Sam},
  date = {2010},
  url = {http://weis2010.econinfosec.org/papers/session6/weis2010_ransbotham.pdf},
  urldate = {2014-10-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2HXDJSWZ/___weis2010_ransbotham.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZACUUR8C/weis2010_ransbotham.pdf},
  keywords = {Empirikus,Forrás1,open source,OS-CS comparision,vulnerability}
}

@inproceedings{rashid_exploring_2017,
  ids = {rashid\_exploring\_2017-1},
  title = {Exploring {{Knowledge Loss}} in {{Open Source Software}} ({{OSS}}) {{Projects}}},
  booktitle = {Software {{Process Improvement}} and {{Capability Determination}}},
  author = {Rashid, Mehvish and Clarke, Paul M. and O’Connor, Rory V.},
  date = {2017-10-04},
  pages = {481--495},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-67383-7_35},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-67383-7_35},
  urldate = {2018-08-15},
  abstract = {Open Source Software is a term used to identify software developed and released under an “open source” license, meaning that under certain conditions; it is openly available for use, inspection, modification, and for redistribution free of cost (or with cost based on the license agreement). Incorporation of OSS while developing software can reduce time and cost of development. The nature of the work force (volunteers and paid) in OSS projects is transient and results in high turnover leading to knowledge loss. In this work, we explore the phenomenon of knowledge loss in OSS projects. Maintenance of OSS projects requires knowledge, typically shared asynchronously using technology-mediated channels. Knowledge sought in this manner is reactive in the sense that a developer will consult these channels looking for possible solutions or supporting information. We follow the backward snowballing to study the relevant literature on knowledge loss in OSS. Our work suggests that proactive knowledge exchange mechanisms may bring some benefits to OSS projects. Further integration of knowledge management practices with the established OSS practices can minimise knowledge loss.},
  eventtitle = {International {{Conference}} on {{Software Process Improvement}} and {{Capability Determination}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FDL65D77/Rashid et al. - 2017 - Exploring Knowledge Loss in Open Source Software (.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QWFG4CVU/Rashid et al. - 2017 - Exploring Knowledge Loss in Open Source Software (.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3W73FDJK/978-3-319-67383-7_35.html},
  isbn = {978-3-319-67382-0 978-3-319-67383-7},
  keywords = {Knowledge Loss,Knowledge Retention Process,Open Source Software,Open Source Software Contributor,Software Development Process},
  langid = {english},
  series = {Communications in {{Computer}} and {{Information Science}}}
}

@inproceedings{rashid_remedying_2016,
  title = {Remedying Knowledge Loss in Free/Libre Open Source Software},
  booktitle = {Proceedings of the 20th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Rashid, Mehvish},
  date = {2016-06-01},
  pages = {1--4},
  publisher = {{Association for Computing Machinery}},
  location = {{Limerick, Ireland}},
  doi = {10.1145/2915970.2915976},
  url = {https://doi.org/10.1145/2915970.2915976},
  urldate = {2020-04-22},
  abstract = {This paper presents the problem of knowledge loss in Free/ Libre Open Source Software (FLOSS) projects to be explored empirically. Knowledge loss occurs in FLOSS as contributors, mainly volunteers, leave FLOSS projects, and is a topic that has not been extensively explored. What type of knowledge is lost and how knowledge loss impacts the productivity of the FLOSS contributors that remain in a project is not known. Further, little is known about the barriers associated with the re-acquirement of lost knowledge types. There are many open questions, such as what are best practices and guidelines to retain knowledge lost by type while considering the relevant barriers. The main contribution of my research will be to provide an understanding of what type of knowledge is lost and its impact on the productivity of the contributor. Best practices and guidelines will also be contributed to retain knowledge lost by type and will be evaluated in FLOSS communities for their effectiveness.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F4L2WN8W/Rashid - 2016 - Remedying knowledge loss in freelibre open source.pdf},
  isbn = {978-1-4503-3691-8},
  series = {{{EASE}} '16}
}

@inproceedings{rastogi_relationship_2018,
  title = {Relationship between Geographical Location and Evaluation of Developer Contributions in Github},
  booktitle = {Proceedings of the 12th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Rastogi, Ayushi and Nagappan, Nachiappan and Gousios, Georgios and van der Hoek, André},
  date = {2018-10-11},
  pages = {1--8},
  publisher = {{Association for Computing Machinery}},
  location = {{Oulu, Finland}},
  doi = {10.1145/3239235.3240504},
  url = {https://doi.org/10.1145/3239235.3240504},
  urldate = {2020-04-22},
  abstract = {Background Open source software projects show gender bias suggesting that other demographic characteristics of developers, like geographical location, can negatively influence evaluation of contributions too. Aim This study contributes to this emerging body of knowledge in software development by presenting a quantitative analysis of the relationship between the geographical location of developers and evaluation of their contributions on GitHub. Method We present an analysis of 70,000+ pull requests selected from 17 most actively participating countries to model the relationship between the geographical location of developers and pull request acceptance decision. Results and Conclusion We observed structural differences in pull request acceptance rates across 17 countries. Countries with no apparent similarities such as Switzerland and Japan had one of the highest pull request acceptance rates while countries like China and Germany had one of the lowest pull request acceptance rates. Notably, higher acceptance rates were observed for all but one country when pull requests were evaluated by developers from the same country.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DHKF9KZP/Rastogi et al. - 2018 - Relationship between geographical location and eva.pdf},
  isbn = {978-1-4503-5823-1},
  keywords = {geographical location,github,open source,pull requests},
  options = {useprefix=true},
  series = {{{ESEM}} '18}
}

@misc{rathore_decision_2016,
  title = {A {{Decision Tree Regression}} Based {{Approach}} for the {{Number}} of {{Software Faults Prediction}}},
  author = {Rathore, Santosh Singh and Kumar, Sandeep},
  date = {2016-02-22},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/2853073.2853083},
  urldate = {2020-04-22},
  abstract = {Software fault prediction is an important activity to make software quality assurance (SQA) process more efficient, economic and targeted. Most of earlier works related to software fault prediction have focused on classifying software modules as faulty or non-faulty. However, prediction of the number of faults in a given software module is not adequately investigated. In this paper, we explore the capability of decision tree regression (DTR) for the number of faults prediction in two different scenarios, intra-release prediction and inter-releases prediction for the given software system. The experimental study is performed over five open-source software projects with their nineteen releases collected from the PROMISE data repository. The predictive accuracy of DTR is evaluated using absolute error and relative error, prediction at level l and goodness-of-t measure. The results show that decision tree regression produced significant prediction accuracy for the number of faults prediction in both the considered scenarios. The relative comparison of intra-release and inter-releases fault prediction shows that intra-project prediction produced better accuracy compared to inter-releases prediction across all the datasets},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EV93E5ZF/Rathore and Kumar - 2016 - A Decision Tree Regression based Approach for the .pdf},
  keywords = {Decision Tree Regression,Number of Faults Prediction,Software Fault Prediction}
}

@book{raymond_cathedral_2001,
  title = {The {{Cathedral}} \& the {{Bazaar}}},
  author = {Raymond, Eric S.},
  date = {2001},
  edition = {Revised Edition},
  publisher = {{O'Reilly Media}},
  location = {{Sebastopol}},
  url = {http://www.catb.org/esr/writings/cathedral-bazaar/introduction/introduction.ps},
  abstract = {"This is how we did it." –Linus Torvalds, creator of the Linux kernel It all started with a series of odd statistics. The leading challenger to Microsoft's stranglehold on the computer industry is an operating system called Linux, the product of thousands of volunteer programmers who collaborate over the Internet. The software behind a majority of all the world's web sites doesn't come from a big company either, but from a loosely coordinated group of volunteer programmers called the Apache Group. The Internet itself, and much of its core software, was developed through a process of networked collaboration. The key to these stunning successes is a movement that has come to be called open source, because it depends on the ability of programmers to freely share their program source code so that others can improve it. In 1997, Eric S. Raymond outlined the core principles of this movement in a manifesto called "The Cathedral and the Bazaar," which was published and freely redistributed over the Internet.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BG23BTU9/Raymond - 1999 - The Cathedral & the Bazaar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EBZC67RR/Raymond - 1999 - The Cathedral & the Bazaar.ps},
  isbn = {978-0-596-00108-7},
  pagetotal = {279}
}

@inproceedings{raza_empirical_2019,
  title = {An {{Empirical Study}} of {{User Support Tools}} in {{Open Source Software}}},
  booktitle = {2019 {{IEEE}} 15th {{International Conference}} on {{Control}} and {{Automation}} ({{ICCA}})},
  author = {Raza, Arif and Capretz, Luiz Fernando and Basri, Shuib B.},
  date = {2019-07},
  pages = {964--968},
  issn = {1948-3457},
  doi = {10.1109/ICCA.2019.8899935},
  abstract = {End users' positive response is essential for the success of any software. This is true for both commercial and Open Source Software (OSS). OSS is popular not only because of its availability, which is usually free but due to the user support it provides, generally through public platforms. The study model of this research establishes a relationship between OSS user support and available support tools. To conduct this research, we used a dataset of 100 OSS projects in different categories and examined five user support tools provided by different OSS projects. The results show that project trackers, user mailing lists, and updated versions have a significant role in gaining user support. However, we were unable to find a significant association between user support and documentation, as well as between user support and the troubleshooting guidelines provided by OSS projects.},
  eventtitle = {2019 {{IEEE}} 15th {{International Conference}} on {{Control}} and {{Automation}} ({{ICCA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VPMII9B2/Raza et al. - 2019 - An Empirical Study of User Support Tools in Open S.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BUR9FXKB/8899935.html},
  keywords = {Automation,Conferences,electronic mail,open source software,OSS projects,OSS user support,public domain software,technical support services,user mailing lists,user support tools}
}

@article{raza_open_2012,
  title = {An Open Source Usability Maturity Model ({{OS}}-{{UMM}})},
  author = {Raza, Arif and Capretz, Luiz Fernando and Ahmed, Faheem},
  date = {2012-07},
  journaltitle = {Computers in Human Behavior},
  volume = {28},
  pages = {1109--1121},
  issn = {07475632},
  doi = {10.1016/j.chb.2012.01.018},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0747563212000209},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FMSMNI2K/1-s2.0-S0747563212000209-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {4}
}

@article{raza_users_2012,
  title = {Users’ Perception of Open Source Usability: An Empirical Study},
  shorttitle = {Users’ Perception of Open Source Usability},
  author = {Raza, Arif and Capretz, Luiz Fernando and Ahmed, Faheem},
  date = {2012-04},
  journaltitle = {Engineering with Computers},
  volume = {28},
  pages = {109--121},
  issn = {0177-0667, 1435-5663},
  doi = {10.1007/s00366-011-0222-1},
  url = {http://link.springer.com/10.1007/s00366-011-0222-1},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5S5QNAZU/Users perception of open source usability an empirical study.pdf},
  langid = {english},
  number = {2}
}

@inproceedings{reboucas_how_2017,
  title = {How {{Does Contributors}}' {{Involvement Influence}} the {{Build Status}} of an {{Open}}-{{Source Software Project}}?},
  booktitle = {2017 {{IEEE}}/{{ACM}} 14th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Rebouças, Marcel and Santos, Renato O. and Pinto, Gustavo and Castor, Fernando},
  date = {2017-05},
  pages = {475--478},
  doi = {10.1109/MSR.2017.32},
  abstract = {The recent introduction of the pull-based development model promoted agile development practices such as Code Reviews and Continuous Integration (CI). CI, in particular, is currently a standard development practice in open-source software (OSS) projects. Although it is well-known that OSS contributors have different involvements (e.g., while some developers drive the project, there is a long tail of peripheral developers), little is known about how the contributor's degree of participation can influence the build status of an OSS project. Through TravisTorrent's dataset, we compare the success rates of builds made by casual and non-casual contributors and what factors on their contributions may influence the build result. Our results suggest that there is no representative difference between their build success (they are similar in 85\% of the analyzed projects), meaning that being a casual contributor is not a strong indicator for creating failing builds. Also, factors like the size of their contributions and the number of project configurations (jobs) have the potential of impacting the build success.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 14th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YYJJRFUX/Rebouças et al. - 2017 - How Does Contributors' Involvement Influence the B.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DJSXPKJS/7962400.html},
  keywords = {agile development practices,Buildings,Casual Contributors,CI,continuous integration,Continuous Integration,Data mining,Documentation,Electronic mail,Open source software,Open-Source Development,open-source software project,OSS project,public domain software,pull-based development model,software engineering,software prototyping,standard development practice,Tools,TravisTorrent dataset}
}

@article{recker_understanding_2012,
  title = {Understanding User Differences in Open-Source Workflow Management System Usage Intentions},
  author = {Recker, Jan and La Rosa, Marcello},
  date = {2012-05},
  journaltitle = {Information Systems},
  volume = {37},
  pages = {200--212},
  issn = {03064379},
  doi = {10.1016/j.is.2011.10.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S030643791100127X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KGTKZIZE/1-s2.0-S030643791100127X-main.pdf},
  keywords = {community,development,Forrás3,nyílt forrás,open source},
  langid = {english},
  number = {3}
}

@online{reda_january_nodate,
  title = {In {{January}}, the {{EU}} Starts Running {{Bug Bounties}} on {{Free}} and {{Open Source Software}}},
  author = {Reda, Julia},
  journaltitle = {Julia Reda},
  url = {https://juliareda.eu/2018/12/eu-fossa-bug-bounties/},
  urldate = {2019-01-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/67MENS5U/eu-fossa-bug-bounties.html},
  langid = {british}
}

@article{reichl_open_2005,
  title = {Open {{Source}} in Der {{Telekommunikation}}},
  author = {Reichl, W. and Brusic, I.},
  date = {2005},
  journaltitle = {e\&i Elektrotechnik und Informationstechnik},
  volume = {122},
  pages = {38--44},
  url = {http://link.springer.com/article/10.1007/BF03054021},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AWC3UNPR/art%3A10.1007%2FBF03054021.pdf},
  number = {1-2}
}

@inproceedings{ren_automated_2018,
  title = {Automated Localization for Unreproducible Builds},
  booktitle = {Proceedings of the 40th {{International Conference}} on {{Software Engineering}}},
  author = {Ren, Zhilei and Jiang, He and Xuan, Jifeng and Yang, Zijiang},
  date = {2018-05-27},
  pages = {71--81},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3180155.3180224},
  url = {https://doi.org/10.1145/3180155.3180224},
  urldate = {2020-04-22},
  abstract = {Reproducibility is the ability of recreating identical binaries under pre-defined build environments. Due to the need of quality assurance and the benefit of better detecting attacks against build environments, the practice of reproducible builds has gained popularity in many open-source software repositories such as Debian and Bitcoin. However, identifying the unreproducible issues remains a labour intensive and time consuming challenge, because of the lacking of information to guide the search and the diversity of the causes that may lead to the unreproducible binaries. In this paper we propose an automated framework called RepLoc to localize the problematic files for unreproducible builds. RepLoc features a query augmentation component that utilizes the information extracted from the build logs, and a heuristic rule-based filtering component that narrows the search scope. By integrating the two components with a weighted file ranking module, RepLoc is able to automatically produce a ranked list of files that are helpful in locating the problematic files for the unreproducible builds. We have implemented a prototype and conducted extensive experiments over 671 real-world unreproducible Debian packages in four different categories. By considering the topmost ranked file only, RepLoc achieves an accuracy rate of 47.09\%. If we expand our examination to the top ten ranked files in the list produced by RepLoc, the accuracy rate becomes 79.28\%. Considering that there are hundreds of source code, scripts, Makefiles, etc., in a package, RepLoc significantly reduces the scope of localizing problematic files. Moreover, with the help of RepLoc, we successfully identified and fixed six new unreproducible packages from Debian and Guix.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TNK8LD5L/Ren et al. - 2018 - Automated localization for unreproducible builds.pdf},
  isbn = {978-1-4503-5638-1},
  keywords = {localization,software maintenance,unreproducible build},
  series = {{{ICSE}} '18}
}

@incollection{rentocchini_software_2006,
  title = {Software {{Patents}} and {{Open Source Software}} in the {{European Union}}: {{Evidences}} of a {{Trade}}-{{Off}}?},
  shorttitle = {Software {{Patents}} and {{Open Source Software}} in the {{European Union}}},
  booktitle = {Open {{Source Systems}}},
  author = {Rentocchini, Francesco and De Prato, Giuditta},
  date = {2006},
  pages = {349--351},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_41},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QR4BKBP8/chp%3A10.1007%2F0-387-34226-5_41.pdf},
  keywords = {gazdasági hatás,nyílt forrás}
}

@article{rey_show_2009,
  title = {Show Me the Code: Spatial Analysis and Open Source},
  shorttitle = {Show Me the Code},
  author = {Rey, Sergio J.},
  date = {2009-06},
  journaltitle = {Journal of Geographical Systems},
  volume = {11},
  pages = {191--207},
  issn = {1435-5930, 1435-5949},
  doi = {10.1007/s10109-009-0086-8},
  url = {http://link.springer.com/10.1007/s10109-009-0086-8},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HKNC8FRX/Show me the code_ spatial analysis and open source.pdf},
  langid = {english},
  number = {2}
}

@online{reza_rafati_sun_2013,
  title = {Sun {{Tzu}}: {{The Art}} of Cyber Warfare},
  author = {{Reza Rafati}},
  date = {2013},
  journaltitle = {cyberwarzone.com},
  url = {http://www.cyberwarzone.com/sun-tzu-art-cyber-warfare},
  urldate = {2013-05-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V2Q44V7X/jym3jxvo.html}
}

@inproceedings{ribeiro_ranking_2018,
  title = {Ranking {{Source Code Static Analysis Warnings}} for {{Continuous Monitoring}} of {{FLOSS Repositories}}},
  booktitle = {Open {{Source Systems}}: {{Enterprise Software}} and {{Solutions}}},
  author = {Ribeiro, Athos and Meirelles, Paulo and Lago, Nelson and Kon, Fabio},
  date = {2018-06-08},
  pages = {90--101},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-92375-8_8},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-92375-8_8},
  urldate = {2018-08-15},
  abstract = {Performing source code static analysis during the software development cycle is a difficult task. There are different static analyzers available, and each of them usually works better in a small subset of problems, making it hard to choose a single tool. Combining the analysis of different tools solves this problem, but brings about other problems, namely the generated false positives and a large amount of unsorted alarms. This paper presents kiskadee, a system to support the usage of static analysis during software development by providing carefully ranked static analysis reports. First, it runs multiple static analyzers on the source code. Then, using a classification model, the potential bugs detected by the static analyzers are ranked based on their importance, with critical flaws ranked first, and potential false positives ranked last. Our experimental results show that, on average, when inspecting warnings ranked by kiskadee, one hits 5.2 times less false positives before each bug than when using a randomly sorted warning list.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EJBGHN7Y/Ribeiro et al. - 2018 - Ranking Source Code Static Analysis Warnings for C.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2F6ZYJY5/978-3-319-92375-8_8.html},
  isbn = {978-3-319-92374-1 978-3-319-92375-8},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{ricca_heroes_2010,
  title = {Heroes in {{FLOSS Projects}}: {{An Explorative Study}}},
  shorttitle = {Heroes in {{FLOSS Projects}}},
  author = {Ricca, Filippo and Marchetto, Alessandro},
  date = {2010-10},
  pages = {155--159},
  publisher = {{IEEE}},
  doi = {10.1109/WCRE.2010.25},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5645555},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IV4EJ9RP/05645555.pdf},
  isbn = {978-1-4244-8911-4},
  keywords = {community,development,nyílt forrás}
}

@online{richard_adhikari_iceland_nodate,
  title = {Iceland {{Has}} the {{Hots}} for {{FOSS}}},
  author = {{Richard Adhikari}},
  url = {http://www.linuxinsider.com/rsstory/74715.html},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CITSTGU6/Iceland Has the Hots for FOSS — www.linuxinsider.pdf}
}

@online{richard_stallman_why_nodate,
  title = {Why {{Open Source}} Misses the Point of {{Free Software}}},
  author = {{Richard Stallman}},
  url = {https://www.gnu.org/philosophy/open-source-misses-the-point.html},
  urldate = {2018-08-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C7JZBQYT/open-source-misses-the-point.html},
  langid = {english}
}

@article{rid_cyber_2012,
  title = {Cyber War Will Not Take Place},
  author = {Rid, Thomas},
  date = {2012},
  journaltitle = {Journal of Strategic Studies},
  volume = {35},
  pages = {5--32},
  issn = {0140-2390},
  url = {http://dx.doi.org/10.1080/01402390.2011.608939},
  urldate = {2012-10-14},
  abstract = {For almost two decades, experts and defense establishments the world over have been predicting that cyber war is coming. But is it? This article argues in three steps that cyber war has never happened in the past, that cyber war does not take place in the present, and that it is unlikely that cyber war will occur in the future. It first outlines what would constitute cyber war: a potentially lethal, instrumental, and political act of force conducted through malicious code. The second part shows what cyber war is not, case-by-case. Not one single cyber offense on record constitutes an act of war on its own. The final part offers a more nuanced terminology to come to terms with cyber attacks. All politically motivated cyber attacks are merely sophisticated versions of three activities that are as old as warfare itself: sabotage, espionage, and subversion.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CDW67INZ/Thomas_Rid-Cyber_War_Will_Not_Take_Place.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G2G6STT3/Thomas_Rid-Cyber_War_Will_Not_Take_Place.pdf},
  keywords = {Cyber War,Cyber-Security,Espionage,Information Operations,Sabotage,Stuxnet,Subversion},
  number = {1}
}

@article{riehle_controlling_2011,
  title = {Controlling and Steering Open Source Projects},
  author = {Riehle, Dirk},
  date = {2011},
  journaltitle = {Computer},
  volume = {44},
  pages = {0093--96},
  url = {http://doi.ieeecomputersociety.org/10.1109/MC.2011.206},
  urldate = {2014-09-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EHJ8IZW9/Controlling-and-Steering-Open-Source-Projects-Preprint-r7iab2.pdf},
  keywords = {commercial open source,open source},
  number = {7}
}

@article{riehle_inner_2016,
  title = {Inner {{Source}} in {{Platform}}-{{Based Product Engineering}}},
  author = {Riehle, Dirk and Capraro, Maximilian and Kips, Detlef and Horn, Lars},
  date = {2016-12},
  journaltitle = {IEEE Transactions on Software Engineering},
  volume = {42},
  pages = {1162--1177},
  issn = {1939-3520},
  doi = {10.1109/TSE.2016.2554553},
  abstract = {Inner source is an approach to collaboration across intra-organizational boundaries for the creation of shared reusable assets. Prior project reports on inner source suggest improved code reuse and better knowledge sharing. Using a multiple-case case study research approach, we analyze the problems that three major software development organizations were facing in their product line engineering efforts. We find that a root cause, the separation of product units as profit centers from a platform organization as a cost center, leads to delayed deliveries, increased defect rates, and redundant software components. All three organizations assume that inner source can help solve these problems. The article analyzes the expectations that these companies were having towards inner source and the problems they were experiencing in its adoption. Finally, the article presents our conclusions on how these organizations should adapt their existing engineering efforts.},
  eventtitle = {{{IEEE Transactions}} on {{Software Engineering}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D8Q3GQPL/Riehle et al. - 2016 - Inner Source in Platform-Based Product Engineering.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2TRDXQIT/7452676.html},
  keywords = {asset management,Best practices,case study research,Collaboration,inner source,Inner source,open collaboration,open source,Open source software,platform-based product engineering,platform-based product line engineering,Product design,product families,product line engineering,product unit separation,profit center,public domain software,shared reusable asset creation,software development organization,software product lines,Software product lines},
  number = {12}
}

@incollection{riehle_model_2012,
  title = {A Model of Open Source Developer Foundations},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Riehle, Dirk and Berschneider, Sebastian},
  date = {2012},
  pages = {15--28},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ANH6G27T/A Model of Open Source Developer Foundations.pdf}
}

@incollection{riehle_open-source_2019,
  title = {Open-{{Source License Compliance}} in {{Software Supply Chains}}},
  booktitle = {Towards {{Engineering Free}}/{{Libre Open Source Software}} ({{FLOSS}}) {{Ecosystems}} for {{Impact}} and {{Sustainability}}: {{Communications}} of {{NII Shonan Meetings}}},
  author = {Riehle, Dirk and Harutyunyan, Nikolay},
  editor = {Fitzgerald, Brian and Mockus, Audris and Zhou, Minghui},
  date = {2019},
  pages = {83--95},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-7099-1_5},
  url = {https://doi.org/10.1007/978-981-13-7099-1_5},
  urldate = {2020-04-21},
  abstract = {Almost all software products today include open-source components. However, the obligations that open-source licenses put on their users can be difficult or undesirable to comply with [14, 20, 25]. As a consequence, software vendors and related companies need to govern the process by which open-source components are included in their products [7, 21]. A key process of such open-source governance is license clearance, that is, the process by which a company decides whether a particular component’s license is acceptable for use in its products [4, 15, 19]. In this article, we discuss this process, review the challenges it poses to software vendors, and provide unanswered research questions that result from it.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ESFFL8UE/Riehle and Harutyunyan - 2019 - Open-Source License Compliance in Software Supply .pdf},
  isbn = {9789811370991},
  langid = {english}
}

@inproceedings{riehle_paid_2014,
  title = {Paid vs. {{Volunteer Work}} in {{Open Source}}},
  booktitle = {System {{Sciences}} ({{HICSS}}), 2014 47th {{Hawaii International Conference}} On},
  author = {Riehle, Dirk and Riemer, Philipp and Kolassa, Carsten and Schmidt, Michael},
  date = {2014},
  pages = {3286--3295},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6759009},
  urldate = {2014-09-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z2FT2Q49/paid-v8-final-web.pdf}
}

@article{riehle_single-vendor_2012,
  title = {The Single-Vendor Commercial Open Course Business Model},
  author = {Riehle, Dirk},
  date = {2012},
  journaltitle = {Information Systems and e-Business Management},
  volume = {10},
  pages = {5--17},
  url = {http://link.springer.com/article/10.1007/s10257-010-0149-x},
  urldate = {2014-09-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RE3G7CF6/svcos-isebm-v05-final-final.pdf},
  keywords = {business model,commercial open source,open source},
  number = {1}
}

@inproceedings{rigby_convergent_2013,
  title = {Convergent {{Contemporary Software Peer Review Practices}}},
  booktitle = {Proceedings of the 2013 9th {{Joint Meeting}} on {{Foundations}} of {{Software Engineering}}},
  author = {Rigby, Peter C. and Bird, Christian},
  date = {2013},
  pages = {202--212},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2491411.2491444},
  url = {http://doi.acm.org/10.1145/2491411.2491444},
  urldate = {2015-11-24},
  abstract = {Software peer review is practiced on a diverse set of software projects that have drastically different settings, cultures, incentive systems, and time pressures. In an effort to characterize and understand these differences we examine two Google-led projects, Android and Chromium OS, three Microsoft projects, Bing, Office, and MS SQL, and projects internal to AMD. We contrast our findings with data taken from traditional software inspection conducted on a Lucent project and from open source software peer review on six projects, including Apache, Linux, and KDE. Our measures of interest include the review interval, the number of developers involved in review, and proxy measures for the number of defects found during review. We find that despite differences among projects, many of the characteristics of the review process have independently converged to similar values which we think indicate general principles of code review practice. We also introduce a measure of the degree to which knowledge is shared during review. This is an aspect of review practice that has traditionally only had experiential support. Our knowledge sharing measure shows that conducting peer review increases the number of distinct files a developer knows about by 66\% to 150\% depending on the project. This paper is one of the first studies of contemporary review in software firms and the most diverse study of peer review to date.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8QWHB8HK/Rigby és Bird - 2013 - Convergent Contemporary Software Peer Review Pract.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SF2UGETF/Rigby és Bird - 2013 - Convergent Contemporary Software Peer Review Pract.pdf},
  isbn = {978-1-4503-2237-9},
  keywords = {Closed source,development,Empirical Software Engineering,Forrás3,inspection,nyílt forrás,Open source software,Peer code review,procedures,Software firms},
  series = {{{ESEC}}/{{FSE}} 2013}
}

@inproceedings{rigby_open_2008,
  title = {Open Source Software Peer Review Practices: A Case Study of the Apache Server},
  shorttitle = {Open Source Software Peer Review Practices},
  booktitle = {Proceedings of the 30th International Conference on {{Software}} Engineering},
  author = {Rigby, Peter C. and German, Daniel M. and Storey, Margaret-Anne},
  date = {2008},
  pages = {541--550},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1368162},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9BINKQ2H/04814165.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{rigby_understanding_2011,
  title = {Understanding {{Broadcast Based Peer Review}} on {{Open Source Software Projects}}},
  booktitle = {Proceedings of the 33rd {{International Conference}} on {{Software Engineering}}},
  author = {Rigby, Peter C. and Storey, Margaret-Anne},
  date = {2011},
  pages = {541--550},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1985793.1985867},
  url = {http://doi.acm.org/10.1145/1985793.1985867},
  urldate = {2015-11-24},
  abstract = {Software peer review has proven to be a successful technique in open source software (OSS) development. In contrast to industry, where reviews are typically assigned to specific individuals, changes are broadcast to hundreds of potentially interested stakeholders. Despite concerns that reviews may be ignored, or that discussions will deadlock because too many uninformed stakeholders are involved, we find that this approach works well in practice. In this paper, we describe an empirical study to investigate the mechanisms and behaviours that developers use to find code changes they are competent to review. We also explore how stakeholders interact with one another during the review process. We manually examine hundreds of reviews across five high profile OSS projects. Our findings provide insights into the simple, community-wide techniques that developers use to effectively manage large quantities of reviews. The themes that emerge from our study are enriched and validated by interviewing long-serving core developers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/67ZP8QTK/Rigby és Storey - 2011 - Understanding Broadcast Based Peer Review on Open .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UD9SJQJB/Rigby és Storey - 2011 - Understanding Broadcast Based Peer Review on Open .pdf},
  isbn = {978-1-4503-0445-0},
  keywords = {case study,community,development,grounded theory,nyílt forrás,Open source software,peer review},
  series = {{{ICSE}} '11}
}

@inproceedings{rigby_what_2007,
  title = {What Can Oss Mailing Lists Tell Us? A Preliminary Psychometric Text Analysis of the Apache Developer Mailing List},
  shorttitle = {What Can Oss Mailing Lists Tell Us?},
  booktitle = {Proceedings of the {{Fourth International Workshop}} on {{Mining Software Repositories}}},
  author = {Rigby, Peter C. and Hassan, Ahmed E.},
  date = {2007},
  pages = {23},
  publisher = {{IEEE Computer Society}},
  url = {http://dl.acm.org/citation.cfm?id=1269037},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZIVCFN8X/29500023.pdf},
  keywords = {community,development,nyílt forrás}
}

@book{rigo_electronic_2011,
  title = {Electronic {{System Level Design}}},
  editor = {Rigo, Sandro and Azevedo, Rodolfo and Santos, Luiz},
  date = {2011},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://www.springerlink.com/index/10.1007/978-1-4020-9940-3},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W9APCJT3/chp%3A10.1007%2F978-1-4020-9940-3_2.pdf},
  isbn = {978-1-4020-9939-7 978-1-4020-9940-3},
  langid = {english}
}

@incollection{roach_using_2011,
  title = {Using Networks to Understand the Dynamics of Software Development},
  booktitle = {Complex {{Networks}}},
  author = {Roach, Christopher and Menezes, Ronaldo},
  date = {2011},
  pages = {119--129},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-25501-4_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XWD5TWPH/chp%3A10.1007%2F978-3-642-25501-4_12.pdf},
  keywords = {community,development,nyílt forrás}
}

@online{robert_mcmillan_how_2014,
  title = {How {{Heartbleed Broke}} the {{Internet}} — {{And Why It Can Happen Again}}},
  author = {{Robert Mcmillan}},
  date = {2014},
  journaltitle = {Wired},
  url = {http://www.wired.com/2014/04/heartbleedslesson/},
  urldate = {2014-04-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7G2PMRGZ/howhearthbleedbroke}
}

@inproceedings{robillard_disseminating_2016,
  ids = {robillard\_disseminating\_2016-1},
  title = {Disseminating {{Architectural Knowledge}} on {{Open}}-{{Source Projects}}: {{A Case Study}} of the {{Book}} "{{Architecture}} of {{Open}}-{{Source Applications}}"},
  shorttitle = {Disseminating {{Architectural Knowledge}} on {{Open}}-{{Source Projects}}},
  booktitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Robillard, Martin P. and Medvidovic, Nenad},
  date = {2016-05},
  pages = {476--487},
  issn = {1558-1225},
  doi = {10.1145/2884781.2884792},
  abstract = {This paper reports on an interview-based study of 18 authors of different chapters of the two-volume book "Architecture of Open-Source Applications". The main contributions are a synthesis of the process of authoring essay-style documents (ESDs) on software architecture, a series of observations on important factors that influence the content and presentation of architectural knowledge in this documentation form, and a set of recommendations for readers and writers of ESDs on software architecture. We analyzed the influence of three factors in particular: the evolution of a system, the community involvement in the project, and the personal characteristics of the author. This study provides the first systematic investigation of the creation of ESDs on software architecture. The observations we collected have implications for both readers and writers of ESDs, and for architecture documentation in general.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 38th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AI7CRDGA/Robillard and Medvidović - 2016 - Disseminating architectural knowledge on open-sour.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E42NVH5N/Robillard and Medvidovic - 2016 - Disseminating Architectural Knowledge on Open-Sour.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BZLY33F7/7886927.html},
  keywords = {architectural knowledge dissemination,architecture description,Architecture Description,architecture documentation,Architecture of Open-Source Applications,Computer architecture,Context,Documentation,Electrostatic discharges,ESD,essay-style documents,Interviews,open-source projects,open-source software,Open-Source Software,public domain software,Software,software architecture,Software architecture}
}

@incollection{robles_contributor_2006,
  title = {Contributor Turnover in Libre Software Projects},
  booktitle = {Open {{Source Systems}}},
  author = {Robles, Gregorio and Gonzalez-Barahona, Jesus M.},
  date = {2006},
  pages = {273--286},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_28},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/82CFZGCF/chp%3A10.1007%2F0-387-34226-5_28.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{robles_corporate_2007,
  title = {Corporate Involvement of Libre Software: {{Study}} of Presence in {{Debian}} Code over Time},
  shorttitle = {Corporate Involvement of Libre Software},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Robles, Gregorio and Duenas, Santiago and Gonzalez-Barahona, Jesus M.},
  date = {2007},
  pages = {121--132},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_10},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HH53AC3T/chp%3A10.1007%2F978-0-387-72486-7_10.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{robles_estimating_2014,
  title = {Estimating Development Effort in {{Free}}/{{Open}} Source Software Projects by Mining Software Repositories: A Case Study of {{OpenStack}}},
  shorttitle = {Estimating Development Effort in {{Free}}/{{Open}} Source Software Projects by Mining Software Repositories},
  booktitle = {Proceedings of the 11th {{Working Conference}} on {{Mining Software Repositories}}},
  author = {Robles, Gregorio and González-Barahona, Jesus M. and Cervigón, Carlos and Capiluppi, Andrea and Izquierdo-Cortázar, Daniel},
  date = {2014},
  pages = {222--231},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2597107},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BNBDE8KX/p222-robles.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{robles_women_2016,
  title = {Women in {{Free}}/{{Libre}}/{{Open Source Software}}: {{The Situation}} in the 2010s},
  shorttitle = {Women in {{Free}}/{{Libre}}/{{Open Source Software}}},
  booktitle = {Open {{Source Systems}}: {{Integrating Communities}}},
  author = {Robles, Gregorio and Reina, Laura Arjona and González-Barahona, Jesús M. and Domínguez, Santiago Dueñas},
  editor = {Crowston, Kevin and Hammouda, Imed and Lundell, Björn and Robles, Gregorio and Gamalielsson, Jonas and Lindman, Juho},
  date = {2016},
  pages = {163--173},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-39225-7_13},
  abstract = {Women are underrepresented in the IT sector. But the situation in FLOSS (free, libre, open source software) development is really extreme in this respect: past publications and studies show a female participation of around 2 \% to 5 \% and have shed some light into this problem. In this paper, we give an update the state of knowledge to the current situation of gender in FLOSS, by analyzing the results of surveying more than 2,000 contributors to FLOSS projects in 2013, of which more than 200 were women. Our findings confirm that women enter the FLOSS community later than men, do primarily other tasks than coding, participate less if they have children, and have slightly different reasons to enter (and to stay in) the development communities they join. However, we also find evidence that women are joining FLOSS projects in higher numbers in recent years, and that the share of women devoting few hours per week to FLOSS and full-time dedication is higher than for men. All in all, comparing our results with the ones from the 2000s, the context of participation of women in FLOSS has not changed much.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V9D9FAEQ/Robles et al. - 2016 - Women in FreeLibreOpen Source Software The Situ.pdf},
  isbn = {978-3-319-39225-7},
  keywords = {FLOSS,Free software,Gender,Open source,Survey},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{roca_announcing_2018,
  title = {Announcing {{EquitableTech}}: {{Open Source Skills Training}} of {{Minority Students}}},
  shorttitle = {Announcing {{EquitableTech}}},
  booktitle = {2018 {{Research}} on {{Equity}} and {{Sustained Participation}} in {{Engineering}}, {{Computing}}, and {{Technology}} ({{RESPECT}})},
  author = {Roca, Alberto I.},
  date = {2018-02},
  pages = {1--2},
  doi = {10.1109/RESPECT.2018.8491722},
  abstract = {Our 2018 STCBP RESPECT Lightning Talk is announcing a new diversity initiative - EquitableTech - for open source skills training of Black and Latino computer science students. With seed funding from a Kapor Center GRIT grant, we are planning one-day introductory workshops about open source software (OSS) modeled after the OpenHatch college campus program. However, our workshops will target minority serving institutions to encourage OSS diversity. Furthermore, we will conduct a survey of minority computer science students to assess knowledge of and interest in OSS. As an introduction, this paper briefly reviews the news reports and the scant empirical literature about OSS diversity.},
  eventtitle = {2018 {{Research}} on {{Equity}} and {{Sustained Participation}} in {{Engineering}}, {{Computing}}, and {{Technology}} ({{RESPECT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7HELBUCF/Roca - 2018 - Announcing EquitableTech Open Source Skills Train.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SX85CWE7/8491722.html},
  keywords = {computer aided instruction,computer science education,Diversity,educational institutions,engineering education,FLOSS,minority computer science students,minority serving institutions,open source skills training,open source software,OpenHatch college campus program,OSS diversity,public domain software,teaching}
}

@article{rodriguez-bustos_how_2012,
  title = {How {{Distributed Version Control Systems}} Impact Open Source Software Projects},
  author = {Rodriguez-Bustos, Christian and Aponte, Jairo},
  date = {2012},
  journaltitle = {MSR},
  pages = {36--39},
  issn = {2160-1852},
  doi = {10.1109/MSR.2012.6224297}
}

@unpublished{ronald_watro_ghost_2014,
  title = {Ghost {{Map}}: {{Proving Software Correctness}} Using {{Games}}},
  author = {{Ronald Watro} and {Kerry Moffitt} and {Talib Hussain} and {Daniel Wyschogrod} and {John Ostwald} and {Derrick Kong} and {Clint Bowers} and {Eric Church} and {Joshua Guttman} and {Qinsi Wang}},
  date = {2014},
  abstract = {A large amount of intellectual effort is expend- ed every day in the play of on-line games. It would be ex- tremely valuable if one could create a system to harness this intellectual effort for practical purposes. In this pa- per, we discuss a new crowd-sourced, on-line game, called Ghost Map that presents players with arcade-style puz- zles to solve. The puzzles in Ghost Map are generated from a formal analysis of the correctness of a software program. In our approach, a puzzle is generated for each potential flaw in the software and the crowd can produce a formal proof of the software’s correctness by solving all the corresponding puzzles. Creating a crowd-sourced game entails many challenges, and we introduce some of the lessons we learned in designing and deploying our game, with an emphasis on the challenges in producing real-time client gameplay that interacts with a server- based verification engine. Finally, we discuss our planned next steps, including extending Ghost Map’s ability to handle more complex software and improving the game mechanics to enable players to bring additional skills and intuitions to bear on those more complex problems.},
  eventtitle = {{{SECURWARE}} 2014},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KC4E8KX3/GhostMap_ProvingSoftwareCorrectness.pdf},
  keywords = {darpa,formal verification,open source,security}
}

@article{rooij_open_2007,
  title = {Open {{Source}} Software in {{US}} Higher Education: {{Reality}} or Illusion?},
  shorttitle = {Open {{Source}} Software in {{US}} Higher Education},
  author = {Rooij, Shahron Williams},
  date = {2007-10-17},
  journaltitle = {Education and Information Technologies},
  volume = {12},
  pages = {191--209},
  issn = {1360-2357, 1573-7608},
  doi = {10.1007/s10639-007-9044-6},
  url = {http://link.springer.com/10.1007/s10639-007-9044-6},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5MPIB8VB/art%3A10.1007%2Fs10639-007-9044-6.pdf},
  langid = {english},
  number = {4}
}

@article{roseberry_does_2019,
  title = {Does Every Formal Peer Review Really Need to Take Place? {{An}} Industrial Case Study},
  shorttitle = {Does Every Formal Peer Review Really Need to Take Place?},
  author = {Roseberry, Keith and Sheppard, Mary Ann and Wallis, Robert and Yang, Ye},
  date = {2019-01-01},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  volume = {153},
  pages = {45--54},
  issn = {1877-0509},
  doi = {10.1016/j.procs.2019.05.054},
  url = {http://www.sciencedirect.com/science/article/pii/S1877050919307136},
  urldate = {2020-04-22},
  abstract = {Existing studies on formal peer reviews (FPR) are mostly based on design and code review practices observed from the open source software (OSS) community, and there is a lack of studies and evidence from proprietary, large scale software development in systems engineering settings. This study fills the gap by reporting an industrial case study on FPR practices in a safety-critical embedded system development organization. First, we follow the Goal-Question-Metric (GQM) methodology to establish a set of metrics for understanding FPR practices and the resulting effectiveness. Second, we collect the metric data from 100 programs employing FPR practices on a variety of document types. Third, we analyze the data and derive answers to a set of questions defined in the GQM. The study contributes to more comprehensive understanding of FPR practices and effectiveness evaluation, and the findings reported here may serve as a basis for process improvements initiatives in similar settings.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/429X25H4/Roseberry et al. - 2019 - Does every formal peer review really need to take .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9GZGRM74/S1877050919307136.html},
  keywords = {Defect,Defect Density,Formal Peer Review,GQM,Inspections,Review Effectiveness},
  langid = {english},
  series = {17th {{Annual Conference}} on {{Systems Engineering Research}} ({{CSER}})}
}

@unpublished{ross_anderson_security_2002,
  title = {Security in {{Open}} versus {{Closed Systems}} – {{The Dance}} of {{Boltzmann}}, {{Coase}} and {{Moore}}},
  author = {{Ross Anderson}},
  date = {2002-06-20/0021},
  url = {http://www.cl.cam.ac.uk/~rja14/Papers/toulouse.pdf},
  urldate = {2014-03-16},
  eventtitle = {Open {{Source Software}} : {{Economics}}, {{Law}} and {{Policy}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R4R384I4/toulousebook.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WSH8MVKZ/toulouse.pdf},
  keywords = {OS-CS comparision,security},
  venue = {{Toulouse, France}}
}

@inproceedings{rossel_conceptualizing_2007,
  title = {Conceptualizing E-Governance},
  booktitle = {Proceedings of the 1st International Conference on {{Theory}} and Practice of Electronic Governance},
  author = {Rossel, Pierre and Finger, Matthias},
  date = {2007},
  pages = {399--407},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1328141},
  urldate = {2016-01-07},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N96F3KDD/p399-rossel.pdf},
  isbn = {978-1-59593-822-0}
}

@article{rossetto_integrating_2018,
  title = {Integrating Free and Open Source Tools and Distributed Modelling Codes in {{GIS}} Environment for Data-Based Groundwater Management},
  author = {Rossetto, Rudy and De Filippis, Giovanna and Borsi, Iacopo and Foglia, Laura and Cannata, Massimiliano and Criollo, Rotman and Vázquez-Suñé, Enric},
  date = {2018-09-01},
  journaltitle = {Environmental Modelling \& Software},
  shortjournal = {Environmental Modelling \& Software},
  volume = {107},
  pages = {210--230},
  issn = {1364-8152},
  doi = {10.1016/j.envsoft.2018.06.007},
  url = {http://www.sciencedirect.com/science/article/pii/S1364815217309453},
  urldate = {2020-04-22},
  abstract = {Integrating advanced simulation techniques and data analysis tools in a freeware Geographic Information System (GIS) provides a valuable contribution to the management of conjunctive use of groundwater (the world's largest freshwater resource) and surface-water. To this aim, we describe here the FREEWAT (FREE and open source software tools for WATer resource management) platform. FREEWAT is a free and open source, QGIS-integrated interface for planning and management of water resources, with specific attention to groundwater. The FREEWAT platform couples the power of GIS geo-processing and post-processing tools in spatial data analysis with that of process-based simulation models. The FREEWAT environment allows storage of large spatial datasets, data management and visualization, and running of several distributed modelling codes (mainly belonging to the MODFLOW family). It simulates hydrologic and transport processes, and provides a database framework and visualization capabilities for hydrochemical analysis. Examples of real case study applications are provided.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/446JR56H/Rossetto et al. - 2018 - Integrating free and open source tools and distrib.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SICCBTKI/S1364815217309453.html},
  keywords = {Free and Open Source Software,FREEWAT,Groundwater management,ICT,MODFLOW,QGIS},
  langid = {english}
}

@incollection{rossi_analysis_2009,
  title = {Analysis of Open Source Software Development Iterations by Means of Burst Detection Techniques},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Rossi, Bruno and Russo, Barbara and Succi, Giancarlo},
  date = {2009},
  pages = {83--93},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F5NTR5P9/chp%3A10.1007%2F978-3-642-02032-2_9.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{rossi_download_2010,
  title = {Download {{Patterns}} and {{Releases}} in {{Open Source Software Projects}}: A {{Perfect Symbiosis}}?},
  shorttitle = {Download {{Patterns}} and {{Releases}} in {{Open Source Software Projects}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Rossi, Bruno and Russo, Barbara and Succi, Giancarlo},
  date = {2010},
  pages = {252--267},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_20},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NW7GWPAA/chp%3A10.1007%2F978-3-642-13244-5_20.pdf},
  keywords = {nyílt forrás,terjesztés}
}

@incollection{rossi_modelling_2010,
  title = {Modelling {{Failures Occurrences}} of {{Open Source Software}} with {{Reliability Growth}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Rossi, Bruno and Russo, Barbara and Succi, Giancarlo},
  date = {2010},
  pages = {268--280},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_21},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A85UIIVP/chp%3A10.1007%2F978-3-642-13244-5_21.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K8K8JJWC/chp%3A10.1007%2F978-3-642-13244-5_21.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{rossi_open_2007,
  title = {Open Source Software and Open Data Standards as a Form of Technology Adoption: A Case Study},
  shorttitle = {Open Source Software and Open Data Standards as a Form of Technology Adoption},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Rossi, Bruno and Russo, Barbara and Succi, Giancarlo},
  date = {2007},
  pages = {325--330},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_36},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MUJA4WAD/chp%3A10.1007%2F978-0-387-72486-7_36.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{rossi_study_2006,
  title = {A Study on the Introduction of {{Open Source Software}} in the {{Public Administration}}},
  booktitle = {Open {{Source Systems}}},
  author = {Rossi, Bruno and Russo, Barbara and Succi, Giancarlo},
  date = {2006},
  pages = {165--171},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_16},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8U76Z83R/chp%3A10.1007%2F0-387-34226-5_16.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{rossi_why_2005,
  title = {Why Profit-Oriented Companies Enter the {{OS}} Field?: Intrinsic vs. Extrinsic Incentives},
  shorttitle = {Why Profit-Oriented Companies Enter the {{OS}} Field?},
  booktitle = {{{ACM SIGSOFT Software Engineering Notes}}},
  author = {Rossi, Cristina and Bonaccorsi, Andrea},
  date = {2005},
  volume = {30},
  pages = {1--5},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1083269},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2G4U9G7S/p11-rossi.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@article{roumani_adopters_2017,
  title = {Adopters’ Trust in Enterprise Open Source Vendors: {{An}} Empirical Examination},
  shorttitle = {Adopters’ Trust in Enterprise Open Source Vendors},
  author = {Roumani, Yaman and Nwankpa, Joseph K. and Roumani, Yazan F.},
  date = {2017-03-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {125},
  pages = {256--270},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2016.12.006},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121216302503},
  urldate = {2018-08-16},
  abstract = {Although significant research attention has been directed at understanding open source software (OSS) adoption, very little attention has been paid to understanding what leads potential adopters to trust enterprise open source vendors. This study identifies organizational trust factors in enterprise open source vendors, namely vendors’ security, embracement of open standards, and support services. It also examines the impact of system trust on adopters’ attitudes and intentions. The study draws upon a total of 192 questionnaires collected from enterprise IT and project managers. Our results show that trust factors have a positive effect on system trust. We also found system trust to be effective in increasing adopters’ attitudes and intentions. Finally, our results provide several managerial implications for organizations as well as enterprise open source vendors.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NM58NLYH/Roumani et al. - 2017 - Adopters’ trust in enterprise open source vendors.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CWYIJXN7/S0164121216302503.html},
  keywords = {Adoption intent,Enterprise open source software vendor,Organizational adoption,System trust}
}

@incollection{ruan_cyber_2014,
  title = {Cyber {{Security}} in the {{Mobile Age}}},
  booktitle = {Platform {{Embedded Security Technology Revealed}}},
  author = {Ruan, Xiaoyu},
  date = {2014},
  pages = {1--25},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4302-6572-6_1/fulltext.html},
  urldate = {2015-10-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F4ERC6R3/chp%3A10.1007%2F978-1-4302-6572-6_1.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MB9G8V5X/chp%3A10.1007%2F978-1-4302-6572-6_1.pdf},
  keywords = {best practices,Forrás1,open source}
}

@inproceedings{rudzki_evaluating_2009,
  title = {Evaluating {{Quality}} of {{Open Source Components}} for {{Reuse}}-{{Intensive Commercial Solutions}}},
  author = {Rudzki, Jakub and Kiviluoma, Kimmo and Poikonen, Tero and Hammouda, Imed},
  date = {2009},
  pages = {11--19},
  publisher = {{IEEE}},
  doi = {10.1109/SEAA.2009.30},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5349898},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2GQX94SB/05349898.pdf},
  isbn = {978-0-7695-3784-9},
  keywords = {Commercial relations,development,nyílt forrás}
}

@article{ruffin_using_2004,
  title = {Using Open Source Software in Product Development: {{A}} Primer},
  shorttitle = {Using Open Source Software in Product Development},
  author = {Ruffin, C. and Ebert, Christof},
  date = {2004},
  journaltitle = {Software, IEEE},
  volume = {21},
  pages = {82--86},
  issn = {0740-7459},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1259227},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FCDJ2N9K/ruffin2004.pdf},
  number = {1}
}

@incollection{ruhe_management_2014,
  title = {Management and {{Coordination}} of {{Free}}/{{Open Source Projects}}},
  booktitle = {Software {{Project Management}} in a {{Changing World}}},
  author = {Stamelos, Ioannis},
  editor = {Ruhe, Günther and Wohlin, Claes},
  date = {2014},
  pages = {321--341},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-55035-5_13},
  urldate = {2015-07-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A4H4FMME/chp%3A10.1007%2F978-3-642-55035-5_13.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EDMFTPN6/chp%3A10.1007%2F978-3-642-55035-5_13.pdf},
  isbn = {978-3-642-55034-8 978-3-642-55035-5},
  keywords = {Closed source,development,Forrás1,nyílt forrás,open source,procedures},
  langid = {english}
}

@incollection{ruiz_towards_2011,
  title = {Towards a {{Unified Definition}} of {{Open Source Quality}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Ruiz, Claudia and Robinson, William},
  date = {2011},
  pages = {17--33},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MQH25694/Towards a Unified Definition of Open Source Quality.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XB6S922G/chp%3A10.1007%2F978-3-642-24418-6_2.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{ruohonen_exploring_2016,
  title = {Exploring the {{Use}} of {{Deprecated PHP Releases}} in the {{Wild Internet}}: {{Still}} a {{LAMP Issue}}?},
  shorttitle = {Exploring the {{Use}} of {{Deprecated PHP Releases}} in the {{Wild Internet}}},
  booktitle = {Proceedings of the 6th {{International Conference}} on {{Web Intelligence}}, {{Mining}} and {{Semantics}}},
  author = {Ruohonen, Jukka and Hyrynsalmi, Sami and Leppänen, Ville},
  date = {2016-06-13},
  pages = {1--12},
  publisher = {{Association for Computing Machinery}},
  location = {{Nîmes, France}},
  doi = {10.1145/2912845.2912851},
  url = {https://doi.org/10.1145/2912845.2912851},
  urldate = {2020-04-22},
  abstract = {Many web sites utilize deprecated software products that are no longer maintained by the associated software producers. This paper explores the question of whether an existing big data collection can be used to predict the likelihood of deprecated PHP releases based on different abstract components in modern web deployment stacks. Building on web intelligence, software security, and data-based industry rationales, the question is examined by focusing on the most popular domains in the contemporary web-facing Internet. Logistic regression is used for classification. Although statistical classification performance is modest, the results indicate that deprecated PHP releases are associated with Linux and other open source software components. Geographical variation is small. Besides these results, the paper contributes to the web intelligence research by evaluating the feasibility of existing big data collections for mass-scale fingerprinting.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VFTUQKCG/Ruohonen et al. - 2016 - Exploring the Use of Deprecated PHP Releases in th.pdf},
  isbn = {978-1-4503-4056-4},
  keywords = {cyber security,patching,release engineering,web crawling},
  series = {{{WIMS}} '16}
}

@inproceedings{ruohonen_mining_2017,
  title = {Mining Social Networks of Open Source {{CVE}} Coordination},
  booktitle = {Proceedings of the 27th {{International Workshop}} on {{Software Measurement}} and 12th {{International Conference}} on {{Software Process}} and {{Product Measurement}}},
  author = {Ruohonen, Jukka and Hyrynsalmi, Sami and Rauti, Sampsa and Leppänen, Ville},
  date = {2017-10-25},
  pages = {176--188},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3143434.3143458},
  url = {https://doi.org/10.1145/3143434.3143458},
  urldate = {2020-04-22},
  abstract = {Coordination is one central tenet of software engineering practices and processes. In terms of software vulnerabilities, coordination is particularly evident in the processes used for obtaining Common Vulnerabilities and Exposures (CVEs) identifiers for discovered and disclosed vulnerabilities. As the central CVE tracking infrastructure maintained by the non-profit MITRE Corporation has recently been criticized for time delays in CVE assignment, almost an ideal case is available for studying software and security engineering coordination practices with practical relevance. Given this pragmatic motivation, this paper examines open source CVE coordination that occurs on the public oss-security mailing list. By combining social network analysis with a data-driven, exploratory research approach, the paper asks six data mining questions with practical relevance. By contemplating about answers to the questions asked by means of descriptive statistics, the paper consequently contributes not only to the contemporary industry debates, but also to the tradition of empirical vulnerability research. The perspective and the case are both novel in this tradition, thus opening new avenues for further empirical inquiries and practical improvements for the contemporary CVE coordination.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I3Z3LY6N/Ruohonen et al. - 2017 - Mining social networks of open source CVE coordina.pdf},
  isbn = {978-1-4503-4853-9},
  keywords = {CVSS,cyber security,MITRE,NVD,social network analysis,software engineering coordination,software vulnerability},
  series = {{{IWSM Mensura}} '17}
}

@inproceedings{russell_automated_2018,
  title = {Automated {{Vulnerability Detection}} in {{Source Code Using Deep Representation Learning}}},
  booktitle = {2018 17th {{IEEE International Conference}} on {{Machine Learning}} and {{Applications}} ({{ICMLA}})},
  author = {Russell, Rebecca and Kim, Louis and Hamilton, Lei and Lazovich, Tomo and Harer, Jacob and Ozdemir, Onur and Ellingwood, Paul and McConley, Marc},
  date = {2018-12},
  pages = {757--762},
  doi = {10.1109/ICMLA.2018.00120},
  abstract = {Increasing numbers of software vulnerabilities are discovered every year whether they are reported publicly or discovered internally in proprietary code. These vulnerabilities can pose serious risk of exploit and result in system compromise, information leaks, or denial of service. We leveraged the wealth of C and C++ open-source code available to develop a largescale function-level vulnerability detection system using machine learning. To supplement existing labeled vulnerability datasets, we compiled a vast dataset of millions of open-source functions and labeled it with carefully-selected findings from three different static analyzers that indicate potential exploits. Using these datasets, we developed a fast and scalable vulnerability detection tool based on deep feature representation learning that directly interprets lexed source code. We evaluated our tool on code from both real software packages and the NIST SATE IV benchmark dataset. Our results demonstrate that deep feature representation learning on source code is a promising approach for automated software vulnerability detection.},
  eventtitle = {2018 17th {{IEEE International Conference}} on {{Machine Learning}} and {{Applications}} ({{ICMLA}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S3TN7J9C/Russell et al. - 2018 - Automated Vulnerability Detection in Source Code U.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QVNQDEC8/8614145.html},
  keywords = {artificial neural networks,automated software vulnerability detection,C open-source code,C++ language,C++ open-source code,computer security,data mining,deep feature representation,deep representation learning,Feature extraction,largescale function-level vulnerability detection system,learning (artificial intelligence),machine learning,Machine learning,neural nets,NIST SATE IV benchmark dataset,Open source software,open-source code,open-source functions,program compilers,program diagnostics,public domain software,Security,security of data,software vulnerabilities,source code (software),static analyzers,Tools,Training}
}

@incollection{russo_mining_2019,
  title = {Mining {{Data}} to {{Profile Communication}} in {{FLOSS Communities}}},
  booktitle = {Towards {{Engineering Free}}/{{Libre Open Source Software}} ({{FLOSS}}) {{Ecosystems}} for {{Impact}} and {{Sustainability}}: {{Communications}} of {{NII Shonan Meetings}}},
  author = {Russo, Barbara and Tragust, Juergen and Wang, Xiaofeng},
  editor = {Fitzgerald, Brian and Mockus, Audris and Zhou, Minghui},
  date = {2019},
  pages = {31--47},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-7099-1_2},
  url = {https://doi.org/10.1007/978-981-13-7099-1_2},
  urldate = {2020-04-21},
  abstract = {FLOSS projects generate big data of different types, produced throughout the development process, which is a valuable source of information on the process, product, and the organization of FLOSS projects. However, the information such data carries may sometimes be incomplete or become soon obsolete. To exemplify the potential and the limits of mining data from FLOSS projects, this chapter presents a study on how to mine social media data from an open-source community (e.g., how to reconstruct conversation of several developers), to make sense of their communication structure (e.g., use measures of social network analysis to model developers’ communication), and surface the social networks that matter but are hidden underneath the large amount of data (e.g., unveil developers’ roles and competencies). In the study, twitter data related to the Drupal Core project was mined, including both data on developer twitter accounts as well as tweets from these accounts. Online conversations among the Drupal Core developers were reconstructed from the mined data, and analyzed using both descriptive statistics and social network analysis. Our study demonstrates a concrete approach of investigating and surfacing hidden social networks that really matter to an open-source community, which may lead to the improvement of online communication practices used by the community.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FUCLK5EL/Russo et al. - 2019 - Mining Data to Profile Communication in FLOSS Comm.pdf},
  isbn = {9789811370991},
  langid = {english}
}

@article{ryoo_use_2016,
  title = {The {{Use}} of {{Security Tactics}} in {{Open Source Software Projects}}},
  author = {Ryoo, Jungwoo and Malone, Bryan and Laplante, Phillip A. and Anand, Priya},
  date = {2016-09},
  journaltitle = {IEEE Transactions on Reliability},
  volume = {65},
  pages = {1195--1204},
  issn = {1558-1721},
  doi = {10.1109/TR.2015.2500367},
  abstract = {Despite the best intentions of software architects, it is often the case that individual developers do not faithfully implement the original security design decisions. Such a scenario sometimes leads to a situation in which while an architect claims the use of a secure architecture in the form of some tactic, the corresponding source code does not support the claim. To bridge this gap, the first critical step is to verify whether the source code reflects at least some of the structural or behavioral features required for a tactic. In this study, we examine the extent of this discrepancy between an architect's vision of what security tactics need to be adopted in the software and the actual implementation. We accomplish this research goal by 1) exploring an architect's intention to use security tactics, 2) checking whether the tactic is manifested in the design, and finally 3) recovering the evidence of efforts to implement the design in the source code. To avoid limitations to accessing documentation and source code, we use open source projects to conduct our research.},
  eventtitle = {{{IEEE Transactions}} on {{Reliability}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XJF75PH3/Ryoo et al. - 2016 - The Use of Security Tactics in Open Source Softwar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V6P4AVIB/7362260.html},
  keywords = {Computer architecture,documentation,Documentation,open source projects,Open source software,public domain software,secure software architecture,Security,security design decisions,security of data,security tactics,software architecture,Software architecture,source code,source code (software),Testing},
  number = {3}
}

@inproceedings{sabetta_practical_2018,
  title = {A {{Practical Approach}} to the {{Automatic Classification}} of {{Security}}-{{Relevant Commits}}},
  booktitle = {2018 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Sabetta, Antonino and Bezzi, Michele},
  date = {2018-09},
  pages = {579--582},
  issn = {2576-3148},
  doi = {10.1109/ICSME.2018.00058},
  abstract = {The lack of reliable sources of detailed information on the vulnerabilities of open-source software (OSS) components is a major obstacle to maintaining a secure software supply chain and an effective vulnerability management process. Standard sources of advisories and vulnerability data, such as the National Vulnerability Database (NVD), are known to suffer from poor coverage and inconsistent quality. To reduce our dependency on these sources, we propose an approach that uses machine-learning to analyze source code repositories and to automatically identify commits that are security-relevant (i.e., that are likely to fix a vulnerability). We treat the source code changes introduced by commits as documents written in natural language, classifying them using standard document classification methods. Combining independent classifiers that use information from different facets of commits, our method can yield high precision (80\%) while ensuring acceptable recall (43\%). In particular, the use of information extracted from the source code changes yields a substantial improvement over the best known approach in state of the art, while requiring a significantly smaller amount of training data and employing a simpler architecture.},
  eventtitle = {2018 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BQF6BEBB/Sabetta and Bezzi - 2018 - A Practical Approach to the Automatic Classificati.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NW7E627B/8530068.html},
  keywords = {automatic classification,code change classification,commit classification,CVE,database management systems,Databases,detailed information,document classification methods,independent classifiers,learning (artificial intelligence),machine learning,Machine learning,National Vulnerability Database,NVD,open source software,Open source software,open-source software components,OSS components,pattern classification,Predictive models,public domain software,reliable sources,secure software supply chain,Security,security of data,security-relevant commits,software engineering,source code repositories,Standards,vulnerabilities,vulnerability data,vulnerability management process}
}

@inproceedings{sabin_free_2011,
  title = {Free and {{Open Source Software Development}} of {{IT Systems}}},
  booktitle = {Proceedings of the 2011 {{Conference}} on {{Information Technology Education}}},
  author = {Sabin, Mihaela},
  date = {2011},
  pages = {27--32},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2047594.2047601},
  url = {http://doi.acm.org/10.1145/2047594.2047601},
  urldate = {2015-11-24},
  abstract = {IT system development, integration, deployment, and administration benefit significantly from free and open source software (FOSS) tools and services. Affordability has been a compelling reason for adopting FOSS in computing curricula and equipping computing labs with support infrastructure. Using FOSS systems and services, however, is just the first step in taking advantage of how FOSS development principles and practices can impact student learning in IT degree programs. Above all, FOSS development of IT systems requires changes to how students, instructors, and other contributors work collaboratively and openly and get involved and invested in project activities. In this paper I examine the challenges to engage students in FOSS development projects proposed by real clients. A six-week course project revealed problems with adopting FOSS development and collaboration across different activities and roles that student team members have assumed. Despite these problems, students have showed a genuine and strong interest in gaining more practice with FOSS development. FOSS development teaching was further refined in two other courses to learn about adequate teaching strategies and the competencies that students achieve when they participate in FOSS development of IT systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RVFW3UEN/Sabin - 2011 - Free and Open Source Software Development of IT Sy.pdf},
  isbn = {978-1-4503-1017-8},
  keywords = {collaboration,community,development,free and open source software,IT system development,nyílt forrás},
  series = {{{SIGITE}} '11}
}

@incollection{sadeghi_mining_2014,
  title = {Mining the {{Categorized Software Repositories}} to {{Improve}} the {{Analysis}} of {{Security Vulnerabilities}}},
  booktitle = {Fundamental {{Approaches}} to {{Software Engineering}}},
  author = {Sadeghi, Alireza and Esfahani, Naeem and Malek, Sam},
  date = {2014},
  edition = {2014},
  pages = {155--169},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-54804-8},
  urldate = {2014-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XD233CHM/chp%3A10.1007%2F978-3-642-54804-8_11.pdf},
  isbn = {978-3-642-54803-1 978-3-642-54804-8},
  keywords = {computer security,nyílt forrás},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@article{saini_fuzzy_2016,
  title = {Fuzzy Analysis and Prediction of Commit Activity in Open Source Software Projects},
  author = {Saini, Munish and Kaur, Kuljit},
  date = {2016},
  journaltitle = {IET Software},
  volume = {10},
  pages = {136--146},
  issn = {1751-8814},
  doi = {10.1049/iet-sen.2015.0087},
  abstract = {Autoregressive integrated moving average (ARIMA) models are the most commonly used prediction models in the previous studies on software evolution prediction. This study explores a prediction method based on fuzzy time series for predicting the future commit activity in open source software (OSS) projects. The idea to choose fuzzy time series based prediction method is due to the stochastic nature of the OSS development process. Commit activity of OSS project indicates the activeness of its development community. An active development community is a strong contributor to the success of OSS project. Therefore commit activity prediction is an important indicator to the project managers, developers, and users regarding the evolutionary prospects of the project in future. The fuzzy time series-based prediction method is of order three and uses time variant difference parameter on the current state to forecast the next state data. The performance and suitability of computational method are examined in comparison with that of ARIMA model on a data set of seven OSS systems. It is found that the predicted results of the computational method outperform various ARIMA models. Towards the end, a commit prediction model is used for each project to analyse the trends in their commit activity.},
  eventtitle = {{{IET Software}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JPWW85GM/Saini and Kaur - 2016 - Fuzzy analysis and prediction of commit activity i.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EQ378SYR/7585182.html},
  keywords = {ARIMA model,autoregressive integrated moving average models,autoregressive moving average processes,commit activity prediction,development community,fuzzy analysis,fuzzy set theory,fuzzy time series-based prediction method,open source software projects,OSS projects,public domain software,software development management,software evolution prediction,time series,time variant difference parameter},
  number = {5}
}

@article{saint-andre_xmpp_2009,
  title = {{{XMPP}}: Lessons Learned from Ten Years of {{XML}} Messaging},
  shorttitle = {{{XMPP}}},
  author = {Saint-Andre, Peter},
  date = {2009},
  journaltitle = {Communications Magazine, IEEE},
  volume = {47},
  pages = {92--96},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4907413},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PFB5WM35/04907413.pdf},
  number = {4}
}

@book{salerno_social_2011,
  title = {Social {{Computing}}, {{Behavioral}}-{{Cultural Modeling}} and {{Prediction}}},
  editor = {Salerno, John and Yang, Shanchieh Jay and Nau, Dana and Chai, Sun-Ki},
  date = {2011},
  volume = {6589},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-19656-0},
  urldate = {2014-05-31},
  editorb = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  editorbtype = {redactor},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2HIJK8NF/bok%3A978-3-642-19656-0.pdf},
  isbn = {978-3-642-19655-3 978-3-642-19656-0},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{sally_using_2010,
  title = {Using {{Open Source Software Projects}}},
  booktitle = {Pro {{Linux Embedded Systems}}},
  author = {Sally, Gene},
  date = {2010},
  pages = {273--291},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4302-7226-7_13},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XIP4GHD8/Using Open Source Software Projects.pdf}
}

@inproceedings{salza_developers_2018,
  title = {Do Developers Update Third-Party Libraries in Mobile Apps?},
  booktitle = {Proceedings of the 26th {{Conference}} on {{Program Comprehension}}},
  author = {Salza, Pasquale and Palomba, Fabio and Di Nucci, Dario and D'Uva, Cosmo and De Lucia, Andrea and Ferrucci, Filomena},
  date = {2018-05-28},
  pages = {255--265},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3196321.3196341},
  url = {https://doi.org/10.1145/3196321.3196341},
  urldate = {2020-04-22},
  abstract = {One of the most common strategies to develop new software is to take advantage of existing source code, which is available in comprehensive packages called third-party libraries. As for all software systems, even these libraries change to offer new functionalities and fix bugs or security issues. The way the changes are propagated has been studied by researchers, interested in understanding their impact on the non-functional attributes of the systems source code. While the research community mainly focused on the change propagation phenomenon in the context of traditional applications, only little is known regarding the mobile context. In this paper, we aim at bridging this gap by conducting an empirical study on the evolution history of 291 mobile apps, by investigating (i) whether mobile developers actually update third-party libraries, (ii) which are the categories of libraries with respect to the developers' proneness to update their apps, (iii) what are the common patterns followed by developers when updating a software library, and (iv) whether high- and low-rated apps present peculiar update patterns. The results of the study showed that mobile developers rarely update their apps with respect to the used libraries, and when they do, they mainly tend to update the libraries related to the Graphical User Interface, with the aim of keeping the mobile apps updated with the latest design tendencies. In some cases developers ignore updates because of a poor awareness of the benefits, or a too high cost/benefit ratio. Finally, high- and low-rated apps present strong differences.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IGER7JFK/Salza et al. - 2018 - Do developers update third-party libraries in mobi.pdf},
  isbn = {978-1-4503-5714-2},
  keywords = {API usage,empirical study,mining software repository,third-party libraries},
  series = {{{ICPC}} '18}
}

@inproceedings{samer_towards_2019,
  title = {Towards {{Issue Recommendation}} for {{Open Source Communities}}},
  booktitle = {2019 {{IEEE}}/{{WIC}}/{{ACM International Conference}} on {{Web Intelligence}} ({{WI}})},
  author = {Samer, Ralph and Stettinger, Martin and Felfernig, Alexander},
  date = {2019-10},
  pages = {164--171},
  abstract = {In open source software development, a major challenge is the prioritization of new requirements as well as the identification of responsible developers for their implementation. Unlike conventional industrial software development, where requirements engineers have to explicitly define who implements what, in the context of open source development, developers (contributors) usually decide on their own which requirements to implement next. Contributors have to deal with a huge number of requirements where the recognition of the most relevant ones often becomes a crucial task with a high impact on the success of a software project. This fact defines our major motivation for the development of a prioritization tool for the ECLIPSE community which recommends relevant requirements (issues/bugs) to open source developers. Our tool uses real-world data from ECLIPSE in order to build a prediction model. We trained and tested our tool with different classifiers such as Naive Bayes (representing our baseline), Decision Tree, and Random Forest. The evaluation results indicate that the Random Forest classifier correctly predicts issues with a precision of 0.88 (F1-score 0.68).},
  eventtitle = {2019 {{IEEE}}/{{WIC}}/{{ACM International Conference}} on {{Web Intelligence}} ({{WI}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SRQCK2LN/Samer et al. - 2019 - Towards Issue Recommendation for Open Source Commu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2D9B39WX/8909605.html},
  keywords = {Computer bugs,ECLIPSE community,Feature extraction,industrial software development,issue recommendation,open source communities,open source developers,Open source software,open source software development,Open-Source Software Development,pattern classification,Prioritization,prioritization tool,public domain software,random forest classifier,random forests,Recommender systems,Recommender Systems,Requirements Engineering,requirements engineers,software engineering,software project}
}

@incollection{samoladas_sqo-oss_2008,
  title = {The {{SQO}}-{{OSS}} Quality Model: Measurement Based Open Source Software Evaluation},
  shorttitle = {The {{SQO}}-{{OSS}} Quality Model},
  booktitle = {Open Source Development, Communities and Quality},
  author = {Samoladas, Ioannis and Gousios, Georgios and Spinellis, Diomidis and Stamelos, Ioannis},
  date = {2008},
  pages = {237--248},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_19},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FBKFEDEI/chp%3A10.1007%2F978-0-387-09684-1_19.pdf},
  keywords = {nyílt forrás,quality}
}

@article{samoladas_survival_2010,
  title = {Survival Analysis on the Duration of Open Source Projects},
  author = {Samoladas, Ioannis and Angelis, Lefteris and Stamelos, Ioannis},
  date = {2010-09},
  journaltitle = {Information and Software Technology},
  volume = {52},
  pages = {902--922},
  issn = {09505849},
  doi = {10.1016/j.infsof.2010.05.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584910000790},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I2P239VE/1-s2.0-S0950584910000790-main.pdf},
  keywords = {development,life cycle,nyílt forrás},
  langid = {english},
  number = {9}
}

@inproceedings{sampaio_do_prado_leite_prevalence_2018,
  title = {The {{Prevalence}} of Code {{Over Models}}: {{Turning}} It {{Around}} with {{Transparency}}},
  shorttitle = {The {{Prevalence}} of Code {{Over Models}}},
  booktitle = {2018 {{IEEE}} 8th {{International Model}}-{{Driven Requirements Engineering Workshop}} ({{MoDRE}})},
  author = {Sampaio do Prado Leite, Julio Cesar},
  date = {2018-08},
  pages = {56--57},
  doi = {10.1109/MoDRE.2018.00013},
  abstract = {Over the last ten years, there has been an increasing shift in software production from plandriven processes towards lean software processes. These lean processes are based either on agile strategies or in open source environments. One instance of this trend is the growing use of GitHub as a software construction platform. More and more, software developers are relying on text as representation and collaboration as a way of producing quality software. As such, the adoption of more abstract representations (model oriented), as the research community have been forecasting, is yet to happen. Taking a bias position, anchored on the concept of transparency as a quality, we look at the factors for the prevalence of code over models. We try to forecast possible ways to foster the use of models in software production. Our vision is based on bringing transparency to collaborative modeling.},
  eventtitle = {2018 {{IEEE}} 8th {{International Model}}-{{Driven Requirements Engineering Workshop}} ({{MoDRE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JMCPEN2N/Sampaio do Prado Leite - 2018 - The Prevalence of code Over Models Turning it Aro.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3KZP87WK/8501494.html},
  keywords = {abstract representations,agile processes,agile strategies,bias position,Collaboration,collaborative modeling,Computational modeling,Conferences,GithHub,GitHub,lean software processes,model driven requirements,open source,open source environments,plan-driven processes,plandriven processes,public domain software,Requirements engineering,Software,software construction platform,software developers,software production,software prototyping,software quality,Solid modeling,transparency}
}

@article{sandor_kiberbiztonsagi_2018,
  title = {Kiberbiztonsági Eseménykezelő Szervezetek rendeltetése, feladatai},
  author = {Sándor, MUNK},
  date = {2018},
  volume = {XIII},
  pages = {10},
  abstract = {Today's social, economic, and every-day activities are increasingly dependent on the services provided by globally interconnected, decentralized IT systems and networks, the cyberspace.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WHMFCEGJ/Sándor - 2018 - KIBERBIZTONSÁGI ESEMÉNYKEZELŐ SZERVEZETEK RENDELTE.pdf},
  langid = {magyar},
  number = {3}
}

@misc{sans_institute_open_2003,
  title = {Open {{Source Risk Mitigation Process}}},
  author = {{SANS Institute}},
  date = {2003},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MBAUEWN6/1174.pdf},
  keywords = {mitigation,open source,Risk management}
}

@misc{sans_institute_security_2003,
  title = {Security {{Concerns}} in {{Using Open Source Software}} for {{Enterprise Requirements}}},
  author = {{SANS Institute}},
  date = {2003},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RZZJ34WC/sans_report.pdf},
  keywords = {Forrás1,Previous Work}
}

@article{santos_attraction_2013,
  title = {The Attraction of Contributors in Free and Open Source Software Projects},
  author = {Santos, Carlos and Kuk, George and Kon, Fabio and Pearson, John},
  date = {2013-03},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {22},
  pages = {26--45},
  issn = {09638687},
  doi = {10.1016/j.jsis.2012.07.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0963868712000340},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S2QZB6ZU/1-s2.0-S0963868712000340-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {1}
}

@inproceedings{santos_judging_2016,
  title = {Judging a {{Commit}} by {{Its Cover}}: {{Correlating Commit Message Entropy}} with {{Build Status}} on {{Travis}}-{{CI}}},
  shorttitle = {Judging a {{Commit}} by {{Its Cover}}},
  booktitle = {2016 {{IEEE}}/{{ACM}} 13th {{Working Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Santos, Eddie Antonio and Hindle, Abram},
  date = {2016-05},
  pages = {504--507},
  abstract = {Developers summarize their changes to code in commit messages.When a message seems “unusual”, however, this puts doubt into the quality of the code contained in the commit. We trained n-gram language models and used cross-entropy as an indicator of commit message “unusualness” of over 120,000 commits from open source projects.Build statuses collected from Travis-CI were used as a proxy for code quality. We then compared the distributions of failed and successful commits with regards to the “unusualness” of their commit message. Our analysis yielded significant results when correlating cross-entropy with build status.},
  eventtitle = {2016 {{IEEE}}/{{ACM}} 13th {{Working Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MACQHTB6/Santos and Hindle - 2016 - Judging a Commit by Its Cover Correlating Commit .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BBQT3DAU/7832936.html},
  keywords = {build status,code quality,commit message,Computational modeling,cross entropy,cross-entropy,Data mining,Entropy,github,message entropy,n-gram language model,open source,open source projects,public domain software,Software,software engineering,trained n-gram language models,Training,travis-ci,Travis-CI}
}

@inproceedings{sarinda_low-cost_2017,
  title = {Low-Cost and Open Source {{SCADA}} Options for Remote Control and Monitoring of Inverters},
  booktitle = {2017 {{IEEE}} 30th {{Canadian Conference}} on {{Electrical}} and {{Computer Engineering}} ({{CCECE}})},
  author = {Sarinda, J. L. and Iqbal, T. and Mann, G.},
  date = {2017-04},
  pages = {1--4},
  doi = {10.1109/CCECE.2017.7946658},
  abstract = {The main objective of this paper is to compare and document low cost open source SCADA options available for remote controlling and monitoring of inverters. To achieve this objective from the client side, interface between inverter and the SCADA has been developed. Three low cost options are being tested and tabulated the paper comparing inherent advantages and disadvantages. From the server side four different methods are being tested compared in terms of security, ease of installation, ease of using and ease of integrating new components. Results demonstrates that for the cost client side interface ESP12E based Wi-Fi shows lowest cost and suitability for the application while thingspeak based local server has been selected as the best option for the server side.},
  eventtitle = {2017 {{IEEE}} 30th {{Canadian Conference}} on {{Electrical}} and {{Computer Engineering}} ({{CCECE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QR7WV2T3/Sarinda és mtsai. - 2017 - Low-cost and open source SCADA options for remote .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MZ6PXTMM/7946658.html},
  keywords = {client side,Cloud computing,cost client side interface ESP12E,ESP-12E,integrating new components,Internet of Things,inverter monitoring,Inverters,invertors,Monitoring,open source SCADA options,power system control,public domain software,remote control,SCADA,SCADA systems,security,Servers,telecontrol,thingspeak,Wi-Fi,Wireless fidelity,wireless LAN}
}

@article{sarrab_empirical_2014,
  title = {Empirical Study of Open Source Software Selection for Adoption, Based on Software Quality Characteristics},
  author = {Sarrab, Mohamed and Rehman, Osama M. Hussain},
  date = {2014-03},
  journaltitle = {Advances in Engineering Software},
  volume = {69},
  pages = {1--11},
  issn = {09659978},
  doi = {10.1016/j.advengsoft.2013.12.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0965997813001798},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B9KDP8XW/1-s2.0-S0965997813001798-main.pdf},
  keywords = {nyílt forrás,quality},
  langid = {english}
}

@article{savelyev_open_2013,
  title = {Open {{Source}}: {{The Russian Experience}} ({{Legislation}} and {{Practice}})},
  shorttitle = {Open {{Source}}},
  author = {Savelyev, Alexander},
  date = {2013},
  journaltitle = {Higher School of Economics Research Paper No. WP BPR},
  volume = {9},
  url = {http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2207916},
  urldate = {2013-05-28},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WCCNF8WI/SSRN-id2207916.pdf}
}

@article{savirimuthu_identity_2008,
  title = {Identity {{Theft}} and the {{Gullible Computer User}}: {{What Sun Tzu}} in {{The Art}} of {{War Might Teach}}},
  shorttitle = {Identity {{Theft}} and the {{Gullible Computer User}}},
  author = {Savirimuthu, J.},
  date = {2008},
  journaltitle = {Journal of International Com. Law and Tech.},
  volume = {3},
  pages = {120--128},
  issn = {1901-8401},
  url = {http://www.jiclt.com/index.php/jiclt/article/viewArticle/49},
  urldate = {2012-12-19},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CKD9JFKV/identity_theft.pdf},
  number = {2}
}

@incollection{scacchi_collaboration_2010,
  title = {Collaboration {{Practices}} and {{Affordances}} in {{Free}}/{{Open Source Software Development}}},
  booktitle = {Collaborative {{Software Engineering}}},
  author = {Scacchi, Walt},
  editor = {Mistrík, Ivan and Grundy, John and Hoek, André and Whitehead, Jim},
  date = {2010},
  pages = {307--327},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-10294-3_15},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SA5BBC8W/chp%3A10.1007%2F978-3-642-10294-3_15.pdf},
  isbn = {978-3-642-10293-6 978-3-642-10294-3},
  keywords = {development,nyílt forrás,procedures},
  langid = {english}
}

@incollection{scacchi_designing_2012,
  title = {Designing Secure Systems Based on Open Architectures with Open Source and Closed Source Components},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Scacchi, Walt and Alspaugh, Thomas A.},
  date = {2012},
  pages = {144--159},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_10},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VCDZUMFV/chp%3A10.1007%2F978-3-642-33442-9_10.pdf},
  keywords = {Forrás2,license,nyílt forrás,open source,Standard}
}

@inproceedings{scacchi_free/open_2007,
  title = {Free/Open Source Software Development},
  booktitle = {Proceedings of the the 6th Joint Meeting of the {{European}} Software Engineering Conference and the {{ACM SIGSOFT}} Symposium on {{The}} Foundations of Software Engineering},
  author = {Scacchi, Walt},
  date = {2007},
  pages = {459--468},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1287689},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SGK4CGA6/p459-scacchi.pdf},
  keywords = {általános OSS,nyílt forrás}
}

@inproceedings{scacchi_future_2010,
  title = {The Future of Research in Free/Open Source Software Development},
  booktitle = {Proceedings of the {{FSE}}/{{SDP}} Workshop on {{Future}} of Software Engineering Research},
  author = {Scacchi, Walt},
  date = {2010},
  pages = {315--320},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1882427},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CQ6JHXMV/p315-scacchi.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{scacchi_processes_2013,
  title = {Processes in Securing Open Architecture Software Systems},
  booktitle = {Proceedings of the 2013 {{International Conference}} on {{Software}} and {{System Process}}},
  author = {Scacchi, Walt and Alspaugh, Thomas A.},
  date = {2013},
  pages = {126--135},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2486068},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/498CUIT8/p126-scacchi.pdf}
}

@incollection{scacchi_socio-technical_2005,
  title = {Socio-Technical Interaction Networks in Free/Open Source Software Development Processes},
  booktitle = {Software {{Process Modeling}}},
  author = {Scacchi, Walt},
  date = {2005},
  pages = {1--27},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-24262-7_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EDG69XM3/chp%3A10.1007%2F0-387-24262-7_1.pdf},
  keywords = {általános OSS,nyílt forrás}
}

@book{scacchi_understanding_2009,
  title = {Understanding Requirements for Open Source Software},
  author = {Scacchi, Walt},
  date = {2009},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-92966-6_27},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/42BIHQX5/chp%3A10.1007%2F978-3-540-92966-6_27.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HKNGBA4A/chp%3A10.1007%2F978-3-540-92966-6_27.pdf},
  keywords = {community,development,nyílt forrás,open source}
}

@article{scacchi_understanding_2012,
  title = {Understanding the Role of Licenses and Evolution in Open Architecture Software Ecosystems},
  author = {Scacchi, Walt and Alspaugh, Thomas A.},
  date = {2012-07},
  journaltitle = {Journal of Systems and Software},
  volume = {85},
  pages = {1479--1494},
  issn = {01641212},
  doi = {10.1016/j.jss.2012.03.033},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121212000805},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C7ADQH58/1-s2.0-S0164121212000805-main.pdf},
  keywords = {license,nyílt forrás},
  langid = {english},
  number = {7}
}

@incollection{schaarschmidt_exposing_2011,
  title = {Exposing Differences of Governance Approaches in Single and Multi Vendor Open Source Software Development},
  booktitle = {Governance and {{Sustainability}} in {{Information Systems}}. {{Managing}} the {{Transfer}} and {{Diffusion}} of {{IT}}},
  author = {Schaarschmidt, Mario and Bertram, Matthias and von Kortzfleisch, Harald FO},
  date = {2011},
  pages = {16--28},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24148-2_2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/78U2GZR6/chp%3A10.1007%2F978-3-642-24148-2_2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P9RMTGM7/chp%3A10.1007%2F978-3-642-24148-2_2.pdf},
  keywords = {community,development,nyílt forrás},
  options = {useprefix=true}
}

@book{schaarschmidt_firms_2012,
  title = {Firms in {{Open Source Software Development}}},
  author = {Schaarschmidt, Mario},
  date = {2012},
  publisher = {{Gabler Verlag}},
  location = {{Wiesbaden}},
  url = {http://www.springerlink.com/index/10.1007/978-3-8349-4143-5},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8P3G5XWM/Commercializing and Controlling Open Source Software Development.pdf},
  isbn = {978-3-8349-4142-8 978-3-8349-4143-5},
  langid = {english}
}

@article{schaarschmidt_how_2015,
  title = {How Do Firms Influence Open Source Software Communities? {{A}} Framework and Empirical Analysis of Different Governance Modes},
  shorttitle = {How Do Firms Influence Open Source Software Communities?},
  author = {Schaarschmidt, Mario and Walsh, Gianfranco and von Kortzfleisch, Harald F.O.},
  date = {2015-04},
  journaltitle = {Information and Organization},
  volume = {25},
  pages = {99--114},
  issn = {14717727},
  doi = {10.1016/j.infoandorg.2015.03.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1471772715000111},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XAVREJGJ/1-s2.0-S1471772715000111-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {2},
  options = {useprefix=true}
}

@incollection{schauer_open_2013,
  title = {Open {{Source Tools}} for {{Enterprise}} 2.0: {{A Feature}}-{{Based Adaptable Analysis}}},
  shorttitle = {Open {{Source Tools}} for {{Enterprise}} 2.0},
  booktitle = {Knowledge {{Discovery}}, {{Knowledge Engineering}} and {{Knowledge Management}}},
  author = {Schauer, Bettina and Zeiller, Michael and Matzinger, Robert},
  date = {2013},
  pages = {407--422},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-37186-8_27},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JMHXVC36/chp%3A10.1007%2F978-3-642-37186-8_27.pdf}
}

@incollection{scheidgen_model-based_2014,
  title = {Model-{{Based Mining}} of {{Source Code Repositories}}},
  booktitle = {System {{Analysis}} and {{Modeling}}: {{Models}} and {{Reusability}}},
  author = {Scheidgen, Markus and Fischer, Joachim},
  date = {2014},
  pages = {239--254},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-11743-0_17},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IV7FV8FX/chp%3A10.1007%2F978-3-319-11743-0_17.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@inproceedings{schiavone_open-source_2018,
  title = {An {{Open}}-{{Source Verification Framework}} for {{Open}}-{{Source Cores}}: {{A RISC}}-{{V Case Study}}},
  shorttitle = {An {{Open}}-{{Source Verification Framework}} for {{Open}}-{{Source Cores}}},
  booktitle = {2018 {{IFIP}}/{{IEEE International Conference}} on {{Very Large Scale Integration}} ({{VLSI}}-{{SoC}})},
  author = {Schiavone, Pasquale Davide and Sanchez, Ernesto and Ruospo, Annachiara and Minervini, Francesco and Zaruba, Florian and Haugou, Germain and Benini, Luca},
  date = {2018-10},
  pages = {43--48},
  issn = {2324-8440},
  doi = {10.1109/VLSI-SoC.2018.8644818},
  abstract = {The complexity and heterogeneity of digital devices used in embedded systems is increasing everyday and delivering a bug-free design is still a very complex task. The interest for open-source hardware in real products is demanding for tools and advanced methodologies for verification to provide high reliability to open and free IPs. In this work, an open-source evolutionary optimizer has been used to create functional test programs that improve the verification test set for an open-source microprocessor, enhancing in this way, the verification level of the device. The verification programs are generated to optimize code coverage metrics and are tested against a high-level model to find device incorrectnesses during the generation time. A perturbation mechanism has been included in the verification framework to cover parts of the device under verification not reachable with only software stimuli such as interrupts or memory stalls. The proposed methodology uncovered 10 bugs still present in the RTL description of the analyzed device and demonstrated the effectiveness of open-source verification tools for the next generation of open-source RISC-V microprocessors.},
  eventtitle = {2018 {{IFIP}}/{{IEEE International Conference}} on {{Very Large Scale Integration}} ({{VLSI}}-{{SoC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VJPUTNIJ/Schiavone et al. - 2018 - An Open-Source Verification Framework for Open-Sou.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ATWK9DUB/8644818.html},
  keywords = {automatic test pattern generation,bug-free design,Computational modeling,Computer bugs,digital devices,embedded systems,formal verification,Hardware,high-level model,integrated circuit design,integrated circuit testing,logic testing,Measurement,microprocessor chips,Microprocessors,Open source software,open-source cores,open-source evolutionary optimizer,open-source hardware,open-source microprocessor,open-source RISC-V microprocessors,open-source verification framework,open-source verification tools,program debugging,Program processors,program testing,program verification,public domain software,reduced instruction set computing,system-on-chip,verification level,verification programs,verification test}
}

@inproceedings{schilling_train_2012,
  title = {Train and {{Retain}}: {{The Impact}} of {{Mentoring}} on the {{Retention}} of {{FLOSS Developers}}},
  shorttitle = {Train and {{Retain}}},
  booktitle = {Proceedings of the 50th {{Annual Conference}} on {{Computers}} and {{People Research}}},
  author = {Schilling, Andreas and Laumer, Sven and Weitzel, Tim},
  date = {2012},
  pages = {79--84},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2214091.2214112},
  url = {http://doi.acm.org/10.1145/2214091.2214112},
  urldate = {2015-11-24},
  abstract = {The acquisition of new knowledge is a critical task for software development. IT companies spend considerable resources in the training of their employees to succeed in a continuously changing industry. Depending on the voluntary commitment of their contributors, initiatives developing Free Libre Open Source Software (FLOSS) identified members' learning and their retention as vital. Although contributors' knowledge building has been repeatedly found to facilitate their project continuance, FLOSS projects are lacking operational advices on how to assist their members' learning. Drawing on previous literature which emphasizes project members' social interactions and their practical experiences to build new knowledge, we propose mentoring as a training method for FLOSS projects. Based on organizational experiences, we propose a measure to evaluate mentoring as an appropriate strategy for FLOSS initiatives to facilitate individuals' learning and to retain their contributors on longitudinal base.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZD7FH57K/Schilling és mtsai. - 2012 - Train and Retain The Impact of Mentoring on the R.pdf},
  isbn = {978-1-4503-1110-6},
  keywords = {development,free libre open source software,knowledge building,mentoring,nyílt forrás,open source software development,procedures,retention,turnover behavior},
  series = {{{SIGMIS}}-{{CPR}} '12}
}

@book{schmaltz_complete_2004,
  title = {The Complete Chess Server Guide: Everything You Always Wanted to Know about {{PLAYING}} Chess on the {{Net}} ... but Were Afraid to Ask},
  shorttitle = {The Complete Chess Server Guide},
  author = {Schmaltz, Roland},
  date = {2004},
  publisher = {{Schachzentrale Rattmann}},
  location = {{Ludwigshafen}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AU85TIPI/01565252.pdf},
  isbn = {978-3-88086-180-0},
  langid = {english}
}

@incollection{schmidbauer_free/open_2007,
  title = {Free/{{Open Source Software Adoption}}, {{Public Policies}} and {{Development Indicators}}: {{An International Comparison}}},
  shorttitle = {Free/{{Open Source Software Adoption}}, {{Public Policies}} and {{Development Indicators}}},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Schmidbauer, Harald and Gençer, Mehmet and Tunalıo\_lu, Vehbi Sinan},
  date = {2007},
  pages = {331--336},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_37},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X3SBATSF/chp%3A10.1007%2F978-0-387-72486-7_37.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{schmitz_european_2013,
  title = {The {{European Union Public Licence}} ({{EUPL}})},
  author = {Schmitz, Patrice-Emmanuel},
  date = {2013-12-15},
  journaltitle = {International Free and Open Source Software Law Review},
  volume = {5},
  pages = {121--136},
  issn = {18776922},
  doi = {10.5033/ifosslr.v5i2.91},
  url = {http://www.ifosslr.org/ifosslr/article/view/91},
  urldate = {2014-09-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KN2G3N6J/91-588-1-PB.pdf},
  keywords = {europe,jog,open source},
  number = {2}
}

@incollection{schofield_levels_2007,
  title = {Levels of {{Formality}} in {{FOSS Communities}}},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Schofield, Andrew and Cooper, Grahame S.},
  date = {2007},
  pages = {337--342},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_38},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XTPC62IS/chp%3A10.1007%2F978-0-387-72486-7_38.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{scholte_quo_2012,
  title = {Quo Vadis? A Study of the Evolution of Input Validation Vulnerabilities in Web Applications},
  shorttitle = {Quo Vadis?},
  booktitle = {Financial {{Cryptography}} and {{Data Security}}},
  author = {Scholte, Theodoor and Balzarotti, Davide and Kirda, Engin},
  date = {2012},
  pages = {284--298},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-27576-0_24},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/95T6ZWIF/chp%3A10.1007%2F978-3-642-27576-0_24.pdf},
  keywords = {computer security,nyílt forrás}
}

@article{scholtes_aristotle_2016,
  ids = {scholtes\_aristotle\_2016-1},
  title = {From {{Aristotle}} to {{Ringelmann}}: A Large-Scale Analysis of Team Productivity and Coordination in {{Open Source Software}} Projects},
  shorttitle = {From {{Aristotle}} to {{Ringelmann}}},
  author = {Scholtes, Ingo and Mavrodiev, Pavlin and Schweitzer, Frank},
  date = {2016-04-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {21},
  pages = {642--683},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-015-9406-4},
  url = {https://link.springer.com/article/10.1007/s10664-015-9406-4},
  urldate = {2018-08-15},
  abstract = {Complex software development projects rely on the contribution of teams of developers, who are required to collaborate and coordinate their efforts. The productivity of such development teams, i.e., how their size is related to the produced output, is an important consideration for project and schedule management as well as for cost estimation. The majority of studies in empirical software engineering suggest that - due to coordination overhead - teams of collaborating developers become less productive as they grow in size. This phenomenon is commonly paraphrased as Brooks’ law of software project management, which states that “adding manpower to a software project makes it later”. Outside software engineering, the non-additive scaling of productivity in teams is often referred to as the Ringelmann effect, which is studied extensively in social psychology and organizational theory. Conversely, a recent study suggested that in Open Source Software (OSS) projects, the productivity of developers increases as the team grows in size. Attributing it to collective synergetic effects, this surprising finding was linked to the Aristotelian quote that “the whole is more than the sum of its parts”. Using a data set of 58 OSS projects with more than 580,000 commits contributed by more than 30,000 developers, in this article we provide a large-scale analysis of the relation between size and productivity of software development teams. Our findings confirm the negative relation between team size and productivity previously suggested by empirical software engineering research, thus providing quantitative evidence for the presence of a strong Ringelmann effect. Using fine-grained data on the association between developers and source code files, we investigate possible explanations for the observed relations between team size and productivity. In particular, we take a network perspective on developer-code associations in software development teams and show that the magnitude of the decrease in productivity is likely to be related to the growth dynamics of co-editing networks which can be interpreted as a first-order approximation of coordination requirements.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3NX3WS9H/Scholtes et al. - 2016 - From Aristotle to Ringelmann a large-scale analys.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9QYI8ALV/Scholtes et al. - 2016 - From Aristotle to Ringelmann a large-scale analys.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q5IC7KQB/s10664-015-9406-4.html},
  langid = {english},
  number = {2}
}

@inproceedings{schreiber_raising_2018,
  title = {Raising Awareness about Open Source Licensing at the {{German}} Aerospace Center},
  booktitle = {2018 {{IEEE Aerospace Conference}}},
  author = {Schreiber, Andreas and Haupt, Carina},
  date = {2018-03},
  pages = {1--9},
  doi = {10.1109/AERO.2018.8396684},
  abstract = {Using open source software in projects and publishing software under an open source license became common in science and engineering. Scientists and engineers therefore have to know about open source licenses, their requirements and restrictions as well as the resultant license compatibility issues. In most cases, this is not the case. Especially if more than one open source license is involved. At the German Aerospace Center, we developed a comprehensive approach to empower and support our space and aerospace scientists in using and publishing open source software without facing licensing problems. Our bottom up strategy is based on providing hands-on material and training courses first, instead of starting off with “official” but impractical process guides. We focus on creating a community between peer scientists using online tools as well as face-to-face workshops, supported by a foundation of information provided by experts. Feedback from this community of DLR scientist flows back to improve existing documentation and to identify further steps.},
  eventtitle = {2018 {{IEEE Aerospace Conference}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ESBWH8XK/Schreiber and Haupt - 2018 - Raising awareness about open source licensing at t.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/L76NKBHL/8396684.html},
  keywords = {aerospace computing,German Aerospace Center,Information services,Law,Licenses,licensing problems,open source license,open source licensing,open source software,Open source software,public domain software,resultant license compatibility issues,Tools,Training}
}

@inproceedings{schryen_comprehensive_2009,
  title = {A {{Comprehensive}} and {{Comparative Analysis}} of the {{Patching Behavior}} of {{Open Source}} and {{Closed Source Software Vendors}}},
  author = {Schryen, Guido},
  date = {2009},
  pages = {153--168},
  publisher = {{IEEE}},
  doi = {10.1109/IMF.2009.15},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5277883},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MIAF4BP6/05277883.pdf},
  isbn = {978-0-7695-3807-5},
  keywords = {_SMS_untagged,CVE,nyílt forrás,open source,security}
}

@article{schryen_is_2011,
  title = {Is Open Source Security a Myth?},
  author = {Schryen, Guido},
  date = {2011-05-01},
  journaltitle = {Communications of the ACM},
  volume = {54},
  pages = {130},
  issn = {00010782},
  doi = {10.1145/1941487.1941516},
  url = {http://portal.acm.org/citation.cfm?doid=1941487.1941516},
  urldate = {2014-10-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JK8V7XTV/CACM_-_Is_open_source_security_a_myth.pdf},
  keywords = {Empirikus,open source,OS-CS comparision,vulnerability},
  langid = {english},
  number = {5}
}

@inproceedings{schryen_open_2009,
  title = {Open Source vs. Closed Source Software: Towards Measuring Security},
  shorttitle = {Open Source vs. Closed Source Software},
  booktitle = {Proceedings of the 2009 {{ACM}} Symposium on {{Applied Computing}}},
  author = {Schryen, Guido and Kadura, Rouven},
  date = {2009},
  pages = {2016--2023},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1529731},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I9BFDXAD/p2016-schryen.pdf},
  keywords = {Closed source,computer security,Forrás2,nyílt forrás,open source}
}

@incollection{schryen_security_2009,
  title = {Security of Open Source and Closed Source Software: {{An}} Empirical Comparison of Published Vulnerabilities},
  booktitle = {{{AMCIS}} 2009 {{Proceedings}}. {{Paper}} 387},
  author = {Schryen, Guido},
  date = {2009},
  url = {http://aisel.aisnet.org/amcis2009/387},
  urldate = {2014-10-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8DVFTGHJ/securityof09.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S4TUCXQ3/____securityof09.pdf},
  keywords = {Empirikus,open source,OS-CS comparision,security,vulnerability}
}

@incollection{schuenck_x-arm_2006,
  title = {X-{{ARM}}: A Step towards Reuse of Commercial and Open Source Components},
  shorttitle = {X-{{ARM}}},
  booktitle = {Reuse of {{Off}}-the-{{Shelf Components}}},
  author = {Schuenck, Michael and Negócio, Yuri and Elias, Glêdson and Miranda, Sindolfo and Dias Jr, Jorge and Cavalcanti, Gustavo},
  date = {2006},
  pages = {432--435},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11763864_40},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3FABQWJM/chp%3A10.1007%2F11763864_40.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{schwartz_integrating_2009,
  title = {Integrating User Experience into Free/Libre Open Source Software: {{CHI}} 2009 Special Interest Group},
  shorttitle = {Integrating User Experience into Free/Libre Open Source Software},
  booktitle = {{{CHI}}'09 {{Extended Abstracts}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Schwartz, Daniel and Gunn, Allen},
  date = {2009},
  pages = {2739--2742},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1520395},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5NDP2IC7/p2739-schwartz.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{scialdone_group_2009,
  title = {Group Maintenance Behaviors of Core and Peripherial Members of Free/Libre Open Source Software Teams},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Scialdone, Michael J. and Li, Na and Heckman, Robert and Crowston, Kevin},
  date = {2009},
  pages = {298--309},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_26},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FW9HRSBT/chp%3A10.1007%2F978-3-642-02032-2_26.pdf},
  keywords = {community,development,nyílt forrás}
}

@misc{sean_barnum_standardizing_2013,
  title = {Standardizing {{Cyber Threat Intelligence Information}} with the {{Structured Threat Information eXpression}} ({{STIX}})},
  author = {{Sean Barnum}},
  date = {2013},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S85NSUAG/STIX_Whitepaper_v1.0.pdf}
}

@article{sebastian_v._engelhardt_new_2010,
  title = {The {{New}} ({{Commercial}}) {{Open Source}}: {{Does It Really Improve Social Welfare}}?},
  author = {{Sebastian v. Engelhardt} and {Stephen M. Maurer}},
  date = {2010},
  url = {http://ssrn.com/abstract=1542180},
  urldate = {2013-05-15},
  abstract = {We discuss welfare and various policy interventions for mixed ICT markets where firms use either ‘open source’ (OS) or ‘closed source’ (CS) business models. We find that the existence of OS business models improves social welfare compared to all-CS industries by letting firms share costs and avoid duplication. However, code sharing also establishes a de facto quality-cartel that suppresses OS firms’ incentives to invest. Competition from CS firms weakens this cartel and improves welfare. That said, market forces alone provide too little CS competition. We find no support for various government interventions based on tax breaks for OS-based firms and pro-OS procurement preferences by government. However, policies that directly target the supply of OS code have a positive impact.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HV7RFBK5/SSRN-id1542180.pdf},
  keywords = {Closed source,Cournot competition,government intervention,open source}
}

@online{securicon_whats_2019,
  title = {What’s the {{Difference Between OT}}, {{ICS}}, {{SCADA}} and {{DCS}}?},
  shorttitle = {What’s the {{Difference Between OT}}, {{ICS}}, {{SCADA}} and {{DCS}}?},
  author = {{Securicon}},
  date = {2019-05-01T17:47:52+00:00},
  journaltitle = {Securicon},
  url = {https://www.securicon.com/whats-the-difference-between-ot-ics-scada-and-dcs/},
  urldate = {2020-06-08},
  abstract = {With the convergence of IT and OT, it is often unclear what the difference is between ICS, SCADA and DCS. Securicon explains how these terms are related.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KL4CK76K/whats-the-difference-between-ot-ics-scada-and-dcs.html},
  langid = {american}
}

@article{seggelmann_transport_2012,
  title = {Transport {{Layer Security}} ({{TLS}}) and {{Datagram Transport Layer Security}} ({{DTLS}}) {{Heartbeat Extension}}},
  author = {Seggelmann, R. and Tuexen, M. and Williams, M.},
  date = {2012},
  issn = {2070-1721},
  url = {http://www.rfc-editor.org/info/rfc6520},
  urldate = {2018-08-15},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4KN9VP4I/Seggelmann et al. - 2012 - Transport Layer Security (TLS) and Datagram Transp.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8N58NE4B/rfc6520.html}
}

@inproceedings{seidel_selective_2013,
  title = {Selective Crowdsourcing for Open Process Innovation in the Public Sector: Are Expert Citizens Really Willing to Participate?},
  shorttitle = {Selective Crowdsourcing for Open Process Innovation in the Public Sector},
  author = {Seidel, Claudius E. and Thapa, Basanta E. P. and Plattfaut, Ralf and Niehaves, Björn},
  date = {2013},
  pages = {64--72},
  publisher = {{ACM Press}},
  doi = {10.1145/2591888.2591899},
  url = {http://dl.acm.org/citation.cfm?doid=2591888.2591899},
  urldate = {2016-01-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9KPGMVDH/p64-seidel.pdf},
  isbn = {978-1-4503-2456-4},
  langid = {english}
}

@article{seiferth_open_1999,
  title = {Open Source and These {{United States}}},
  author = {Seiferth, C. Justin},
  date = {1999},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {12},
  pages = {50--79},
  url = {http://link.springer.com/article/10.1007/s12130-999-1027-z},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z7PE2ZMD/art%3A10.1007%2Fs12130-999-1027-z.pdf},
  number = {3}
}

@incollection{seifu_rule_2010,
  title = {To {{Rule}} and {{Be Ruled}}: {{Governance}} and {{Participation}} in {{FOSS Projects}}},
  shorttitle = {To {{Rule}} and {{Be Ruled}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Seifu, Zegaye and Tsiavos, Prodromos},
  date = {2010},
  pages = {380--388},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_35},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RBH4T8BC/chp%3A10.1007%2F978-3-642-13244-5_35.pdf},
  keywords = {community,development,nyílt forrás}
}

@article{sen_open_2011,
  title = {Open Source Software Licenses: {{Strong}}-Copyleft, Non-Copyleft, or Somewhere in Between?},
  shorttitle = {Open Source Software Licenses},
  author = {Sen, Ravi and Subramaniam, Chandrasekar and Nelson, Matthew L.},
  date = {2011-12},
  journaltitle = {Decision Support Systems},
  volume = {52},
  pages = {199--206},
  issn = {01679236},
  doi = {10.1016/j.dss.2011.07.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923611001242},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8HFNFGVT/1-s2.0-S0167923611001242-main.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UZHBAM8U/1-s2.0-S0167923611001242-main.pdf},
  keywords = {license,nyílt forrás},
  langid = {english},
  number = {1}
}

@article{sen_open_2012,
  title = {Open Source Software Success: {{Measures}} and Analysis},
  shorttitle = {Open Source Software Success},
  author = {Sen, Ravi and Singh, Siddhartha S. and Borle, Sharad},
  date = {2012-01},
  journaltitle = {Decision Support Systems},
  volume = {52},
  pages = {364--372},
  issn = {01679236},
  doi = {10.1016/j.dss.2011.09.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016792361100159X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9IDWVEEC/1-s2.0-S016792361100159X-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {2}
}

@inproceedings{sendama_scada_2018,
  title = {A {{SCADA Compliant Open Source Supervisory Platform}} for {{Power Grid Systems}}},
  booktitle = {2018 {{Renewable Energies}}, {{Power Systems Green Inclusive Economy}} ({{REPS}}-{{GIE}})},
  author = {Sendama, N. Benjamin and Hayar, Aawatif and Lahmami, Yassine and Errami, Ahmed},
  date = {2018-04},
  pages = {1--5},
  doi = {10.1109/REPSGIE.2018.8488817},
  abstract = {There is not longtime that everywhere in the world energy needs have considerably increased, mainly due to the growing global population. This has pushed governments all over the world to focus on finding a better, why not reinventing the actual power grid in order to match these complex challenges. Existing grids are under metamorphosis to match the growing demand of energy, as well as ensuring a stable and sustainable supply of energy. Collecting the necessary and accuracy data from the power grid is one of the most important challenges when dealing with this issue. The use of Information and Communications Technology (ICT) is one of the best ways to gather all the needful data to overcome this issue. Results presented in this work are partly based on a real hardware/software study case implementation, where CSMA/CA technics are used to achieve significant improvement in interference management for multiple access on telemetering band, and White-Fi to overcome the problem of throughput and range of radio transmissions on telemetering band.},
  eventtitle = {2018 {{Renewable Energies}}, {{Power Systems Green Inclusive Economy}} ({{REPS}}-{{GIE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NEGP5ZXY/Sendama et al. - 2018 - A SCADA Compliant Open Source Supervisory Platform.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DYWP2W2R/8488817.html},
  keywords = {CSMA/CA,Data acquisition,Data communication,information and communications technology,metamorphosis,Microgrids,monitoring,Monitoring,necessary accuracy data,open source,power grid,power grid systems,power grids,Production,SCADA compliant open source supervisory platform,SCADA systems,Supervisory system,Synchronization,White-FI,wireless channels,wireless LAN}
}

@incollection{seror_designing_2013,
  title = {Designing {{Sustainable Open Source Systems}}: {{The Cuban National Health Care Network}} and {{Portal}} ({{INFOMED}})},
  shorttitle = {Designing {{Sustainable Open Source Systems}}},
  booktitle = {Grand {{Successes}} and {{Failures}} in {{IT}}. {{Public}} and {{Private Sectors}}},
  author = {Séror, Ann},
  date = {2013},
  pages = {451--466},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38862-0_28},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/URPMT4I7/chp%3A10.1007%2F978-3-642-38862-0_28.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{serrao_open_2002,
  title = {Open {{Source}} Security Analysis},
  author = {Serrão, Carlos and Neves, Daniel and Trezentos, Paulo},
  date = {2002},
  journaltitle = {ICEIS 2003},
  pages = {433},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2VXSUC89/___0fcfd50be3663ab300000000.pdf},
  keywords = {Application Security,Closed source,open source}
}

@inproceedings{sethanandha_managing_2010,
  title = {Managing Open Source Contributions for Software Project Sustainability},
  booktitle = {Technology {{Management}} for {{Global Economic Growth}} ({{PICMET}}), 2010 {{Proceedings}} of {{PICMET}}'10:},
  author = {Sethanandha, Bhuricha Deen and Massey, Bart and Jones, William},
  date = {2010},
  pages = {1--9},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5602062},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SIVJ2HMK/05602062.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/US57RDQK/____picmet-patch (1).pdf},
  keywords = {development,Forrás2,nyílt forrás,open source,procedures}
}

@article{shah_writesim_2010,
  title = {{{WriteSim TCExam}}-{{An}} Open Source Text Simulation Environment for Training Novice Researchers in Scientific Writing},
  author = {Shah, Jatin and Rajgor, Dimple and Vaghasia, Meenakshi and Phadtare, Amruta and Pradhan, Shreyasee and Carvalho, Elias and Pietrobon, Ricardo},
  date = {2010},
  journaltitle = {BMC medical education},
  volume = {10},
  pages = {39},
  url = {http://www.biomedcentral.com/1472-6920/10/39},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6SPZ839P/art%3A10.1186%2F1472-6920-10-39.pdf},
  number = {1}
}

@inproceedings{shahzad_clone_2017,
  title = {A Clone Management Framework to Improve Code Quality of {{FOSS}} Projects},
  booktitle = {2017 {{International Conference}} on {{Communication}}, {{Computing}} and {{Digital Systems}} ({{C}}-{{CODE}})},
  author = {Shahzad, Sara and Hussain, Ammara and Nazir, Shah},
  date = {2017-03},
  pages = {253--258},
  doi = {10.1109/C-CODE.2017.7918938},
  abstract = {The emergence of Free/Open Source Software (FOSS) development model as a widely adopted paradigm in the software development industry in the recent few years has developed the interest of researchers towards the code quality of FOSS projects. Code clones are introduced in the software system by the adoption of common code reuse practices by FOSS developers. This has led the clone research community to observe the effects of code clones on the code quality of FOSS projects. Although code clones are not always harmful but they might become critical to large scale and evolving software systems such as FOSS projects. Research in this paper reveals the importance and need for improving code quality of FOSS projects by implementing an effective clone management system integrated in the FOSS development environment. This paper proposes a clone management framework that ensures effective clone evolution tracking and visualization in FOSS projects. This framework will appear as a baseline to initiate the efforts towards improving code quality by the implementation of a versatile clone management system for FOSS development.},
  eventtitle = {2017 {{International Conference}} on {{Communication}}, {{Computing}} and {{Digital Systems}} ({{C}}-{{CODE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MT6UPB3B/Shahzad et al. - 2017 - A clone management framework to improve code quali.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BUKSI8ZJ/7918938.html},
  keywords = {clone evolution tracking,clone management framework,Cloning,code clones,code quality,Data visualization,FOSS projects,free-open source software development model,public domain software,software engineering,Software systems,Taxonomy,Tools,Visualization}
}

@incollection{shaikh_framing_2011,
  title = {Framing the {{Conundrum}} of {{Total Cost}} of {{Ownership}} of {{Open Source Software}}},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Shaikh, Maha and Cornford, Tony},
  date = {2011},
  pages = {208--219},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_14},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7X8Q2BN4/Framing the Conundrum of Total Cost of Ownership of Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NCTXHNMH/chp%3A10.1007%2F978-3-642-24418-6_14.pdf},
  keywords = {adoption,Forrás3,nyílt forrás}
}

@incollection{shaikh_mutability_2012,
  title = {Mutability and Becoming: Materializing of Public Sector Adoption of Open Source Software},
  shorttitle = {Mutability and Becoming},
  booktitle = {Shaping the {{Future}} of {{ICT Research}}. {{Methods}} and {{Approaches}}},
  author = {Shaikh, Maha},
  date = {2012},
  pages = {123--140},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-35142-6_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5UQB5RGR/Mutability and Becoming - Materializing of Public Sector Adoption of Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S5JCAQT6/chp%3A10.1007%2F978-3-642-35142-6_9.pdf},
  keywords = {adoption,Forrás1,nyílt forrás}
}

@book{shapiro_information_1998,
  title = {Information {{Rules}}: {{A Strategic Guide}} to the {{Network Economy}}},
  shorttitle = {Information {{Rules}}},
  author = {Shapiro and Shapiro, Carl and Carl, Shapiro and Varian, Hal R.},
  date = {1998},
  publisher = {{Harvard Business Press}},
  abstract = {Information Goods -- from movies and music to software code and stock quotes - have supplanted industrial goods as the key drivers of world markets. Confronted by this New Economy, many instinctively react by searching for a corresponding New Economics to guide their business decisions. Executives charged with rolling out cutting-edge software products or on-line versions of their magazines are tempted to abandon the classic lessons of economics, and rely instead on an ever changing roster of trends, buzzwords, and analogies that promise to guide strategy in the information age. Not so fast, say authors Carl Shapiro and Hal R. Varian. In "Information Rules" they warn managers, "Ignore basic economic principles at your own risk. Technology changes. Economic laws do not." Understanding these laws and their relevance to information goods is critical when fashioning today's successful competitive strategies. Information Rules introduces and explains the economic concepts needed to navigate the evolving network economy. "Information Rules" will help business leaders and policy makers - from executives in the entertainment, publishing, hardware, and software industries to lawyers, finance professionals, and writers -- make intelligent decisions about their information assets.},
  eprint = {aE_J4Iv_PVEC},
  eprinttype = {googlebooks},
  isbn = {978-0-87584-863-1},
  keywords = {Business & Economics / Economics / General},
  langid = {english},
  pagetotal = {374}
}

@article{sharif_empirically-based_2015,
  title = {An Empirically-Based Characterization and Quantification of Information Seeking through Mailing Lists during {{Open Source}} Developers’ Software Evolution},
  author = {Sharif, Khaironi Y. and English, Michael and Ali, Nour and Exton, Chris and Collins, J.J. and Buckley, Jim},
  date = {2015-01},
  journaltitle = {Information and Software Technology},
  volume = {57},
  pages = {77--94},
  issn = {09505849},
  doi = {10.1016/j.infsof.2014.09.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S095058491400202X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/48IH2HAP/1-s2.0-S095058491400202X-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@incollection{sharma_20_2017,
  title = {20 - {{Information Technology}}–{{Operation Technology Convergence}}},
  booktitle = {Overview of {{Industrial Process Automation}} ({{Second Edition}})},
  author = {Sharma, K. L. S.},
  editor = {Sharma, K. L. S.},
  date = {2017-01-01},
  pages = {359--375},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-12-805354-6.00020-7},
  url = {http://www.sciencedirect.com/science/article/pii/B9780128053546000207},
  urldate = {2020-06-08},
  abstract = {This chapter explains information technology (IT) and operation technology (OT) in the context of industrial process automation. Furthermore, the chapter discusses issues before and after convergence of IT and OT along with the benefits of convergence and International Society of Automation 95 Standard for IT-OT integration. The chapter ends with a discussion on relatively new developments such as Internet of things, industrial Internet of things, and Industry 4.0 as an extension of IT-OT integration.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BQ4TJIET/B9780128053546000207.html},
  isbn = {978-0-12-805354-6},
  keywords = {Industrial internet of things,Industry 4.0,Information technology,Internet of things,ISA-95 Standard,IT-OT convergence,Operation technology},
  langid = {english}
}

@incollection{sharma_examining_2012,
  title = {Examining {{Turnover}} in {{Open Source Software Projects Using Logistic Hierarchical Linear Modeling Approach}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Sharma, Pratyush N. and Hulland, John and Daniel, Sherae},
  date = {2012},
  pages = {331--337},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_30},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JABC8HWH/chp%3A10.1007%2F978-3-642-33442-9_30.pdf}
}

@inproceedings{sharma_house_2017,
  title = {House of {{Cards}}: {{Code Smells}} in {{Open}}-{{Source C}}\# {{Repositories}}},
  shorttitle = {House of {{Cards}}},
  booktitle = {2017 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  author = {Sharma, Tushar and Fragkoulis, Marios and Spinellis, Diomidis},
  date = {2017-11},
  pages = {424--429},
  doi = {10.1109/ESEM.2017.57},
  abstract = {Background: Code smells are indicators of quality problems that make a software hard to maintain and evolve. Given the importance of smells in the source code's maintainability, many studies have explored the characteristics of smells and analyzed their effects on the software's quality. Aim: We aim to investigate fundamental characteristics of code smells through an empirical study on frequently occurring smells that examines inter-category and intra-category correlation between design and implementation smells. Method: The study mines 19 design smells and 11 implementation smells in 1988 C\# repositories containing more than 49 million lines of code. The mined data are statistically analyzed using methods such as Spearman's correlation and presented through hexbin and scatter plots. Results: We find that unutilized abstraction and magic number smells are the most frequently occurring smells in C\# code. Our results also show that implementation and design smells exhibit strong inter-category correlation. The results of co-occurrence analysis imply that whenever unutilized abstraction or magic number smells are found, it is very likely to find other smells from the same smell category in the project. Conclusions: Our experiment shows high average smell density (14.7 and 55.8 for design and implementation smells respectively) for open source C\# programs. Such high smell densities turn a software system into a house of cards reflecting the fragility introduced in the system. Our study advocates greater awareness of smells and the adoption of regular refactoring within the developer community to avoid turning software into a house of cards.},
  eventtitle = {2017 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YX6WHU94/Sharma et al. - 2017 - House of Cards Code Smells in Open-Source C# Repo.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G3SPPEK7/8170129.html},
  keywords = {C\#,C\# code,C\# languages,Code quality,code smells,Code smells,Correlation,Data mining,Design smells,Implementation smells,Maintainability,open-source C\# repositories,smell category,software maintenance,software quality,Software systems,source code,Terminology,Tools}
}

@inproceedings{sharma_investigating_2017,
  title = {Investigating Developers' Email Discussions during Decision-Making in {{Python}} Language Evolution},
  booktitle = {Proceedings of the 21st {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Sharma, Pankajeshwara and Savarimuthu, Bastin Tony Roy and Stanger, Nigel and Licorish, Sherlock A. and Rainer, Austen},
  date = {2017-06-15},
  pages = {286--291},
  publisher = {{Association for Computing Machinery}},
  location = {{Karlskrona, Sweden}},
  doi = {10.1145/3084226.3084271},
  url = {https://doi.org/10.1145/3084226.3084271},
  urldate = {2020-04-22},
  abstract = {Context: Open Source Software (OSS) developers use mailing lists as their main forum for discussing the evolution of a project. However, the use of mailing lists by developers for decision-making has not received much research attention. Objective: We have explored this issue by studying developers' email discussions around Python Enhancement Proposals (PEPs). Method: Our dataset comprised 42,672 emails from six different mailing lists pertaining to PEP development. We performed multiple forms of analysis on these emails, involving both quantitative measures (e.g., frequency) and deeper analysis of specific PEP discussions (i.e., outlier analysis). Results: Out of three PEP types (Informational, Process and Standard Track), Standard Track PEPs attract a large amount of discussion (both in volume and average number of messages per proposal). Our study also identified specific PEP states and topics that generated a disproportionate amount of discussion. Conclusion: Our outcomes point to several opportunities for improving the management of an OSS team based on the knowledge generated from discussions. We have also identified several interesting avenues for future work such as identifying individuals or groups that present persuasive arguments during decision-making.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GF2VRJ42/Sharma et al. - 2017 - Investigating developers' email discussions during.pdf},
  isbn = {978-1-4503-4804-1},
  keywords = {Decision-making,Email discussions,Python development},
  series = {{{EASE}}'17}
}

@inproceedings{sharma_understanding_2013,
  title = {Understanding the Meaning of Bug Attributes and Prediction Models},
  booktitle = {Proceedings of the 5th {{IBM Collaborative Academia Research Exchange Workshop}}},
  author = {Sharma, Meera and Kumari, Madhu and Singh, V. B.},
  date = {2013},
  pages = {15},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2528244},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/45URQ29J/a15-sharma.pdf},
  keywords = {computer security,nyílt forrás}
}

@incollection{shezi_analysis_2013,
  title = {Analysis of {{Open Source Enterprise Service Buses}} toward {{Supporting Integration}} in {{Dynamic Service Oriented Environments}}},
  booktitle = {E-{{Infrastructure}} and e-{{Services}} for {{Developing Countries}}},
  author = {Shezi, Themba and Jembere, Edgar and Adigun, Mathew O. and Nene, Mandla T.},
  date = {2013},
  pages = {115--125},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-41178-6_12},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B4SV65NI/chp%3A10.1007%2F978-3-642-41178-6_12.pdf}
}

@inproceedings{shi_is_2016,
  title = {Is {{It}} a {{New Feature}} or {{Simply}} “{{Don}}'t {{Know Yet}}”?: {{On Automated Redundant OSS Feature Requests Identification}}},
  shorttitle = {Is {{It}} a {{New Feature}} or {{Simply}} “{{Don}}'t {{Know Yet}}”?},
  booktitle = {2016 {{IEEE}} 24th {{International Requirements Engineering Conference}} ({{RE}})},
  author = {Shi, Lin and Chen, Celia and Wang, Qing and Boehm, Barry},
  date = {2016-09},
  pages = {377--382},
  issn = {2332-6441},
  doi = {10.1109/RE.2016.65},
  abstract = {Open source projects rely on issue tracking systems such as JIRA or online forums to keep track of users' feedback, expectations and requested features. However, since users are not fully aware of existing features, when submitting new feature requests, redundant requests often appear in the new feature list. It is a waste of time and effort for project contributors to manually identify and reject them, especially in complex systems with many features. Our research is aiming to find a suitable solution to identify redundant feature requests in OSS projects. We have conducted a survey on a well-known Open Source community, Hibernate and gathered all of its feature requests up-to-date. Through studying and categorizing the characteristics of these feature requests, we have found that about 37\% of the feature requests were rejected and the most common rejection reason was redundancy. Also we have found that it is very expensive to identify and resolve these redundant feature requests. In this paper, we have proposed our solution to automatically identify redundant feature requests through a Feature Tree Model along with a future research agenda.},
  eventtitle = {2016 {{IEEE}} 24th {{International Requirements Engineering Conference}} ({{RE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MNT2MGIW/Shi et al. - 2016 - Is It a New Feature or Simply “Don't Know Yet” O.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EQCZ85UK/7765547.html},
  keywords = {automated redundant OSS feature requests identification,Documentation,Feature extraction,feature requests,feature tree model,issue tracking systems,JIRA,Manuals,Message systems,Noise measurement,Object recognition,online forums,open source community,open source projects,project contributors,public domain software,redundant requests,research agenda,research and development,Software,software engineering,Web sites}
}

@incollection{shihab_central_2010,
  title = {On the Central Role of Mailing Lists in Open Source Projects: {{An}} Exploratory Study},
  shorttitle = {On the Central Role of Mailing Lists in Open Source Projects},
  booktitle = {New Frontiers in Artificial Intelligence},
  author = {Shihab, Emad and Bettenburg, Nicolas and Adams, Bram and Hassan, Ahmed E.},
  date = {2010},
  pages = {91--103},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-14888-0_9},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WJRD4SQE/chp%3A10.1007%2F978-3-642-14888-0_9.pdf}
}

@inproceedings{shimagaki_why_2016,
  title = {Why Are {{Commits Being Reverted}}?: {{A Comparative Study}} of {{Industrial}} and {{Open Source Projects}}},
  shorttitle = {Why Are {{Commits Being Reverted}}?},
  booktitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Shimagaki, Junji and Kamei, Yasutaka and McIntosh, Shane and Pursehouse, David and Ubayashi, Naoyasu},
  date = {2016-10},
  pages = {301--311},
  doi = {10.1109/ICSME.2016.83},
  abstract = {Software development is a cyclic process of integrating new features while introducing and fixing defects. During development, commits that modify source code files are uploaded to version control systems. Occasionally, these commits need to be reverted, i.e., the code changes need to be completely backed out of the software project. While one can often speculate about the purpose of reverted commits (e.g., the commit may have caused integration or build problems), little empirical evidence exists to substantiate such claims. The goal of this paper is to better understand why commits are reverted in large software systems. To that end, we quantitatively and qualitatively study two proprietary and four open source projects to measure: (1) the proportion of commits that are reverted, (2) the amount of time that commits that are eventually reverted linger within a codebase, and (3) the most frequent reasons why commits are reverted. Our results show that 1\%-5\% of the commits in the studied systems are reverted. Those commits that are eventually reverted linger within the studied codebases for 1-35 days (median). Furthermore, we identify 13 common reasons for reverting commits, and observe that the frequency of reverted commits of each reason varies broadly from project to project. A complementary qualitative analysis suggests that many reverted commits could have been avoided with better team communication and change awareness. Our findings made Sony Mobile's stakeholders aware that internally reverted commits can be reduced by paying more attention to their own changes. On the other hand, externally reverted commits could be minimized only if external stakeholders are involved to improve inter-company communication or requirements elicitation.},
  eventtitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M3EPNICJ/Shimagaki et al. - 2016 - Why are Commits Being Reverted A Comparative Stu.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B5DWJLI7/7816476.html},
  keywords = {Androids,code inspections,code review,Humanoid robots,industrial project,large software systems,mining software repository,Mobile communication,Mobile handsets,open source project,project management,public domain software,qualitative analysis,revert,reverted commits,software development,software engineering,software evolution,software management,software project,Software systems,source code,source code (software),Stakeholders,version control systems}
}

@inbook{sidorova_it_2013,
  title = {{{IT}} and {{Organizations}}},
  booktitle = {A {{Survey}} of {{Core Research}} in {{Information Systems}}},
  author = {Sidorova, Anna and Evangelopoulos, Nicholas and Torres, Russell and Johnson, Vess},
  date = {2013},
  pages = {33--49},
  publisher = {{Springer New York}},
  location = {{New York, NY}},
  url = {http://link.springer.com/10.1007/978-1-4614-7158-5_4},
  urldate = {2015-11-27},
  bookauthor = {Sidorova, Anna and Evangelopoulos, Nicholas and Torres, Russell and Johnson, Vess},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HGKEVMKG/chp%3A10.1007%2F978-1-4614-7158-5_4.pdf},
  isbn = {978-1-4614-7157-8 978-1-4614-7158-5}
}

@incollection{siena_modelling_2014,
  title = {Modelling {{Risks}} in {{Open Source Software Component Selection}}},
  booktitle = {Conceptual {{Modeling}}},
  author = {Siena, Alberto and Morandini, Mirko and Susi, Angelo},
  date = {2014},
  pages = {335--348},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-12206-9_28},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VKJA9TMD/chp%3A10.1007%2F978-3-319-12206-9_28.pdf},
  keywords = {Forrás1,nyílt forrás,quality}
}

@article{sigfridsson_qualitative_2011,
  title = {On Qualitative Methodologies and Dispersed Communities: {{Reflections}} on the Process of Investigating an Open Source Community},
  shorttitle = {On Qualitative Methodologies and Dispersed Communities},
  author = {Sigfridsson, Anders and Sheehan, Anne},
  date = {2011-09},
  journaltitle = {Information and Software Technology},
  volume = {53},
  pages = {981--993},
  issn = {09505849},
  doi = {10.1016/j.infsof.2011.01.012},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584911000413},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K35ZMZ6M/1-s2.0-S0950584911000413-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {9}
}

@article{silic_dual-use_2013,
  title = {Dual-Use Open Source Security Software in Organizations – {{Dilemma}}: {{Help}} or Hinder?},
  shorttitle = {Dual-Use Open Source Security Software in Organizations – {{Dilemma}}},
  author = {Silic, Mario},
  date = {2013-11},
  journaltitle = {Computers \& Security},
  volume = {39},
  pages = {386--395},
  issn = {01674048},
  doi = {10.1016/j.cose.2013.09.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167404813001326},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DBRDHBN3/1-s2.0-S0167404813001326-main.pdf},
  keywords = {computer security,nyílt forrás},
  langid = {english}
}

@incollection{silic_information_2013,
  title = {Information {{Security}} and {{Open Source Dual Use Security Software}}: {{Trust Paradox}}},
  shorttitle = {Information {{Security}} and {{Open Source Dual Use Security Software}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Silic, Mario and Back, Andrea},
  date = {2013},
  pages = {194--206},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_14},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UHK9W8WC/chp%3A10.1007%2F978-3-642-38928-3_14.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z56EZDUM/chp%3A10.1007%2F978-3-642-38928-3_14.pdf},
  keywords = {Commercial relations,development,nyílt forrás,open source,security}
}

@inproceedings{silva_agility_2016,
  title = {Agility and {{Quality Attributes}} in {{Open Source Software Projects Release Practices}}},
  booktitle = {2016 10th {{International Conference}} on the {{Quality}} of {{Information}} and {{Communications Technology}} ({{QUATIC}})},
  author = {da Silva, Antonio César Brandão Gomes and Carneiro, Glauco de Figueiredo and de Paula, Antonio Carlos Marcelino and Monteiro, Miguel Pessoa and e Abreu, Fernando Brito},
  date = {2016-09},
  pages = {107--112},
  doi = {10.1109/QUATIC.2016.029},
  abstract = {Context: The need to accelerate software delivery, supporting faster time-to-market and frequent community developers/ users feedback are issues that have lead to relevant changes in software development practices. Many Open Source Software (OSS) projects have engaged to achieve this through the adoption of agile practices in software release practices. Problem: There is no secondary study in the literature discussing evidences of the influence of agile approaches in OSS projects release practices. Goal: Identify published reports in the literature that characterize to which extent agility has influenced release approaches in OSS projects. Method: The characterization of studies followed a fivephase process to present a panoramic view of software releases practices in the context of OSS projects. Results: The overall data collected from 14 studies published from January 2006 to January 2016 depicted the following scenario: nine issues that characterize the advantages/influence of agility in OSS release approaches; four challenge issues in this approach; three possibilities of implementation and two main motivations towards the adoption of software release approaches through agility; and finally three main strategies to implement it. Conclusion: This study provides an up-to-date and structured understanding of the influence of agility on OSS projects release approaches based on findings systematically collected from a list of relevant references in the last decade.},
  eventtitle = {2016 10th {{International Conference}} on the {{Quality}} of {{Information}} and {{Communications Technology}} ({{QUATIC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WW69M626/Silva et al. - 2016 - Agility and Quality Attributes in Open Source Soft.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GY5Y4TGB/7814526.html},
  keywords = {Agile Methods,agility attribute,Best practices,Context,Focusing,Frequent Releases,Linux,open source software,Open source software,Open Source Software Projects,open source software projects release practices,OSS projects,OSS release approach,project management,public domain software,quality attribute,Rapid Releases,software delivery,software development management,Software engineering}
}

@inproceedings{silva_floss_2019,
  title = {{{FLOSS}} in {{Software Engineering Education}}: {{Supporting}} the {{Instructor}} in the {{Quest}} for {{Providing Real Experience}} for {{Students}}},
  shorttitle = {{{FLOSS}} in {{Software Engineering Education}}},
  booktitle = {Proceedings of the {{XXXIII Brazilian Symposium}} on {{Software Engineering}}},
  author = {Silva, Fernanda Gomes and Brito, Moara Sousa and Tavares, Jenifer Vieira Toledo and Chavez, Christina von Flach G.},
  date = {2019-09-23},
  pages = {234--243},
  publisher = {{Association for Computing Machinery}},
  location = {{Salvador, Brazil}},
  doi = {10.1145/3350768.3353815},
  url = {https://doi.org/10.1145/3350768.3353815},
  urldate = {2020-04-22},
  abstract = {Software engineering courses play an important role in computer science programs and are expected to provide the required basic knowledge and skills for professional practice in software industry. However, teaching software engineering principles, concepts and practices, and relating them to real-world scenarios are challenging tasks. The adoption of open source software projects may address such challenges. In this paper we report on an experience of the teaching object-oriented modeling with Unified Modeling Language (UML) Class Diagrams using open source projects. We conducted a case study with students of the software engineering discipline of the Computer Science course. We supported the instructor in some activities related to syllabus planning, including the selection of a Free/Libre/Open Source Software (FLOSS) projects and the creation of examples to be used in the classroom. The instructor selected and used a small FLOSS project to support the modeling activities. Then, the instructor applied an evaluation activity and a perception questionnaire about the methodology used. After the end of the classes, we conducted an interview with the instructor to present a brief report of his experience in the classroom. In the perception of students, the experience with FLOSS projects enhanced their ability to handle real projects and third-party code, and to deal with the job market. They also reported developing skills such as proactivity and communication. From the instructor's perspective, the group was enthusiastic and dynamic, and interacted more during practical activities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B7LS9IDI/Silva et al. - 2019 - FLOSS in Software Engineering Education Supportin.pdf},
  isbn = {978-1-4503-7651-8},
  keywords = {Class Diagram,Experience report,FLOSS,Free/Libre/Open Source Software},
  series = {{{SBES}} 2019}
}

@article{silva_google_2020,
  title = {Google Summer of Code: {{Student}} Motivations and Contributions},
  shorttitle = {Google Summer of Code},
  author = {Silva, Jefferson O. and Wiese, Igor and German, Daniel M. and Treude, Christoph and Gerosa, Marco A. and Steinmacher, Igor},
  date = {2020-04-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {162},
  pages = {110487},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2019.110487},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121219302614},
  urldate = {2020-04-22},
  abstract = {Several open source software (OSS) projects participate in engagement programs like Summers of Code expecting to foster newcomers’ onboarding and receive contributions. However, scant empirical evidence identifies why students join such programs. In this paper, we study the well-established Google Summer of Code (GSoC), which is a 3-month OSS engagement program that offers stipends and mentorship to students willing to contribute to OSS projects. We combined a survey (of students and mentors) and interviews (of students) to understand what motivates students to enter GSoC. Our results show that students enter GSoC for an enriching experience, and not necessarily to become frequent contributors. Our data suggest that, while stipends are an important motivator, students participate for work experience and the ability to enhance their resumés. We also discuss practical implications for students, mentors, OSS projects, and Summer of Code programs.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/452INYDZ/Silva et al. - 2020 - Google summer of code Student motivations and con.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4ZS3MF8T/S0164121219302614.html},
  keywords = {Google summer of code,Motivation,Newcomers,Open source software},
  langid = {english}
}

@inproceedings{silva_implementing_2017,
  title = {Implementing {{Federated Social Networking}}: {{Report}} from the {{Trenches}}},
  shorttitle = {Implementing {{Federated Social Networking}}},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration}}},
  author = {Silva, Gabriel and Reis, Larissa and Terceiro, Antonio and Meirelles, Paulo and Kon, Fabio},
  date = {2017-08-23},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3125433.3125455},
  url = {https://doi.org/10.1145/3125433.3125455},
  urldate = {2020-04-22},
  abstract = {The federation of social networks aims at integrating users by means of a decentralized structure, enabling the interoperability among multiple social networks in a transparent way. Despite a few isolated initiatives in federating open social networks, there is no adoption of any standard, which hinders the emergence of new, effective federated systems. To understand the difficulties in the development and standardization of federated services, we have conducted research on existing specifications and implementations of interoperability among social networks. We have developed a federation proof of concept within the Noosfero platform, implementing a subset of the Diaspora protocol to federate users and public content, in addition to complementary specifications, such as Salmon and WebFinger. In this work, we introduce our results to federate Noosfero with Diaspora networks, pointing the required steps before further development. We aim to implement the Diaspora protocol within Noosfero, finishing its specification and improving its documentation, encouraging more projects to adopt this protocol.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MBEBZHSZ/Silva et al. - 2017 - Implementing Federated Social Networking Report f.pdf},
  isbn = {978-1-4503-5187-4},
  keywords = {Diaspora,Federation,Free Libre Open Source Software,Noosfero,Social Networks},
  series = {{{OpenSym}} '17}
}

@inproceedings{silva_students_2017,
  title = {Students' {{Engagement}} in {{Open Source Projects}}: {{An Analysis}} of {{Google Summer}} of {{Code}}},
  shorttitle = {Students' {{Engagement}} in {{Open Source Projects}}},
  booktitle = {Proceedings of the 31st {{Brazilian Symposium}} on {{Software Engineering}}},
  author = {Silva, Jefferson O. and Wiese, Igor S. and Steinmacher, Igor and Gerosa, Marco A.},
  date = {2017-09-20},
  pages = {224--233},
  publisher = {{Association for Computing Machinery}},
  location = {{Fortaleza, CE, Brazil}},
  doi = {10.1145/3131151.3131156},
  url = {https://doi.org/10.1145/3131151.3131156},
  urldate = {2020-04-22},
  abstract = {Several open source software (OSS) communities promote and participate in initiatives such as summers of code to foster contributions and attract new developers. However, little is known about how successful these initiatives are. As a case study, we analyzed Google Summer of Code (GSoC), which is a three-month program that fosters students' participation in OSS projects. We found that 82\% of the studied OSS projects merged at least one students' commit in codebase. When only newcomers are considered, \textasciitilde 54\% of OSS projects merged at least one commit. We also found that \textasciitilde 23\% of newcomers started contributing to GSoC projects before knowing they would be accepted. We also did not find statistical difference between newcomers and students with prior participation in the projects regarding retention time after GSoC, except for 2015 edition. Using survival analysis, we found that \textasciitilde 40\% of students kept contributing longer than a month, while \textasciitilde 15\% contributed longer than a year. OSS communities can take advantage of our results to balance the trade-offs involved in joining this kind of program and to set expectations about how much contribution to expect and for how long students engage.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CNARLAA4/Silva et al. - 2017 - Students' Engagement in Open Source Projects An A.pdf},
  isbn = {978-1-4503-5326-7},
  keywords = {Google Summer of Code,Mining Software Repositories,Newcomers,Open Source Software,Retention},
  series = {{{SBES}}'17}
}

@incollection{sim_intellectual_2013,
  title = {Intellectual {{Property Law}} in {{Source Code Reuse}} and {{Remix}}},
  booktitle = {Finding {{Source Code}} on the {{Web}} for {{Remix}} and {{Reuse}}},
  author = {Sim, Susan Elliott and Stenberg, Erik B.},
  date = {2013},
  pages = {311--322},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-1-4614-6596-6_16},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/68KTU24J/chp%3A10.1007%2F978-1-4614-6596-6_16.pdf},
  keywords = {license,nyílt forrás}
}

@article{simmons_avoidit_2009,
  title = {{{AVOIDIT}}: {{A}} Cyber Attack Taxonomy},
  shorttitle = {{{AVOIDIT}}},
  author = {Simmons, Chris and Ellis, Charles and Shiva, Sajjan and Dasgupta, Dipankar and Wu, Qishi},
  date = {2009},
  journaltitle = {University of Memphis, Technical Report CS-09-003},
  url = {http://si.lopesgazzani.com.br/docentes/marcio/SegApp/CyberAttackTaxonomy_IEEE_Mag.pdf},
  urldate = {2014-03-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IMZ9I6RP/CyberAttackTaxonomy_IEEE_Mag.pdf}
}

@incollection{simmons_towards_2006,
  title = {Towards an Ontology for Open Source Software Development},
  booktitle = {Open {{Source Systems}}},
  author = {Simmons, Gregory L. and Dillon, Tharam S.},
  date = {2006},
  pages = {65--75},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HNRE6AHT/chp%3A10.1007%2F0-387-34226-5_7.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{simon_harrer_open_2013,
  title = {Open {{Source}} versus {{Proprietary Software}} in {{Service}}-{{Orientation}}: {{The Case}} of {{BPEL Engines}}},
  booktitle = {Open {{Source}} versus {{Proprietary Software}} in {{Service}}-{{Orientation}}: {{The Case}} of {{BPEL Engines}}},
  author = {{Simon Harrer} and {Jörg Lenhard} and {Guido Wirtz}},
  date = {2013},
  pages = {99--113},
  publisher = {{Springer}},
  location = {{Berlin, Heidelberg}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DH3Q459D/chp%3A10.1007%2F978-3-642-45005-1_8.pdf},
  isbn = {978-3-642-45005-1},
  keywords = {Aufsatzsammlung,Computer software--Development,nyílt forrás,quality,Software Engineering},
  langid = {english}
}

@online{singel_white_2010,
  title = {White House Cyber Czar: ‘There Is No Cyberwar’},
  author = {Singel, Ryan},
  date = {2010},
  journaltitle = {Wired},
  url = {http://www.wired.com/threatlevel/2010/03/schmidt-cyberwar/},
  urldate = {2012-10-14},
  langid = {Angol}
}

@article{singh_comparison_2010,
  title = {Comparison of Technical Support for Open Source Software versus Proprietary Software},
  author = {Singh, Vandana},
  date = {2010},
  journaltitle = {Proceedings of the American Society for Information Science and Technology},
  volume = {47},
  pages = {1--2},
  url = {http://onlinelibrary.wiley.com/doi/10.1002/meet.14504701437/full},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7DUVBIKQ/a170-singh.pdf},
  number = {1}
}

@incollection{singh_improving_2013,
  title = {Improving the Quality of Software by Quantifying the Code Change Metric and Predicting the Bugs},
  booktitle = {Computational {{Science}} and {{Its Applications}}–{{ICCSA}} 2013},
  author = {Singh, V. B. and Chaturvedi, K. K.},
  date = {2013},
  pages = {408--426},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-39643-4_30},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VGTHNM43/chp%3A10.1007%2F978-3-642-39643-4_30.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{singh_reliability_2013,
  title = {Reliability Assessment and Prediction of Open Source Software Systems},
  booktitle = {Image {{Information Processing}} ({{ICIIP}}), 2013 {{IEEE Second International Conference}} On},
  author = {Singh, Jaskirat and Maurya, L. S.},
  date = {2013},
  pages = {6--11},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6707544},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GK2EN5SW/06707544.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{singh_women-only_2019,
  title = {Women-{{Only Spaces}} of {{Open Source}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 2nd {{International Workshop}} on {{Gender Equality}} in {{Software Engineering}} ({{GE}})},
  author = {Singh, Vandana},
  date = {2019-05},
  pages = {17--20},
  doi = {10.1109/GE.2019.00010},
  abstract = {In this workshop paper, we present the preliminary results of an investigation into women-only spaces in Open Source Software (OSS) communities. We examined 355 OSS project websites, out of which only sixteen had women-centered spaces. We further investigated these sixteen websites and analyzed the content for identity, focus, activities and longevity of the women-centered online spaces. The results indicate that less than five percent of the examined communities have women-only spaces. Most of these women-only spaces welcome other minorities, including trans and ethnic or racial minorities. These spaces exist to provide a common forum for discussion, support, empowerment and engagement of minorities in OSS. Women-only spaces have been around for two decades, but not all the spaces that are created remain active. The active spaces have thousands of members and provide a combination of online and offline activities for improving women's engagement, mentoring and networking.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 2nd {{International Workshop}} on {{Gender Equality}} in {{Software Engineering}} ({{GE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YFRTZKFP/Singh - 2019 - Women-Only Spaces of Open Source.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WF72MCJB/8819573.html},
  keywords = {Gender,Gender and IT,gender issues,gender issues in computing,offline activities,online activities,online communities,open source software communities,OSS project Websites,peer parity,public domain software,Web sites,women engagement,women mentoring,women networking,women of open source software,women-centered online spaces,women-only spaces}
}

@inproceedings{singi_trusted_2019,
  title = {Trusted Software Supply Chain},
  booktitle = {Proceedings of the 34th {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}}},
  author = {Singi, Kapil and Bose, R. P. Jagadeesh Chandra and Podder, Sanjay and Burden, Adam P.},
  date = {2019-11-10},
  pages = {1212--1213},
  publisher = {{IEEE Press}},
  location = {{San Diego, California}},
  doi = {10.1109/ASE.2019.00141},
  url = {https://doi.org/10.1109/ASE.2019.00141},
  urldate = {2020-04-22},
  abstract = {Modern software delivery happens in a geographically distributed environment and resembles like a supply chain - consists of various participants, involves various phases, needs adherence to multiple regulations and needs to maintain artifacts' integrity throughout the delivery phases. This shift in software development brings along with it several challenges ranging from communication of information/knowledge, coordination and control of teams, activities adhering to goals and policies and artifacts adhering to quality, visibility, and management. With the dispersion of centralized control over software delivery to autonomous delivery organizations, the variety of processes and tools used turns transparency into opacity as autonomous teams use different software processes, tools, and metrics, leading to issues like ineffective compliance monitoring, friction prone coordination, and lack of provenance, and thereby trust. In this paper, we present a delivery governance framework based on distributed ledger technology that uses a notion of 'software telemetry' to record data from disparate delivery partners and enables compliance monitoring and adherence, provenance and traceability, transparency, and thereby trust.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QNIYI2KZ/Singi et al. - 2019 - Trusted software supply chain.pdf},
  isbn = {978-1-72812-508-4},
  series = {{{ASE}} '19}
}

@incollection{sirkkala_opening_2009,
  title = {Opening Industrial Software: Planting an Onion},
  shorttitle = {Opening Industrial Software},
  booktitle = {Open {{Source Ecosystems}}: {{Diverse Communities Interacting}}},
  author = {Sirkkala, Petri and Aaltonen, Timo and Hammouda, Imed},
  date = {2009},
  pages = {57--69},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-02032-2_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/75V4TC9X/chp%3A10.1007%2F978-3-642-02032-2_7.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@article{sma_whitepaper_2017,
  title = {Whitepaper {{Cyber Security}}},
  author = {{SMA}},
  date = {2017},
  pages = {9},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T4ZRG3XE/Whitepaper Cyber Security.pdf},
  langid = {english}
}

@incollection{smith_users_2006,
  title = {Users and Developers: {{An}} Agent-Based Simulation of Open Source Software Evolution},
  shorttitle = {Users and Developers},
  booktitle = {Software {{Process Change}}},
  author = {Smith, Neil and Capiluppi, Andrea and Fernández-Ramil, Juan},
  date = {2006},
  pages = {286--293},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/11754305_31},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I9XE3BTB/chp%3A10.1007%2F11754305_31.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{soares_acceptance_2015,
  title = {Acceptance Factors of Pull Requests in Open-Source Projects},
  author = {Soares, Daricélio Moreira and de Lima Júnior, Manoel Limeira and Murta, Leonardo and Plastino, Alexandre},
  date = {2015},
  pages = {1541--1546},
  publisher = {{ACM Press}},
  doi = {10.1145/2695664.2695856},
  url = {http://dl.acm.org/citation.cfm?doid=2695664.2695856},
  urldate = {2015-10-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E4NKQ3QA/p1541-soares.pdf},
  isbn = {978-1-4503-3196-8},
  langid = {english},
  options = {useprefix=true}
}

@incollection{sobh_exploratory_2013,
  title = {An {{Exploratory Empirical Study}} of {{Internal Quality Attributes}} of {{Open Source Software Systems}}},
  booktitle = {Emerging {{Trends}} in {{Computing}}, {{Informatics}}, {{Systems Sciences}}, and {{Engineering}}},
  author = {Kozlov, Denis and Koskinen, Jussi and Sakkinen, Markku and Markkula, Jouni},
  editor = {Sobh, Tarek and Elleithy, Khaled},
  date = {2013},
  volume = {151},
  pages = {737--750},
  publisher = {{Springer New York}},
  location = {{New York, NY}},
  url = {http://link.springer.com/10.1007/978-1-4614-3558-7_63},
  urldate = {2014-10-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H27RK5T5/An Exploratory Empirical Study of Internal Quality Attributes of Open Source.pdf},
  isbn = {978-1-4614-3557-0 978-1-4614-3558-7},
  keywords = {case study,Empirikus,open source,source analysis}
}

@incollection{sobh_exploring_2010,
  title = {Exploring {{User Acceptance}} of {{FOSS}}: {{The Role}} of the {{Age}} of the {{Users}}},
  shorttitle = {Exploring {{User Acceptance}} of {{FOSS}}},
  booktitle = {Innovations in {{Computing Sciences}} and {{Software Engineering}}},
  author = {Gallego, M. Dolores and Bueno, Salvador},
  editor = {Sobh, Tarek and Elleithy, Khaled},
  date = {2010},
  pages = {173--176},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://www.springerlink.com/index/10.1007/978-90-481-9112-3_29},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J5XE74M9/chp%3A10.1007%2F978-90-481-9112-3_29.pdf},
  isbn = {978-90-481-9111-6 978-90-481-9112-3},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@book{sobh_innovations_2010,
  title = {Innovations in {{Computing Sciences}} and {{Software Engineering}}},
  editor = {Sobh, Tarek and Elleithy, Khaled},
  date = {2010},
  publisher = {{Springer Netherlands}},
  location = {{Dordrecht}},
  url = {http://www.springerlink.com/index/10.1007/978-90-481-9112-3},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/A53ZNE5S/chp%3A10.1007%2F978-90-481-9112-3_3.pdf},
  isbn = {978-90-481-9111-6 978-90-481-9112-3},
  langid = {english}
}

@incollection{sobh_open_2013,
  title = {Open {{Source Software Development}}: {{Exploring Research Perspectives}}},
  shorttitle = {Open {{Source Software Development}}},
  booktitle = {Emerging {{Trends}} in {{Computing}}, {{Informatics}}, {{Systems Sciences}}, and {{Engineering}}},
  author = {Kanwal, Preet and Gupta, Anu and Singla, Ravinder Kumar},
  editor = {Sobh, Tarek and Elleithy, Khaled},
  date = {2013},
  volume = {151},
  pages = {607--617},
  publisher = {{Springer New York}},
  location = {{New York, NY}},
  url = {http://link.springer.com/10.1007/978-1-4614-3558-7_52},
  urldate = {2014-10-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/684PSAKJ/chp%3A10.1007%2F978-1-4614-3558-7_52.pdf},
  isbn = {978-1-4614-3557-0},
  keywords = {FLOSS,Forrás2,history}
}

@article{sohn_strategic_2008,
  title = {A Strategic Analysis for Successful Open Source Software Utilization Based on a Structural Equation Model},
  author = {Sohn, So Young and Mok, Min Seok},
  date = {2008-06},
  journaltitle = {Journal of Systems and Software},
  volume = {81},
  pages = {1014--1024},
  issn = {01641212},
  doi = {10.1016/j.jss.2007.08.034},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121207002245},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T7XD5PJA/1-s2.0-S0164121207002245-main.pdf},
  keywords = {_SMS_untagged,Forrás2,Mintamunka,nyílt forrás,open source,Previous Work},
  langid = {english},
  number = {6}
}

@book{sojer_reusing_2011,
  title = {Reusing open source code value creation and value appropriation perspectives on knowledge reuse},
  author = {Sojer, Manuel},
  date = {2011},
  edition = {1},
  publisher = {{Gabler Verlag / Springer Fachmedien Wiesbaden}},
  location = {{Wiesbaden}},
  url = {http://public.eblib.com/EBLPublic/PublicView.do?ptiID=751563},
  urldate = {2014-05-31},
  abstract = {The reuse of existing code through their software developers is critical for firms to ensure efficient development of high-quality software. A recent facet of this topic is the increasing importance of reusing open source code which is often available free of charge via download from the internet, but brings along legal risks through its licenses. In this setting Manuel Sojer empirically investigates which factors influence software developers to reuse open source code and what causes them to comply with the resulting license obligations or not},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C78QTH2W/book_Reusing Open Source Code.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NM6WUPKZ/Open source software developers perspectives on code reuse.pdf},
  isbn = {978-3-8349-2668-5},
  keywords = {component reuse,felmérés,Forrás1,license,open source,source},
  langid = {English, with abstract in German.}
}

@report{sommer_reducing_2011,
  title = {Reducing Systemic Cybersecurity Risk},
  author = {Sommer, Peter and Brown, Ian},
  date = {2011-01-14},
  pages = {121},
  url = {http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1743384 http://www.oecd.org/internet/46894657.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T2PQK4V8/Sommer és Brown - 2011 - Reducing systemic cybersecurity risk.pdf},
  keywords = {cyberwarfare,information assurance,information security},
  number = {IFP/WKP/FGS(2011)3}
}

@inproceedings{sone_method_2019,
  title = {A {{Method}} of {{Fault Identification Considering High Fix Priority}} in {{Open Source Project}}},
  booktitle = {2019 {{IEEE International Conference}} on {{Industrial Engineering}} and {{Engineering Management}} ({{IEEM}})},
  author = {Sone, Hironobu and Tamura, Yoshinobu and Yamada, Shigeru},
  date = {2019-12},
  pages = {165--169},
  issn = {2157-362X},
  doi = {10.1109/IEEM44572.2019.8978938},
  abstract = {Open source software is adopted as embedded systems, server usage and so on because of quick delivery, cost reduction and standardization of systems. Many open source software are developed under the peculiar development style known as bazaar method, in which faults are found and fixed by developers around the world, and the result will be reflected in the next release. However, several massive open source projects have a problem that faults fixing takes a lot of time because faults corrector cannot handle many faults reports briefly. In this paper, we make an index to detect faults that require high fix priority and long fault fixing time when faults are reported in specific version of open source project. In addition, we try to improve the detection accuracy of the proposed index by learning not only the specific version but also the fault report data of the past version by using random forest considering the characteristic similarities of faults fix among different versions. As a result, the detection accuracy has highly improved compared with using only specific version data.},
  eventtitle = {2019 {{IEEE International Conference}} on {{Industrial Engineering}} and {{Engineering Management}} ({{IEEM}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9XIE24VY/Sone et al. - 2019 - A Method of Fault Identification Considering High .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8YPFXW9T/8978938.html},
  keywords = {bazaar method,Big data,cost reduction,detection accuracy,embedded systems,fault diagnosis,fault identification,fault report data,faults corrector,faults fixing,faults reports briefly,fix priority,learning (artificial intelligence),long fault fixing time,massive open source projects,open source project,open source software,peculiar development style,public domain software,random forest,software engineering,software reliability,specific version}
}

@report{sophos_security_2013,
  title = {Security {{Threat Report}} 2013},
  author = {{Sophos}},
  date = {2013},
  url = {http://www.sophos.com/en-us/security-news-trends/reports/security-threat-report.aspx},
  urldate = {2013-10-11},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V6ABQAWW/sophossecuritythreatreport2013.pdf}
}

@incollection{soto_qualoss_2009,
  title = {The {{QualOSS Process Evaluation}}: {{Initial Experiences}} with {{Assessing Open Source Processes}}},
  shorttitle = {The {{QualOSS Process Evaluation}}},
  booktitle = {Software {{Process Improvement}}},
  author = {Soto, Martín and Ciolkowski, Marcus},
  date = {2009},
  pages = {105--116},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-04133-4_9},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7W5UVEX5/chp%3A10.1007%2F978-3-642-04133-4_9.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{soto-valero_emergence_2019,
  title = {The Emergence of Software Diversity in Maven Central},
  booktitle = {Proceedings of the 16th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Soto-Valero, César and Benelallam, Amine and Harrand, Nicolas and Barais, Olivier and Baudry, Benoit},
  date = {2019-05-26},
  pages = {333--343},
  publisher = {{IEEE Press}},
  location = {{Montreal, Quebec, Canada}},
  doi = {10.1109/MSR.2019.00059},
  url = {https://doi.org/10.1109/MSR.2019.00059},
  urldate = {2020-04-22},
  abstract = {Maven artifacts are immutable: an artifact that is uploaded on Maven Central cannot be removed nor modified. The only way for developers to upgrade their library is to release a new version. Consequently, Maven Central accumulates all the versions of all the libraries that are published there, and applications that declare a dependency towards a library can pick any version. In this work, we hypothesize that the immutability of Maven artifacts and the ability to choose any version naturally support the emergence of software diversity within Maven Central. We analyze 1,487,956 artifacts that represent all the versions of 73,653 libraries. We observe that more than 30\% of libraries have multiple versions that are actively used by latest artifacts. In the case of popular libraries, more than 50\% of their versions are used. We also observe that more than 17\% of libraries have several versions that are significantly more used than the other versions. Our results indicate that the immutability of artifacts in Maven Central does support a sustained level of diversity among versions of libraries in the repository.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LTGMKUBQ/Soto-Valero et al. - 2019 - The emergence of software diversity in maven centr.pdf},
  keywords = {evolution,library versions,maven central,open-source software,software diversity},
  series = {{{MSR}} '19}
}

@inproceedings{sousa_analysis_2019,
  title = {Analysis of {{Coupling Evolution}} on {{Open Source Systems}}},
  booktitle = {Proceedings of the {{XIII Brazilian Symposium}} on {{Software Components}}, {{Architectures}}, and {{Reuse}}},
  author = {Sousa, Bruno L. and Bigonha, Mariza A. S. and Ferreira, Kecia A. M.},
  date = {2019-09-23},
  pages = {23--32},
  publisher = {{Association for Computing Machinery}},
  location = {{Salvador, Brazil}},
  doi = {10.1145/3357141.3357147},
  url = {https://doi.org/10.1145/3357141.3357147},
  urldate = {2020-04-22},
  abstract = {Software evolution is an intrinsic process of the software life cycle. The comprehension of this process is a central research topic in Software Engineering. It is widely accepted that as a software system evolves, its internal quality declines, and its complexity increases. However, there is a gap in the comprehension of how this process occurs in a fine-grained view. In this work, we apply a software metric approach to investigate how the internal quality of object-oriented software systems evolves in the aspect of coupling. More specifically, we analyze (i) how the coupling behavior may be described over the software evolution, (ii) how the coupling behavior affects the reusability and complexity of the systems, and (iii) the percentage of classes from the systems that directly impacts on the coupling evolution. The results and observations of this study are compiled in seven properties of coupling evolution, among which stand out: (i) the coupling behavior is better modeled by a cubic function, (ii) the coupling evolution tends to increase the complexity of the systems, (iii) the systems tend to be designed with a high level of complexity, and (iv) the coupling evolution is affected by a small group of classes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q2NPIX5B/Sousa et al. - 2019 - Analysis of Coupling Evolution on Open Source Syst.pdf},
  isbn = {978-1-4503-7637-2},
  keywords = {coupling,object-orientation,open source,software evolution,software metrics,software quality},
  series = {{{SBCARS}} '19}
}

@article{sowe_understanding_2008,
  title = {Understanding Knowledge Sharing Activities in Free/Open Source Software Projects: {{An}} Empirical Study},
  shorttitle = {Understanding Knowledge Sharing Activities in Free/Open Source Software Projects},
  author = {Sowe, Sulayman K. and Stamelos, Ioannis and Angelis, Lefteris},
  date = {2008-03},
  journaltitle = {Journal of Systems and Software},
  volume = {81},
  pages = {431--446},
  issn = {01641212},
  doi = {10.1016/j.jss.2007.03.086},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121207000842},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XAFIIWWA/1-s2.0-S0164121207000842-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {3}
}

@incollection{sowe_using_2007,
  title = {Using {{Repository}} of {{Repositories}} ({{RoRs}}) to Study the Growth of {{F}}/{{OSS}} Projects: {{A}} Meta-Analysis Research Approach},
  shorttitle = {Using {{Repository}} of {{Repositories}} ({{RoRs}}) to Study the Growth of {{F}}/{{OSS}} Projects},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Sowe, Sulayman K. and Angelis, Lefteris and Stamelos, Ioannis and Manolopoulos, Yannis},
  date = {2007},
  pages = {147--160},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7V3N934A/chp%3A10.1007%2F978-0-387-72486-7_12.pdf},
  keywords = {data source,development,Forrás2,nyílt forrás,open source}
}

@incollection{sowe_using_2012,
  title = {Using {{Multiple Case Studies}} to {{Analyse Open Source Software Business Sustainability}} in {{Sub}}-{{Saharan Africa}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Sowe, Sulayman K. and McNaughton, Maurice},
  date = {2012},
  pages = {160--177},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_11},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RDFK89KD/chp%3A10.1007%2F978-3-642-33442-9_11.pdf}
}

@article{spinellis_evaluating_2009,
  ids = {spinellis\_evaluating\_2009-1},
  title = {Evaluating the {{Quality}} of {{Open Source Software}}},
  author = {Spinellis, Diomidis and Gousios, Georgios and Karakoidas, Vassilios and Louridas, Panagiotis and Adams, Paul J. and Samoladas, Ioannis and Stamelos, Ioannis},
  date = {2009-03},
  journaltitle = {Electronic Notes in Theoretical Computer Science},
  volume = {233},
  pages = {5--28},
  issn = {15710661},
  doi = {10.1016/j.entcs.2009.02.058},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1571066109000632},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RTU28DDU/1-s2.0-S1571066109000632-main.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W3CXH7NT/Spinellis et al. - 2009 - Evaluating the Quality of Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BSNY2WXN/S1571066109000632.html},
  keywords = {nyílt forrás,open source,process quality attributes,product quality attributes,quality},
  langid = {english}
}

@article{spinellis_organizational_2012,
  title = {Organizational Adoption of Open Source Software},
  author = {Spinellis, Diomidis and Giannikas, Vaggelis},
  date = {2012-03},
  journaltitle = {Journal of Systems and Software},
  volume = {85},
  pages = {666--682},
  issn = {01641212},
  doi = {10.1016/j.jss.2011.09.037},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121211002512},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4HEK2KC3/1-s2.0-S0164121211002512-main.pdf},
  keywords = {adoption,Forrás2,nyílt forrás,open source,statisztika},
  langid = {english},
  number = {3}
}

@inproceedings{spinellis_tale_2008,
  title = {A Tale of Four Kernels},
  booktitle = {Proceedings of the 30th International Conference on {{Software}} Engineering},
  author = {Spinellis, Diomidis},
  date = {2008},
  pages = {381--390},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1368140},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9GQSEWQM/04814149.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@book{spivey_z_1992,
  title = {The {{Z}} Notation},
  author = {Spivey, J. Michael and Abrial, J. R.},
  date = {1992},
  publisher = {{Prentice Hall Hemel Hempstead}},
  url = {http://www.csm.ornl.gov/~sheldon/cs580/zrm.pdf},
  urldate = {2014-11-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6NKP3C5E/zrm.pdf},
  keywords = {formal verification,security}
}

@inproceedings{squire_considering_2017,
  title = {Considering the {{Use}} of {{Walled Gardens}} for {{FLOSS Project Communication}}},
  booktitle = {Open {{Source Systems}}: {{Towards Robust Practices}}},
  author = {Squire, Megan},
  date = {2017-05-22},
  pages = {3--13},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-57735-7_1},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-57735-7_1},
  urldate = {2018-08-15},
  abstract = {At its core, free, libre, and open source software (FLOSS) is defined by its adherence to a set of licenses that give various freedoms to the users of the software, for example the ability to use the software, to read or modify its source code, and to distribute the software to others. In addition, many FLOSS projects and developers also champion other values related to “freedom” and “openness”, such as transparency, for example in communication and decision-making, or community-orientedness, for example in broadening access, collaboration, and participation. This paper explores how one increasingly common software development practice - communicating inside non-archived, third-party “walled gardens” - puts these FLOSS values into conflict. If communities choose to use non-archived walled gardens for communication, they may be prioritizing one type of openness (broad participation) over another (transparency). We use 18 FLOSS projects as a sample to describe how walled gardens are currently being used for intra-project communication, as well as to determine whether or not these projects provide archives of these communications. Findings will be useful to the FLOSS community as a whole as it seeks to understand the evolution and impact of its communication choices.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7RP8NMAB/Squire - 2017 - Considering the Use of Walled Gardens for FLOSS Pr.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RM6NWNWI/978-3-319-57735-7_1.html},
  isbn = {978-3-319-57734-0 978-3-319-57735-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{squire_diffusion_2015,
  title = {The {{Diffusion}} of {{Pastebin Tools}} to {{Enhance Communication}} in {{FLOSS Mailing Lists}}},
  booktitle = {Open {{Source Systems}}: {{Adoption}} and {{Impact}}},
  author = {Squire, Megan and Smith, Amber K.},
  date = {2015-05-16},
  pages = {45--57},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-17837-0_5},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-17837-0_5},
  urldate = {2018-08-15},
  abstract = {This paper describes how software developers who use mailing lists to communicate reacted and adjusted to a new supplementary collaboration tool, called a pastebin service. Using publicly-available archives of 8800 mailing lists, we examine the adoption of the pastebin tool by software developers and compare it to the model presented in Diffusion of Innovation (DoI) theory. We then compare the rate at which software developers decided whether to accept or reject the new pastebin tools. We find that the overall rate of pastebin adoption follows the S-curve predicted by classic DoI theory. We then compare the individual pastebin services and their rates of adoption, as well as the reaction of different communities to the new tools and the various rationales for accepting or rejecting them.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LRNAKF8A/Squire and Smith - 2015 - The Diffusion of Pastebin Tools to Enhance Communi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KXLVKHF5/978-3-319-17837-0_5.html},
  isbn = {978-3-319-17836-3 978-3-319-17837-0},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{squire_lives_2017,
  title = {The {{Lives}} and {{Deaths}} of {{Open Source Code Forges}}},
  booktitle = {Proceedings of the 13th {{International Symposium}} on {{Open Collaboration}}},
  author = {Squire, Megan},
  date = {2017-08-23},
  pages = {1--8},
  publisher = {{Association for Computing Machinery}},
  location = {{Galway, Ireland}},
  doi = {10.1145/3125433.3125468},
  url = {https://doi.org/10.1145/3125433.3125468},
  urldate = {2020-04-22},
  abstract = {Code forges are third party software repositories that also provide various tools and facilities for distributed software development teams to use, including source code control systems, mailing lists and communication forums, bug tracking systems, web hosting space, and so on. The main contributions of this paper are to present some new data sets relating to the technology adoption lifecycles of a group of six free, libre, and open source software (FLOSS) code forges, and to compare the lifecycles of the forges to each other and to the model presented by classical Diffusion of Innovation (DoI) theory. We find that the observed adoption patterns of code forges rarely follow the DoI model, especially as larger code forges are beset by spam and abuse. The only forge exhibiting a DoI-like lifecycle was a smaller, community-managed, special-purpose forge whose demise was planned in advance. The results of this study will be useful in explaining adoption trajectories, both to practitioners building collaborative FLOSS ecosystems and to researchers who study the evolution and adoption of socio-technical systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4ANG3MN8/Squire - 2017 - The Lives and Deaths of Open Source Code Forges.pdf},
  isbn = {978-1-4503-5187-4},
  keywords = {code forge,CodePlex,diffusion of innovations,FLOSS,free software,GitHub,Google Code,ObjectWeb,Open source,RubyForge,software evolution,SourceForge,technology adoption},
  series = {{{OpenSym}} '17}
}

@article{srijith_study_2002,
  title = {{{STUDY ON MANAGEMENT OF OPEN SOURCE SOFTWARE PROJECTS}}},
  author = {Srijith, Krishnan Nair},
  date = {2002},
  url = {http://srijith.net/publications/techreports/cs5212_report.pdf},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HDBBUB7R/___cs5212_report.pdf}
}

@inproceedings{srisopha_software_2018,
  ids = {srisopha\_software\_2018-1},
  title = {Software {{Quality}} through the {{Eyes}} of the {{End}}-{{User}} and {{Static Analysis Tools}}: {{A Study}} on {{Android OSS Applications}}},
  shorttitle = {Software {{Quality}} through the {{Eyes}} of the {{End}}-{{User}} and {{Static Analysis Tools}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 1st {{International Workshop}} on {{Software Qualities}} and Their {{Dependencies}} ({{SQUADE}})},
  author = {Srisopha, Kamonphop and Alfayez, Reem},
  date = {2018-05},
  pages = {1--4},
  abstract = {Source code analysis tools have been the vehicle for measuring and assessing the quality of a software product for decades. However, recently many studies have shown that post-deployment end-user reviews provide a wealth of insight into the quality of a software product and how it should evolve and be maintained. For example, end-user reviews help to identify missing features or inform developers about incorrect or unexpected software behavior. We believe that analyzing end-user reviews and utilizing analysis tools are a crucial step towards understanding the complete picture of the quality of a software product, as well as towards reasoning about the evolution history of it. In this paper, we investigate whether both methods correlate with one another. In other words, we explore if there exists a relationship between user satisfaction and the application's internal quality characteristics. To conduct our research, we analyze a total of 46 actual releases of three Android open source software (OSS) applications on the Google Play Store. For each release, we employ multiple static analysis tools to assess several aspects of the application's software quality. We retrieve and manually analyze the complete reviews after each release of each application from its store page, totaling 1004 reviews. Our initial results suggest that having high or low code quality does not necessary ensure user overall satisfaction.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 1st {{International Workshop}} on {{Software Qualities}} and Their {{Dependencies}} ({{SQUADE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PA5YGHFI/Srisopha and Alfayez - 2018 - Software Quality through the Eyes of the End-User .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RVMZSW82/Srisopha and Alfayez - 2018 - Software quality through the eyes of the end-user .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BG6GY8KS/8445034.html},
  keywords = {Android (operating system),Android OSS applications,Androids,complete reviews,high-code quality,Humanoid robots,incorrect software behavior,internal quality characteristics,low-code quality,Measurement,multiple static analysis tools,post-deployment end-user reviews,program diagnostics,public domain software,recently many studies,software engineering,Software Engineering,software evolution,Software Evolution,software product,software quality,Software quality,Software Quality,source code analysis tools,source software applications,static analysis,Static analysis,Static Analysis,Tools,unexpected software behavior,user overall satisfaction,user satisfaction,User Satisfaction}
}

@book{stallman_free_2010,
  title = {Free {{Software}}, {{Free Society Selected Essays}} of {{Richard M}}. {{Stallman}}},
  shorttitle = {Free {{Software}}, {{Free Society}}},
  author = {Stallman, Richard M.},
  date = {2010},
  edition = {2},
  publisher = {{Free Software Foundation}},
  url = {http://www.gnu.org/doc/fsfs-ii-2.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AW933DTJ/Stallman - 2010 - Free Software, Free Society Selected Essays of Ric.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RQWT8MTN/stallman_why_free.html},
  isbn = {978-0-9831592-0-9}
}

@incollection{stefi_what_2014,
  title = {What {{Influences Platform Provider}}’s {{Degree}} of {{Openness}}?–{{Measuring}} and {{Analyzing}} the {{Degree}} of {{Platform Openness}}},
  shorttitle = {What {{Influences Platform Provider}}’s {{Degree}} of {{Openness}}?},
  booktitle = {Software {{Business}}. {{Towards Continuous Value Delivery}}},
  author = {Stefi, Anisa and Berger, Matthias and Hess, Thomas},
  date = {2014},
  pages = {258--272},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-08738-2_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RKP6GQJB/chp%3A10.1007%2F978-3-319-08738-2_18.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{steinmacher_almost_2018,
  ids = {steinmacher\_almost\_2018-1},
  title = {Almost {{There}}: {{A Study}} on {{Quasi}}-{{Contributors}} in {{Open}}-{{Source Software Projects}}},
  shorttitle = {Almost {{There}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Steinmacher, Igor and Pinto, Gustavo and Wiese, Igor Scaliante and Gerosa, Marco Aurélio},
  date = {2018-05},
  pages = {256--266},
  issn = {1558-1225},
  doi = {10.1145/3180155.3180208},
  abstract = {Recent studies suggest that well-known OSS projects struggle to find the needed workforce to continue evolving-in part because external developers fail to overcome their first contribution barriers. In this paper, we investigate how and why quasi-contributors (external developers who did not succeed in getting their contributions accepted to an OSS project) fail. To achieve our goal, we collected data from 21 popular, non-trivial GitHub projects, identified quasi-contributors, and analyzed their pull-requests. In addition, we conducted surveys with quasi-contributors, and projects' integrators, to understand their perceptions about nonacceptance.We found 10,099 quasi-contributors - about 70\% of the total actual contributors - that submitted 12,367 non-accepted pull-requests. In five projects, we found more quasi-contributors than actual contributors. About one-third of the developers who took our survey disagreed with the nonacceptance, and around 30\% declared the nonacceptance demotivated or prevented them from placing another pull-request. The main reasons for pull-request nonacceptance from the quasi-contributors' perspective were "superseded/duplicated pull-request" and "mismatch between developer's and team's vision/opinion." A manual analysis of a representative sample of 263 pull-requests corroborated with this finding. We also found reasons related to the relationship with the community and lack of experience or commitment from the quasi-contributors. This empirical study is particularly relevant to those interested in fostering developers' participation and retention in OSS communities.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HWDUBCA2/Steinmacher et al. - 2018 - Almost There A Study on Quasi-Contributors in Ope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TSJNP6IS/Steinmacher et al. - 2018 - Almost there a study on quasi-contributors in ope.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RLUKA2IA/8453084.html},
  keywords = {Analytical models,Computer languages,Encoding,Face,GitHub projects,manual analysis,newcomers,open source software,Open source software,open-source software projects,OSS project,project management,public domain software,pull-requests,quasi contributors,quasi-contributors,quasicontributors,Software engineering,software management}
}

@inproceedings{steinmacher_overcoming_2016,
  title = {Overcoming Open Source Project Entry Barriers with a Portal for Newcomers},
  booktitle = {Proceedings of the 38th {{International Conference}} on {{Software Engineering}}},
  author = {Steinmacher, Igor and Conte, Tayana Uchoa and Treude, Christoph and Gerosa, Marco Aurélio},
  date = {2016-05-14},
  pages = {273--284},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2884781.2884806},
  url = {https://doi.org/10.1145/2884781.2884806},
  urldate = {2020-04-22},
  abstract = {Community-based Open Source Software (OSS) projects are usually self-organized and dynamic, receiving contributions from distributed volunteers. Newcomer are important to the survival, long-term success, and continuity of these communities. However, newcomers face many barriers when making their first contribution to an OSS project, leading in many cases to dropouts. Therefore, a major challenge for OSS projects is to provide ways to support newcomers during their first contribution. In this paper, we propose and evaluate FLOSScoach, a portal created to support newcomers to OSS projects. FLOSScoach was designed based on a conceptual model of barriers created in our previous work. To evaluate the portal, we conducted a study with 65 students, relying on qualitative data from diaries, self-efficacy questionnaires, and the Technology Acceptance Model. The results indicate that FLOSScoach played an important role in guiding newcomers and in lowering barriers related to the orientation and contribution process, whereas it was not effective in lowering technical barriers. We also found that FLOSScoach is useful, easy to use, and increased newcomers' confidence to contribute. Our results can help project maintainers on deciding the points that need more attention in order to help OSS project newcomers overcome entry barriers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FQ5CDINK/Steinmacher et al. - 2016 - Overcoming open source project entry barriers with.pdf},
  isbn = {978-1-4503-3900-1},
  keywords = {barriers,beginners,joining process,newbies,newcomers,novices,obstacles,onboarding,open source software},
  series = {{{ICSE}} '16}
}

@article{steinmacher_overcoming_2018,
  ids = {steinmacher\_overcoming\_2019},
  title = {Overcoming {{Social Barriers When Contributing}} to {{Open Source Software Projects}}},
  author = {Steinmacher, Igor and Gerosa, Marco and Conte, Tayana U. and Redmiles, David F.},
  date = {2018-06-14},
  journaltitle = {Computer Supported Cooperative Work (CSCW)},
  shortjournal = {Comput Supported Coop Work},
  pages = {1--44},
  issn = {0925-9724, 1573-7551},
  doi = {10.1007/s10606-018-9335-z},
  url = {https://link.springer.com/article/10.1007/s10606-018-9335-z},
  urldate = {2018-08-15},
  abstract = {An influx of newcomers is critical to the survival, long-term success, and continuity of many Open Source Software (OSS) community-based projects. However, newcomers face many barriers when making their first contribution, leading in many cases to dropouts. Due to the collaborative nature of community-based OSS projects, newcomers may be susceptible to social barriers, such as communication breakdowns and reception issues. In this article, we report a two-phase study aimed at better understanding social barriers faced by newcomers. In the first phase, we qualitatively analyzed the literature and data collected from practitioners to identify barriers that hinder newcomers’ first contribution. We designed a model composed of 58 barriers, including 13 social barriers. In the second phase, based on the barriers model, we developed FLOSScoach, a portal to support newcomers making their first contribution. We evaluated the portal in a diary-based study and found that the portal guided the newcomers and reduced the need for communication. Our results provide insights for communities that want to support newcomers and lay a foundation for building better onboarding tools. The contributions of this paper include identifying and gathering empirical evidence of social barriers faced by newcomers; understanding how social barriers can be reduced or avoided by using a portal that organizes proper information for newcomers (FLOSScoach); presenting guidelines for communities and newcomers on how to reduce or avoid social barriers; and identifying new streams of research.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7PC6CVA9/Steinmacher et al. - 2018 - Overcoming Social Barriers When Contributing to Op.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LVKANLVU/Steinmacher et al. - 2019 - Overcoming Social Barriers When Contributing to Op.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LYTLZ7G6/s10606-018-9335-z.html},
  langid = {english}
}

@inproceedings{stevenson_inheritance_2018,
  title = {Inheritance {{Usage Patterns}} in {{Open}}-{{Source Systems}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Stevenson, Jamie and Wood, Murray},
  date = {2018-05},
  pages = {245--255},
  issn = {1558-1225},
  doi = {10.1145/3180155.3180168},
  abstract = {This research investigates how object-oriented inheritance is actually used in practice. The aim is to close the gap between inheritance guidance and inheritance practice. It is based on detailed analyses of 2440 inheritance hierarchies drawn from 14 open-source systems. The original contributions made by this paper concern pragmatic assessment of inheritance hierarchy design quality. The findings show that inheritance is very widely used but that most of the usage patterns that occur in practice are simple in structure. They are so simple that they may not require much inheritance-specific design consideration. On the other hand, the majority of classes defined using inheritance actually appear within a relatively small number of large, complex hierarchies. While some of these large hierarchies appear to have a consistent structure, often based on a problem domain model or a design pattern, others do not. Another contribution is that the quality of hierarchies, especially the large problematic ones, may be assessed in practice based on size, shape, and the definition and invocation of novel methods - all properties that can be detected automatically.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CMW52YFM/Stevenson and Wood - 2018 - Inheritance Usage Patterns in Open-Source Systems.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LTKM2MNQ/8453083.html},
  keywords = {14 open-source systems,complex hierarchies,design guidance,empirical,Gold,inheritance,inheritance guidance,inheritance hierarchies,inheritance hierarchy design quality,inheritance usage patterns,inheritance-specific design consideration,Object-oriented,object-oriented inheritance,object-oriented methods,open source,public domain software,Software engineering}
}

@inproceedings{stewart_communityguard_2017,
  title = {{{CommunityGuard}}: {{A Crowdsourced Home Cyber}}-{{Security System}}},
  shorttitle = {{{CommunityGuard}}},
  booktitle = {Proceedings of the {{ACM International Workshop}} on {{Security}} in {{Software Defined Networks}} \& {{Network Function Virtualization}}},
  author = {Stewart, Chase E. and Vasu, Anne Maria and Keller, Eric},
  date = {2017-03-24},
  pages = {1--6},
  publisher = {{Association for Computing Machinery}},
  location = {{Scottsdale, Arizona, USA}},
  doi = {10.1145/3040992.3040997},
  url = {https://doi.org/10.1145/3040992.3040997},
  urldate = {2020-04-22},
  abstract = {In this paper, we propose and implement CommunityGuard, a system which comprises of intelligent Guardian Nodes that learn and prevent malicious traffic from coming into and going out of a user's personal area network. In the CommunityGuard model, each Guardian Node tells others about emerging threats, blocking these threats for all users as soon as they begin. Furthermore, Guardian Nodes regularly update themselves with latest threat models to provide effective security against new and emerging threats. Our evaluation proves that CommunityGuard provides immunity against a range of incoming and outgoing attacks at all points of time with an acceptable impact on network performance. Oftentimes, the sources of DDoS attack traffic are personal devices that have been compromised without the owner's knowledge. We have modeled CommunityGuard to prevent such outgoing DDoS traffic on a wide scale which can hamstring the otherwise very frightening prospects of crippling DDoS attacks.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XMDKS36V/Stewart et al. - 2017 - CommunityGuard A Crowdsourced Home Cyber-Security.pdf},
  isbn = {978-1-4503-4908-6},
  keywords = {crowdsourced security,intrusion prevention,IoT security,SDN security},
  series = {{{SDN}}-{{NFVSec}} '17}
}

@inproceedings{stewart_observations_2005,
  title = {Observations on Patterns of Development in Open Source Software Projects},
  booktitle = {{{ACM SIGSOFT Software Engineering Notes}}},
  author = {Stewart, Katherine J. and Darcy, David P. and Daniel, Sherae L.},
  date = {2005},
  volume = {30},
  pages = {1--5},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1083272},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K98J5ZJD/p14-stewart.pdf},
  keywords = {development,nyílt forrás,source}
}

@inproceedings{stewart_sustained_2015,
  title = {Sustained {{Software}} for {{Cyberinfrastructure}}: {{Analyses}} of {{Successful Efforts}} with a {{Focus}} on {{NSF}}-Funded {{Software}}},
  shorttitle = {Sustained {{Software}} for {{Cyberinfrastructure}}},
  author = {Stewart, Craig A. and Barnett, William K. and Wernert, Eric A. and Wernert, Julie A. and Welch, Von and Knepper, Richard},
  date = {2015},
  pages = {63--72},
  publisher = {{ACM Press}},
  doi = {10.1145/2753524.2753533},
  url = {http://dl.acm.org/citation.cfm?doid=2753524.2753533},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9ET5CNDX/p63-stewart.pdf},
  isbn = {978-1-4503-3566-9},
  keywords = {nyílt forrás,tudati dimenzió},
  langid = {english}
}

@incollection{stiles_workings_2010,
  title = {Workings of Collective Intelligence within Open Source Communities},
  booktitle = {Advances in {{Social Computing}}},
  author = {Stiles, Everett and Cui, Xiaohui},
  date = {2010},
  pages = {282--289},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-12079-4_35},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6QW8AWMN/chp%3A10.1007%2F978-3-642-12079-4_35.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P9ACTD3Z/chp%3A10.1007%2F978-3-642-12079-4_35.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{stol_challenges_2010,
  title = {Challenges in Using Open Source Software in Product Development: A Review of the Literature},
  shorttitle = {Challenges in Using Open Source Software in Product Development},
  booktitle = {Proceedings of the 3rd {{International Workshop}} on {{Emerging Trends}} in {{Free}}/{{Libre}}/{{Open Source Software Research}} and {{Development}}},
  author = {Stol, Klaas-Jan and Ali Babar, Muhammad},
  date = {2010},
  pages = {17--22},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1833276},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9V6JCVGU/p17-stol.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@article{stol_comparative_2011,
  title = {A Comparative Study of Challenges in Integrating {{Open Source Software}} and {{Inner Source Software}}},
  author = {Stol, Klaas-Jan and Babar, Muhammad Ali and Avgeriou, Paris and Fitzgerald, Brian},
  date = {2011-12},
  journaltitle = {Information and Software Technology},
  volume = {53},
  pages = {1319--1336},
  issn = {09505849},
  doi = {10.1016/j.infsof.2011.06.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S095058491100142X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BTT56QS2/1-s2.0-S095058491100142X-main.pdf},
  keywords = {_SMS_untagged,case study,Forrás1,Inner Source,nyílt forrás,open source,survey},
  langid = {english},
  number = {12}
}

@incollection{stol_comparison_2010,
  title = {A Comparison Framework for Open Source Software Evaluation Methods},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Stol, Klaas-Jan and Babar, Muhammad Ali},
  date = {2010},
  pages = {389--394},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_36},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z3PMZ6UR/chp%3A10.1007%2F978-3-642-13244-5_36.pdf},
  keywords = {Analysis,evaluation,open source}
}

@incollection{stol_design_2011,
  title = {Design and Evaluation of a Process for Identifying Architecture Patterns in Open Source Software},
  booktitle = {Software {{Architecture}}},
  author = {Stol, Klaas-Jan and Avgeriou, Paris and Babar, Muhammad Ali},
  date = {2011},
  pages = {147--163},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-23798-0_15},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BT2NH49R/chp%3A10.1007%2F978-3-642-23798-0_15.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/T4MR2W44/chp%3A10.1007%2F978-3-642-23798-0_15.pdf},
  keywords = {development,nyílt forrás,source}
}

@incollection{stol_importance_2011,
  title = {The Importance of Architectural Knowledge in Integrating Open Source Software},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Stol, Klaas-Jan and Babar, Muhammad Ali and Avgeriou, Paris},
  date = {2011},
  pages = {142--158},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_10},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EPXW9SSC/chp%3A10.1007%2F978-3-642-24418-6_10.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JHI86D85/The Importance of Architectural Knowledge in Integrating Open Source Software.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{strobbe_accessibility_2011,
  title = {Accessibility Evaluation for Open Source Word Processors},
  booktitle = {Information {{Quality}} in E-{{Health}}},
  author = {Strobbe, Christophe and Frees, Bert and Engelen, Jan},
  date = {2011},
  pages = {575--583},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-25364-5_40},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BXF8VFK6/chp%3A10.1007%2F978-3-642-25364-5_40.pdf},
  keywords = {open source,User Interface}
}

@book{stump_verified_2016,
  title = {Verified {{Functional Programming}} in {{Agda}}},
  author = {Stump, Aaron},
  date = {2016},
  publisher = {{Association for Computing Machinery and Morgan \& Claypool}},
  location = {{New York, NY, USA}},
  abstract = {Agda is an advanced programming language based on Type Theory. Agda's type system is expressive enough to support full functional verification of programs, in two styles. In external verification, we write pure functional programs and then write proofs of properties about them. The proofs are separate external artifacts, typically using structural induction. In internal verification, we specify properties of programs through rich types for the programs themselves. This often necessitates including proofs inside code, to show the type checker that the specified properties hold. The power to prove properties of programs in these two styles is a profound addition to the practice of programming, giving programmers the power to guarantee the absence of bugs, and thus improve the quality of software more than previously possible. Verified Functional Programming in Agda is the first book to provide a systematic exposition of external and internal verification in Agda, suitable for undergraduate students of Computer Science. No familiarity with functional programming or computer-checked proofs is presupposed.  The book begins with an introduction to functional programming through familiar examples like booleans, natural numbers, and lists, and techniques for external verification. Internal verification is considered through the examples of vectors, binary search trees, and Braun trees. More advanced material on type-level computation, explicit reasoning about termination, and normalization by evaluation is also included. The book also includes a medium-sized case study on Huffman encoding and decoding.},
  isbn = {978-1-970001-27-3}
}

@article{subramaniam_determinants_2009,
  title = {Determinants of Open Source Software Project Success: {{A}} Longitudinal Study},
  shorttitle = {Determinants of Open Source Software Project Success},
  author = {Subramaniam, Chandrasekar and Sen, Ravi and Nelson, Matthew L.},
  date = {2009-01},
  journaltitle = {Decision Support Systems},
  volume = {46},
  pages = {576--585},
  issn = {01679236},
  doi = {10.1016/j.dss.2008.10.005},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923608001814},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AN793KFZ/1-s2.0-S0167923608001814-main.pdf},
  keywords = {development,life cycle,nyílt forrás},
  langid = {english},
  number = {2}
}

@article{subramanyam_free/libre_2008,
  title = {Free/{{Libre Open Source Software}} Development in Developing and Developed Countries: {{A}} Conceptual Framework with an Exploratory Study},
  shorttitle = {Free/{{Libre Open Source Software}} Development in Developing and Developed Countries},
  author = {Subramanyam, Ramanath and Xia, Mu},
  date = {2008-12},
  journaltitle = {Decision Support Systems},
  volume = {46},
  pages = {173--186},
  issn = {01679236},
  doi = {10.1016/j.dss.2008.06.006},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S016792360800119X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SEQG6AHA/1-s2.0-S016792360800119X-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {1}
}

@incollection{suhyun_kim_step-by-step_2012,
  title = {Step-by-{{Step Strategies}} and {{Case Studies}} for {{Embedded Software Companies}} to {{Adapt}} to the {{FOSS Ecosystem}}},
  booktitle = {{{OSS}} 2012, {{IFIP AICT}} 378},
  author = {{Suhyun Kim} and {Jaehyun Yoo} and {Myunghwa Lee}},
  date = {2012},
  pages = {48--60},
  publisher = {{Springer}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  isbn = {978-3-642-33442-9},
  keywords = {adoption,Embedded,FLOSS},
  langid = {english}
}

@inproceedings{sunindyo_improving_2012,
  title = {Improving {{Open Source Software Process Quality Based}} on {{Defect Data Mining}}},
  booktitle = {Software {{Quality}}. {{Process Automation}} in {{Software Development}}},
  author = {Sunindyo, Wikan Danar and Moser, Thomas and Winkler, Dietmar and Dhungana, Deepak},
  date = {2012},
  pages = {84--102},
  publisher = {{Springer}},
  url = {http://link.springer.com/content/pdf/10.1007/978-3-642-27213-4.pdf#page=94},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8TPHP6TH/chp%3A10.1007%2F978-3-642-27213-4_7.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UWHB6ZXE/chp%3A10.1007%2F978-3-642-27213-4_7.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{sureka_using_2011,
  title = {Using {{Social Network Analysis}} for {{Mining Collaboration Data}} in a {{Defect Tracking System}} for {{Risk}} and {{Vulnerability Analysis}}},
  booktitle = {Proceedings of the 4th {{India Software Engineering Conference}}},
  author = {Sureka, Ashish and Goyal, Atul and Rastogi, Ayushi},
  date = {2011},
  pages = {195--204},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1953355.1953381},
  url = {http://doi.acm.org/10.1145/1953355.1953381},
  urldate = {2015-11-24},
  abstract = {Open source software projects are characterized as self organizing and dynamic in which volunteers around the world primarily driven by self-motivation (and not necessarily monetary compensation) contribute and collaborate to a software product. In contrast to close source or proprietary software, the organizational structure and task allocation in an open source project setting is unstructured. Software project managers perform risk, threat and vulnerability analysis to gain insights into the organizational structure for de-risking or risk mitigation. For example, it is important for a project manager to have an understanding of critical employees, core team, subject matter experts, sub-groups, leaders and communication bridges. Software repositories such as defect tracking systems, versioning systems and mailing lists contains a wealth of valuable information that can be mined for solving practically useful software engineering tasks. In this paper, we present a systematic approach to mine defect tracking system for risk, threat and vulnerability analysis in a software project. We derive a collaboration network from a defect tracking system and apply social network analysis techniques to investigate the derived network for the purpose of risk and vulnerability analysis. We perform empirical analysis on bug report data of Mozilla Firefox project and present the results of our analysis. We demonstrate how important information pertaining to risk and vulnerability can be uncovered using network analysis techniques from static record keeping software archive such as the bug tracking system.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UBGGGE6G/Sureka és mtsai. - 2011 - Using Social Network Analysis for Mining Collabora.pdf},
  isbn = {978-1-4503-0559-4},
  keywords = {collaboration network,community,defect tracking system,development,mining software repositories,nyílt forrás,risk,social network analysis,threat and vulnerability analysis},
  series = {{{ISEC}} '11}
}

@inproceedings{suresh_software_2016,
  title = {Software Quality Assessment for Open Source Software Using Logistic {{Naive Bayes}} Classifier},
  booktitle = {2016 {{International Conference}} on {{Computation System}} and {{Information Technology}} for {{Sustainable Solutions}} ({{CSITSS}})},
  author = {Suresh, Yeresime},
  date = {2016-10},
  pages = {267--272},
  doi = {10.1109/CSITSS.2016.7779369},
  abstract = {Quality of a software product being designed, has a critical role in software process management. Detection and prediction of faults in a software with huge lines of code is a very tedious task. So it is very essential, as to reduce the maintanence cost and inturn increase the software reliability. Many object-oriented metrics have found to be suitable for software fault prediction. Using data mining techniques, design of prediction and classification models can be incorporated to give insight of the systems quality to the developing team to effectively tackle the quality problems. In this article, Chidamber and Kemerer Metric suite, along with classifiers which have immense classification capacity have been used in predicting software fault classification accuracy. From the obtained resulted it can be concluded that Logistic classifier is able to obtain better fault classification accuracy when compared to Naive Bayes approach.},
  eventtitle = {2016 {{International Conference}} on {{Computation System}} and {{Information Technology}} for {{Sustainable Solutions}} ({{CSITSS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BSEPFBBM/Suresh - 2016 - Software quality assessment for open source softwa.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/45WPV5DY/7779369.html},
  keywords = {Bayes methods,Chidamber and Kemerer Metric suite,CK metric suite,data mining,fault,logistic,logistic classifier,Logistics,maintanence cost,Measurement,naive bayes,Naive Bayes classifier,object-oriented methods,object-oriented metrics,open source software,pattern classification,public domain software,Software,software development management,software fault classification model,software fault detection,software fault prediction model,software maintenance,software metrics,software process management,software product quality assessment,software quality,software reliability,system quality}
}

@incollection{suzor_legal_2007,
  title = {Legal Issues for Free and Open Source Software in Government},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Suzor, Nic and Fitzgerald, Brian and Perry, Mark},
  editor = {Feller, Joseph and Fitzgerald, Brian and Scacchi, Walt and Sillitti, Alberto},
  date = {2007-06-11},
  pages = {353--354},
  publisher = {{Springer US}},
  doi = {10.1007/978-0-387-72486-7_41},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_41},
  urldate = {2015-11-27},
  abstract = {As more governments begin to adopt and release free and open source software, it is important to be able to readily recognise and identify the associated legal risks and potential liabilities. This panel will examine and discuss the most common of these associated risks and liabilities. These issues include, but are not limited to: indemnities against claims of intellectual property infringement from third parties requirements of consumer protection and antitrust legislation obligations to redistribute source, and when they arise enforceability of free software licences layering and combining of licences dual-licensing licence incompatibility software patent liability contemporary developments in software licensing},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SHVD6B6C/Suzor és mtsai. - 2007 - Legal issues for free and open source software in .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/95XKKFVH/978-0-387-72486-7_41.html},
  isbn = {978-0-387-72485-0 978-0-387-72486-7},
  keywords = {Software Engineering/Programming and Operating Systems},
  langid = {english},
  number = {234},
  series = {{{IFIP}} — {{The International Federation}} for {{Information Processing}}}
}

@incollection{syeed_open_2012,
  title = {Open Source Prediction Methods: A Systematic Literature Review},
  shorttitle = {Open Source Prediction Methods},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Syeed, MM Mahbubul and Kilamo, Terhi and Hammouda, Imed and Systä, Tarja},
  date = {2012},
  pages = {280--285},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_22},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2IKVUC7D/Open Source Prediction Methods_ A Systematic Literature Review.pdf}
}

@incollection{syeed_socio-technical_2013,
  title = {Socio-Technical {{Congruence}} in {{OSS Projects}}: {{Exploring Conway}}’s {{Law}} in {{FreeBSD}}},
  shorttitle = {Socio-Technical {{Congruence}} in {{OSS Projects}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Syeed, MM Mahbubul and Hammouda, Imed},
  date = {2013},
  pages = {109--126},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/K3Z2Z25J/chp%3A10.1007%2F978-3-642-38928-3_8.pdf},
  keywords = {community,development,nyílt forrás}
}

@report{symantec_internet_2013,
  title = {Internet {{Security Threat Report}} 2013},
  author = {{Symantec}},
  date = {2013},
  pages = {57},
  url = {http://www.symantec.com/security_response/publications/threatreport.jsp},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZV5SH9JQ/symantec_b-istr_main_report_v18_2012_21291018.en-us (1).pdf}
}

@misc{szalay_braun_2011,
  title = {Braun: óvatosan a "vadászgéppel"!},
  date = {2011},
  url = {http://computerworld.hu/ovatosan-a-8222vadaszgeppel8221-20110303.html},
  urldate = {2012-10-20},
  editora = {Szalay, Dániel},
  editoratype = {collaborator},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4NJF98HX/SZALAY - 2011 - Braun óvatosan a vadászgéppel!.html},
  keywords = {OSS},
  langid = {magyar}
}

@online{szalay_ki_2011,
  title = {Ki Miért Választja Az Open Source­t?},
  author = {Szalay, Dániel},
  date = {2011},
  journaltitle = {ComputerWorld},
  url = {http://computerworld.hu/ki-miert-valasztja-az-open-source-t-20110303.html},
  urldate = {2012-10-14},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HDS2ARE8/SZALAY - 2011 - Ki miért választja az open source­t.pdf}
}

@article{szekeres_szoftverbiztonsag_2008,
  title = {Szoftverbiztonság},
  author = {Szekeres, László and Tóth, Gergely},
  date = {2008},
  journaltitle = {Híradástechnika},
  volume = {LXVIII.},
  pages = {3--9},
  issn = {0018-2028},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TBR97QE3/HT0811_3.pdf},
  keywords = {fuzzing,security,static analysis,szoftverbiztonság,szoftvertesztelés},
  number = {2008/11}
}

@article{szentgali_gergely_nato_kibervedelmi_politikajanak_fejlodese.pdf_2012,
  title = {Nato\_kibervédelmi\_politikájának\_fejlődése.Pdf},
  author = {{Szentgáli Gergely}},
  date = {2012},
  journaltitle = {Bolyai Szemle},
  volume = {XXI},
  pages = {79--94},
  issn = {1416-1443},
  abstract = {A hidegháború befejezése után számos új típusú biztonsági kihívás jelent meg. Ezek közé tartozik az elmúlt évek egyik leghangsúlyosabb biztonsági kérdése, a kiberbiztonság is. A NATO viszonylag korán felismerte a kibervédelem kiépítésének szükségességét, és mint felelős katonai és politikai szervezet, elkezdte a felkészülést a probléma kezelésére. A továbbiakban a NATO kibervédelmmel kapcsolatos stratégiáját és törekvéseit fogom bemutatni. Kulcsszavak: NATO, kiberbiztonság, kibertámadás, védelempolitika.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HHSEZ74T/Nato_kibervédelmi_politikájának_fejlődése.pdf},
  keywords = {NATO},
  number = {2}
}

@misc{szilveszter_plc_2014,
  title = {PLC és SCADA rendszerek},
  author = {Szilveszter, Pletl and Zoltán, Kincses},
  date = {2014},
  publisher = {{Pannon Egyetem, Szegedi Tudományegyetem}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JHSGI7Q8/Szilveszter és Zoltán - PLC és SCADA rendszerek.pdf},
  langid = {magyar}
}

@book{szun-ce_hadviseles_1998,
  title = {A Hadviselés Törvényei},
  author = {Szun-ce},
  date = {1998},
  edition = {2},
  publisher = {{Balassi kiadó}},
  isbn = {963 506 194 3}
}

@incollection{taibi_openbqr_2007,
  title = {{{OpenBQR}}: A Framework for the Assessment of {{OSS}}},
  shorttitle = {{{OpenBQR}}},
  booktitle = {Open {{Source Development}}, {{Adoption}} and {{Innovation}}},
  author = {Taibi, Davide and Lavazza, Luigi and Morasca, Sandro},
  date = {2007},
  pages = {173--186},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-72486-7_14},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7B4F36SX/chp%3A10.1007%2F978-0-387-72486-7_14.pdf},
  keywords = {Forrás1,nyílt forrás,Open source software,quality}
}

@article{taibi_reusability_2013,
  title = {Reusability of Open-Source Program Code: A Conceptual Model and Empirical Investigation},
  shorttitle = {Reusability of Open-Source Program Code},
  author = {Taibi, Fathi},
  date = {2013-07-12},
  journaltitle = {ACM SIGSOFT Software Engineering Notes},
  volume = {38},
  pages = {1},
  issn = {01635948},
  doi = {10.1145/2492248.2492276},
  url = {http://dl.acm.org/citation.cfm?doid=2492248.2492276},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H8RITFBA/p016-taibi.pdf},
  langid = {english},
  number = {4}
}

@incollection{taibi_towards_2008,
  title = {Towards {{The Evaluation}} of {{OSS Trustworthiness}}: {{Lessons Learned From The Observation}} of {{Relevant OSS Projects}}},
  shorttitle = {Towards {{The Evaluation}} of {{OSS Trustworthiness}}},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {Taibi, Davide and Del Bianco, Vieri and Dalle Carbonare, Davide and Lavazza, Luigi and Morasca, Sandro},
  date = {2008},
  pages = {389--395},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_37},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BZ6IMMFH/chp%3A10.1007%2F978-0-387-09684-1_37.pdf},
  keywords = {nyílt forrás,quality}
}

@incollection{takasawa_open_2014,
  title = {Do Open Source Software Projects Conduct Tests Enough?},
  booktitle = {Product-{{Focused Software Process Improvement}}},
  author = {Takasawa, Ryohei and Sakamoto, Kazunori and Ihara, Akinori and Washizaki, Hironori and Fukazawa, Yoshiaki},
  date = {2014},
  pages = {322--325},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-13835-0_32},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9RJ885UX/chp%3A10.1007%2F978-3-319-13835-0_32.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{talwana_smart_2016,
  title = {Smart {{World}} of {{Internet}} of {{Things}} ({{IoT}}) and {{Its Security Concerns}}},
  booktitle = {2016 {{IEEE International Conference}} on {{Internet}} of {{Things}} ({{iThings}}) and {{IEEE Green Computing}} and {{Communications}} ({{GreenCom}}) and {{IEEE Cyber}}, {{Physical}} and {{Social Computing}} ({{CPSCom}}) and {{IEEE Smart Data}} ({{SmartData}})},
  author = {Talwana, J. C. and Hua, H. J.},
  date = {2016-12},
  pages = {240--245},
  doi = {10.1109/iThings-GreenCom-CPSCom-SmartData.2016.64},
  abstract = {Due to increasing number of internet users, popularity of Broadband Internet also increasing. Hence the connection cost should be decrease due to Wi Fi connectivity and built-in sensors in devices as well the maximum number of devices should be connected through a common medium. To meet all these requirements, the technology so called Internet of Things is evolved. Internet of Things (IoT) can be considered as a connection of computing devices like smart phones, coffee maker, washing machines, wearable device with an internet. IoT create network and connect "things" and people together by creating relationship between either people-people, people-things or things-things. As the number of device connection is increased, it increases the Security risk. Security is the biggest issue for IoT at any companies across the globe. Furthermore, privacy and data sharing can again be considered as a security concern for IoT. Companies, those who use IoT technique, need to find a way to store, track, analyze and make sense of the large amounts of data that will be generated. Few security techniques of IoT are necessary to implement to protect your confidential and important data as well for device protection through some internet security threats.},
  eventtitle = {2016 {{IEEE International Conference}} on {{Internet}} of {{Things}} ({{iThings}}) and {{IEEE Green Computing}} and {{Communications}} ({{GreenCom}}) and {{IEEE Cyber}}, {{Physical}} and {{Social Computing}} ({{CPSCom}}) and {{IEEE Smart Data}} ({{SmartData}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FN32XZPD/Talwana és Hua - 2016 - Smart World of Internet of Things (IoT) and Its Se.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VP53DWUK/7917092.html},
  keywords = {broadband Internet,built-in sensors,coffee maker,computer network security,computing devices,connection cost,data sharing,Intelligent sensors,Internet,Internet of Things,Internet of Things (IoT),Internet security threats,Internet users,IoT Security Concerns,IoT technique,people-people relationship,people-thing relationship,Real-time systems,security,security risk,Smart computing devices,smart phones,Smart world,thing-thing relationship,washing machines,wearable device,Wi-Fi connectivity,Wireless communication,wireless LAN}
}

@online{tamas_megmutatjuk_2019,
  title = {Megmutatjuk, hogy áll a harmadik világháború},
  author = {Tamás, Szémann, Bolcsó Dániel},
  date = {2019-06-06T08:25:00+02:00},
  url = {https://index.hu/techtud/2019/06/06/kiberhaboru_kiberbiztonsag_kibertamadas_vilaghaboru_hekkerek_kemkedes_szabotazs/},
  urldate = {2019-06-06},
  abstract = {A színfalak mögött egymásnak feszülő nagyhatalmak, titokzatos elit hekkercsoportok, pusztító kiberfegyverek és egyre több támadás. Így néz ki a kiberháború 2019-ben.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z5X92FEV/kiberhaboru_kiberbiztonsag_kibertamadas_vilaghaboru_hekkerek_kemkedes_szabotazs.html},
  langid = {magyar}
}

@article{tamburri_discovering_2019,
  title = {Discovering Community Patterns in Open-Source: A Systematic Approach and Its Evaluation},
  shorttitle = {Discovering Community Patterns in Open-Source},
  author = {Tamburri, Damian A. and Palomba, Fabio and Serebrenik, Alexander and Zaidman, Andy},
  date = {2019-06-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {24},
  pages = {1369--1417},
  issn = {1573-7616},
  doi = {10.1007/s10664-018-9659-9},
  url = {https://doi.org/10.1007/s10664-018-9659-9},
  urldate = {2020-04-21},
  abstract = {“There can be no vulnerability without risk; there can be no community without vulnerability; there can be no peace, and ultimately no life, without community.” - [M. Scott Peck]},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LALDA2NM/Tamburri et al. - 2019 - Discovering community patterns in open-source a s.pdf},
  langid = {english},
  number = {3}
}

@article{tamura_performance_2010,
  title = {Performance Evaluation of Reliability Assessment Method Based on Stochastic Differential Equation Model for a Large-Scale Open Source Solution},
  author = {Tamura, Yoshinobu and Yamada, Shigeru},
  date = {2010-12},
  journaltitle = {International Journal of System Assurance Engineering and Management},
  volume = {1},
  pages = {324--329},
  issn = {0975-6809, 0976-4348},
  doi = {10.1007/s13198-011-0035-z},
  url = {http://link.springer.com/10.1007/s13198-011-0035-z},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PT47M5EJ/art%3A10.1007%2Fs13198-011-0035-z.pdf},
  langid = {english},
  number = {4}
}

@article{tan_bug_2014,
  title = {Bug Characteristics in Open Source Software},
  author = {Tan, Lin and Liu, Chen and Li, Zhenmin and Wang, Xuanhui and Zhou, Yuanyuan and Zhai, Chengxiang},
  date = {2014-12},
  journaltitle = {Empirical Software Engineering},
  volume = {19},
  pages = {1665--1705},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-013-9258-8},
  url = {http://link.springer.com/10.1007/s10664-013-9258-8},
  urldate = {2015-11-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4ANNEZKD/art%3A10.1007%2Fs10664-013-9258-8.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FX8UHNED/art%3A10.1007%2Fs10664-013-9258-8.pdf},
  keywords = {computer security,maturity,nyílt forrás,open source,security testing,software development},
  langid = {english},
  number = {6}
}

@misc{tan_how_2019,
  title = {How to {{Communicate}} When {{Submitting Patches}}: {{An Empirical Study}} of the {{Linux Kernel}}},
  shorttitle = {How to {{Communicate}} When {{Submitting Patches}}},
  author = {Tan, Xin and Zhou, Minghui},
  date = {2019-11-07},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3359210},
  urldate = {2020-04-22},
  abstract = {Communication when submitting patches (CSP) is critical in software development, because ineffective communication wastes the time of developers and reviewers, and is even harmful to future product release and maintenance. In distributed software development, CSP is usually in the form of computer-mediated communication (CMC), which is a crucial topic concerned by the CSCW community. However, what to say and how to say in communication including CSP has been rarely studied. To bridge this knowledge gap and provide relevant guidance for developers to conduct CSP, in this study, we conducted an empirical study on the Linux kernel. We found four themes involving 17 expression elements that characterize what to express when submitting patches and three themes of contextual factors that determine how these elements are applied. Considering both expression elements and context, combined with an online survey, we obtained 17 practices for communication. Among them, four practices, such as "provide sufficient reasons" and "provide a trade-off" are the most important but difficult practices, for which we provide specific instructions. We also found that the "individual factors" plays a special role in communication, which may lead to potential problems even in accepted patches. Based on these findings, we discuss the recommendations for different practitioners, including patch submitters, reviewers, and tool designers, and the implications for open source software (OSS) communities and the CSCW researchers.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X28WELN5/Tan and Zhou - 2019 - How to Communicate when Submitting Patches An Emp.pdf},
  keywords = {cmc,communication content,linux kernel,patch submission}
}

@article{tang_holistic_2014,
  title = {A Holistic Framework for Engineering Simulation Platform Development Gluing Open-Source and Home-Made Software Resources},
  author = {Tang, Zhao and Zhang, Weihua and Wu, Pingbo},
  date = {2014-10},
  journaltitle = {Advances in Engineering Software},
  volume = {76},
  pages = {99--109},
  issn = {09659978},
  doi = {10.1016/j.advengsoft.2014.06.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0965997814001008},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ED3XU2TJ/1-s2.0-S0965997814001008-main.pdf},
  langid = {english}
}

@inproceedings{tang_language_2019,
  title = {Language to {{Code}} with {{Open Source Software}}},
  booktitle = {2019 {{IEEE}} 10th {{International Conference}} on {{Software Engineering}} and {{Service Science}} ({{ICSESS}})},
  author = {Tang, Lei and Mao, Xiaoguang and Zhang, Zhuo},
  date = {2019-10},
  pages = {561--564},
  issn = {2327-0594},
  doi = {10.1109/ICSESS47205.2019.9040748},
  abstract = {With the development of deep learning, it has been applied in various field of computer science. Generating computer executable code from natural language descriptions is an urgent problem in the artificial intelligence. This paper proposed a solution based on deep learning for code generation. Encoder-Decoder model is used in our method to convert natural language description into target code. Because of the rapid development of information technology, all aspects of software resources have been greatly enriched. The deep learning model we designed takes the natural language description as input and generates the corresponding object code by extracting the code from the open source software library. We collected natural language descriptions of 20 problems that undergraduate students often encounter in their daily programming. Experimental results show that our method is practicable. Our approach also provides a good idea to extract useful code from open resource for code generation.},
  eventtitle = {2019 {{IEEE}} 10th {{International Conference}} on {{Software Engineering}} and {{Service Science}} ({{ICSESS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I4ZA5TS9/Tang et al. - 2019 - Language to Code with Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8CQEEVTN/9040748.html},
  keywords = {code generation,Encoder-Decoder,LSTM,open resource software}
}

@incollection{tanihana_empirical_2013,
  title = {Empirical {{Study}} of the {{Relation}} between {{Open Source Software Use}} and {{Productivity}} of {{Japan}}’s {{Information Service Industries}}},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Tanihana, Keisuke and Noda, Tetsuo},
  date = {2013},
  pages = {18--29},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_2},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DI77H38S/chp%3A10.1007%2F978-3-642-38928-3_2.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XQ2ASJ4J/chp%3A10.1007%2F978-3-642-38928-3_2.pdf},
  keywords = {Empirikus,gazdasági hatás,nyílt forrás,open source}
}

@online{tarver_problems_nodate,
  title = {The {{Problems}} of {{Open Source}}},
  author = {Tarver, Mark},
  url = {http://www.lambdassociates.org/blog/the_problems_of_open_source.htm},
  urldate = {2013-05-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WTRNV5PV/the_problems_of_open_source.html}
}

@inproceedings{tassone_quality_2018,
  title = {Quality {{Assessment}} of {{Open Source Software}}: {{A Review}}},
  shorttitle = {Quality {{Assessment}} of {{Open Source Software}}},
  booktitle = {2018 {{IEEE}}/{{ACIS}} 17th {{International Conference}} on {{Computer}} and {{Information Science}} ({{ICIS}})},
  author = {Tassone, Joseph and Xu, Shaochun and Wang, Chunning and Chen, Jiao and Du, Wencai},
  date = {2018-06},
  pages = {411--416},
  doi = {10.1109/ICIS.2018.8466436},
  abstract = {Open Source Software (OOS) has become more and more popular during last a few years. Quality evaluation of OOS is still an issue and worth to investigate. In this work, we discussed the issues associated with open source software quality, and then conducted a review on the research work of quality evaluation approaches such as metrics and models. The impact of community involvement and quality assessment tools on the OSS quality assessment were also discussed.},
  eventtitle = {2018 {{IEEE}}/{{ACIS}} 17th {{International Conference}} on {{Computer}} and {{Information Science}} ({{ICIS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/LBS7B3LT/Tassone et al. - 2018 - Quality Assessment of Open Source Software A Revi.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UYZUEBAY/8466436.html},
  keywords = {Analytical models,Community Involvment,Metrics,Models,Open source software,Open Source Software,open source software quality,OSS quality assessment,public domain software,Quality assessment,Quality Assessment,quality assessment tools,quality evaluation approaches,Software measurement,software metrics,software quality,Software quality,Tools}
}

@inproceedings{tawileh_free_2006,
  title = {Free and {{Open Source Software Quality Assurance}}},
  booktitle = {Information and {{Communication Technologies}}, 2006. {{ICTTA}}'06. 2nd},
  author = {Tawileh, Anas and Rana, Omer},
  date = {2006},
  volume = {2},
  pages = {2866--2871},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1684867},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9245ZAQ8/01684867.pdf},
  keywords = {nyílt forrás,quality}
}

@incollection{tawileh_modelling_2006,
  title = {Modelling the {{Economics}} of {{Free}} and {{Open Source Software Security}}},
  booktitle = {{{ISSE}} 2006—{{Securing Electronic Busines Processes}}},
  author = {Tawileh, Anas and Hilton, Jeremy and Mcintosh, Steve},
  date = {2006},
  pages = {326--335},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-8348-9195-2_35},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FWU75RIT/chp%3A10.1007%2F978-3-8348-9195-2_35.pdf},
  keywords = {nyílt forrás,quality}
}

@incollection{taylor_analysis_2011,
  title = {An Analysis of Author Contribution Patterns in Eclipse Foundation Project Source Code},
  booktitle = {Open {{Source Systems}}: {{Grounding Research}}},
  author = {Taylor, Quinn C. and Krein, Jonathan L. and MacLean, Alexander C. and Knutson, Charles D.},
  date = {2011},
  pages = {269--281},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-24418-6_19},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QIZ76Z7R/chp%3A10.1007%2F978-3-642-24418-6_19.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{teixeira_managing_2019,
  title = {Managing to Release Early, Often and on Time in the {{OpenStack}} Software Ecosystem},
  author = {Teixeira, José Apolinário and Karsten, Helena},
  date = {2019-04-01},
  journaltitle = {Journal of Internet Services and Applications},
  shortjournal = {J Internet Serv Appl},
  volume = {10},
  pages = {7},
  issn = {1869-0238},
  doi = {10.1186/s13174-019-0105-z},
  url = {https://doi.org/10.1186/s13174-019-0105-z},
  urldate = {2020-04-21},
  abstract = {The dictum of “Release early, release often.” by Eric Raymond as the Linux modus operandi highlights the importance of release management in open source software development. However, there are very few empirical studies addressing release management in this context. It is already known that most open source software communities adopt either a feature-based or time-based release strategy. Both have their own advantages and disadvantages that are also context-specific. Recent research reports that many prominent open source software projects have overcome a number of recurrent problems by moving from feature-based to time-based release strategies. In this longitudinal case study, we address the release management practices of OpenStack, a large scale open source project developing cloud computing technologies. We discuss how the release management practices of OpenStack have evolved in terms of chosen strategy and timeframes with close attention to processes and tools. We discuss the number of practical and managerial issues related to release management within the context of large and complex software ecosystems. Our findings also reveal that multiple release management cycles can co-exist in large and complex software ecosystems such as OpenStack.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2CWSEY7E/Teixeira and Karsten - 2019 - Managing to release early, often and on time in th.pdf},
  langid = {english},
  number = {1}
}

@inproceedings{teixeira_release_2017,
  title = {Release {{Early}}, {{Release Often}} and {{Release}} on {{Time}}. {{An Empirical Case Study}} of {{Release Management}}},
  booktitle = {Open {{Source Systems}}: {{Towards Robust Practices}}},
  author = {Teixeira, Jose},
  date = {2017-05-22},
  pages = {167--181},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-57735-7_16},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-57735-7_16},
  urldate = {2018-08-15},
  abstract = {The dictum of “Release early, release often.” by Eric Raymond as the Linux modus operandi highlights the importance of release management in open source software development. Nevertheless, there are very few empirical studies addressing release management in open source software development. It is already known that most open source software communities adopt either feature-based or time-based release strategies. Each of these has its advantages and disadvantages that are context-specific. Recent research reported that many prominent open source software projects have moved from feature-based to time-based releases. In this longitudinal case study, we narrate how OpenStack shifted towards a liberal six-month release cycle. If prior research discussed why projects should adopt time-based releases and how they can adopt such a strategy, we discuss how OpenStack adapted its software development processes, its organizational design and its tools toward a hybrid release management strategy — a strive for balancing the benefits and drawbacks of feature-based and time-based release strategies.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZA4T938N/Teixeira - 2017 - Release Early, Release Often and Release on Time. .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4I8URXT2/978-3-319-57735-7_16.html},
  isbn = {978-3-319-57734-0 978-3-319-57735-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{teixeira_understanding_2014,
  title = {Understanding {{Coopetition}} in the {{Open}}-{{Source Arena}}: {{The Cases}} of {{WebKit}} and {{OpenStack}}},
  shorttitle = {Understanding {{Coopetition}} in the {{Open}}-{{Source Arena}}},
  author = {Teixeira, Jose},
  date = {2014},
  pages = {1--5},
  publisher = {{ACM Press}},
  doi = {10.1145/2641580.2641627},
  url = {http://dl.acm.org/citation.cfm?doid=2641580.2641627},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RMEBK7P3/p39.pdf},
  isbn = {978-1-4503-3016-9},
  keywords = {Commercial relations,development,nyílt forrás},
  langid = {english}
}

@inproceedings{teixeira_understanding_2014-1,
  title = {Understanding Collaboration in the Open-Source Arena: The Cases of {{WebKit}} and {{OpenStack}}},
  shorttitle = {Understanding Collaboration in the Open-Source Arena},
  author = {Teixeira, Jose},
  date = {2014},
  pages = {1--5},
  publisher = {{ACM Press}},
  doi = {10.1145/2601248.2613086},
  url = {http://dl.acm.org/citation.cfm?doid=2601248.2613086},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J4EQ2THM/a52-teixeira.pdf},
  isbn = {978-1-4503-2476-2},
  keywords = {Commercial relations,development,nyílt forrás},
  langid = {english}
}

@inproceedings{terei_safe_2012,
  title = {Safe Haskell},
  booktitle = {Proceedings of the 2012 Symposium on {{Haskell}} Symposium},
  author = {Terei, David and Marlow, Simon and Peyton Jones, Simon and Mazières, David},
  date = {2012},
  pages = {137--148},
  url = {http://dl.acm.org/citation.cfm?id=2364524},
  urldate = {2014-01-12},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WAAAWUHH/safe-haskell.pdf}
}

@article{tesoriere_dynamic_2017,
  title = {A Dynamic Model of Open Source vs Proprietary {{R}}\&{{D}}},
  author = {Tesoriere, Antonio and Balletta, Luigi},
  date = {2017-05-01},
  journaltitle = {European Economic Review},
  shortjournal = {European Economic Review},
  volume = {94},
  pages = {221--239},
  issn = {0014-2921},
  doi = {10.1016/j.euroecorev.2017.02.009},
  url = {http://www.sciencedirect.com/science/article/pii/S0014292117300351},
  urldate = {2018-08-16},
  abstract = {We propose a dynamic model in which firms compete to produce sequential and cumulative innovations, and in which the more firms do research in one sector the more likely it is that one of them innovates. Firms choose research effort and whether to patent innovations or to use an Open Source license like the General Public License. We show that (i) patents generate a larger stationary reward but foreclose research within a sector, and that (ii) Open Source generates a smaller stationary reward but allows everyone to use the technology, and therefore, by attracting firms to the sector, it induces a faster pace of innovation. We characterize all the equilibria of the model and show that in equilibrium an Open Source sector appears only after a proprietary sector. We also find conditions under which the model has a unique equilibrium, in which a proprietary and an Open Source sector coexist and compete in the short run, but the Open Source sector dominates the industry in the long run. We use our model to study whether patents are inefficient, and to explain firms’ behavior in the software and the biomedical industry.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CVCEUHX2/Tesoriere and Balletta - 2017 - A dynamic model of open source vs proprietary R&D.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UAXW58HM/S0014292117300351.html},
  keywords = {Innovation,Open source,Patents}
}

@inproceedings{thangavelu_determinants_2018,
  title = {Determinants of {{Open Source Software Project Performance}}: {{A Stage}}-Wise {{Analysis}} of {{GitHub Projects}}},
  shorttitle = {Determinants of {{Open Source Software Project Performance}}},
  booktitle = {Proceedings of the 2018 {{ACM SIGMIS Conference}} on {{Computers}} and {{People Research}}},
  author = {Thangavelu, Senthilkumar and Jyotishi, Amalendu},
  date = {2018-06-18},
  pages = {41--42},
  publisher = {{Association for Computing Machinery}},
  location = {{Buffalo-Niagara Falls, NY, USA}},
  doi = {10.1145/3209626.3209723},
  url = {https://doi.org/10.1145/3209626.3209723},
  urldate = {2020-04-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ELR39YDG/Thangavelu and Jyotishi - 2018 - Determinants of Open Source Software Project Perfo.pdf},
  isbn = {978-1-4503-5768-5},
  series = {{{SIGMIS}}-{{CPR}}'18}
}

@misc{the_european_community_european_2007,
  title = {European {{Union Public Licence}} v. 1.1},
  author = {the European Community},
  date = {2007},
  url = {http://joinup.ec.europa.eu/software/page/eupl/licence-eupl},
  urldate = {2013-05-03},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3MTQJNXJ/EUPL v.1.1 - Licence.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VJ3RK9BA/EUPL v.1.1 - Licenc.pdf},
  options = {useprefix=true}
}

@online{the_mitre_corporation_open_2013,
  title = {Open {{Source Software}}},
  author = {{The MITRE Corporation}},
  date = {2013},
  journaltitle = {mitre.org},
  url = {http://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/engineering-informationintensive-enterprises/open-source-software},
  urldate = {2015-06-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/82HEH4GG/open-source-software.html},
  keywords = {best practices,FLOSS}
}

@report{the_mitre_corporation_use_2003,
  title = {Use of {{Free}} and {{Open}}-{{Source Software}} ({{FOSS}}) in the {{U}}.{{S}}. {{Department}} of {{Defense}}},
  author = {The MITRE Corporation},
  date = {2003-01-02},
  url = {http://dodcio.defense.gov/Portals/0/Documents/FOSS/dodfoss_pdf.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TEA4K7R3/dodfoss_pdf.pdf},
  keywords = {DoD,government,open source,report},
  langid = {english},
  number = {MP 02 W0000101}
}

@book{the_open_group_technical_2009,
  title = {Technical {{Standard}}: {{Risk Taxonomy}}},
  author = {{The Open Group}},
  date = {2009},
  publisher = {{The Open Group}},
  url = {www.opengroup.org/onlinepubs/9699919899/toc.pdf},
  urldate = {2014-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AQDQW59B/toc.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZWPGQAF6/toc.pdf},
  isbn = {1-931624-77-1},
  keywords = {ajánlás,Definitions,Risk management,Standard}
}

@misc{the_owasp_foundation_guide_nodate,
  title = {A {{Guide}} to {{Building}}  {{Secure Web Applications}} and {{Web}}  {{Services}}},
  author = {{The OWASP Foundation}},
  url = {https://www.owasp.org/index.php/Projects/OWASP_Development_Guide},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IRF4AB5G/OWASPGuide2.0.1.pdf},
  keywords = {Forrás2,security,Security framework,web applications}
}

@report{the_owasp_foundation_owasp_nodate,
  title = {{{OWASP}} Top 10},
  author = {{The OWASP Foundation}},
  url = {https://www.owasp.org},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H9H6UBI3/OWASP Top 10 - 2013.pdf}
}

@misc{the_somap.org_open_2006,
  title = {Open {{Information Security Risk Management Handbook}}},
  author = {{The SOMAP.org}},
  date = {2006},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GEZTJ3IZ/somap_handbook_v1.0.0.pdf},
  keywords = {security,security testing,somap}
}

@misc{the_somap.org_open_2007,
  title = {Open {{Information Security Risk Assessment Guide}}},
  author = {{The SOMAP.org}},
  date = {2007},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8TB34AD4/somap_guide_v1.0.0.pdf}
}

@incollection{theunissen_corporate-_2008,
  title = {Corporate-, {{Agile}}-and {{Open Source Software Development}}: {{A Witch}}’s {{Brew}} or {{An Elixir}} of {{Life}}?},
  shorttitle = {Corporate-, {{Agile}}-and {{Open Source Software Development}}},
  booktitle = {Balancing {{Agility}} and {{Formalism}} in {{Software Engineering}}},
  author = {Theunissen, Morkel and Kourie, Derrick and Boake, Andrew},
  date = {2008},
  pages = {84--95},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-85279-7_7},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J6EHQW9J/chp%3A10.1007%2F978-3-540-85279-7_7.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{theunissen_search_2005,
  title = {In {{Search}} of the {{Sweet Spot}}: {{Agile Open Collaborative Corporate Software Development}}},
  shorttitle = {In {{Search}} of the {{Sweet Spot}}},
  booktitle = {Proceedings of the 2005 {{Annual Research Conference}} of the {{South African Institute}} of {{Computer Scientists}} and {{Information Technologists}} on {{IT Research}} in {{Developing Countries}}},
  author = {Theunissen, W. H. Morkel and Boake, Andrew and Kourie, Derrick G.},
  date = {2005},
  pages = {268--277},
  publisher = {{South African Institute for Computer Scientists and Information Technologists}},
  location = {{Republic of South Africa}},
  url = {http://dl.acm.org/citation.cfm?id=1145675.1145705},
  urldate = {2015-11-24},
  abstract = {Corporate software developers are faced with many difficulties. Development windows are decreasing; scale and complexity are increasing; business requirements are vague and changing; and the underlying technology moves ever on. Agile methods have emerged as leading contenders to tame these challenges. Small teams, face-to-face communication, an emphasis on simplicity and a selection of development best practices contribute to software development which is relevant, yet fast and flexible. At the same time, Open Source Software is increasingly providing infrastructure, tools and components to companies. Progressive development teams are beginning to work in more open, collaborative, and distributed ways. In some respects these practices are similar to agile practices, but in important ways, very different. Yet, both are important and offer unique benefits. This paper discusses the prospects of combining the two in the context of corporate software development, and the approach we suggest to do this.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B8BH4EW5/Theunissen és mtsai. - 2005 - In Search of the Sweet Spot Agile Open Collaborat.pdf},
  isbn = {978-1-59593-258-7},
  keywords = {agile software development,Commercial relations,corporate,development,hybrid,nyílt forrás,open source software development,progressive open source,software process engineering metamodel},
  series = {{{SAICSIT}} '05}
}

@online{thomas_why_nodate,
  title = {Why Free Software Has Poor Usability, and How to Improve It | {{My Personal Thoughts}}},
  author = {Thomas, Matthew},
  url = {http://www.mpt.net.nz/2012/06/why-free-software-has-poor-usability/},
  urldate = {2013-05-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CH4E6IWH/why-free-software-has-poor-usability.html}
}

@misc{thomas_zimmermann_mining_2004,
  title = {Mining {{Version Histories}} to {{Guide Software Changes}}},
  author = {{Thomas Zimmermann} and {Peter Weißgerber} and {Stephan Diehl} and {Andreas Zeller}},
  date = {2004},
  publisher = {{Saarland University}},
  url = {http://dl.acm.org/citation.cfm?id=999460},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DWPK2TIS/_icse.pdf}
}

@inproceedings{thompson_large-scale_2017,
  title = {A {{Large}}-{{Scale Study}} of {{Modern Code Review}} and {{Security}} in {{Open Source Projects}}},
  booktitle = {Proceedings of the 13th {{International Conference}} on {{Predictive Models}} and {{Data Analytics}} in {{Software Engineering}}},
  author = {Thompson, Christopher and Wagner, David},
  date = {2017-11-08},
  pages = {83--92},
  publisher = {{Association for Computing Machinery}},
  location = {{Toronto, Canada}},
  doi = {10.1145/3127005.3127014},
  url = {https://doi.org/10.1145/3127005.3127014},
  urldate = {2020-04-22},
  abstract = {Background: Evidence for the relationship between code review process and software security (and software quality) has the potential to help improve code review automation and tools, as well as provide a better understanding of the economics for improving software security and quality. Prior work in this area has primarily been limited to case studies of a small handful of software projects. Aims: We investigate the effect of modern code review on software security. We extend and generalize prior work that has looked at code review and software quality. Method: We gather a very large dataset from GitHub (3,126 projects in 143 languages, with 489,038 issues and 382,771 pull requests), and use a combination of quantification techniques and multiple regression modeling to study the relationship between code review coverage and participation and software quality and security. Results: We find that code review coverage has a significant effect on software security. We confirm prior results that found a relationship between code review coverage and software defects. Most notably, we find evidence of a negative relationship between code review of pull requests and the number of security bugs reported in a project. Conclusions: Our results suggest that implementing code review policies within the pull request model of development may have a positive effect on the quality and security of software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7QFJ2JTS/Thompson and Wagner - 2017 - A Large-Scale Study of Modern Code Review and Secu.pdf},
  isbn = {978-1-4503-5305-2},
  keywords = {code review,mining software repositories,multiple regression models,quantification models,software quality,software security},
  series = {{{PROMISE}}}
}

@article{thompson_reflections_1984,
  title = {Reflections on {{Trusting Trust}}},
  author = {Thompson, Ken},
  date = {1984},
  journaltitle = {Communications of the ACM 27},
  volume = {27},
  pages = {761--763},
  issn = {0001-0782},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/73BT5C2S/Thompson - 1984 - Reflections on Trusting Trust.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/W9BJ3RSB/Thompson - 1984 - Reflections on Trusting Trust.html},
  keywords = {backdoor,security,source},
  number = {8}
}

@inproceedings{thongtanunam_who_2015,
  title = {Who Should Review My Code? {{A}} File Location-Based Code-Reviewer Recommendation Approach for {{Modern Code Review}}},
  shorttitle = {Who Should Review My Code?},
  booktitle = {Software {{Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}}), 2015 {{IEEE}} 22nd {{International Conference}} On},
  author = {Thongtanunam, Patanamon and Tantithamthavorn, Chakkrit and Kula, Raula Gaikovina and Yoshida, Norihiro and Iida, Hajimu and Matsumoto, Ken-ichi},
  date = {2015},
  pages = {141--150},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=7081824},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NBCZ2VJJ/07081824.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@inproceedings{thorbergsson_economic_2007,
  title = {Economic {{Benefits}} of {{Free}} and {{Open Source Software}} in {{Electronic Governance}}},
  booktitle = {Proceedings of the 1st {{International Conference}} on {{Theory}} and {{Practice}} of {{Electronic Governance}}},
  author = {Thorbergsson, Helgi and Björgvinsson, Tryggvi and Valfells, Ársæell},
  date = {2007},
  pages = {183--186},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1328057.1328095},
  url = {http://doi.acm.org/10.1145/1328057.1328095},
  urldate = {2015-11-24},
  abstract = {This paper examines differences of using proprietary software and free software in electronic governance from an economic point of view. The paper identifies and highlights key areas in network economy, where free and open source software can drastically cut costs both short-term and long-term, if used instead of proprietary software. The research examines both governmental use and development of software and proposes a way for governments to manage free and open source software projects in order to lower costs for all agencies. The aforementioned policy is used as a basis for the research and its proposals.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9SCVRIRA/Thorbergsson és mtsai. - 2007 - Economic Benefits of Free and Open Source Software.pdf},
  isbn = {978-1-59593-822-0},
  keywords = {free and open source software,gazdasági hatás,network economy,nyílt forrás,open standards},
  series = {{{ICEGOV}} '07}
}

@report{thorsten_wichmann_floss_2002,
  title = {{{FLOSS Final Report}} - {{Part}} 1, {{Free}}/{{Libre Open Source Software}}: {{Survey}} and {{Study}}},
  shorttitle = {{{FLOSS Final Report}} - {{Part}} 1},
  author = {{Thorsten Wichmann}},
  date = {2002},
  location = {{Berlin}},
  url = {http://www.berlecon.de/studien/downloads/200207FLOSS_Use.pdf},
  urldate = {2013-05-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2N37XZN9/200207FLOSS_Use.pdf}
}

@article{tian_automated_2015,
  title = {Automated Prediction of Bug Report Priority Using Multi-Factor Analysis},
  author = {Tian, Yuan and Lo, David and Xia, Xin and Sun, Chengnian},
  date = {2015-10},
  journaltitle = {Empirical Software Engineering},
  volume = {20},
  pages = {1354--1383},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-014-9331-y},
  url = {http://link.springer.com/10.1007/s10664-014-9331-y},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q846TMJ8/art%3A10.1007%2Fs10664-014-9331-y.pdf},
  langid = {english},
  number = {5}
}

@article{tiemann_objective_2006,
  title = {An Objective Definition of Open Standards},
  author = {Tiemann, Michael},
  date = {2006-06},
  journaltitle = {Computer Standards \& Interfaces},
  volume = {28},
  pages = {495--507},
  issn = {09205489},
  doi = {10.1016/j.csi.2004.12.003},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0920548904001515},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B29KV6XX/1-s2.0-S0920548904001515-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {5}
}

@incollection{tlili_verification_2009,
  title = {Verification of {{CERT}} Secure Coding Rules: {{Case}} Studies},
  shorttitle = {Verification of {{CERT}} Secure Coding Rules},
  booktitle = {On the {{Move}} to {{Meaningful Internet Systems}}: {{OTM}} 2009},
  author = {Tlili, Syrine and Yang, XiaoChun and Hadjidj, Rachid and Debbabi, Mourad},
  date = {2009},
  pages = {913--930},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-05151-7_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZQ8R37GN/chp%3A10.1007%2F978-3-642-05151-7_12.pdf},
  keywords = {computer security,nyílt forrás}
}

@online{tom_leek_trust_nodate,
  title = {Trust Issues Relative to Open Source},
  author = {{Tom Leek}},
  url = {http://security.stackexchange.com/questions/41734/trust-issues-relative-to-open-source},
  abstract = {This [full factroy chain from sand to computer] is, of course,  quite impractical. Therefore, we need the second best thing, and that second best is a paradigm shift: replace trust with violence. What we do is that binary packages are signed. The package installer verifies the signature before installing it, and rejects packages which do not come from "trusted sources". The same concept applies to Java applets, which can be granted extra permissions (and, indeed, permission to do whatever they want with your computer) provided that they are signed. Note that this is indeed a signature, not just an authentication; it is not sufficient (nor indeed necessary) that the package was downloaded from a "trusted repository" through HTTPS. Such a download would give you quite some guarantee that the package comes from whom you believe, and has not been modified in transit. But you want more: you want a proof. You want a signature because IF the package turns out to be clock-full of malware, THEN you can use the signature to demonstrate that the package provider was an accomplice, at least "by negligence". From signatures comes responsibility, and responsibility works on fear. Fear of litigation from abused customers. Fear of retaliation from law enforcement agencies. Ultimately, fear of violence.}
}

@misc{tom_palmaers_sans-vulnerability-management.pdf_nodate,
  title = {Sans-Vulnerability-Management.Pdf},
  author = {{Tom Palmaers}},
  publisher = {{SANS Institute}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UHPRF6CQ/sans-vulnerability-management.pdf}
}

@article{toral_analysis_2010,
  title = {Analysis of Virtual Communities Supporting {{OSS}} Projects Using Social Network Analysis},
  author = {Toral, S.L. and Martínez-Torres, M.R. and Barrero, F.},
  date = {2010-03},
  journaltitle = {Information and Software Technology},
  volume = {52},
  pages = {296--303},
  issn = {09505849},
  doi = {10.1016/j.infsof.2009.10.007},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584909001888},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3749SNI3/1-s2.0-S0950584909001888-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {3}
}

@online{tornio_infosec_nodate,
  title = {{{InfoSec}}, {{Sun Tzu}} and the {{Art}} of {{Whore}}},
  author = {Tornio, Steve and Martin, Brian},
  journaltitle = {Attrition.org},
  url = {http://attrition.org/security/rant/fsck_sun_tzu/},
  urldate = {2012-12-19},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NMFCMR2M/fsck_sun_tzu.html}
}

@incollection{tosi_survey_2013,
  title = {A {{Survey}} on {{How Well}}-{{Known Open Source Software Projects Are Tested}}},
  booktitle = {Software and {{Data Technologies}}},
  author = {Tosi, Davide and Tahir, Abbas},
  date = {2013},
  pages = {42--57},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-29578-2_3},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/46IMVS46/chp%3A10.1007%2F978-3-642-29578-2_3.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8GSI9CXI/chp%3A10.1007%2F978-3-642-29578-2_3.pdf},
  keywords = {_SMS_untagged,nyílt forrás,open source,security testing,source analysis}
}

@inproceedings{trautsch_reflecting_2017,
  title = {Reflecting the {{Adoption}} of {{Software Testing Research}} in {{Open}}-{{Source Projects}}},
  booktitle = {2017 {{IEEE International Conference}} on {{Software Testing}}, {{Verification}} and {{Validation}} ({{ICST}})},
  author = {Trautsch, Fabian},
  date = {2017-03},
  pages = {565--566},
  doi = {10.1109/ICST.2017.77},
  abstract = {In the recent years, a lot of research has been done in the field of software testing. But, there exist few empirical studies which analyze, if results of software testing research are actually practiced in real software projects, why they are (not) practiced, and how this influences the quality of the project. Our proposed research project tries to close this gap by analyzing open-source software projects. We focus our work on a concept, which is well accepted and known in our community for a longer period of time: test levels. Hence, we propose a two step approach to tackle the problem. First, we want to determine if the concept of a unit is still up-to-date and propose alternatives otherwise. Furthermore, we aim to investigate, why developers think that the concept of a unit is (not) current. In the second step we intend to check, based on the unit definition determined in the ?rst step, how many tests on the different levels exist for the investigated projects. Additionally, based on the results, we want to examine, why developers are (not) developing tests for a certain test level and how this influences the software quality of the project. Our initial study showed, that very few projects have unit tests, using the unit definition of the IEEE and ISTQB. Furthermore, it revealed that developers intend to write unit tests, but they fail to do so.},
  eventtitle = {2017 {{IEEE International Conference}} on {{Software Testing}}, {{Verification}} and {{Validation}} ({{ICST}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M73TH58S/Trautsch - 2017 - Reflecting the Adoption of Software Testing Resear.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/65D42BX5/7983296.html},
  keywords = {Data mining,Open source software,open-source software projects,program testing,project quality,public domain software,software projects,software quality,Software quality,Software testing,software testing research adoption,Tools}
}

@inproceedings{trockman_adding_2018,
  title = {Adding Sparkle to Social Coding: An Empirical Study of Repository Badges in the Npm Ecosystem},
  shorttitle = {Adding Sparkle to Social Coding},
  booktitle = {Proceedings of the 40th {{International Conference}} on {{Software Engineering}}: {{Companion Proceeedings}}},
  author = {Trockman, Asher},
  date = {2018-05-27},
  pages = {524--526},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3183440.3190335},
  url = {https://doi.org/10.1145/3183440.3190335},
  urldate = {2020-04-22},
  abstract = {Contemporary software development is characterized by increased reuse and speed. Open source software forges such as GitHub host millions of repositories of libraries and tools, which developers reuse liberally [6], creating complex and often fragile networks of interdependencies [1]. Hence, developers must make more decisions at a higher speed, finding which libraries to depend on and which projects to contribute to. This decision making process is supported by the transparency provided by social coding platforms like GitHub [4, 5], where user profile pages display information on a one's contributions, and repository pages provide information on a project's social standing (e.g., through stars and watchers).},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CUGQDQ4G/Trockman - 2018 - Adding sparkle to social coding an empirical stud.pdf},
  isbn = {978-1-4503-5663-3},
  series = {{{ICSE}} '18}
}

@incollection{tsatsou_p._developing_2007,
  title = {Developing a {{Knowledge Base}} of {{Regulatory Issues}} in the Use of {{FS}}/{{OS Software}}: The Experience of the {{European SME}} Sector},
  author = {{Tsatsou, P.}},
  date = {2007},
  pages = {263--268},
  publisher = {{IEEE}},
  location = {{Cairns}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WNZWWFZU/04233715.pdf},
  isbn = {1-4244-0470-3},
  keywords = {license,nyílt forrás,policy}
}

@inproceedings{tsay_experiences_2011,
  title = {Experiences {{Mining Open Source Release Histories}}},
  booktitle = {Proceedings of the 2011 {{International Conference}} on {{Software}} and {{Systems Process}}},
  author = {Tsay, Jason and Wright, Hyrum K. and Perry, Dewayne E.},
  date = {2011},
  pages = {208--212},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1987875.1987911},
  url = {http://doi.acm.org/10.1145/1987875.1987911},
  urldate = {2015-11-24},
  abstract = {Software releases form a critical part of the life cycle of a software project. Typically, each project produces releases in its own way, using various methods of versioning, archiving, announcing and publishing the release. Understanding the release history of a software project can shed light on the project history, as well as the release process used by that project, and how those processes change. However, many factors make automating the retrieval of release history information difficult, such as the many sources of data, a lack of relevant standards and a disparity of tools used to create releases. In spite of the large amount of raw data available, no attempt has been made to create a release history database of a large number of projects in the open source ecosystem. This paper presents our experiences, including the tools, techniques and pitfalls, in our early work to create a software release history database which will be of use to future researchers who want to study and model the release engineering process in greater depth.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q6DZ66PE/p208-tsay.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V2U2MQ4T/Tsay és mtsai. - 2011 - Experiences Mining Open Source Release Histories.pdf},
  isbn = {978-1-4503-0730-7},
  keywords = {data mining,development,nyílt forrás,procedures,release engineering},
  series = {{{ICSSP}} '11}
}

@inproceedings{tushev_linguistic_2019,
  title = {Linguistic {{Change}} in {{Open Source Software}}},
  booktitle = {2019 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Tushev, Miroslav and Khatiwada, Saket and Mahmoud, Anas},
  date = {2019-09},
  pages = {296--300},
  issn = {2576-3148},
  doi = {10.1109/ICSME.2019.00045},
  abstract = {In this paper, we seek to advance the state-of-the-art in code evolution analysis research and practice by statistically analyzing, interpreting, and formally describing the evolution of code lexicon in Open Source Software (OSS). The underlying hypothesis is that, similar to natural language, code lexicon falls under the remit of evolutionary principles. Therefore, adapting theories and statistical models of natural language evolution to code is expected to provide unique insights into software evolution. Our analysis in this paper is conducted using 2,000 OSS systems sampled from a broad range of application domains. Our results show that a) OSS projects exhibit a significant shift in their linguistic identity over time, b) different syntactic structures of code lexicon evolve differently, c) different factors of OSS development and different maintenance activities impact code lexicon differently. These insights lay out a preliminary foundation for modeling the linguistic history of OSS projects. In the long run, this foundation will be utilized to provide support for basic software maintenance and program comprehension activities, and gain new theoretical insights into the complex interplay between linguistic change and various system and human aspects of OSS development.},
  eventtitle = {2019 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZCPRLSAE/Tushev et al. - 2019 - Linguistic Change in Open Source Software.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5K8M92Z8/8918934.html},
  keywords = {basic software maintenance,C\# languages,code evolution analysis research,code lexicon,computational linguistics,different syntactic structures,Evolution,History,Java,linguistic change,linguistic history,linguistic identity,linguistics,Linguistics,maintenance activities,natural language evolution,natural language processing,Open source software,Open Source Software,OSS development,OSS projects,OSS systems,program comprehension activities,public domain software,Software,software evolution,software maintenance,statistical models,Syntactics,Vocabulary}
}

@article{tuunanen_automated_2009,
  title = {Automated Software License Analysis},
  author = {Tuunanen, Timo and Koskinen, Jussi and Kärkkäinen, Tommi},
  date = {2009-12},
  journaltitle = {Automated Software Engineering},
  volume = {16},
  pages = {455--490},
  issn = {0928-8910, 1573-7535},
  doi = {10.1007/s10515-009-0054-z},
  url = {http://link.springer.com/10.1007/s10515-009-0054-z},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5KPZH46A/art%3A10.1007%2Fs10515-009-0054-z.pdf},
  keywords = {license,nyílt forrás},
  langid = {english},
  number = {3-4}
}

@incollection{tuunanen_retrieving_2006,
  title = {Retrieving Open Source Software Licenses},
  booktitle = {Open {{Source Systems}}},
  author = {Tuunanen, Timo and Koskinen, Jussi and Kärkkäinen, Tommi},
  date = {2006},
  pages = {35--46},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_4},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UACH88DN/chp%3A10.1007%2F0-387-34226-5_4.pdf},
  isbn = {978-0-387-34226-9},
  keywords = {license,nyílt forrás}
}

@online{tweet_btn_microsoft_nodate,
  title = {Microsoft Update Servers Left All {{Azure RHEL}} Instances Hackable},
  author = {{tweet\_btn()}, Darren Pauli 28 Nov 2016 at 00:57},
  url = {https://www.theregister.co.uk/2016/11/28/microsoft_update_servers_left_all_azure_rhel_instances_hackable/},
  urldate = {2018-08-15},
  abstract = {Patch proffered, pen-tester paid},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8CD5WNF7/microsoft_update_servers_left_all_azure_rhel_instances_hackable.html},
  langid = {english}
}

@online{tweet_btn_pastebin_nodate,
  title = {Pastebin: {{The}} Remote Backdoor Server for the Cheap and Lazy},
  shorttitle = {Pastebin},
  author = {{tweet\_btn()}, Darren Pauli 8 Jan 2015 at 08:28},
  url = {https://www.theregister.co.uk/2015/01/08/pastebin_the_remote_backdoor_server_for_the_cheap_and_lazy/},
  urldate = {2018-08-12},
  abstract = {Web clipboard should be a mainstay of enterprise blacklists},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EZ63HW94/pastebin_the_remote_backdoor_server_for_the_cheap_and_lazy.html},
  keywords = {backdoor,pastebin,snipet},
  langid = {english}
}

@incollection{twinomurinzi_diffusing_2010,
  title = {Diffusing the {{Ubuntu Philosophy}} into {{E}}-{{Government}}: {{A South African Perspective}}},
  shorttitle = {Diffusing the {{Ubuntu Philosophy}} into {{E}}-{{Government}}},
  booktitle = {E-Government, {{E}}-Services and Global Processes},
  author = {Twinomurinzi, Hossana and Phahlamohlaka, Jackie and Byrne, Elaine},
  date = {2010},
  pages = {94--107},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-15346-4_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9JXIZMG4/chp%3A10.1007%2F978-3-642-15346-4_8.pdf}
}

@misc{ulf_asklund_configuration_2001,
  title = {Configuration {{Management}} for {{Open Source Software}}},
  author = {{Ulf Asklund} and {Lars Bendix}},
  date = {2001},
  publisher = {{The Pennsylvania State University}},
  url = {http://www.lunduniversity.lu.se/lup/publication/526486},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KBCTEXKW/___asklundbendix.pdf}
}

@article{ullah_method_2014,
  title = {A Method for Predicting Open Source Software Residual Defects},
  author = {Ullah, Najeeb},
  date = {2014-04-08},
  journaltitle = {Software Quality Journal},
  issn = {0963-9314, 1573-1367},
  doi = {10.1007/s11219-014-9229-3},
  url = {http://link.springer.com/10.1007/s11219-014-9229-3},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DBNF495V/art%3A10.1007%2Fs11219-014-9229-3.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PS5PUIAP/art%3A10.1007%2Fs11219-014-9229-3.pdf},
  keywords = {_SMS_untagged,code quality,Forrás2,nyílt forrás,open source},
  langid = {english}
}

@online{ulx_openedu_2013,
  title = {{{OpenEDU}} Program | {{Sulix}}},
  author = {{ULX}},
  date = {2013},
  url = {http://sulix.hu/szolgaltatasok/openedu_program},
  urldate = {2013-05-05},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B9CN4Z9C/openedu_program.html}
}

@incollection{umarji_archetypal_2008,
  title = {Archetypal Internet-Scale Source Code Searching},
  booktitle = {Open Source Development, Communities and Quality},
  author = {Umarji, Medha and Sim, Susan Elliott and Lopes, Crista},
  date = {2008},
  pages = {257--263},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-0-387-09684-1_21},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PVQVG7QV/chp%3A10.1007%2F978-0-387-09684-1_21.pdf},
  keywords = {_SMS_untagged,nyílt forrás}
}

@article{umm-e-laila_comparison_2017,
  ids = {umm-e-laila\_comparison\_2017-1},
  title = {Comparison of Open Source Maturity Models},
  author = {{Umm-e-Laila} and Zahoor, Adnan and Mehboob, Khalid and Natha, Sarfaraz},
  date = {2017-01-01},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  volume = {111},
  pages = {348--354},
  issn = {1877-0509},
  doi = {10.1016/j.procs.2017.06.033},
  url = {http://www.sciencedirect.com/science/article/pii/S1877050917312061},
  urldate = {2018-08-15},
  abstract = {Component based development was formerly dependent on propriety/closed source software’s (CSS) components. Open Source software components has attracted noteworthy attention and become an operational alternative of proprietary software because of OSS security, cost effectiveness, quality, flexibility and freedom. Due to the increased attention on component-based development in the past decades, companies have widely adopted open source software (OSS), with the view that using the right software is critical to project success. The availability of Internet as a marketplace for components and wide adoption of OSS has introduced new challenges for selection of software components. Source Forge, other general and domain specific software repositories, different software foundations and individual OSS providers offer an abundance of OSS components. Identification, evaluation and selection of best possible OSS Components for the required need is a quite challenging job. As a reaction to these challenges different methods have been proposed for OSS maturity measurements. E.g. Capgemini-Open Source Maturity Model(C-OSSM), Navicasoft-Open Source Maturity Model (N-OSSM), Qualification and Selection of Open Source (QSOS), Open Business Readiness Rating (Open BRR) and Easiest Open Source (E-OSS).In this paper we compare different Open Source software maturity models available in the market that will help user in OSS component selection.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/75QL3DYF/Umm-e-Laila et al. - 2017 - Comparison of open source maturity models.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YCVFZ9VQ/Umm-e-Laila et al. - 2017 - Comparison of open source maturity models.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4TYK4Z9E/S1877050917312061.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F35FRW55/S1877050917312061.html},
  keywords = {COSMM,EOSS,free,free software foundation,general public license,NOSMM,Open BRR,open source software,Open source software,QSOS},
  series = {The 8th {{International Conference}} on {{Advances}} in {{Information Technology}}}
}

@misc{united_nations_e-government_2014,
  title = {E-{{Government Survey}} 2014},
  author = {{United Nations}},
  date = {2014},
  publisher = {{United Nations}},
  url = {https://publicadministration.un.org/egovkb/Portals/egovkb/Documents/un/2014-Survey/E-Gov_Complete_Survey-2014.pdf},
  urldate = {2016-01-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5WH6NBBA/E-Gov_Complete_Survey-2014.pdf}
}

@inproceedings{ushiroda_point_2019,
  title = {A {{Point Process Approach}} of {{Bug Fixing Analysis}} in {{Open Source Software Projects}}},
  booktitle = {2019 {{IEEE}} 19th {{International Conference}} on {{Software Quality}}, {{Reliability}} and {{Security}} ({{QRS}})},
  author = {Ushiroda, Takahiro and Dohi, Tadashi and Saito, Yasuhiro and Okamura, Hiroyuki},
  date = {2019-07},
  pages = {83--88},
  doi = {10.1109/QRS.2019.00024},
  abstract = {One of open-source software (OSS) is that it can be used for a long term by repeating version-up iteratively in the operational phase, so that OSS possesses a different software bug detection and correction profiles from the closed source software (CSS) products. More specifically, the software bug fixing process of OSS can be considered to show effects of the long-term operation and/or periodicity due to the multiple version-up procedures, in addition to the common reliability growth phenomenon observed in the relatively short-term software testing. In this article we propose a stochastic point process approach to represent the long-term effect and the periodicity effect of OSS with the actual OSS bug fixing data. By conducting the reliability analysis of OSS, it is possible to assess the operational reliability of OSS quantitatively and to share the published quality indicators of OSS by the whole OSS community.},
  eventtitle = {2019 {{IEEE}} 19th {{International Conference}} on {{Software Quality}}, {{Reliability}} and {{Security}} ({{QRS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/L5JWWS28/Ushiroda et al. - 2019 - A Point Process Approach of Bug Fixing Analysis in.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UVP64JKH/8854691.html},
  keywords = {bug fixing analysis,Cascading style sheets,closed source software products,Computer bugs,correction profiles,Debugging,long-term effect,open source software projects,operational reliability,OSS bug fixing data,OSS; software reliability; stochastic point process; non-homogeneous Poisson process; AIC; long-term effect; periodicity effect,periodicity effect,program debugging,program testing,public domain software,reliability analysis,reliability growth phenomenon,Software,software bug detection,software bug fixing process,software maintenance,software reliability,Software reliability,software testing,stochastic point process approach,stochastic processes,Stochastic processes,version-up procedures}
}

@jurisdiction{valami_republic_nodate,
  title = {Republic of {{Macedonia}} Frst Nation to Provide a Computer for Every Student},
  author = {{valami}},
  journaltitle = {ncomputing},
  url = {http://www.snc.co.th/download/snc_co_th/CS_Education/casestudy_macedonia_edu.pdf}
}

@inproceedings{valimaki_empirical_2005,
  title = {An {{Empirical Look}} at the {{Problems}} of {{Open Source Adoption}} in {{Finnish Municipalities}}},
  booktitle = {Proceedings of the 7th {{International Conference}} on {{Electronic Commerce}}},
  author = {Välimäki, Mikko and Oksanen, Ville and Laine, Juha},
  date = {2005},
  pages = {514--520},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1089551.1089643},
  url = {http://doi.acm.org/10.1145/1089551.1089643},
  urldate = {2015-11-24},
  abstract = {This article starts by considering the global framework of current open source migration. We show that the fight against software piracy is most likely speeding up the adoption especially in the developing countries. The situation is somewhat different in those parts of the world, which have lower piracy rates. There, political lobbying seems to offer the major push for open source software. This brings us to study the actual open source software adoption in the Finland, which is both the home of Linux and also one of the most advances information societies with little piracy. The outcome is rather surprising - the Finnish government is currently ignoring open source. The results we have got from our a survey to all Finnish municipalities and from additional expanded interviews shows that there is currently high demand and growing interest for open source solutions within the Finnish municipalities but the government (by ignoring the issue) and the private sector (being mainly committed to proprietary solutions) are not able to fill the needs. We propose that the governments in the rich countries should in fact learn from developing countries and have a more proactive policy approach to open source software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2SWQ4V65/Välimäki és mtsai. - 2005 - An Empirical Look at the Problems of Open Source A.pdf},
  isbn = {978-1-59593-112-2},
  keywords = {_SMS_untagged,developing countries,Finland,nyílt forrás,Open source software,public policy},
  series = {{{ICEC}} '05}
}

@incollection{van_antwerp_open_2010,
  title = {Open {{Source Software Developer}} and {{Project Networks}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Van Antwerp, Matthew and Madey, Greg},
  date = {2010},
  pages = {407--412},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_39},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4CUVGUN9/Open Source Software Developer and Project Networks.pdf}
}

@incollection{van_belle_oss_2012,
  title = {{{OSS Adoption}} in {{South Africa}}: {{Applying}} the {{TOE Model}} to a {{Case Study}}},
  shorttitle = {{{OSS Adoption}} in {{South Africa}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Van Belle, Jean-Paul and Reed, Mark},
  date = {2012},
  pages = {304--309},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_26},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BHZH7DF4/chp%3A10.1007%2F978-3-642-33442-9_26.pdf},
  keywords = {adoption,nyílt forrás}
}

@incollection{van_der_linden_open_2013,
  title = {Open Source Practices in Software Product Line Engineering},
  booktitle = {Software {{Engineering}}},
  author = {van der Linden, Frank},
  date = {2013},
  pages = {216--235},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-36054-1_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4H8CFSK7/chp%3A10.1007%2F978-3-642-36054-1_8.pdf},
  keywords = {_SMS_untagged,Forrás3,Inner Source,nyílt forrás,product line},
  options = {useprefix=true}
}

@article{van_wendel_de_joode_handling_2005,
  title = {Handling Variety: The Tension between Adaptability and Interoperability of Open Source Software},
  shorttitle = {Handling Variety},
  author = {van Wendel de Joode, Ruben and Egyedi, Tineke M.},
  date = {2005-07},
  journaltitle = {Computer Standards \& Interfaces},
  volume = {28},
  pages = {109--121},
  issn = {09205489},
  doi = {10.1016/j.csi.2004.12.004},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0920548904001527},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZW765H55/1-s2.0-S0920548904001527-main.pdf},
  keywords = {development,nyílt forrás,procedures},
  langid = {english},
  number = {1},
  options = {useprefix=true}
}

@article{vandenberghe_design_2015,
  title = {Design Notations for Secure Software: A Systematic Literature Review},
  shorttitle = {Design Notations for Secure Software},
  author = {van den Berghe, Alexander and Scandariato, Riccardo and Yskout, Koen and Joosen, Wouter},
  date = {2015-08-06},
  journaltitle = {Software \& Systems Modeling},
  issn = {1619-1366, 1619-1374},
  doi = {10.1007/s10270-015-0486-9},
  url = {http://link.springer.com/10.1007/s10270-015-0486-9},
  urldate = {2015-10-21},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MTTHUCD4/art%3A10.1007%2Fs10270-015-0486-9.pdf},
  langid = {english},
  options = {useprefix=true}
}

@thesis{varga_peter_janos_kritikus_2012,
  title = {Kritikus Információs Infrastruktúrák Vezeték Nélküli Hálózatának Védelme},
  author = {{Varga Péter János}},
  date = {2012},
  institution = {{Nemzeti Közszolgálati Egyetem}},
  location = {{Budapest}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8HNXZDSB/varga_peter_janos.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M9IN52NH/varga_peter_janos.pdf},
  type = {Doktori (PhD) értekezés}
}

@incollection{vasilescu_babel_2013,
  title = {The {{Babel}} of {{Software Development}}: {{Linguistic Diversity}} in {{Open Source}}},
  shorttitle = {The {{Babel}} of {{Software Development}}},
  booktitle = {Social {{Informatics}}},
  author = {Vasilescu, Bogdan and Serebrenik, Alexander and van den Brand, Mark GJ},
  date = {2013},
  pages = {391--404},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-03260-3_34},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S3GS3PX6/chp%3A10.1007%2F978-3-319-03260-3_34.pdf},
  options = {useprefix=true}
}

@inproceedings{vasilescu_gender_2015,
  title = {Gender and {{Tenure Diversity}} in {{GitHub Teams}}},
  author = {Vasilescu, Bogdan and Posnett, Daryl and Ray, Baishakhi and van den Brand, Mark G.J. and Serebrenik, Alexander and Devanbu, Premkumar and Filkov, Vladimir},
  date = {2015},
  pages = {3789--3798},
  publisher = {{ACM Press}},
  doi = {10.1145/2702123.2702549},
  url = {http://dl.acm.org/citation.cfm?doid=2702123.2702549},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TFG43VN5/p3789-vasilescu.pdf},
  isbn = {978-1-4503-3145-6},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  options = {useprefix=true}
}

@inproceedings{vasilescu_how_2014,
  title = {How Social {{Q}}\&amp;{{A}} Sites Are Changing Knowledge Sharing in Open Source Software Communities},
  author = {Vasilescu, Bogdan and Serebrenik, Alexander and Devanbu, Prem and Filkov, Vladimir},
  date = {2014},
  pages = {342--354},
  publisher = {{ACM Press}},
  doi = {10.1145/2531602.2531659},
  url = {http://dl.acm.org/citation.cfm?doid=2531602.2531659},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NCBFIT9J/p342-vasilescu.pdf},
  isbn = {978-1-4503-2540-0},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@inproceedings{vasilescu_human_2014,
  title = {Human {{Aspects}}, {{Gamification}}, and {{Social Media}} in {{Collaborative Software Engineering}}},
  booktitle = {Companion {{Proceedings}} of the 36th {{International Conference}} on {{Software Engineering}}},
  author = {Vasilescu, Bogdan},
  date = {2014},
  pages = {646--649},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2591062.2591091},
  url = {http://doi.acm.org/10.1145/2591062.2591091},
  urldate = {2015-11-24},
  abstract = {Software engineering is inherently a collaborative venture. In open-source software (OSS) development, such collaborations almost always span geographies and cultures. Because of the decentralised and self-directed nature of OSS as well as the social diversity inherent to OSS communities, the success of an OSS project depends to a large extent on the social aspects of distributed collaboration and achieving coordination over distance. The goal of this dissertation research is to raise our understanding of how human aspects (e.g., gender or cultural diversity), gamification and social media (e.g., participation in social environments such as Stack Overflow or GitHub) impact distributed collaboration in OSS.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/64HTMBQX/Vasilescu - 2014 - Human Aspects, Gamification, and Social Media in C.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VVNBXFUR/Vasilescu - 2014 - Human Aspects, Gamification, and Social Media in C.pdf},
  isbn = {978-1-4503-2768-8},
  keywords = {Collaborative software engineering,community,development,nyílt forrás,Open Source},
  series = {{{ICSE Companion}} 2014}
}

@inproceedings{vasilescu_perceptions_2015,
  title = {Perceptions of {{Diversity}} on {{Git Hub}}: {{A User Survey}}},
  shorttitle = {Perceptions of {{Diversity}} on {{Git Hub}}},
  author = {Vasilescu, Bogdan and Filkov, Vladimir and Serebrenik, Alexander},
  date = {2015-05},
  pages = {50--56},
  publisher = {{IEEE}},
  doi = {10.1109/CHASE.2015.14},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7166088},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J33XWN4F/p50-vasilescu.pdf},
  isbn = {978-1-4673-7031-8},
  keywords = {community,development,nyílt forrás}
}

@article{vass_sandor_az_2006,
  title = {Az Elektronikai Berendezéseinket Fenyegetõ Terrortámadások És Az Ellenük Való Védekezés Kérdései.},
  author = {{Vass Sándor}},
  date = {2006},
  journaltitle = {Nemzetvédelmi Egyetemi Közlemények},
  volume = {X. évf.},
  pages = {228--236},
  issue = {3.}
}

@inproceedings{vassallo_tale_2017,
  title = {A {{Tale}} of {{CI Build Failures}}: {{An Open Source}} and a {{Financial Organization Perspective}}},
  shorttitle = {A {{Tale}} of {{CI Build Failures}}},
  booktitle = {2017 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Vassallo, Carmine and Schermann, Gerald and Zampetti, Fiorella and Romano, Daniele and Leitner, Philipp and Zaidman, Andy and Di Penta, Massimiliano and Panichella, Sebastiano},
  date = {2017-09},
  pages = {183--193},
  doi = {10.1109/ICSME.2017.67},
  abstract = {Continuous Integration (CI) and Continuous Delivery (CD) are widespread in both industrial and open-source software (OSS) projects. Recent research characterized build failures in CI and identified factors potentially correlated to them. However, most observations and findings of previous work are exclusively based on OSS projects or data from a single industrial organization. This paper provides a first attempt to compare the CI processes and occurrences of build failures in 349 Java OSS projects and 418 projects from a financial organization, ING Nederland. Through the analysis of 34,182 failing builds (26\% of the total number of observed builds), we derived a taxonomy of failures that affect the observed CI processes. Using cluster analysis, we observed that in some cases OSS and ING projects share similar build failure patterns (e.g., few compilation failures as compared to frequent testing failures), while in other cases completely different patterns emerge. In short, we explain how OSS and ING CI processes exhibit commonalities, yet are substantially different in their design and in the failures they report.},
  eventtitle = {2017 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VRFE6UIR/Vassallo et al. - 2017 - A Tale of CI Build Failures An Open Source and a .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZY9I8UNJ/8094420.html},
  keywords = {Agile development,build failure patterns,Build failures,Continuous Delivery,continuous integration,Continuous Integration,Data mining,financial data processing,financial organization perspective,frequent testing failures,ING CI processes,ING Nederland,ING projects,Java,Java OSS projects,open-source software projects,Organizations,project management,public domain software,Servers,single industrial organization,Software,software development management,Taxonomy,Testing,Tools}
}

@inproceedings{vaughn_transitioning_2018,
  title = {Transitioning to {{Open Source}} at 6000m},
  booktitle = {2018 {{IEEE}}/{{OES Autonomous Underwater Vehicle Workshop}} ({{AUV}})},
  author = {Vaughn, Ian and Suman, Stefano and Berkowitz, Zac and Vaccaro, Jennifer and Kelley, Sean and Fujii, Justin and Jakuba, Michael and Howland, Jonathan and Whitcomb, Louis and Kaiser, Carl},
  date = {2018-11},
  pages = {1--6},
  issn = {2377-6536},
  doi = {10.1109/AUV.2018.8729816},
  abstract = {The Autonomous Underwater Vehicle (AUV) Sentry recently completed its first milestone in transitioning from a legacy monolithic software system to a modern distributed architecture based on the Robot Operating System (ROS). The goal of the upgrade is to accelerate new feature development without sacrificing operational reliability. Sentry is a 6000m depth operational vehicle for scientific users who require both cutting-edge AUV technology and reliable performance during standard surveys. ROS's defederated architecture uses independent processes to isolate functionality. Sentry's ROS-based stack leverages this design to test new functionality and support sharing software with other vehicles. Several new base libraries accelerated development providing a full-featured base for subsequent development. Following software engineering best-practices, Sentry's ROS upgrade included a variety of testing techniques culminating in an 11-day engineering validation cruise. The operational software failure rate has not risen since the upgrade, although further dives are needed to characterize the impact. New features have already been deployed on science cruises using ROS tools and new simulation capabilities. Future stages of the transition will focus on porting legacy components to ROS.},
  eventtitle = {2018 {{IEEE}}/{{OES Autonomous Underwater Vehicle Workshop}} ({{AUV}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VD7UFXDP/Vaughn et al. - 2018 - Transitioning to Open Source at 6000m.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/63K8XWWV/8729816.html},
  keywords = {11-day engineering validation cruise,6000m depth operational vehicle,Autonomous Underwater Vehicle Sentry,autonomous underwater vehicles,AUV,base libraries,Computer architecture,cutting-edge,deepwater,feature development,full-featured base,independent processes,legacy components,legacy monolithic software system,Libraries,marine,milestone,mobile robots,modern distributed architecture,oceanographic equipment,open-source,operating systems (computers),operational reliability,operational software failure rate,operations,reliable performance,remotely operated vehicles,Robot kinematics,Robot Operating System,robot programming,ROS tools,ROS's defederated architecture,scientific users,Sentry's ROS upgrade,Sentry's ROS-based stack leverages this design,size 6000.0 m,Software,software engineering,software engineering best-practices,software maintenance,software reliability,software upgrade,standard surveys,Standards,subsea,subsequent development,support sharing software,Tools,underwater vehicles,UUV}
}

@article{vedres_gendered_2019,
  title = {Gendered Behavior as a Disadvantage in Open Source Software Development},
  author = {Vedres, Balazs and Vasarhelyi, Orsolya},
  date = {2019-07-06},
  journaltitle = {EPJ Data Science},
  shortjournal = {EPJ Data Sci.},
  volume = {8},
  pages = {25},
  issn = {2193-1127},
  doi = {10.1140/epjds/s13688-019-0202-z},
  url = {https://doi.org/10.1140/epjds/s13688-019-0202-z},
  urldate = {2020-04-21},
  abstract = {Women are severely marginalized in software development, especially in open source. In this article we argue that disadvantage is more due to gendered behavior than to categorical discrimination: women are at a disadvantage because of what they do, rather than because of who they are. Using data on entire careers of users from GitHub.com, we develop a measure to capture the gendered pattern of behavior: We use a random forest prediction of being female (as opposed to being male) by behavioral choices in the level of activity, specialization in programming languages, and choice of partners. We test differences in success and survival along both categorical gender and the gendered pattern of behavior. We find that 84.5\% of women’s disadvantage (compared to men) in success and 34.8\% of their disadvantage in survival are due to the female pattern of their behavior. Men are also disadvantaged along their interquartile range of the female pattern of their behavior, and users who don’t reveal their gender suffer an even more drastic disadvantage in survival probability. Moreover, we do not see evidence for any reduction of these inequalities in time. Our findings are robust to noise in gender recognition, and to taking into account particular programming languages, or decision tree classes of gendered behavior. Our results suggest that fighting categorical gender discrimination will have a limited impact on gender inequalities in open source software development, and that gender hiding is not a viable strategy for women.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7V8A67EI/Vedres and Vasarhelyi - 2019 - Gendered behavior as a disadvantage in open source.pdf},
  langid = {english},
  number = {1}
}

@article{ven_challenges_2008,
  title = {Challenges and Strategies in the Use of {{Open Source Software}} by {{Independent Software Vendors}}},
  author = {Ven, Kris and Mannaert, Herwig},
  date = {2008-08},
  journaltitle = {Information and Software Technology},
  volume = {50},
  pages = {991--1002},
  issn = {09505849},
  doi = {10.1016/j.infsof.2007.09.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584907001036},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ERBH3DTZ/1-s2.0-S0950584907001036-main.pdf},
  keywords = {Commercial relations,development,nyílt forrás},
  langid = {english},
  number = {9-10}
}

@incollection{ven_field_2010,
  title = {A {{Field Study}} on the {{Barriers}} in the {{Assimilation}} of {{Open Source Server Software}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Ven, Kris and Verelst, Jan},
  date = {2010},
  pages = {281--293},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_22},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FRHUJNQH/chp%3A10.1007%2F978-3-642-13244-5_22.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ST897I5A/chp%3A10.1007%2F978-3-642-13244-5_22.pdf},
  keywords = {_SMS_untagged,Empirikus,felmérés,Forrás1,nyílt forrás,open source}
}

@incollection{ven_introduction_2006,
  title = {The Introduction of {{OpenOffice}}. Org in the {{Brussels Public Administration}}},
  booktitle = {Open {{Source Systems}}},
  author = {Ven, Kris and Van Nuffel, Dieter and Verelst, Jan},
  date = {2006},
  pages = {123--134},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D7JHBMWM/chp%3A10.1007%2F0-387-34226-5_12.pdf},
  keywords = {adoption,nyílt forrás}
}

@incollection{ven_organizational_2006,
  title = {The Organizational Adoption of Open Source Server Software by {{Belgian}} Organizations},
  booktitle = {Open Source Systems},
  author = {Ven, Kris and Verelst, Jan},
  date = {2006},
  pages = {111--122},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_11},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SGV2RDGJ/chp%3A10.1007%2F0-387-34226-5_11.pdf},
  keywords = {adoption,nyílt forrás}
}

@inproceedings{vendome_distribute_2018,
  title = {To Distribute or Not to Distribute? Why Licensing Bugs Matter},
  shorttitle = {To Distribute or Not to Distribute?},
  booktitle = {Proceedings of the 40th {{International Conference}} on {{Software Engineering}}},
  author = {Vendome, Christopher and German, Daniel M. and Di Penta, Massimiliano and Bavota, Gabriele and Linares-Vásquez, Mario and Poshyvanyk, Denys},
  date = {2018-05-27},
  pages = {268--279},
  publisher = {{Association for Computing Machinery}},
  location = {{Gothenburg, Sweden}},
  doi = {10.1145/3180155.3180221},
  url = {https://doi.org/10.1145/3180155.3180221},
  urldate = {2020-04-22},
  abstract = {Software licenses dictate how source code or binaries can be modified, reused, and redistributed. In the case of open source projects, software licenses generally fit into two main categories, permissive and restrictive, depending on the degree to which they allow redistribution or modification under licenses different from the original one(s). Developers and organizations can also modify existing licenses, creating custom licenses with specific permissive/restrictive terms. Having such a variety of software licenses can create confusion among software developers, and can easily result in the introduction of licensing bugs, not necessarily limited to well-known license incompatibilities. In this work, we report a study aimed at characterizing licensing bugs by (i) building a catalog categorizing the types of licensing bugs developers and other stakeholders face, and (ii) understanding the implications licensing bugs have on the software projects they affect. The presented study is the result of the manual analysis of 1,200 discussions related to licensing bugs carried out in issue trackers and in five legal mailing lists of open source communities. Our findings uncover new types of licensing bugs not addressed in prior literature, and a detailed assessment of their implications.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RDPQUGHX/Vendome et al. - 2018 - To distribute or not to distribute why licensing .pdf},
  isbn = {978-1-4503-5638-1},
  keywords = {empirical studies,open source practices,software licenses},
  series = {{{ICSE}} '18}
}

@article{vendome_license_2017,
  ids = {vendome\_license\_2017-1},
  title = {License Usage and Changes: A Large-Scale Study on {{gitHub}}},
  shorttitle = {License Usage and Changes},
  author = {Vendome, Christopher and Bavota, Gabriele and Penta, Massimiliano Di and Linares-Vásquez, Mario and German, Daniel and Poshyvanyk, Denys},
  date = {2017-06-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {22},
  pages = {1537--1577},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-016-9438-4},
  url = {https://link.springer.com/article/10.1007/s10664-016-9438-4},
  urldate = {2018-08-15},
  abstract = {Open source software licenses determine, from a legal point of view, under which conditions software can be integrated and redistributed. The reason why developers of a project adopt (or change) a license may depend on various factors, e.g., the need for ensuring compatibility with certain third-party components, the perspective towards redistribution or commercialization of the software, or the need for protecting against somebody else’s commercial usage of the software. This paper reports a large empirical study aimed at quantitatively and qualitatively investigating when and why developers adopt or change software licenses. Specifically, we first identify license changes in 1,731,828 commits, representing the entire history of 16,221 Java projects hosted on GitHub. Then, to understand the rationale of license changes, we perform a qualitative analysis on 1,160 projects written in seven different programming languages, namely C, C++, C\#, Java, Javascript, Python, and Ruby—following an open coding approach inspired by grounded theory—on commit messages and issue tracker discussions concerning licensing topics, and whenever possible, try to build traceability links between discussions and changes. On one hand, our results highlight how, in different contexts, license adoption or changes can be triggered by various reasons. On the other hand, the results also highlight a lack of traceability of when and why licensing changes are made. This can be a major concern, because a change in the license of a system can negatively impact those that reuse it. In conclusion, results of the study trigger the need for better tool support in guiding developers in choosing/changing licenses and in keeping track of the rationale of license changes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4BB4SER6/Vendome et al. - 2017 - License usage and changes a large-scale study on .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SG37AQLL/Vendome et al. - 2017 - License usage and changes a large-scale study on .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DLCY8HMF/s10664-016-9438-4.html},
  langid = {english},
  number = {3}
}

@inproceedings{vendome_machine_2017,
  title = {Machine {{Learning}}-{{Based Detection}} of {{Open Source License Exceptions}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Vendome, Christopher and Linares-Vásquez, Mario and Bavota, Gabriele and Di Penta, Massimiliano and German, Daniel and Poshyvanyk, Denys},
  date = {2017-05},
  pages = {118--129},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2017.19},
  abstract = {From a legal perspective, software licenses govern the redistribution, reuse, and modification of software as both source and binary code. Free and Open Source Software (FOSS) licenses vary in the degree to which they are permissive or restrictive in allowing redistribution or modification under licenses different from the original one(s). In certain cases, developers may modify the license by appending to it an exception to specifically allow reuse or modification under a particular condition. These exceptions are an important factor to consider for license compliance analysis since they modify the standard (and widely understood) terms of the original license. In this work, we first perform a large-scale empirical study on the change history of over 51K FOSS systems aimed at quantitatively investigating the prevalence of known license exceptions and identifying new ones. Subsequently, we performed a study on the detection of license exceptions by relying on machine learning. We evaluated the license exception classification with four different supervised learners and sensitivity analysis. Finally, we present a categorization of license exceptions and explain their implications.},
  eventtitle = {2017 {{IEEE}}/{{ACM}} 39th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8XE2N3EF/Vendome et al. - 2017 - Machine Learning-Based Detection of Open Source Li.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IRYRUTNP/7985655.html},
  keywords = {binary code,Classifiers,Empirical Studies,FOSS licenses,free and open source software,learning (artificial intelligence),license compliance analysis,license exception classification,machine learning-based detection,open source license exceptions,pattern classification,public domain software,sensitivity analysis,Software engineering,software licenses,Software Licenses,software modification,software redistribution,software reusability,software reuse,source code,source code (software),supervised learners}
}

@inproceedings{venson_costing_2019,
  title = {Costing {{Secure Software Development}}: {{A Systematic Mapping Study}}},
  shorttitle = {Costing {{Secure Software Development}}},
  booktitle = {Proceedings of the 14th {{International Conference}} on {{Availability}}, {{Reliability}} and {{Security}}},
  author = {Venson, Elaine and Guo, Xiaomeng and Yan, Zidi and Boehm, Barry},
  date = {2019-08-26},
  pages = {1--11},
  publisher = {{Association for Computing Machinery}},
  location = {{Canterbury, CA, United Kingdom}},
  doi = {10.1145/3339252.3339263},
  url = {https://doi.org/10.1145/3339252.3339263},
  urldate = {2020-04-22},
  abstract = {Building more secure software is a recent concern for software engineers due to increasing incidences of data breaches and other types of cyber attacks. However, software security, through the introduction of specialized practices in the software development life cycle, leads to an increase in the development cost. Although there are many studies on software cost models, few address the additional costs required to build secure software. We conducted a systematic review in the form of a mapping study to classify and analyze the literature related to the impact of security in software development costs. Our search strategy strove to achieve high completeness by the identification of a quasi-gold-standard set of papers, which we then used to establish a search string and retrieve papers from research databases automatically. The application of inclusion/exclusion criteria resulted in a final set of 54 papers, which were categorized according to the approach to software security cost analysis. Perform Security Review, Apply Threat Modeling, and Perform Security Testing were the three most frequent activities related to cost, and Common Criteria was the most applied standard. We also identified ten approaches to estimating software security costs for development projects; however, their validation remains a challenge, which could be addressed in future studies.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CVLAZMA9/Venson et al. - 2019 - Costing Secure Software Development A Systematic .pdf},
  isbn = {978-1-4503-7164-3},
  keywords = {secure software development,software cost model,software development effort estimation,Software security},
  series = {{{ARES}} '19}
}

@article{venter_standardising_2008,
  title = {Standardising Vulnerability Categories},
  author = {Venter, H.S. and Eloff, J.H.P. and Li, Y.L.},
  date = {2008-05},
  journaltitle = {Computers \& Security},
  volume = {27},
  pages = {71--83},
  issn = {01674048},
  doi = {10.1016/j.cose.2008.04.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167404808000096},
  urldate = {2015-11-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/X2QZ462N/1-s2.0-S0167404808000096-main.pdf},
  langid = {english},
  number = {3-4}
}

@inproceedings{vergne_expert_2014,
  title = {Expert {{Finding Using Markov Networks}} in {{Open Source Communities}}},
  booktitle = {Advanced {{Information Systems Engineering}}},
  author = {Vergne, Matthieu and Susi, Angelo},
  date = {2014},
  pages = {196--210},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-319-07881-6_14},
  urldate = {2014-10-23},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RV926BRP/camera_ready.pdf},
  keywords = {community,open source}
}

@incollection{verhoef_collaborative_2014,
  title = {Collaborative Development of Embedded Systems},
  booktitle = {Collaborative {{Design}} for {{Embedded Systems}}},
  author = {Verhoef, Marcel and Pierce, Kenneth and Gamble, Carl and Broenink, Jan},
  date = {2014},
  pages = {3--14},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-54118-6_1},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3NM3K9RR/chp%3A10.1007%2F978-3-642-54118-6_1.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{victor_kuechler_gender_2012,
  title = {Gender {{Differences}} in {{Early Free}} and {{Open Source Software Joining Process}}},
  booktitle = {{{OSS}} 2012, {{IFIP AICT}} 378},
  author = {{Victor Kuechler} and {Claire Gilbertson} and {Carlos Jensen}},
  date = {2012},
  pages = {48--60},
  publisher = {{Springer}},
  url = {http://dx.doi.org/10.1007/978-3-642-33442-9},
  urldate = {2014-05-05},
  isbn = {978-3-642-33442-9},
  keywords = {community,FLOSS},
  langid = {english}
}

@incollection{victor_kuechler_misconceptions_2013,
  title = {Misconceptions and {{Barriers}} to {{Adoption}} of {{FOSS}} in the {{U}}.{{S}}. {{Energy Industry}}},
  booktitle = {Misconceptions and {{Barriers}} to {{Adoption}} of {{FOSS}} in the {{U}}.{{S}}. {{Energy Industry}}},
  author = {{Victor Kuechler} and {Carlos Jensen} and {Deborah Bryant}},
  date = {2013},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HGN4WVM3/bok%3A978-3-642-38928-3.pdf},
  isbn = {978-3-642-38927-6},
  keywords = {adoption,case study,FLOSS,open source},
  langid = {english}
}

@inproceedings{viertel_are_2019,
  title = {Are {{Third}}-{{Party Libraries Secure}}? {{A Software Library Checker}} for {{Java}}},
  shorttitle = {Are {{Third}}-{{Party Libraries Secure}}?},
  booktitle = {Risks and {{Security}} of {{Internet}} and {{Systems}}},
  author = {Viertel, Fabien Patrick and Kortum, Fabian and Wagner, Leif and Schneider, Kurt},
  editor = {Zemmari, Akka and Mosbah, Mohamed and Cuppens-Boulahia, Nora and Cuppens, Frédéric},
  date = {2019},
  pages = {18--34},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-12143-3_2},
  abstract = {Nowadays, there are many software libraries for different purposes that are used by various projects. An application is only as secure as its weakest component; thus if an imported library includes a certain vulnerability, an application could get insecure. Therefore a widespread search for existing security flaws within used libraries is necessary. Big databases like the National Vulnerability Database (NVD) comprise reported security incidents and can be utilized to determine whether a software library is secure or not. This classification is a very time-consuming and exhausting task.We have developed a tool-based automated approach for supporting developers in this complex task through heuristics embedded in an eclipse plugin. Documented vulnerabilities stored in databases will be taken into consideration for the security classification of libraries. Weaknesses do not always entail the same consequences; a scoring that identifies the criticality oriented on their potential consequences is applied. In this paper, a method for the enrichment of knowledge containing vulnerability databases is considered.Our approach is focussing on the scope of software weaknesses, which are library reasoned and documented in vulnerability databases. The Java Library Checker was implemented as eclipse plugin for supporting developers to make potential insecure third-party libraries visible to them.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XPAXQZ4G/Viertel et al. - 2019 - Are Third-Party Libraries Secure A Software Libra.pdf},
  isbn = {978-3-030-12143-3},
  keywords = {Metadata,Software library,Vulnerability database},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{viorres_major_2007,
  title = {Major {{HCI}} Challenges for Open Source Software Adoption and Development},
  booktitle = {Online {{Communities}} and {{Social Computing}}},
  author = {Viorres, Nikos and Xenofon, Papadopoulos and Stavrakis, Modestos and Vlachogiannis, Evangelos and Koutsabasis, Panayiotis and Darzentas, John},
  date = {2007},
  pages = {455--464},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-73257-0_50},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3TS8CTNM/chp%3A10.1007%2F978-3-540-73257-0_50.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@incollection{viseur_identifying_2013,
  title = {Identifying Success Factors for the Mozilla Project},
  booktitle = {Open {{Source Software}}: {{Quality Verification}}},
  author = {Viseur, Robert},
  date = {2013},
  pages = {45--60},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-38928-3_4},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AENQZ9CB/chp%3A10.1007%2F978-3-642-38928-3_4.pdf},
  keywords = {általános OSS,nyílt forrás}
}

@inproceedings{viseur_initial_2014,
  title = {Initial {{Results}} from the {{Study}} of the {{Open Source Sector}} in {{Belgium}}},
  author = {Viseur, Robert},
  date = {2014},
  pages = {1--5},
  publisher = {{ACM Press}},
  doi = {10.1145/2641580.2641591},
  url = {http://dl.acm.org/citation.cfm?doid=2641580.2641591},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3RBIE6QZ/p07.pdf},
  isbn = {978-1-4503-3016-9},
  keywords = {adoption,nyílt forrás},
  langid = {english}
}

@incollection{viseur_open_2012,
  title = {From {{Open Source Software}} to {{Open Source Hardware}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Viseur, Robert},
  date = {2012},
  pages = {286--291},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_23},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/SS9WSZZ5/From Open Source Software to Open Source Hardware.pdf}
}

@article{von_krogh_open_2007,
  title = {The Open Source Software Phenomenon: {{Characteristics}} That Promote Research},
  shorttitle = {The Open Source Software Phenomenon},
  author = {von Krogh, Georg and Spaeth, Sebastian},
  date = {2007-09},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {16},
  pages = {236--253},
  issn = {09638687},
  doi = {10.1016/j.jsis.2007.06.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S096386870700025X},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FMB4WINZ/1-s2.0-S096386870700025X-main.pdf},
  keywords = {általános OSS,Forrás1,nyílt forrás,open source},
  langid = {english},
  number = {3},
  options = {useprefix=true}
}

@article{von_krogh_opening_2010,
  title = {Opening up Design Science: {{The}} Challenge of Designing for Reuse and Joint Development},
  shorttitle = {Opening up Design Science},
  author = {von Krogh, Georg and Haefliger, Stefan},
  date = {2010-12},
  journaltitle = {The Journal of Strategic Information Systems},
  volume = {19},
  pages = {232--241},
  issn = {09638687},
  doi = {10.1016/j.jsis.2010.09.008},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0963868710000545},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZDAAM4KA/1-s2.0-S0963868710000545-main.pdf},
  keywords = {adoption,nyílt forrás},
  langid = {english},
  number = {4},
  options = {useprefix=true}
}

@incollection{voras_early_2012,
  title = {An Early Comparison of Commercial and Open-Source Cloud Platforms for Scientific Environments},
  booktitle = {Agent and {{Multi}}-{{Agent Systems}}. {{Technologies}} and {{Applications}}},
  author = {Voras, Ivan and Orlić, Marin and Mihaljević, Branko},
  date = {2012},
  pages = {164--173},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-30947-2_20},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7FBM8HJ6/chp%3A10.1007%2F978-3-642-30947-2_20.pdf}
}

@inproceedings{vouillon_easing_2014,
  title = {Easing Software Component Repository Evolution},
  booktitle = {Proceedings of the 36th {{International Conference}} on {{Software Engineering}}},
  author = {Vouillon, Jérôme and Dogguy, Mehdi and Di Cosmo, Roberto},
  date = {2014},
  pages = {756--766},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2568262},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MPEPITGV/p756-vouillon.pdf},
  keywords = {development,nyílt forrás,repository}
}

@inproceedings{vouk_using_2013,
  title = {Using Software Reliability Models for Security Assessment—{{Verification}} of Assumptions},
  booktitle = {Software {{Reliability Engineering Workshops}} ({{ISSREW}}), 2013 {{IEEE International Symposium}} On},
  author = {Vouk, Mladen and Williams, Laurie and others},
  date = {2013},
  pages = {23--24},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6688858},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CFGRJZ5F/06688858.pdf},
  keywords = {nyílt forrás,quality}
}

@article{vuorinen_ethical_2007,
  title = {Ethical Codes in the Digital World: Comparisons of the Proprietary, the Open/Free and the Cracker System},
  shorttitle = {Ethical Codes in the Digital World},
  author = {Vuorinen, Jukka},
  date = {2007-02-28},
  journaltitle = {Ethics and Information Technology},
  volume = {9},
  pages = {27--38},
  issn = {1388-1957, 1572-8439},
  doi = {10.1007/s10676-006-9130-2},
  url = {http://link.springer.com/10.1007/s10676-006-9130-2},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G4EHVE8J/art%3A10.1007%2Fs10676-006-9130-2.pdf},
  keywords = {nyílt forrás,tudati dimenzió},
  langid = {english},
  number = {1}
}

@inproceedings{vytovtov_source_2017,
  title = {Source Code Quality Classification Based on Software Metrics},
  booktitle = {2017 20th {{Conference}} of {{Open Innovations Association}} ({{FRUCT}})},
  author = {Vytovtov, Petr and Markov, Evgeny},
  date = {2017-04},
  pages = {505--511},
  issn = {2305-7254},
  doi = {10.23919/FRUCT.2017.8071355},
  abstract = {Nowadays the software development speed is raising constantly. Therefore software development companies need a tool for checking source code quality to increase software maintainability and decreasing the number of errors in it. Moreover the systems of automated programming require the similar tool as well. As a result we have started developing a library for LLVM compiler which can evaluate source code quality at compile time and a programmer could receive information about source code quality and values of software metrics which are used for evaluating quality. In automated programming systems our library will be useful as well as a part of feedback step for increasing quality of generated source code.},
  eventtitle = {2017 20th {{Conference}} of {{Open Innovations Association}} ({{FRUCT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/R3K5ST3U/Vytovtov and Markov - 2017 - Source code quality classification based on softwa.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CS85MGNL/8071355.html},
  keywords = {automated programming systems,Complexity theory,evaluating quality,generated source code,program compilers,program diagnostics,Random access memory,software development companies,software development speed,software maintainability,software maintenance,Software measurement,software metrics,software quality,Software quality,source code quality classification,Volume measurement}
}

@inproceedings{wagener_instrumented_2008,
  title = {An {{Instrumented Analysis}} of {{Unknown Software}} and {{Malware Driven}} by {{Free Libre Open Source Software}}},
  author = {Wagener, Gérard and Dulaunoy, Alexandre and Engel, Thomas},
  date = {2008-11},
  pages = {597--605},
  publisher = {{IEEE}},
  doi = {10.1109/SITIS.2008.57},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4725860},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PPN6WRSG/04725860.pdf},
  isbn = {978-0-7695-3493-0}
}

@inproceedings{wagner_relationship_2016,
  title = {On the {{Relationship}} of {{Inconsistent Software Clones}} and {{Faults}}: {{An Empirical Study}}},
  shorttitle = {On the {{Relationship}} of {{Inconsistent Software Clones}} and {{Faults}}},
  booktitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  author = {Wagner, Stefan and Abdulkhaleq, Asim and Kaya, Kamer and Paar, Alexander},
  date = {2016-03},
  volume = {1},
  pages = {79--89},
  doi = {10.1109/SANER.2016.94},
  abstract = {Background: Code cloning - copying and reusing pieces of source code – is a common phenomenon in software development in practice. There have been several empirical studies on the effects of cloning, but there are contradictory results regarding the connection of cloning and faults. Objective: Our aim is to clarify the relationship between code clones and faults. In particular, we focus on inconsistent (or type-3) clones in this work. Method: We conducted a case study with TWT GmbH where we detected the code clones in three Java systems, set them into relation to information from issue tracking and version control and interviewed three key developers. Results: Of the type-3 clones, 17 \% contain faults. Developers modified most of the type-3 clones simultaneously and thereby fixed half of the faults in type-3 clones consistently. Type-2 clones with faults all evolved to fixed type-3 clones. Clone length is only weakly correlated with faultiness. Conclusion: There are indications that the developers in two cases have been aware of clones. It might be a reason for the weak relationship between type-3 clones and faults. Hence, it seems important to keep developers aware of clones, potentially with new tool support. Future studies need to investigate if the rate of faults in type-3 clones justifies using them as cues in defect detection.},
  eventtitle = {2016 {{IEEE}} 23rd {{International Conference}} on {{Software Analysis}}, {{Evolution}}, and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FNJ5236D/Wagner et al. - 2016 - On the Relationship of Inconsistent Software Clone.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FIFNRUXV/7476632.html},
  keywords = {Cloning,code clones,code cloning,configuration management,History,inconsistent clones,inconsistent software clones,inconsistent software faults,industrial case study,Inspection,Java,Java systems,Open source software,software development,software fault tolerance,software reusability,Software systems,source code (software),source code piece copying,source code piece reusing,TWT GmbH,version control}
}

@book{wagner_software_2013,
  title = {Software {{Product Quality Control}}},
  author = {Wagner, Stefan},
  date = {2013},
  publisher = {{Springer Berlin Heidelberg}},
  location = {{Berlin, Heidelberg}},
  url = {http://link.springer.com/10.1007/978-3-642-38571-1},
  urldate = {2015-10-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/67QPJBCB/chp%3A10.1007%2F978-3-642-38571-1_2.pdf},
  isbn = {978-3-642-38570-4 978-3-642-38571-1},
  langid = {english}
}

@inproceedings{wahyudin_event-based_2007,
  title = {Event-Based Monitoring of Open Source Software Projects},
  booktitle = {Availability, {{Reliability}} and {{Security}}, 2007. {{ARES}} 2007. {{The Second International Conference}} On},
  author = {Wahyudin, Dindin and others},
  date = {2007},
  pages = {1108--1115},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4159915},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TKZIIAT6/04159915.pdf},
  keywords = {Forrás3,nyílt forrás,quality}
}

@incollection{walch_chapter_2018,
  title = {Chapter 11 - {{Open}}-{{Source Operational Risk}}: {{Should Public Blockchains Serve}} as {{Financial Market Infrastructures}}?},
  shorttitle = {Chapter 11 - {{Open}}-{{Source Operational Risk}}},
  booktitle = {Handbook of {{Blockchain}}, {{Digital Finance}}, and {{Inclusion}}, {{Volume}} 2},
  author = {Walch, Angela},
  editor = {Lee Kuo Chuen, David and Deng, Robert},
  date = {2018-01-01},
  pages = {243--269},
  publisher = {{Academic Press}},
  doi = {10.1016/B978-0-12-812282-2.00011-5},
  url = {http://www.sciencedirect.com/science/article/pii/B9780128122822000115},
  urldate = {2020-04-22},
  abstract = {This chapter explores the operational risks raised by the use of common ‘grassroots’ open-source software practices in public blockchains, such as Bitcoin and Ethereum, in their potential role as financial market infrastructures. These practices include the informal software development process, problematic funding for software development, and the possibility of forking inherent to open-source software. The paper argues that the risks raised by these practices significantly undermine public blockchains' suitability to serve as financial market infrastructures. Further, they herald the need to reevaluate the use of these practices outside the blockchain technology setting, in other critical infrastructures based on grassroots open-source software.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9I6SZXH5/B9780128122822000115.html},
  isbn = {978-0-12-812282-2},
  keywords = {Bitcoin,Blockchain,DLT,Ethereum,Financial market infrastructure,Fintech,Open-source software,Operational risk,Risk,Software forks},
  langid = {english}
}

@inproceedings{walden_security_2009,
  title = {Security of Open Source Web Applications},
  booktitle = {Proceedings of the 2009 3rd {{International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Walden, James and Doyle, Maureen and Welch, GA and Whelan, Michael},
  date = {2009},
  pages = {545--553},
  url = {http://dl.acm.org/citation.cfm?id=1671292},
  abstract = {In an empirical study of fourteen widely used open source PHP web applications, we found that the vulnerability density of the aggregate code base decreased from 8.88 vulnerabilities/KLOC to 3.30 from Summer 2006 to Summer 2008. Individual web applications varied widely, with vulnerability densities ranging from 0 to 121.4 at the beginning of the study. While the total number of security problems decreased, vulnerability density increased in eight of the fourteen applications over the analysis period. We developed a security resources indicator metric, which we found to be strongly correlated ( = 0:67; p {$<$} 0:05) with change in vulnerability density over time. Traditional software metrics, such as code size, cyclomatic complexity, nesting complexity, and churn, had significant (p {$<$} 0:05) but much smaller correlations ( = 0:31 at best) with vulnerability density. Vulnerability density was measured using the Fortify Source Code Analyzer static analysis tool.},
  eventtitle = {{{ESEM}} '09},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5HIPAMGH/05314215.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XCJ8F7KB/Walden et al. - 2009 - Security of open source web applications.pdf},
  isbn = {978-1-4244-4842-5},
  keywords = {computer security,nyílt forrás}
}

@article{walia_comparative_2006,
  title = {Comparative {{Investigation}} of {{Vulnerabilities}} in {{Open Source}} and {{Proprietary Software}}: {{An Exploratory Study}}},
  shorttitle = {Comparative {{Investigation}} of {{Vulnerabilities}} in {{Open Source}} and {{Proprietary Software}}},
  author = {Walia, Nitin and Rajagopalan, Balaji and Jain, Hemant},
  date = {2006},
  journaltitle = {AMCIS 2006 Proceedings},
  pages = {108},
  url = {http://aisel.aisnet.org/cgi/viewcontent.cgi?article=1656&context=amcis2006},
  urldate = {2014-10-22},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JBGJFW48/___Comparative Investigation of Vulnerabilities in Open Source and P.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XGDTAHRK/Comparative Investigation of Vulnerabilities in Open Source and P.pdf},
  keywords = {open source}
}

@incollection{waltl_ip_2012,
  title = {{{IP Modularity}} in {{Software Ecosystems}}: {{How SugarCRM}}’s {{IP}} and {{Business Model Shape Its Product Architecture}}},
  shorttitle = {{{IP Modularity}} in {{Software Ecosystems}}},
  booktitle = {Software {{Business}}},
  author = {Waltl, Josef and Henkel, Joachim and Baldwin, Carliss Y.},
  date = {2012},
  pages = {94--106},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-30746-1_8},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PWPQU324/chp%3A10.1007%2F978-3-642-30746-1_8.pdf}
}

@inproceedings{wang_behind_2011,
  title = {Behind {{Linus}}'s Law: {{A}} Preliminary Analysis of Open Source Software Peer Review Practices in {{Mozilla}} and {{Python}}},
  shorttitle = {Behind {{Linus}}'s Law},
  booktitle = {Collaboration {{Technologies}} and {{Systems}} ({{CTS}}), 2011 {{International Conference}} On},
  author = {Wang, Jing and Carroll, John M.},
  date = {2011},
  pages = {117--124},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5928673},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BN467PG3/05928673.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@article{wang_comparative_2015,
  title = {Comparative Case Studies of Open Source Software Peer Review Practices},
  author = {Wang, Jing and Shih, Patrick C. and Wu, Yu and Carroll, John M.},
  date = {2015-11},
  journaltitle = {Information and Software Technology},
  volume = {67},
  pages = {1--12},
  issn = {09505849},
  doi = {10.1016/j.infsof.2015.06.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584915001068},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GW384SZX/1-s2.0-S0950584915001068-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@inproceedings{wang_detecting_2019,
  title = {Detecting "0-{{Day}}" {{Vulnerability}}: {{An Empirical Study}} of {{Secret Security Patch}} in {{OSS}}},
  shorttitle = {Detecting "0-{{Day}}" {{Vulnerability}}},
  booktitle = {2019 49th {{Annual IEEE}}/{{IFIP International Conference}} on {{Dependable Systems}} and {{Networks}} ({{DSN}})},
  author = {Wang, Xinda and Sun, Kun and Batcheller, Archer and Jajodia, Sushil},
  date = {2019-06},
  pages = {485--492},
  issn = {1530-0889},
  doi = {10.1109/DSN.2019.00056},
  abstract = {Security patches in open source software (OSS) not only provide security fixes to identified vulnerabilities, but also make the vulnerable code public to the attackers. Therefore, armored attackers may misuse this information to launch N-day attacks on unpatched OSS versions. The best practice for preventing this type of N-day attacks is to keep upgrading the software to the latest version in no time. However, due to the concerns on reputation and easy software development management, software vendors may choose to secretly patch their vulnerabilities in a new version without reporting them to CVE or even providing any explicit description in their change logs. When those secretly patched vulnerabilities are being identified by armored attackers, they can be turned into powerful "0-day" attacks, which can be exploited to compromise not only unpatched version of the same software, but also similar types of OSS (e.g., SSL libraries) that may contain the same vulnerability due to code clone or similar design/implementation logic. Therefore, it is critical to identify secret security patches and downgrade the risk of those "0-day" attacks to at least "n-day" attacks. In this paper, we develop a defense system and implement a toolset to automatically identify secret security patches in open source software. To distinguish security patches from other patches, we first build a security patch database that contains more than 4700 security patches mapping to the records in CVE list. Next, we identify a set of features to help distinguish security patches from non-security ones using machine learning approaches. Finally, we use code clone identification mechanisms to discover similar patches or vulnerabilities in similar types of OSS. The experimental results show our approach can achieve good detection performance. A case study on OpenSSL, LibreSSL, and BoringSSL discovers 12 secret security patches.},
  eventtitle = {2019 49th {{Annual IEEE}}/{{IFIP International Conference}} on {{Dependable Systems}} and {{Networks}} ({{DSN}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EAUADPGX/Wang et al. - 2019 - Detecting 0-Day Vulnerability An Empirical Stud.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AUSQAUVM/8809499.html},
  keywords = {0-day attacks,0-day vulnerability,armored attackers,BoringSSL,Computer bugs,Databases,easy software development management,learning (artificial intelligence),Machine learning,n-day attacks,open source software,Open source software,public domain software,secret security patches,secretly patched vulnerabilities,Security,security fixes,security of data,security patch,security patch database,security patches mapping,software development management,software maintenance,software vendors,Training,unpatched OSS versions,vulnerability detection,vulnerable code public}
}

@inproceedings{wang_regression_2017,
  title = {A {{Regression Model Based Approach}} for {{Identifying Security Requirements}} in {{Open Source Software Development}}},
  booktitle = {2017 {{IEEE}} 25th {{International Requirements Engineering Conference Workshops}} ({{REW}})},
  author = {Wang, Wentao and Hussein, Nesrin and Gupta, Arushi and Wang, Yinglin},
  date = {2017-09},
  pages = {443--446},
  doi = {10.1109/REW.2017.56},
  abstract = {There are several security requirements identification methods proposed by researchers in up-front requirements engineering (RE). However, in open source software (OSS) projects, developers use lightweight representation and refine requirements frequently by writing comments. They also tend to discuss security aspect in comments by providing code snippets, attachments, and external resource links. Since most security requirements identification methods in up-front RE are based on textual information retrieval techniques, these methods are not suitable for OSS projects or just-in-time RE. In our study, we propose a new model based on logistic regression to identify security requirements in OSS projects. We used five metrics to build security requirements identification models and tested the performance of these metrics by applying those models to three OSS projects. Our results show that four out of five metrics achieved high performance in intra-project testing.},
  eventtitle = {2017 {{IEEE}} 25th {{International Requirements Engineering Conference Workshops}} ({{REW}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CX96QCV3/Wang et al. - 2017 - A Regression Model Based Approach for Identifying .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6SLG8ED6/8054894.html},
  keywords = {comment security aspect,comment writing,Complexity theory,formal specification,information retrieval,just-in-time requirements engineering,lightweight representation,logistic regression,Logistics,Measurement,open source software,Open source software,open source software development,OSS projects,regression analysis,regression model based approach,requirements engineering,Security,security of data,security requirements identification,security requirements identification methods,software engineering,Testing,textual information retrieval techniques,up-front RE}
}

@inproceedings{wang_reliability_2019,
  title = {A {{Reliability Automatic Assessment Framework}} for {{Open Source Software}}},
  booktitle = {2019 {{IEEE}} 24th {{Pacific Rim International Symposium}} on {{Dependable Computing}} ({{PRDC}})},
  author = {Wang, Qian and Jiang, Jianhui and Li, Long},
  date = {2019-12},
  pages = {91--911},
  issn = {2473-3105},
  doi = {10.1109/PRDC47002.2019.00033},
  abstract = {In recent years, more and more companies have moved from closed source software development to open source software (OSS) development. The reliability assessment of OSS has become an important issue. However, due to the lack of a standardized development process and uncertain number of participating developers, it is hard to measure the reliability of OSS compared to closed source software. This paper proposes a framework for reliability automatic assessment of OSS based on JIRA. It contains the failure data acquisition module, the reliability modeling module and the reliability attribute analysis module. The proposed framework is applied on popular OSS Kafka to assess the reliability. The experimental results show that the proposed framework is good for the reliability assessment of OSS.},
  eventtitle = {2019 {{IEEE}} 24th {{Pacific Rim International Symposium}} on {{Dependable Computing}} ({{PRDC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NDV2256Q/Wang et al. - 2019 - A Reliability Automatic Assessment Framework for O.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z6T86SSR/8952146.html},
  keywords = {closed source software development,data acquisition,failure data acquisition module,JIRA,open source software,OSS Kafka,participating developers,public domain software,reliability assessment; open source software; software reliability growth model; JIRA,reliability attribute analysis module,reliability automatic assessment framework,reliability modeling module,software reliability,standardized development process}
}

@article{wang_revisiting_2015,
  title = {Revisiting {{Linus}}’s Law: {{Benefits}} and Challenges of Open Source Software Peer Review},
  shorttitle = {Revisiting {{Linus}}’s Law},
  author = {Wang, Jing and Shih, Patrick C. and Carroll, John M.},
  date = {2015-05},
  journaltitle = {International Journal of Human-Computer Studies},
  volume = {77},
  pages = {52--65},
  issn = {10715819},
  doi = {10.1016/j.ijhcs.2015.01.005},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S1071581915000087},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N8XCUDZZ/1-s2.0-S1071581915000087-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english}
}

@article{wang_tag_2014,
  title = {Tag Recommendation for Open Source Software},
  author = {Wang, Tao and Wang, Huaimin and Yin, Gang and Ling, Charles X. and Li, Xiao and Zou, Peng},
  date = {2014-02},
  journaltitle = {Frontiers of Computer Science},
  volume = {8},
  pages = {69--82},
  issn = {2095-2228, 2095-2236},
  doi = {10.1007/s11704-013-2394-x},
  url = {http://link.springer.com/10.1007/s11704-013-2394-x},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MJQFBRUS/art%3A10.1007%2Fs11704-013-2394-x.pdf},
  langid = {english},
  number = {1}
}

@inproceedings{wang_towards_2018,
  title = {Towards a {{Security Requirements Management Framework}} for {{Open}}-{{Source Software}}},
  booktitle = {2018 {{IEEE}} 26th {{International Requirements Engineering Conference}} ({{RE}})},
  author = {Wang, Wentao},
  date = {2018-08},
  pages = {478--483},
  issn = {2332-6441},
  doi = {10.1109/RE.2018.00065},
  abstract = {Security refers to a class of non-functional requirements (NFRs) related to system confidentiality, integrity, and availability. It plays a critical role in many open source software (OSS) projects. Experience indicates that considering security early in the software life cycle can help address security problems, such as reducing information breach and unauthorized data access. However, unlike up-front requirements engineering (RE), requirements are fully discussed and become elaborated in OSS projects only after the implementation begins. Therefore, security management approaches which based on up-front RE shall be modified or improved while applied to OSS projects. To make OSS projects more secure, this research extends existing security requirements management approaches and proposes a new security management framework for OSS projects. I also describe obstacles for building our framework and formulate their conquering as research questions. Analysis and discussion of research questions will enable me to gain valuable insights, which I will use to improve the proposed framework.},
  eventtitle = {2018 {{IEEE}} 26th {{International Requirements Engineering Conference}} ({{RE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/THAJSNLZ/Wang - 2018 - Towards a Security Requirements Management Framewo.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/YWHQPFY4/8491172.html},
  keywords = {NFRs,nonfunctional requirements,open source software projects,OSS projects,public domain software,Radio frequency,requirements engineering,Requirements management,Security,Security management; security requirements identification; requirements traceability; test case generation,security of data,security problems,security requirements management framework,Software,software life cycle,Stakeholders,system availability,system confidentiality,system integrity,systems analysis,Testing,unauthorized data access,Unified modeling language}
}

@incollection{wasserman_developing_2012,
  title = {Developing {{Mobile Software}} with {{FLOSS}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Wasserman, Anthony I.},
  editor = {Hammouda, Imed and Lundell, Björn and Mikkonen, Tommi and Scacchi, Walt},
  date = {2012-09-10},
  pages = {401--402},
  publisher = {{Springer Berlin Heidelberg}},
  doi = {10.1007/978-3-642-33442-9_47},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_47},
  urldate = {2015-11-27},
  abstract = {The goal of this workshop is to explore the challenges, issues and opportunities associated with the use of free and open source software (FLOSS) in mobile platforms and apps. As mobile phones and devices become more powerful, as cloud services and telecom infrastructure become richer, and as consumer expectations evolve, developers are faced with an array of challenges that affect how they should systematically build and deploy new applications and systems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3D2PH5BQ/Wasserman - 2012 - Developing Mobile Software with FLOSS.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8DC7FUG7/978-3-642-33442-9_47.html},
  isbn = {978-3-642-33441-2 978-3-642-33442-9},
  keywords = {Computers and Education,Computers and Society,Management of Computing and Information Systems,Programming Languages; Compilers; Interpreters,Programming Techniques,Software Engineering},
  langid = {english},
  number = {378},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@article{wasserman_evaluating_2007,
  title = {Evaluating Software Engineering Processes in Commercial and Community Open Source Projects},
  author = {Wasserman, Tony and Capra, Eugenio},
  date = {2007},
  url = {http://repository.cmu.edu/silicon_valley/36/},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3MIRQ4GB/04273072.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{wasserman_osspal_2017,
  ids = {wasserman\_osspal\_2017-1},
  title = {{{OSSpal}}: {{Finding}} and {{Evaluating Open Source Software}}},
  shorttitle = {{{OSSpal}}},
  booktitle = {Open {{Source Systems}}: {{Towards Robust Practices}}},
  author = {Wasserman, Anthony I. and Guo, Xianzheng and McMillian, Blake and Qian, Kai and Wei, Ming-Yu and Xu, Qian},
  date = {2017-05-22},
  pages = {193--203},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-57735-7_18},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-57735-7_18},
  urldate = {2018-08-15},
  abstract = {This paper describes the OSSpal project, which is aimed at helping companies, government agencies, and other organizations find high quality free and open source software (FOSS) that meets their needs. OSSpal is a successor to the Business Readiness Rating (BRR), combining quantitative and qualitative evaluation measures for software in various categories. Instead of a purely numeric calculated score OSSpal adds curation of high-quality FOSS projects and individual user reviews of these criteria. Unlike the BRR project, for which there was no automated support, OSSpal has an operational, publicly available website where users may search by project name or category, and enter ratings and reviews for projects.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6B2JYF5Y/Wasserman et al. - 2017 - OSSpal Finding and Evaluating Open Source Softwar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WIURWMJJ/Wasserman et al. - 2017 - OSSpal Finding and Evaluating Open Source Softwar.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/REPQMXXL/978-3-319-57735-7_18.html},
  isbn = {978-3-319-57734-0 978-3-319-57735-7},
  keywords = {FLOSS,FOSS,Open source forges,Open source software,Software evaluation,Software metrics,Software taxonomy},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{waz_internet_2017,
  title = {Internet of {{Things}} ({{IoT}}) Security Platforms},
  booktitle = {2017 12th {{International Conference}} on {{Computer Engineering}} and {{Systems}} ({{ICCES}})},
  author = {Waz, I. R. and Sobh, M. A. and Bahaa-Eldin, A. M.},
  date = {2017-12},
  pages = {500--507},
  doi = {10.1109/ICCES.2017.8275359},
  abstract = {This survey introduces IoT security items and how to achieve the requirements of these items in a constrained environment to guarantee security in every stage (Device, transmission of data, data on reset, service, and user). Also, it combines these items in one stack to deal with different IoT platforms, this made integration between items to assure the continuity of security from one stage to another stage and helps to have a full tracing of data from IoT device through the middleware to the user and vice versa. Also this paper presents different studies on available IoT platforms.},
  eventtitle = {2017 12th {{International Conference}} on {{Computer Engineering}} and {{Systems}} ({{ICCES}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GV9CIXXS/8275359.html},
  keywords = {attacks,Authentication,Authorization,Encryption,Internet,Internet of Things,Internet of Things security platforms,IoT,IoT device,IoT platforms,IoT security,Middleware,middlewares,Physical layer,platforms secuirty,Privacy,security of data}
}

@article{wegener_open-source_2009,
  title = {Open-Source vs. Closed-Source},
  author = {Wegener, Christoph},
  date = {2009},
  journaltitle = {Datenschutz und Datensicherheit-DuD},
  volume = {33},
  pages = {189--189},
  url = {http://www.springerlink.com/index/273206636256U407.pdf},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KAEM8V5A/Open-source vs. closed-source.pdf},
  number = {3}
}

@article{wei_roles_2017,
  title = {Roles and Politeness Behavior in Community-Based Free/Libre Open Source Software Development},
  author = {Wei, Kangning and Crowston, Kevin and Eseryel, U. Yeliz and Heckman, Robert},
  date = {2017-07-01},
  journaltitle = {Information \& Management},
  shortjournal = {Information \& Management},
  volume = {54},
  pages = {573--582},
  issn = {0378-7206},
  doi = {10.1016/j.im.2016.11.006},
  url = {http://www.sciencedirect.com/science/article/pii/S0378720616303512},
  urldate = {2020-04-22},
  abstract = {Community-based Free/Libre Open Source Software (FLOSS) development relies on contributions from both core and peripheral members. Prior research on core–periphery has focused on software coding-related behaviors. We study how core–periphery roles are related to social-relational behavior in terms of politeness behavior. Data from two FLOSS projects suggest that both core and peripheral members use more positive politeness strategies than negative strategies. Further, core and peripheral members use different strategies to protect positive face in positive politeness, which we term respect and intimacy, respectively. Our results contribute to FLOSS research and politeness theory.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GZKJ92QR/Wei et al. - 2017 - Roles and politeness behavior in community-based f.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/48ICYJ8Q/S0378720616303512.html},
  keywords = {Core–periphery structure,Open source software development,Politeness behavior},
  langid = {english},
  number = {5}
}

@article{wei_understanding_2014,
  title = {Understanding Group Maintenance Behavior in {{Free}}/{{Libre Open}}-{{Source Software}} Projects: {{The}} Case of {{Fire}} and {{Gaim}}},
  shorttitle = {Understanding Group Maintenance Behavior in {{Free}}/{{Libre Open}}-{{Source Software}} Projects},
  author = {Wei, Kangning and Crowston, Kevin and Li, Na Lina and Heckman, Robert},
  date = {2014-04},
  journaltitle = {Information \& Management},
  volume = {51},
  pages = {297--309},
  issn = {03787206},
  doi = {10.1016/j.im.2014.02.001},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720614000093},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/IVRRV5BE/1-s2.0-S0378720614000093-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {3}
}

@incollection{weikert_model_2013,
  title = {A {{Model}} of {{Commercial Open Source Software Product Features}}},
  booktitle = {Software {{Business}}. {{From Physical Products}} to {{Software Services}} and {{Solutions}}},
  author = {Weikert, Florian and Riehle, Dirk},
  date = {2013},
  pages = {90--101},
  url = {http://nuremberg.riehle.org/wp-content/uploads/2013/04/ICSOB2013_017.pdf},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M4UIN6ID/chp%3A10.1007%2F978-3-642-39336-5_10.pdf},
  isbn = {978-3-642-39336-5},
  keywords = {commercial open source,felmérés,open source},
  number = {150},
  series = {Lecture {{Notes}} in {{Business Information Processing}}}
}

@inproceedings{weikert_model_2013-1,
  title = {A {{Model}} of {{Commercial Open Source Software Product}}},
  author = {Weikert, Florian and Riehle, Dirk},
  date = {2013},
  location = {{Potsdam, Germany}},
  url = {http://dirk.riehle.org/wp-content/uploads/2013/04/ICSOB2013_017.pdf},
  urldate = {2015-11-27},
  eventtitle = {4th {{International Conference}}, {{ICSOB}} 2013},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/224KKXDE/chp%3A10.1007%2F978-3-642-39336-5_10.pdf},
  isbn = {978-3-642-39336-5},
  keywords = {_SMS_untagged,nyílt forrás}
}

@incollection{weinberg_internet_2015,
  ids = {podnar\_zarko\_internet\_2015},
  title = {The {{Internet}} of {{Things}} and {{Open Source}} ({{Extended Abstract}})},
  booktitle = {Interoperability and {{Open}}-{{Source Solutions}} for the {{Internet}} of {{Things}}},
  author = {Weinberg, Bill},
  date = {2015},
  pages = {1--5},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-16546-2_1},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-16546-2_1},
  urldate = {2018-08-14},
  abstract = {This paper explores divergent visions for the evolution of Internet of Things (IoT) technology and business models, and the ecosystem that exists around them. In particular, it examines the role and reach of open source software (OSS) in building and sustaining the IoT, from infrastructure to applications and other value-added device content. Specifically, it explores how OSS can support competing and complementary architectures and meet looming IoT challenges, including security and privacy on this new digital frontier.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EUFPC6M6/chp%3A10.1007%2F978-3-319-16546-2_1.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TN8CW5BB/Weinberg - 2015 - The Internet of Things and Open Source (Extended A.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XZPHKA8T/Weinberg - 2015 - The Internet of Things and Open Source (Extended A.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2G8BHXIW/978-3-319-16546-2_1.html;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/UKI9ZBQK/978-3-319-16546-2_1.html},
  isbn = {978-3-319-16545-5 978-3-319-16546-2},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{weis_sgerber_small_2008,
  title = {Small Patches Get In!},
  booktitle = {Proceedings of the 2008 International Working Conference on {{Mining}} Software Repositories},
  author = {Wei\textbackslash s sgerber, Peter and Neu, Daniel and Diehl, Stephan},
  date = {2008},
  pages = {67--76},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1370767},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HB2T9RT7/___p67-weissgerber.pdf}
}

@inproceedings{weiss_profiting_2010,
  title = {Profiting from Open Source},
  booktitle = {Proceedings of the 15th {{European Conference}} on {{Pattern Languages}} of {{Programs}}},
  author = {Weiss, Michael},
  date = {2010},
  pages = {5},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2328916},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GF5WVW3Q/a1-weiss.pdf},
  keywords = {Commercial relations,development,Forrás3,nyílt forrás}
}

@inproceedings{wen_case_2017,
  title = {A {{Case Study}}: {{Heartbleed Vulnerability Management}} and {{Swedish Municipalities}}},
  shorttitle = {A {{Case Study}}},
  booktitle = {Human {{Aspects}} of {{Information Security}}, {{Privacy}} and {{Trust}}},
  author = {Wen, Shao-Fang and Kowalski, Stewart},
  editor = {Tryfonas, Theo},
  date = {2017},
  pages = {414--431},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-58460-7_29},
  abstract = {In Sweden, the use of open source software (OSS) in public sectors has been promoted by the government in recent years. A number of Swedish municipalities forms interest communities to share OSS information and work together with OSS issues. However, it lacks of studies and evidences that these municipalities have adequate routines for managing warnings and advices from the communities on OSS security incidents. The Heartbleed vulnerability that occurred in April 2014 was a sudden case for these municipalities to take remedial actions to protect their information assets in a timely manner. This work aims to take a socio-technical study of how Swedish municipalities utilizes information channels to handle the OSS security incident and their security posture before, during and after the incident. We conducted a case study for Heartbleed incident management in Swedish municipalities, where three municipalities located in different regions of the country were studied. This study used a qualitative research method combining with Security-by-Consensus (SBC) analytical model as a research paradigm for data collection, and processing and analysis. The result suggests that the socio-technical aspects of open source security should be taken into account in Swedish municipalities for OSS adoption and security incident management.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PBLXCRET/Wen and Kowalski - 2017 - A Case Study Heartbleed Vulnerability Management .pdf},
  isbn = {978-3-319-58460-7},
  keywords = {Heartbleed,Open source software,SBC model,Security incident,Socio-technical,Swedish municipalities},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{wen_empirical_2019,
  title = {An Empirical Study of Security Culture in Open Source Software Communities},
  booktitle = {Proceedings of the 2019 {{IEEE}}/{{ACM International Conference}} on {{Advances}} in {{Social Networks Analysis}} and {{Mining}}},
  author = {Wen, Shao-Fang and Kianpour, Mazaher and Kowalski, Stewart},
  date = {2019-08-27},
  pages = {863--870},
  publisher = {{Association for Computing Machinery}},
  location = {{Vancouver, British Columbia, Canada}},
  doi = {10.1145/3341161.3343520},
  url = {https://doi.org/10.1145/3341161.3343520},
  urldate = {2020-04-22},
  abstract = {Open source software (OSS) is a core part of virtually all software applications today. Due to the rapidly growing impact of OSS on society and the economy, the security aspect has attracted researchers' attention to investigate this distinctive phenomenon. Traditionally, research on OSS security has often focused on technical aspects of software development. We argue that these aspects are important, however, technical security practice considering different social aspects of OSS development will assure the effectiveness and efficiency of the implementation of the tool. To mitigate this research gap, in this empirical study, we explore the current security culture in the OSS development phenomenon using a survey instrument with six evaluation dimensions: attitude, behavior, competency, subjective norms, governance, and communication. By exploring the current security culture in OSS communities, we can start to understand the influence of security on participants' security behaviors and decision-making, so that we can make realistic and practical suggestions. In this paper, we present the measurements of security culture adopted in the study and discuss corresponding security issues that need to be addressed in OSS communities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HM8BSZS7/Wen et al. - 2019 - An empirical study of security culture in open sou.pdf},
  isbn = {978-1-4503-6868-1},
  keywords = {open source software,security culture,software security},
  series = {{{ASONAM}} '19}
}

@article{wen_leading_2020,
  title = {Leading Successful Government-Academia Collaborations Using {{FLOSS}} and Agile Values},
  author = {Wen, Melissa and Siqueira, Rodrigo and Lago, Nelson and Camarinha, Diego and Terceiro, Antonio and Kon, Fabio and Meirelles, Paulo},
  date = {2020-06-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {164},
  pages = {110548},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2020.110548},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121220300303},
  urldate = {2020-04-22},
  abstract = {Government and academia share concerns for efficiently and effectively servicing societal demands, which includes the development of e-government software. Government-academia partnerships can be a valuable approach for improving productivity in achieving these goals. However, governmental and academic institutions tend to have very different agendas and organizational and managerial structures, which can hinder the success of such collaborative projects. In order to identify effective approaches to overcome collaboration barriers, we systematically studied the case of the Brazilian Public Software portal project, a 30-month government-academia collaboration that, using Free/Libre/Open Source Software practices and agile methods for project management, developed an unprecedented platform in the context of the Brazilian government. We gathered information from experience reports and data collection from repositories and interviews to derive a collection of practices that contributed to the success of the collaboration. In this paper, we describe how the data analysis led to the identification of a set of three high-level decisions supported by the adoption of nine best practices that improved the project performance and enabled professional training of the whole team.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B7X9W7RW/Wen et al. - 2020 - Leading successful government-academia collaborati.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ZHMGVTVG/S0164121220300303.html},
  keywords = {Agile methodologies,e-Government,Free software,Government-Academia collaboration,Open source software,Project management},
  langid = {english}
}

@inproceedings{wen_learning_2018,
  title = {Learning Secure Programming in Open Source Software Communities: A Socio-Technical View},
  shorttitle = {Learning Secure Programming in Open Source Software Communities},
  booktitle = {Proceedings of the 6th {{International Conference}} on {{Information}} and {{Education Technology}}},
  author = {Wen, Shao-Fang},
  date = {2018-01-06},
  pages = {25--32},
  publisher = {{Association for Computing Machinery}},
  location = {{Osaka, Japan}},
  doi = {10.1145/3178158.3178202},
  url = {https://doi.org/10.1145/3178158.3178202},
  urldate = {2020-04-22},
  abstract = {In open source software (OSS) communities, volunteers collaborate and integrate expertise to develop the software online via the Internet in a decentralized, highly interactive and knowledge-intensive process. Development of qualified and secured software products relies mainly on the ability of OSS participants to acquire, refine and use new aspects of secure programming knowledge. Many OSS proponents believe that the open source innovation offers significant learning opportunities from its best practices. However, studies that specifically explore learning of software security in the context of open source development are scarce. This paper aims to empirically assess present knowledge sharing and learning about secure programming knowledge in the context of OSS communities utilized a socio-technical approach on OSS projects based on an ethnographic observation. Our motivation is not only to evaluate the knowledge sharing and learning mechanisms and the extent to which they may be viable and successful but also to gain insight into the security culture and project factors that affect learning processes of secure programming in OSS communities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S93GMNS2/Wen - 2018 - Learning secure programming in open source softwar.pdf},
  isbn = {978-1-4503-5359-5},
  keywords = {open source software,open source software community,secure programming,socio-technical,software security},
  series = {{{ICIET}} '18}
}

@inproceedings{wen_learning_2019,
  title = {Learning {{Software Security}} in {{Context}}: {{An Evaluation}} in {{Open Source Software Development Environment}}},
  shorttitle = {Learning {{Software Security}} in {{Context}}},
  booktitle = {Proceedings of the 14th {{International Conference}} on {{Availability}}, {{Reliability}} and {{Security}}},
  author = {Wen, Shao-Fang and Katt, Basel},
  date = {2019-08-26},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Canterbury, CA, United Kingdom}},
  doi = {10.1145/3339252.3340336},
  url = {https://doi.org/10.1145/3339252.3340336},
  urldate = {2020-04-22},
  abstract = {Learning software security has become a complex and difficult task today than it was even a decade ago. With the increased complexity of computer systems and a variety of applications, it is hard for software developers to master the expertise required to deal with the variety of security concepts, methods, and technologies that are required in software projects. Although a large number of security learning materials are widely available in books, open literature or on the Internet, they are difficult for learners to understand the rationale of security topics and correlate the concepts with real software scenarios. We argue that the traditional approach, which usually organizes knowledge content topically, with security-centric, is not suitable to motivate learners and stimulate learners' interest. To tackle this learning issue, our research is focused on forging a contextualized learning environment for software security where learners can explore security knowledge and relate it to the context that they are familiar with. This learning system is developed base on our proposed context-based learning approach and based on ontological technologies. In this paper, we present our evaluation study in the open source software (OSS) development environment. Our results demonstrate that contextualized learning can help OSS developers identify their necessary security information, improve learning efficiency and make security knowledge more meaningful for their software development tasks},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CVCG56YD/Wen and Katt - 2019 - Learning Software Security in Context An Evaluati.pdf},
  isbn = {978-1-4503-7164-3},
  keywords = {context-based,contextualized learning,learning system,ontology,Software security},
  series = {{{ARES}} '19}
}

@inproceedings{wen_security_2019,
  title = {Security {{Knowledge Management}} in {{Open Source Software Communities}}},
  booktitle = {Innovative {{Security Solutions}} for {{Information Technology}} and {{Communications}}},
  author = {Wen, Shao-Fang and Kianpour, Mazaher and Katt, Basel},
  editor = {Lanet, Jean-Louis and Toma, Cristian},
  date = {2019},
  pages = {53--70},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-12942-2_6},
  abstract = {Open source software (OSS) communities are groups of individuals, technical or non-technical, interacting with collaborating peers in online communities of practices to develop OSS, solve particular software problems and exchange ideas. People join OSS communities with a different level of programming skills and experience and might lack formal, college-level software security training. There remains a lot of confusion in participants’ mind as to what is secured code and what the project wants. Another problem is that the huge amount of available software security information nowadays has resulted in a form of information overload to software engineers, who usually finish studying it with no clue about how to apply those principles properly to their own applications. This leads to a knowledge gap between knowledge available and knowledge required to build secure applications in the context of software projects. Given the increased importance and complexity of OSS in today’s world, lacking proper security knowledge to handle vulnerabilities in OSS development will result in breaches that are more serious in the future. The goal of this research work is to fill the knowledge gap by providing an artifact that would facilitate the effective security-knowledge transferring and learning in the context of OSS development. In this work-in-progress paper, we present our ongoing research work following design science research methodology on the domain problem identification and the development of the artifact.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AMEVHIUW/Wen et al. - 2019 - Security Knowledge Management in Open Source Softw.pdf},
  isbn = {978-3-030-12942-2},
  keywords = {Knowledge management,Open source software,Software security},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{wen_software_2017,
  title = {Software Security in Open Source Development: {{A}} Systematic Literature Review},
  shorttitle = {Software Security in Open Source Development},
  booktitle = {2017 21st {{Conference}} of {{Open Innovations Association}} ({{FRUCT}})},
  author = {Wen, Shao-Fang},
  date = {2017-11},
  pages = {364--373},
  doi = {10.23919/FRUCT.2017.8250205},
  abstract = {Despite the security community's emphasis on the importance of building secure open source software (OSS), the number of new vulnerabilities found in OSS is increasing. In addition, software security is about the people that develop and use those applications and how their vulnerable behaviors can lead to exploitation. This leads to a need for reiteration of software security studies for OSS developments to understand the existing security practices and the security weakness among them. In this paper, a systematic review method with a sociotechnical analysis approach is applied to identify, extract and analyze the security studies conducted in the context of open source development. The findings include: (1) System verification is the most cited security area in OSS research; (2) The socio-technical perspective has not gained much attention in this research area; and (3) No research has been conducted focusing on the aspects of security knowledge management in OSS development.},
  eventtitle = {2017 21st {{Conference}} of {{Open Innovations Association}} ({{FRUCT}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I3E5CZIM/Wen - 2017 - Software security in open source development A sy.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7WJJ7MMI/8250205.html},
  keywords = {Buildings,cited security area,Focusing,knowledge management,Knowledge management,open source development,Open source software,OSS development,OSS research,public domain software,secure open source software,Security,security community,security knowledge management,security of data,security weakness,socio-technical perspective,software engineering,software security,Systematics,vulnerable behaviors}
}

@book{wenger_international_2006,
  title = {International {{CIIP Handbook}} 2006},
  author = {Wenger, Andreas and Abele-Wigert, Isabelle and Dunn, Myriam},
  date = {2006},
  publisher = {{Center for Security Studies, ETH Zürich}},
  url = {http://kms1.isn.ethz.ch/serviceengine/Files/ISN/16156/ipublicationdocument_singledocument/64e1b764-023d-47ea-bc4d-449215d016b7/en/CIIP_HB_06_Vol.1.pdf},
  urldate = {2014-03-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C7KV9IC8/CIIP_HB_08.pdf}
}

@misc{wessel_power_2018,
  title = {The {{Power}} of {{Bots}}: {{Characterizing}} and {{Understanding Bots}} in {{OSS Projects}}},
  shorttitle = {The {{Power}} of {{Bots}}},
  author = {Wessel, Mairieli and de Souza, Bruno Mendes and Steinmacher, Igor and Wiese, Igor S. and Polato, Ivanilton and Chaves, Ana Paula and Gerosa, Marco A.},
  date = {2018-11-01},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/3274451},
  urldate = {2020-04-22},
  abstract = {Leveraging the pull request model of social coding platforms, Open Source Software (OSS) integrators review developers' contributions, checking aspects like license, code quality, and testability. Some projects use bots to automate predefined, sometimes repetitive tasks, thereby assisting integrators' and contributors' work. Our research investigates the usage and impact of such bots. We sampled 351 popular projects from GitHub and found that 93 (26\%) use bots. We classified the bots, collected metrics from before and after bot adoption, and surveyed 228 developers and integrators. Our results indicate that bots perform numerous tasks. Although integrators reported that bots are useful for maintenance tasks, we did not find a consistent, statistically significant difference between before and after bot adoption across the analyzed projects in terms of number of comments, commits, changed files, and time to close pull requests. Our survey respondents deem the current bots as not smart enough and provided insights into the bots' relevance for specific tasks, challenges, and potential new features. We discuss some of the raised suggestions and challenges in light of the literature in order to help GitHub bot designers reuse and test ideas and technologies already investigated in other contexts.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PKNLZ9G2/Wessel et al. - 2018 - The Power of Bots Characterizing and Understandin.pdf},
  keywords = {automated agents,bots,chatbots,open source software,pull request,pull-based model},
  options = {useprefix=true}
}

@inproceedings{wessel_should_2019,
  title = {Should {{I}} Stale or Should {{I}} Close? An Analysis of a Bot That Closes Abandoned Issues and Pull Requests},
  shorttitle = {Should {{I}} Stale or Should {{I}} Close?},
  booktitle = {Proceedings of the 1st {{International Workshop}} on {{Bots}} in {{Software Engineering}}},
  author = {Wessel, Mairieli and Steinmacher, Igor and Wiese, Igor and Gerosa, Marco A.},
  date = {2019-05-27},
  pages = {38--42},
  publisher = {{IEEE Press}},
  location = {{Montreal, Quebec, Canada}},
  doi = {10.1109/BotSE.2019.00018},
  url = {https://doi.org/10.1109/BotSE.2019.00018},
  urldate = {2020-04-22},
  abstract = {On GitHub, projects use bots to automate predefined and repetitive tasks related to issues and pull requests. Our research investigates the adoption of the stale bot, which helps maintainers triaging abandoned issues and pull requests. We analyzed the bots' configuration settings and their modifications over time. These settings define the time for tagging issues and pull request as stale and closing them. We collected data from 765 OSS projects hosted on GitHub. Our results indicate that most of the studied projects made no more than three modifications in the configurations file, issues tagged as bug reports are exempt from being considered stale, while the same occurs with pull requests that need some input to be processed.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9TCD89FZ/Wessel et al. - 2019 - Should I stale or should I close an analysis of a.pdf},
  keywords = {abandoned issues,bots,open source software},
  series = {{{BotSE}} '19}
}

@article{west_open_2001,
  title = {Open Source Standardization: The Rise of {{Linux}} in the Network Era},
  shorttitle = {Open Source Standardization},
  author = {West, Joel and Dedrick, Jason},
  date = {2001},
  journaltitle = {Knowledge, Technology \& Policy},
  volume = {14},
  pages = {88--112},
  url = {http://link.springer.com/article/10.1007/PL00022278},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D4R44W4F/art%3A10.1007%2FPL00022278.pdf},
  number = {2}
}

@incollection{westenholz_institutional_2006,
  title = {Institutional Entrepreneurs and the Bricolage of Intellectual Property Discourses},
  booktitle = {Open {{Source Systems}}},
  author = {Westenholz, Ann},
  date = {2006},
  pages = {183--193},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/0-387-34226-5_18},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H8HCKBJI/chp%3A10.1007%2F0-387-34226-5_18.pdf},
  keywords = {gazdasági hatás,nyílt forrás}
}

@online{westerhof_theoretical_2017,
  title = {Theoretical {{Concept}} – {{Horus Scenario}}},
  author = {Westerhof, Willem},
  date = {2017},
  url = {https://horusscenario.com/theoretical-concept/},
  urldate = {2018-09-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/M5WFNA5M/theoretical-concept.html},
  langid = {american}
}

@misc{wheeler_free-libre_2006,
  title = {Free-{{Libre}} / {{Open Source Software}} ({{FLOSS}}) and {{Software Assurance}} / {{Software Security}}},
  author = {Wheeler, David A.},
  date = {2006-12-11},
  url = {http://www.dwheeler.com/essays/oss_software_assurance.pdf},
  urldate = {2013-04-02},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/F736GQJ2/oss_software_assurance.pdf},
  langid = {english}
}

@online{wheeler_how_2011,
  title = {How to {{Evaluate Open Source Software}} / {{Free Software}} ({{OSS}}/{{FS}}) {{Programs}}},
  author = {Wheeler, David A.},
  date = {2011},
  url = {http://www.dwheeler.com/oss_fs_eval.html},
  urldate = {2013-05-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HHZRQX8S/oss_fs_eval.html},
  keywords = {evaluation,open source}
}

@book{wheeler_why_2005,
  title = {Why {{Open Source Software}}/{{Free Software}} ({{OSS}}/{{FS}}, {{FLOSS}}, or {{FOSS}})? {{Look}} at the {{Numbers}}!},
  shorttitle = {Why {{Open Source Software}}/{{Free Software}} ({{OSS}}/{{FS}}, {{FLOSS}}, or {{FOSS}})?},
  author = {Wheeler, David A.},
  date = {2005},
  url = {http://www.dwheeler.com/oss_fs_why.html},
  urldate = {2013-06-17},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2SNWQQM5/oss_software_assurance.pdf}
}

@online{wheeler_why_2007,
  title = {Why {{Open Source Software}} / {{Free Software}} ({{OSS}}/{{FS}}, {{FOSS}}, or {{FLOSS}})? {{Look}} at the {{Numbers}}!},
  author = {Wheeler, David A.},
  date = {2007},
  url = {http://www.dwheeler.com/oss_fs_why.html},
  urldate = {2013-04-26},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DBWZNA6F/oss_fs_why.html}
}

@inproceedings{widder_gender_2019,
  title = {Gender in {{Open Source Communities}}: {{Different Migration Patterns}} and {{Forms}} of {{Work}}},
  shorttitle = {Gender in {{Open Source Communities}}},
  booktitle = {2019 {{IEEE Symposium}} on {{Visual Languages}} and {{Human}}-{{Centric Computing}} ({{VL}}/{{HCC}})},
  author = {Widder, David Gray},
  date = {2019-10},
  pages = {241--242},
  issn = {1943-6106},
  doi = {10.1109/VLHCC.2019.8818919},
  abstract = {Open source software (OSS) runs much of the world's computing infrastructure [1]. To survive, OSS projects need a steady supply of (often volunteer) labor. Most OSS projects are open to newcomers in theory, but research has uncovered technical and social barriers that newcomers face when joining [2]. The process of evolving from a peripheral contributor to a core contributor is referred as “migration” [3]. Core contributors conduct most of the work and thus are important for the long term health of an OSS project [4], [5].},
  eventtitle = {2019 {{IEEE Symposium}} on {{Visual Languages}} and {{Human}}-{{Centric Computing}} ({{VL}}/{{HCC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MUY9BWJ8/Widder - 2019 - Gender in Open Source Communities Different Migra.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3HI3WRDA/8818919.html},
  keywords = {core contributor,Ecosystems,Interviews,migration patterns,open source communities,open source software,Open source software,OSS project,peripheral contributor,public domain software,social barriers,software development management,Software engineering,technical barriers,Visualization,Writing}
}

@incollection{william_mahoney_instrumentation_2007,
  title = {Instrumentation of {{Open}}-{{Source Software For Intrusion Detection}}},
  booktitle = {7th {{International Workshop}}, {{RV}} 2007},
  author = {{William Mahoney} and {William L. Sousan}},
  date = {2007},
  pages = {151--163},
  location = {{Vancover, Canada}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N6K3AFFA/__instrumentation_os.pdf},
  isbn = {978-3-540-77395-5}
}

@book{william_stallings_cryptography_nodate,
  title = {Cryptography and {{Network Security}}: {{Principles}} and {{Practice}}},
  author = {{William Stallings}},
  edition = {5},
  publisher = {{Prentice Hall}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7395DTDT/Stalliings Chapter-21 Malware.pdf},
  isbn = {978-0-13-609704-4},
  pagetotal = {744}
}

@incollection{williams_advantages_2005,
  title = {The {{Advantages}} of {{Adopting Open Source Software}}},
  booktitle = {Expanding {{Choice}}: {{Moving}} to {{Linux}} and {{Open Source}} with {{Novell Open Enterprise Server}}},
  author = {Williams, Jason and Clegg, Peter and Dulaney, Emmett},
  date = {2005},
  publisher = {{Novell Press}},
  url = {http://www.informit.com/articles/article.aspx?p=376255},
  urldate = {2013-05-04},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/G67XG78U/article.html},
  isbn = {978-0-672-32722-3}
}

@inproceedings{williams_creating_2018,
  ids = {williams\_creating\_2018-1},
  title = {Creating and {{Integrating}} a {{FLOSS Product}} into {{UK Law Enforcement}}},
  booktitle = {Open {{Source Systems}}: {{Enterprise Software}} and {{Solutions}}},
  author = {Williams, Joseph},
  date = {2018-06-08},
  pages = {117--127},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-92375-8_10},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-92375-8_10},
  urldate = {2018-08-15},
  abstract = {Open Source Internet Research Tool (OSIRT) is a free and open source software tool that enables law enforcement officials to conduct online research and obtain artefacts in an evidential and lawful manner. Over the past three years, OSIRT has seen growth from a handful of users within UK law enforcement, to a reach that extends to countries across the globe which also sees usage outside of law enforcement and beyond its original scope.This paper will reflect upon OSIRT’s development, and discusses issues surrounding the development of a FLOSS product for UK law enforcement. With cuts to budgets being made to law enforcement services, FLOSS software like OSIRT has an opportunity to flourish in this sector. To establish OSIRT’s and FLOSS’ integration into UK law enforcement, interviews, a small case study and questionnaires were conducted with serving police officers, police trainers and an IT administrator; all have experience with OSIRT.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7Y3DT52D/Williams - 2018 - Creating and Integrating a FLOSS Product into UK L.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VDURA6RS/Williams - 2018 - Creating and Integrating a FLOSS Product into UK L.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CMK3GQDT/978-3-319-92375-8_10.html},
  isbn = {978-3-319-92374-1 978-3-319-92375-8},
  keywords = {Internet investigations,Law enforcement,Open source intelligence,Open source research,Open source software},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@book{williams_free_2002,
  title = {Free as in Freedom: {{Richard Stallman}}'s Crusade for Free Software},
  shorttitle = {Free as in Freedom},
  author = {Williams, Sam},
  date = {2002},
  publisher = {{O'Reilly}},
  location = {{Sebastopol, Calif. : Farnham}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/642ZNM9Z/chp%3A10.1007%2F978-3-642-24418-6_7.pdf},
  isbn = {978-0-596-00287-9},
  keywords = {Computer programmers,Free Software Foundation (Cambridge; Mass.),Hackers,Open source software,Stallman; Richard,United States},
  pagetotal = {225}
}

@incollection{wilson_cyber_2014,
  title = {Cyber {{Threats}} to {{Critical Information Infrastructure}}},
  booktitle = {Cyberterrorism: {{Understanding}}, {{Assessment}}, and {{Response}}},
  author = {Wilson, Clay},
  editor = {Chen, Thomas M. and Jarvis, Lee and Macdonald, Stuart},
  date = {2014},
  pages = {123--136},
  publisher = {{Springer New York}},
  location = {{New York, NY}},
  doi = {10.1007/978-1-4939-0962-9_7},
  url = {https://doi.org/10.1007/978-1-4939-0962-9_7},
  urldate = {2018-09-07},
  abstract = {Chapter OverviewAll critical infrastructures are dependent on computer information infrastructures for management, control, and communications. The government defines a critical infrastructure as, …systems and assets, whether physical or virtual, so vital to the United States that the incapacity or destruction of such systems and assets would have a debilitating impact on security, national economic security, national public health or safety… (DHS 2012). Critical information infrastructure (CII) facilities use special equipment to control or manage telecommunications, air transportation, the financial sector, the electric power grid and many other services important for the economy and daily activity. Cyber attacks against these and other critical infrastructure facilities can potentially disrupt services over widespread areas and long times. Critical infrastructure equipment systems have unique security vulnerabilities that can make them appear to be relatively easy targets for cyber espionage or cyber sabotage. Examples of cyber attacks aimed at CII facility equipment vulnerabilities include malicious computer programs called Flame and Stuxnet, which were reportedly created by the U.S. and Israel for cyber espionage and sabotage against critical nuclear industrial facilities in Iran. In the U.S., officials have expressed warnings that cyber attacks by nations, criminals, or extremists and terrorists could soon overtake traditional violent terrorist attacks as the top threat to U.S. National Security (Nakashima, Senate Ready to take up cybersecurity bill that critics say is too weak, 2012).This chapter explores emerging cyberterrorism threats to critical information infrastructures. There is discussion of the special cyber vulnerabilities found in industrial control systems that operate critical infrastructure facilities. These special vulnerabilities help make important critical infrastructures look like easy targets for possible cyberterrorist attacks. This is followed by a description of malicious zero-day exploits, which provide sophisticated stealth characteristics that can help to secretly insert malicious code into critical infrastructure systems for espionage and for cyber sabotage. Hackers and cyber experts may knowingly or unknowingly sell these zero-day exploits and malicious code to extremists or terrorist groups. Governments and businesses may also use the stealth features of zero-day exploit code to insert malicious cyber code into critical infrastructures of businesses or nations which may later be activated for cyber sabotage. As Western governments continue to use pre-emptive cyber strikes to enforce unilateral policy decisions, this may encourage retaliatory cyberattacks from extremists or terrorists that target critical infrastructures in the West. Analysis of the code for Flame and Stuxnet has been shared widely among teams of researchers and teams of hackers in several countries, and copies of the code have become an open repository for re-usable malicious technology. It is likely that extremists and terrorists may now also have access to copies of the malicious technologies available in this repository that can be used as models for future cyberterrorist attacks directed against critical infrastructures in Western nations.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TFJTEPE8/Wilson - 2014 - Cyber Threats to Critical Information Infrastructu.pdf},
  isbn = {978-1-4939-0962-9},
  keywords = {Criminal Organization,Critical Infrastructure,Extremist Group,Malicious Code,Terrorist Group},
  langid = {english}
}

@inproceedings{wilson_pretty_2015,
  title = {From {{Pretty Good}} to {{Great}}: {{Enhancing PGP Using Bitcoin}} and the {{Blockchain}}},
  booktitle = {Network and {{System Security}}},
  author = {Wilson, Duane and Ateniese, Giuseppe},
  date = {2015},
  volume = {9408},
  pages = {368--375},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  url = {http://link.springer.com/10.1007/978-3-319-25645-0},
  urldate = {2016-01-15},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ES64GGTG/chp%3A10.1007%2F978-3-319-25645-0_25.pdf},
  isbn = {978-3-319-25644-3 978-3-319-25645-0},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{wright_software_2011,
  title = {Software, Vendors and Reputation: An Analysis of the Dilemma in Creating Secure Software},
  shorttitle = {Software, Vendors and Reputation},
  booktitle = {Trusted {{Systems}}},
  author = {Wright, Craig S.},
  date = {2011},
  pages = {346--360},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-25283-9_23},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HAG89FAU/chp%3A10.1007%2F978-3-642-25283-9_23.pdf},
  keywords = {computer security,Forrás3,nyílt forrás}
}

@article{wu_analysis_2017,
  title = {Analysis of License Inconsistency in Large Collections of Open Source Projects},
  author = {Wu, Yuhao and Manabe, Yuki and Kanda, Tetsuya and German, Daniel M. and Inoue, Katsuro},
  date = {2017-06-01},
  journaltitle = {Empirical Software Engineering},
  shortjournal = {Empir Software Eng},
  volume = {22},
  pages = {1194--1222},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-016-9487-8},
  url = {https://link.springer.com/article/10.1007/s10664-016-9487-8},
  urldate = {2018-08-15},
  abstract = {Free and open source software (FOSS) plays an important role in source code reuse practice. They usually come with one or more software licenses written in the header part of source files, stating the requirements and conditions which should be followed when been reused. Removing or modifying the license statement by re-distributors will result in the inconsistency of license with its ancestor, and may potentially cause license infringement. In this paper, we describe and categorize different types of license inconsistencies and propose a method to detect them. Then we applied this method to Debian 7.5 and a collection of 10,514 Java projects on GitHub and present the license inconsistency cases found in these systems. With a manual analysis, we summarized various reasons behind these license inconsistency cases, some of which imply potential license infringement and require attention from the developers. This analysis also exposes the difficulty to discover license infringements, highlighting the usefulness of finding and maintaining source code provenance.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RXS9YU9G/Wu et al. - 2017 - Analysis of license inconsistency in large collect.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9XE9RIVC/s10664-016-9487-8.html},
  langid = {english},
  number = {3}
}

@article{wu_empirical_2007,
  title = {An Empirical Analysis of Open Source Software Developers’ Motivations and Continuance Intentions},
  author = {Wu, Chorng-Guang and Gerlach, James H. and Young, Clifford E.},
  date = {2007-04},
  journaltitle = {Information \& Management},
  volume = {44},
  pages = {253--262},
  issn = {03787206},
  doi = {10.1016/j.im.2006.12.006},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720607000067},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/78XB2CMD/1-s2.0-S0378720607000067-main.pdf},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english},
  number = {3}
}

@inproceedings{wu_how_2017,
  title = {How Are {{Developers Treating License Inconsistency Issues}}? {{A Case Study}} on {{License Inconsistency Evolution}} in {{FOSS Projects}}},
  shorttitle = {How Are {{Developers Treating License Inconsistency Issues}}?},
  booktitle = {Open {{Source Systems}}: {{Towards Robust Practices}}},
  author = {Wu, Yuhao and Manabe, Yuki and German, Daniel M. and Inoue, Katsuro},
  date = {2017-05-22},
  pages = {69--79},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-57735-7_8},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-57735-7_8},
  urldate = {2018-08-15},
  abstract = {A license inconsistency is the presence of two or more source files that evolved from the same original file containing different licenses. In our previous study, we have shown that license inconsistencies do exist in open source projects and may lead to potential license violation problems. In this study, we try to find out whether the issues of license inconsistencies are properly solved by analyzing two versions of a FOSS distribution—Debian—and investigate the evolution patterns of license inconsistencies. Findings are: license inconsistencies occur mostly because the original copyright owner updated the license while the reusers were still using the old version of the source files with the old license; most license inconsistencies would disappear when the reusers synchronize their project from the upstream, while some would exist permanently if reusers decide not to synchronize anymore. Legally suspicious cases have not been found yet in those Debian distributions.},
  eventtitle = {{{IFIP International Conference}} on {{Open Source Systems}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CJAD8PLA/Wu et al. - 2017 - How are Developers Treating License Inconsistency .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/V8T2ZWGD/978-3-319-57735-7_8.html},
  isbn = {978-3-319-57734-0 978-3-319-57735-7},
  langid = {english},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@inproceedings{wu_maintenance_2016,
  title = {Maintenance {{Effort Estimation}} for {{Open Source Software}}: {{A Systematic Literature Review}}},
  shorttitle = {Maintenance {{Effort Estimation}} for {{Open Source Software}}},
  booktitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Wu, Hong and Shi, Lin and Chen, Celia and Wang, Qing and Boehm, Barry},
  date = {2016-10},
  pages = {32--43},
  doi = {10.1109/ICSME.2016.87},
  abstract = {Open Source Software (OSS) is distributed and maintained collaboratively by developers all over the world. However, frequent personnel turnover and lack of organizational management makes it difficult to capture the actual development effort. Various OSS maintenance effort estimation approaches have been developed to provide a way to understand and estimate development effort. The goal of this study is to identify the current state of art of the existing maintenance effort estimation approaches for OSS. We performed a systematic literature review on the relevant studies published in the period between 2000-2015 by both automatic and manual searches from different sources. We derived a set of keywords from the research questions and established selection criteria to carefully choose the papers to evaluate. 29 out of 3,312 papers were selected based on a well designed selection process. Our results show that the commonly used OSS maintenance effort estimation methods are actual effort estimation and maintenance activity time prediction, the most commonly used metrics and factors for actual effort estimation are source code measurements and people related metrics, the most commonly mentioned activity for maintenance activity time prediction is bug fixing. Accuracy measures and cross validation is used for validating the estimation models. Based on the above findings, we identified the issues in evaluation methods for actual maintenance effort estimations and the needs for quantitative OSS maintenance effort inference from size-related metrics. Meanwhile, we highlighted individual contribution and performance measurement as a novel and promising research area.},
  eventtitle = {2016 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/57ZF5RQ4/Wu et al. - 2016 - Maintenance Effort Estimation for Open Source Soft.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5RZH252E/7816452.html},
  keywords = {bug fixing,Data mining,Estimation,maintenance activity time prediction,maintenance effort estimation,Maintenance engineering,Measurement,open source software,OSS,people related metrics,Planning,program debugging,Protocols,public domain software,Software,software maintenance,software metrics,source code measurements}
}

@incollection{wu_mining_2008,
  title = {Mining {{Open Source Component Behavior}} for {{Reuse Evaluation}}},
  booktitle = {High {{Confidence Software Reuse}} in {{Large Systems}}},
  author = {Wu, Ji and Wang, Chun and Jia, Xiao-xia and Liu, Chao},
  date = {2008},
  pages = {112--115},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-540-68073-4_10},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3D429VRN/chp%3A10.1007%2F978-3-540-68073-4_10.pdf},
  isbn = {978-3-540-68073-4},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{wubishet_understanding_2009,
  title = {Understanding the {{Nature}} and {{Production Model}} of {{Hybrid Free}} and {{Open Source Systems}}: The {{Case}} of {{Varnish}}},
  shorttitle = {Understanding the {{Nature}} and {{Production Model}} of {{Hybrid Free}} and {{Open Source Systems}}},
  booktitle = {System {{Sciences}}, 2009. {{HICSS}}'09. 42nd {{Hawaii International Conference}} On},
  author = {Wubishet, Zegaye Seifu},
  date = {2009},
  pages = {1--11},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4755628},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/JJ53XWVC/04755628.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@inproceedings{wurst_librefoodpantry_2020,
  title = {{{LibreFoodPantry}}: {{Developing}} a {{Multi}}-{{Institutional}}, {{Faculty}}-{{Led}}, {{Humanitarian Free}} and {{Open Source Software Community}}},
  shorttitle = {{{LibreFoodPantry}}},
  booktitle = {Proceedings of the 51st {{ACM Technical Symposium}} on {{Computer Science Education}}},
  author = {Wurst, Karl R. and Radkowski, Christopher and Jackson, Stoney and Ellis, Heidi J. C. and Burdge, Darci and Postner, Lori},
  date = {2020-02-26},
  pages = {441--447},
  publisher = {{Association for Computing Machinery}},
  location = {{Portland, OR, USA}},
  doi = {10.1145/3328778.3366929},
  url = {https://doi.org/10.1145/3328778.3366929},
  urldate = {2020-04-22},
  abstract = {Engaging students in humanitarian free and open source software (HFOSS) projects allows them to gain real-world software development skills while helping society. Participating in an existing HFOSS project, although ripe with learning opportunities, presents a number of hurdles for faculty and students. An alternative to joining an existing HFOSS project community is to participate in a faculty-led HFOSS project. These projects provide the instructor with more control over the learning environment, but often lack an active community outside of the classroom. This paper describes a multi-institutional effort to engage a community of developers in creating humanitarian open source projects to support their on-campus food pantries. Food insecurity on campus has become a national concern and many institutions have, or are starting, food pantries to support the student, staff, and faculty community. Starting a faculty-led HFOSS project involves making decisions not only about the features of the project but also about community norms, tool choices, project development workflow, and inter-institution cooperation. This paper provides an overview of the creation of LibreFoodPantry, a community who is developing a suite of projects that support on-campus food pantries. It describes instances of using LibreFoodPantry's projects in various classroom settings, the lessons learned from these experiences, and the resulting discussions and decisions made by the LibreFoodPantry Coordinating Committee. This process has led to a community dedicated to easing the on-ramp for faculty who want to help their students contribute to an HFOSS project.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PXPNJCWH/Wurst et al. - 2020 - LibreFoodPantry Developing a Multi-Institutional,.pdf},
  isbn = {978-1-4503-6793-6},
  keywords = {computing for social good,open source,project management,software development},
  series = {{{SIGCSE}} '20}
}

@inproceedings{wurzelova_characterizing_2019,
  ids = {wurzelova\_characterizing\_2019-1},
  title = {Characterizing {{Women}} ({{Not}}) {{Contributing}} to {{Open}}-{{Source}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 2nd {{International Workshop}} on {{Gender Equality}} in {{Software Engineering}} ({{GE}})},
  author = {Wurzelova, Pavlina and Palomba, Fabio and Bacchelli, Alberto},
  date = {2019-05},
  pages = {5--8},
  doi = {10.1109/GE.2019.00009},
  abstract = {Women are under-represented not only in software development, but even more so in the Open-Source Software (OSS) community. In this study we examine whether there are differences between women in OSS community and outside of it. Identifying these differences may help to attract other women to contribute to OSS. Furthermore, it might uncover potential biases in data about female developers that are gathered through the mining of software repositories research. Using the data from the Stack Overflow Developer Survey 2018, counting 100,000+ respondents (6.9\% female), we compare the characteristics of women who report to contribute to OSS and those who report to not contribute. Surprisingly, we did not found the expected differences to be present, thus suggesting that open-source software data represents well the closed-source population of female developers. However, our results did not identify potential correlates of higher under-representation of women in OSS than in closed-source setting.},
  eventtitle = {2019 {{IEEE}}/{{ACM}} 2nd {{International Workshop}} on {{Gender Equality}} in {{Software Engineering}} ({{GE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/E82769ZM/Wurzelova et al. - 2019 - Characterizing Women (Not) Contributing to Open-So.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KPVRI5RD/Wurzelová et al. - 2019 - Characterizing women (not) contributing to open-so.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/BJNPBVN5/8819505.html},
  keywords = {closed-source population,closed-source setting,data mining,female developers,gender issues,human aspects in software engineering,Human Aspects in Software Engineering,open-source software,Open-Source Software,Open-Source Software community,open-source software data,OSS,public domain software,software development,software repositories research,Stack Overflow Developer Survey 2018,women in software community,Women in Software Community}
}

@inproceedings{xu_measurement_2017,
  title = {Measurement of {{Source Code Readability Using Word Concreteness}} and {{Memory Retention}} of {{Variable Names}}},
  booktitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  author = {Xu, Weifeng and Xu, Dianxiang and Deng, Lin},
  date = {2017-07},
  volume = {1},
  pages = {33--38},
  issn = {0730-3157},
  doi = {10.1109/COMPSAC.2017.166},
  abstract = {Source code readability is critical to software quality assurance and maintenance. In this paper, we present a novel approach to the automated measurement of source code readability based on Word Concreteness and Memory Retention (WCMR) of variable names. The approach considers programming and maintenance as processes of organizing variables and their operations to describe solutions to specific problems. The overall readability of given source code is calculated from the readability of all variables contained in the source code. The readability of each variable is determined by how easily its meaning is memorized (i.e., word concreteness) and how quickly they are forgotten over time (i.e., memory retention). Our empirical study has used 14 open source applications with over a half-million lines of code and 10,000 warning defects. The result shows that the WCMR-based source code readability negatively correlates strongly with overall warning defect rates, and particularly with such warning as bad programming practices, code vulnerability, and correctness bug warning.},
  eventtitle = {2017 {{IEEE}} 41st {{Annual Computer Software}} and {{Applications Conference}} ({{COMPSAC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J6IWJTWR/Xu et al. - 2017 - Measurement of Source Code Readability Using Word .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MI2UUSWS/8029587.html},
  keywords = {Code Readability,code vulnerability,correctness bug warning,Dictionaries,Maintenance engineering,Memory Retention,open source applications,program debugging,Programming,public domain software,Semantics,software fault tolerance,software maintenance,software quality,Software quality,software quality assurance,source code (software),source code readability measurement,Variable Definitions and References,variable names,warning defects,WCMR,Word Concreteness,word concreteness and memory retention}
}

@inproceedings{xu_not_2013,
  title = {Do Not Blame Users for Misconfigurations},
  author = {Xu, Tianyin and Zhang, Jiaqi and Huang, Peng and Zheng, Jing and Sheng, Tianwei and Yuan, Ding and Zhou, Yuanyuan and Pasupathy, Shankar},
  date = {2013},
  pages = {244--259},
  publisher = {{ACM Press}},
  doi = {10.1145/2517349.2522727},
  url = {http://dl.acm.org/citation.cfm?doid=2517349.2522727},
  urldate = {2015-10-16},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6MCHTT8P/p244-xu.pdf},
  isbn = {978-1-4503-2388-8},
  langid = {english}
}

@article{xu_volunteers_2009,
  title = {Volunteers’ Involvement in Online Community Based Software Development},
  author = {Xu, Bo and Jones, Donald R. and Shao, Bingjia},
  date = {2009-04},
  journaltitle = {Information \& Management},
  volume = {46},
  pages = {151--158},
  issn = {03787206},
  doi = {10.1016/j.im.2008.12.005},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0378720609000044},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ICW8P8H4/1-s2.0-S0378720609000044-main.pdf},
  keywords = {community,development,nyílt forrás},
  langid = {english},
  number = {3}
}

@incollection{yahav_data_2014,
  title = {Data Driven Testing of Open Source Software},
  booktitle = {Leveraging {{Applications}} of {{Formal Methods}}, {{Verification}} and {{Validation}}. {{Specialized Techniques}} and {{Applications}}},
  author = {Yahav, Inbal and Kenett, Ron S. and Bai, Xiaoying},
  date = {2014},
  pages = {309--321},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-662-45231-8_22},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8XA8F2DT/chp%3A10.1007%2F978-3-662-45231-8_22.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{yahav_risk_2014,
  title = {Risk {{Based Testing}} of {{Open Source Software}} ({{OSS}})},
  author = {Yahav, Inbal and Kenett, Ron S. and Bai, Xiaoying},
  date = {2014-07},
  pages = {638--643},
  publisher = {{IEEE}},
  doi = {10.1109/COMPSACW.2014.107},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6903203},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/58WEXCCK/06903203.pdf},
  isbn = {978-1-4799-3578-9},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{yamakami_challenges_2010,
  title = {Challenges for {{Mobile Middleware Platform}}: {{Issues}} for {{Embedded Open Source Software Integration}}.},
  shorttitle = {Challenges for {{Mobile Middleware Platform}}},
  booktitle = {{{OSS}}},
  author = {Yamakami, Toshihiko},
  date = {2010},
  pages = {401--406},
  publisher = {{Springer}},
  url = {http://link.springer.com/content/pdf/10.1007/978-3-642-13244-5.pdf#page=418},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CRR42MEW/chp%3A10.1007%2F978-3-642-13244-5_38.pdf},
  keywords = {Commercial relations,development,nyílt forrás}
}

@incollection{yamakami_exploratory_2010,
  title = {An {{Exploratory Long}}-{{Term Open Source Activity Analysis}}: {{Implications}} from {{Empirical Findings}} on {{Activity Statistics}}},
  shorttitle = {An {{Exploratory Long}}-{{Term Open Source Activity Analysis}}},
  booktitle = {Open {{Source Software}}: {{New Horizons}}},
  author = {Yamakami, Toshihiko},
  date = {2010},
  pages = {395--400},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-13244-5_37},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FXZCHX98/chp%3A10.1007%2F978-3-642-13244-5_37.pdf}
}

@inproceedings{yamashita_magnet_2014,
  title = {Magnet or Sticky? An Oss Project-by-Project Typology},
  shorttitle = {Magnet or Sticky?},
  booktitle = {Proceedings of the 11th {{Working Conference}} on {{Mining Software Repositories}}},
  author = {Yamashita, Kazuhiro and McIntosh, Shane and Kamei, Yasutaka and Ubayashi, Naoyasu},
  date = {2014},
  pages = {344--347},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2597116},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8EVAQWEF/p344-yamashita.pdf},
  keywords = {community,development,Forrás2,nyílt forrás,open source}
}

@inproceedings{yamashita_revisiting_2015,
  title = {Revisiting the Applicability of the Pareto Principle to Core Development Teams in Open Source Software Projects},
  booktitle = {Proceedings of the 14th {{International Workshop}} on {{Principles}} of {{Software Evolution}}},
  author = {Yamashita, Kazuhiro and McIntosh, Shane and Kamei, Yasutaka and Hassan, Ahmed E. and Ubayashi, Naoyasu},
  date = {2015},
  pages = {46--55},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2804366},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KP7GVPGM/p46-yamashita.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{yamauchi_fault-prone_2018,
  title = {Fault-{{Prone Source File Analysis Focusing}} on the {{Contribution Entropy}} in {{Open Source Development}}},
  booktitle = {2018 {{IEEE International Conference}} on {{Big Data}}, {{Cloud Computing}}, {{Data Science Engineering}} ({{BCD}})},
  author = {Yamauchi, Kazuki and Aman, Hirohisa and Amasaki, Sousuke and Yokogawa, Tomoyuki and Kawahara, Minoru},
  date = {2018-07},
  pages = {7--14},
  doi = {10.1109/BCD2018.2018.00010},
  abstract = {Open source software (OSS) products have been widely used for information systems, and a successful quality management of OSS development has become one of key topics in the information technology world. Since the development and maintenance of an OSS product is driven by various developers, it would be worthy to focus on their contributions and the cooperative structure. This paper proposes to measure a developer's contribution to a source file as the cumulative lines of code that he/she has changed on the file, and to evaluate the balance of contributions to the file among different developers in a form of an entropy. Through an empirical study using data collected from 10 major OSS projects, the following findings are reported: (1) a source file which has been maintained by two or more developers (entropy{$>$}0) is about two times more likely to be faulty than a file which has been done by only a single developer (entropy=0); (2) when two or more developers have maintained a source file and their contributions are more imbalanced (a lower entropy), the source file is more fault-prone.},
  eventtitle = {2018 {{IEEE International Conference}} on {{Big Data}}, {{Cloud Computing}}, {{Data Science Engineering}} ({{BCD}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2BIDMXT3/Yamauchi et al. - 2018 - Fault-Prone Source File Analysis Focusing on the C.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EVZ6DF22/8530685.html},
  keywords = {contribution entropy,developer-contribution,entropy,Entropy,fault-prone source file analysis focusing,fault-prone-analysis,Focusing,History,information systems,information technology,information technology world,Maintenance engineering,Measurement,open source software products,OSS development,OSS product,public domain software,quality management,Quality management,Software,software quality,source file}
}

@inproceedings{yan_profiling_2018,
  title = {Profiling {{Developer Expertise}} across {{Software Communities}} with {{Heterogeneous Information Network Analysis}}},
  booktitle = {Proceedings of the {{Tenth Asia}}-{{Pacific Symposium}} on {{Internetware}}},
  author = {Yan, Jiafei and Sun, Hailong and Wang, Xu and Liu, Xudong and Song, Xiaotao},
  date = {2018-09-16},
  pages = {1--9},
  publisher = {{Association for Computing Machinery}},
  location = {{Beijing, China}},
  doi = {10.1145/3275219.3275226},
  url = {https://doi.org/10.1145/3275219.3275226},
  urldate = {2020-04-22},
  abstract = {Knowing developer expertise is critical for achieving effective task allocation. However, it is of great challenge to accurately profile the expertise of developers over the Internet as their activities often disperse across different online communities. In this regard, the existing works either merely concern a single community, or simply sum up the expertise in individual communities. The former suffers from low accuracy due to incomplete data, while the latter impractically assumes that developer expertise is completely independent and irrelavant across communities. To overcome those limitations, we propose a new approach to profile developer expertise across software communities through heterogeneous information network (HIN) analysis. A HIN is first built by analyzing the developer activities in various communities, where nodes represent objects like developers and skills, and edges represent the relations among objects. Second, as random walk with restart (RWR) is known for its ability to capture the global structure of the whole network, we adopt RWR over the HIN to estimate the proximity of developer nodes and skill nodes, which essentially reflects developer expertise. Based on the data of 72,645 common users of GitHub and Stack Overflow, we conducted an empirical study and evaluated developer expertise using proposed approach. To evaluate the effect of our approach, we use the obtained expertise to estimate the competency of developers in answering the questions posted in Stack Overflow. The experimental results demonstrate the superiority of our approach over existing methods.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/ME4UYID2/Yan et al. - 2018 - Profiling Developer Expertise across Software Comm.pdf},
  isbn = {978-1-4503-6590-1},
  keywords = {Developer expertise,heterogeneous information network,random walk with restart},
  series = {Internetware '18}
}

@inproceedings{yang_pre-patch_2018,
  ids = {yang\_pre-patch\_2018-1},
  title = {Pre-{{Patch}}: {{Find Hidden Threats}} in {{Open Software Based}} on {{Machine Learning Method}}},
  shorttitle = {Pre-{{Patch}}},
  booktitle = {Services – {{SERVICES}} 2018},
  author = {Yang, Mutian and Wu, Jingzheng and Ji, Shouling and Luo, Tianyue and Wu, Yanjun},
  date = {2018-06-25},
  pages = {48--65},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-94472-2_4},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-94472-2_4},
  urldate = {2018-08-15},
  abstract = {The details of vulnerabilities are always kept confidential until fixed, which is an efficient way to avoid the exploitations and attacks. However, the Security Related Commits (SRCs), used to fix the vulnerabilities in open source software, usually lack proper protections. Most SRCs are released in code repositories such as Git, Github, Sourceforge, etc. earlier than the corresponding vulnerabilities published. These commits often previously disclose the vital information which can be used by the attackers to locate and exploit the vulnerable code. Therefore, we defined the pre-leaked SRC as the Pre-Patch problem and studied its hidden threats to the open source software. In this paper, we presented an Automatic Security Related Commits Detector (ASRCD) to rapidly identify the Pre-Patch problems from the numerous commits in code repositories by learning the features of SRCs. We implemented ASRCD and evaluated it with 78,218 real-world commits collected from Linux Kernel, OpenSSL, phpMyadmin and Mantisbt released between 2016 to 2017, which contain 227 confirmed SRCs. ASRCD successfully identified 206 SRCs from the 4 projects, including 140 known SRCs (recall rate: 61.7\% on average) and 66 new high-suspicious. In addition, 5 of the SRCs have been published after our prediction. The results show that: (1) the Pre-Patch is really a hidden threat to open source software; and (2) the proposed ASRCD is effective in identifying such SRCs. Finally, we recommended the identified SRCs should be fixed as soon as possible.},
  eventtitle = {World {{Congress}} on {{Services}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/EGASWJ74/Yang et al. - 2018 - Pre-Patch Find Hidden Threats in Open Software Ba.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WTRXNCLQ/Yang et al. - 2018 - Pre-Patch Find Hidden Threats in Open Software Ba.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CPTPZT7K/978-3-319-94472-2_4.html},
  isbn = {978-3-319-94471-5 978-3-319-94472-2},
  keywords = {Code repository,Open source software,Pre-Patch,Vulnerability},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{yang_social_2014,
  title = {Social {{Network Analysis}} in {{Open Source Software Peer Review}}},
  booktitle = {Proceedings of the {{22Nd ACM SIGSOFT International Symposium}} on {{Foundations}} of {{Software Engineering}}},
  author = {Yang, Xin},
  date = {2014},
  pages = {820--822},
  publisher = {{ACM}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2635868.2661682},
  url = {http://doi.acm.org/10.1145/2635868.2661682},
  urldate = {2015-11-24},
  abstract = {Software peer review (aka. code review) is regarded as one of the most important approaches to keep software quality and productivity. Due to the distributed collaborations and communication nature of Open Source Software (OSS), OSS review differs from traditional industry review. Unlike other related works, this study investigated OSS peer review pro- cesses from social perspective by using social network anal- ysis (SNA). We analyzed the review history from three typi- cal OSS projects. The results provide hints on relationships among the OSS reviewers which can help to understand how developers work and communicate with each other.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/B2C8MXJ3/p820-yang.pdf},
  isbn = {978-1-4503-3056-5},
  keywords = {community,development,nyílt forrás,Open Source,peer review,social network},
  series = {{{FSE}} 2014}
}

@article{yang_unified_2018,
  title = {A {{Unified Measurement Solution}} of {{Software Trustworthiness Based}} on {{Social}}-to-{{Software Framework}}},
  author = {Yang, Xi and Jabeen, Gul and Luo, Ping and Zhu, Xiao-Ling and Liu, Mei-Hua},
  date = {2018-05-01},
  journaltitle = {Journal of Computer Science and Technology},
  shortjournal = {J. Comput. Sci. Technol.},
  volume = {33},
  pages = {603--620},
  issn = {1860-4749},
  doi = {10.1007/s11390-018-1843-2},
  url = {https://doi.org/10.1007/s11390-018-1843-2},
  urldate = {2020-04-21},
  abstract = {As trust becomes increasingly important in software domain, software trustworthiness — as a complex high-composite concept, has developed into a big challenge people have to face, especially in the current open, dynamic and ever-changing Internet environment. Furthermore, how to recognize and define trust problem from its nature and how to measure software trustworthiness correctly and effectively play a key role in improving users’ trust in choosing software. Based on trust theory in the field of humanities and sociology, this paper proposes a measurable S2S (Social-to-Software) software trustworthiness framework, introduces a generalized indicator loss to unify three parts of trustworthiness result, and presents a whole metric solution for software trustworthiness, including the advanced J-M model based on power function and time-loss rate for ability trustworthiness measurement, the fuzzy comprehensive evaluation advanced-model considering effect of multiple short boards for basic standard trustworthiness, and the identity trustworthiness measurement method based on the code homology detecting tools. Finally, it provides a case study to verify that the solution is applicable and effective.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/HYQC6JRA/Yang et al. - 2018 - A Unified Measurement Solution of Software Trustwo.pdf},
  langid = {english},
  number = {3}
}

@inproceedings{yasir_formal_2018,
  title = {Formal in the {{Informal}}: {{A Multi}}-{{Level Analysis}} of {{Core Python Developers}}' {{Tweets}}},
  shorttitle = {Formal in the {{Informal}}},
  booktitle = {2018 25th {{Australasian Software Engineering Conference}} ({{ASWEC}})},
  author = {Yasir, Muhammad and Michael, Kevin and Savarimuthu, Bastin Tony Roy and Licorish, Sherlock A.},
  date = {2018-11},
  pages = {151--160},
  issn = {2377-5408},
  doi = {10.1109/ASWEC.2018.00028},
  abstract = {Context: Contributors to Open Source Software (OSS) development projects use social media to discuss personal and work-related issues. While there has been some interest in studying social media posts of developers, the investigation of the use of this medium by core contributors has not received much attention. Such an investigation could be useful given the technical and social insights such members bring to their team's development. Objective: To bridge this gap, we have investigated Python core developers' posts on Twitter. Method: We systematically collected 27,805 tweets from 80 core developers' Twitter accounts of which 3,282 (11.8\%) were relevant to Python development. We performed multiple forms of analyses on these tweets, involving bottom-up thematic analysis on three levels (topics, questions and answers, and decision-making). We also conducted social network analysis of the topics of interest of core developers. Results: Core developers' Python-related tweets fall under 23 different topics (in 5 higher-level topic categories). The top two categories were software-related and community-related tweets. Core developers also used Twitter as a medium to discuss technical issues related to Python software development in the form of questions and answers (Q\&As) to a large extent (45\% of the tweets). Moreover, this informal medium is also used for decision-making 2\% of the time, supplementing the formal channels of decision-making (i.e., mailing lists). Additionally, we have identified five different groups of core developers based on their topic interests. Conclusion: Although informal in nature, social media platforms provide another window, beyond formal project repositories, for understanding OSS ecosystems. Consequently, informal sources must be integrated with formal sources to obtain a comprehensive view of OSS development activities.},
  eventtitle = {2018 25th {{Australasian Software Engineering Conference}} ({{ASWEC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/652ZFQQQ/Yasir et al. - 2018 - Formal in the Informal A Multi-Level Analysis of .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S9VJKE9U/8587299.html},
  keywords = {community-related tweets,Core developers,decision making,Decision making,Decision Making,decision-making,multilevel analysis,Open source software,Open Source Software Development,open source software development projects,OSS development activities,public domain software,Python,Python core developers,Python development,Python software development,Q&as,Social Media,social media platforms,social network analysis,Social Network Analysis,social networking (online),software engineering,Software engineering,software-related tweets,Tweet Analysis,Twitter,user interfaces}
}

@inproceedings{yatani_understanding_2009,
  title = {Understanding How and Why Open Source Contributors Use Diagrams in the Development of {{Ubuntu}}},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Yatani, Koji and Chung, Eunyoung and Jensen, Carlos and Truong, Khai N.},
  date = {2009},
  pages = {995--1004},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1518853},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/XVSN6PEV/p995-yatani.pdf},
  keywords = {development,nyílt forrás,procedures}
}

@article{yi_integrating_2008,
  title = {Integrating Open-Source Technologies to Build Low-Cost Information Systems for Improved Access to Public Health Data},
  author = {Yi, Qian and Hoskins, Richard E and Hillringhouse, Elizabeth A and Sorensen, Svend S and Oberle, Mark W and Fuller, Sherrilynne S and Wallace, James C},
  date = {2008},
  journaltitle = {International Journal of Health Geographics},
  volume = {7},
  pages = {29},
  issn = {1476-072X},
  doi = {10.1186/1476-072X-7-29},
  url = {http://www.ij-healthgeographics.com/content/7/1/29},
  urldate = {2014-05-31},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3KQSMUXM/art%3A10.1186%2F1476-072X-7-29.pdf},
  langid = {english},
  number = {1}
}

@inproceedings{yin_how_2011,
  title = {How Do Fixes Become Bugs?},
  booktitle = {Proceedings of the 19th {{ACM SIGSOFT}} Symposium and the 13th {{European}} Conference on {{Foundations}} of Software Engineering},
  author = {Yin, Zuoning and Yuan, Ding and Zhou, Yuanyuan and Pasupathy, Shankar and Bairavasundaram, Lakshmi},
  date = {2011},
  pages = {26--36},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2025121},
  urldate = {2015-01-18},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/H7JV4IWW/___fse11.pdf}
}

@incollection{yin_research_2011,
  title = {Research on {{OSS}} in the {{Application}} of {{Education Information Technology}}},
  booktitle = {Advances in {{Computer Science}}, {{Environment}}, {{Ecoinformatics}}, and {{Education}}},
  author = {Yin, Yang and Yong, Wu and Fang, Fang},
  date = {2011},
  pages = {66--70},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-23339-5_12},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/D7XTMKWV/chp%3A10.1007%2F978-3-642-23339-5_12.pdf},
  keywords = {adoption,nyílt forrás}
}

@article{younis_assessing_2016,
  title = {Assessing Vulnerability Exploitability Risk Using Software Properties},
  author = {Younis, Awad and Malaiya, Yashwant K. and Ray, Indrajit},
  date = {2016-03-01},
  journaltitle = {Software Quality Journal},
  shortjournal = {Software Qual J},
  volume = {24},
  pages = {159--202},
  issn = {1573-1367},
  doi = {10.1007/s11219-015-9274-6},
  url = {https://doi.org/10.1007/s11219-015-9274-6},
  urldate = {2020-04-21},
  abstract = {Attacks on computer systems are now attracting increased attention. While the current trends in software vulnerability discovery indicate that the number of newly discovered vulnerabilities continues to be significant, the time between the public disclosure of vulnerabilities and the release of an automated exploit is shrinking. Thus, assessing the vulnerability exploitability risk is critical because this allows decision-makers to prioritize among vulnerabilities, allocate resources to patch and protect systems from these vulnerabilities, and choose between alternatives. Common vulnerability scoring system (CVSS) metrics have become the de facto standard for assessing the severity of vulnerabilities. However, the CVSS exploitability measures assign subjective values based on the views of experts. Two of the factors in CVSS, Access Vector and Authentication, are the same for almost all vulnerabilities. CVSS does not specify how the third factor, Access Complexity, is measured, and hence it is unknown whether it considers software properties as a factor. In this work, we introduce a novel measure, Structural Severity, which is based on software properties, namely attack entry points, vulnerability location, the presence of the dangerous system calls, and reachability analysis. These properties represent metrics that can be objectively derived from attack surface analysis, vulnerability analysis, and exploitation analysis. To illustrate the proposed approach, 25 reported vulnerabilities of Apache HTTP server and 86 reported vulnerabilities of Linux Kernel have been examined at the source code level. The results show that the proposed approach, which uses more detailed information, can objectively measure the risk of vulnerability exploitability and results can be different from the CVSS base scores.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PNXETMK3/Younis et al. - 2016 - Assessing vulnerability exploitability risk using .pdf},
  langid = {english},
  number = {1}
}

@inproceedings{yu_empirical_2014,
  title = {An {{Empirical Study}} of the {{Dynamics}} of {{GitHub Repository}} and {{Its Impact}} on {{Distributed Software Development}}},
  booktitle = {On the {{Move}} to {{Meaningful Internet Systems}}: {{OTM}} 2014 {{Workshops}}},
  author = {Yu, Liguo and Mishra, Alok and Mishra, Deepti},
  date = {2014},
  pages = {457--466},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-662-45550-0_46},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I3JBBWXV/chp%3A10.1007%2F978-3-662-45550-0_46.pdf},
  keywords = {_SMS_untagged,development,git,nyílt forrás,open source,statisztika,vcs}
}

@inproceedings{yu_evaluating_2007,
  title = {Evaluating the Post-Delivery Fault Reporting and Correction Process in Closed-Source and Open-Source Software},
  booktitle = {Software {{Quality}}, 2007. {{WoSQ}}'07: {{ICSE Workshops}} 2007. {{Fifth International Workshop}} On},
  author = {Yu, Liguo and Chen, Kai},
  date = {2007},
  pages = {8--8},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4273475},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4RC3GERT/04273475.pdf},
  keywords = {nyílt forrás,terjesztés}
}

@article{yu_self-organization_2008,
  title = {Self-Organization Process in Open-Source Software: {{An}} Empirical Study},
  shorttitle = {Self-Organization Process in Open-Source Software},
  author = {Yu, Liguo},
  date = {2008-04},
  journaltitle = {Information and Software Technology},
  volume = {50},
  pages = {361--374},
  issn = {09505849},
  doi = {10.1016/j.infsof.2007.02.018},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584907000225},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/42VMEH97/1-s2.0-S0950584907000225-main.pdf},
  keywords = {development,nyílt forrás,procedures},
  langid = {english},
  number = {5}
}

@inproceedings{yu_traceability_2008,
  title = {Traceability for the Maintenance of Secure Software},
  booktitle = {Software {{Maintenance}}, 2008. {{ICSM}} 2008. {{IEEE International Conference}} On},
  author = {Yu, Yijun and Jürjens, Jan and Mylopoulos, John},
  date = {2008},
  pages = {297--306},
  publisher = {{IEEE}},
  url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4658078},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/FTG84ZBB/04658078.pdf}
}

@article{yu_understanding_2007,
  title = {Understanding Component Co-Evolution with a Study on {{Linux}}},
  author = {Yu, Liguo},
  date = {2007-03-01},
  journaltitle = {Empirical Software Engineering},
  volume = {12},
  pages = {123--141},
  issn = {1382-3256, 1573-7616},
  doi = {10.1007/s10664-006-9000-x},
  url = {http://link.springer.com/10.1007/s10664-006-9000-x},
  urldate = {2015-11-25},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NEI8S7ID/art%3A10.1007%2Fs10664-006-9000-x.pdf},
  langid = {english},
  number = {2}
}

@inproceedings{yuan_b2sfinder_2019,
  title = {{{B2SFinder}}: {{Detecting Open}}-{{Source Software Reuse}} in {{COTS Software}}},
  shorttitle = {{{B2SFinder}}},
  booktitle = {2019 34th {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  author = {Yuan, Zimu and Feng, Muyue and Li, Feng and Ban, Gu and Xiao, Yang and Wang, Shiyang and Tang, Qian and Su, He and Yu, Chendong and Xu, Jiahuan and Piao, Aihua and Xuey, Jingling and Huo, Wei},
  date = {2019-11},
  pages = {1038--1049},
  issn = {2643-1572},
  doi = {10.1109/ASE.2019.00100},
  abstract = {COTS software products are developed extensively on top of OSS projects, resulting in OSS reuse vulnerabilities. To detect such vulnerabilities, finding OSS reuses in COTS software has become imperative. While scalable to tens of thousands of OSS projects, existing binary-to-source matching approaches are severely imprecise in analyzing COTS software products, since they support only a limited number of code features, compute matching scores only approximately in measuring OSS reuses, and neglect the code structures in OSS projects. We introduce a novel binary-to-source matching approach, called B2SFINDER1, to address these limitations. First of all, B2SFINDER can reason about seven kinds of code features that are traceable in both binary and source code. In order to compute matching scores precisely, B2SFINDER employs a weighted feature matching algorithm that combines three matching methods (for dealing with different code features) with two importance-weighting methods (for computing the weight of an instance of a code feature in a given COTS software application based on its specificity and occurrence frequency). Finally, B2SFINDER identifies different types of code reuses based on matching scores and code structures of OSS projects. We have implemented B2SFINDER using an optimized data structure. We have evaluated B2SFINDER using 21991 binaries from 1000 popular COTS software products and 2189 candidate OSS projects. Our experimental results show that B2SFINDER is not only precise but also scalable. Compared with the state ofthe art, B2SFINDER has successfully found up to 2.15× as many reuse cases in 53.85 seconds per binary file on average. We also discuss how B2SFINDER can be leveraged in detecting OSS reuse vulnerabilities in practice.},
  eventtitle = {2019 34th {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/4Z4R9LD9/Yuan et al. - 2019 - B2SFinder Detecting Open-Source Software Reuse in.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/6Y8579M9/8952556.html},
  keywords = {B2SFINDER,binary source code,binary-to-source matching approaches,code reuses,code structures,COTS software application,COTS Software; OSS; Code Reuse; One Day Vulnerability; Code Feature; Binary-to Source Matching,open-source software reuse,OSS reuse vulnerabilities,OSS reuses,public domain software,security of data,software reusability,weighted feature matching algorithm}
}

@inproceedings{yukizawa_please_2019,
  title = {Please {{Help}}! {{A Preliminary Study}} on the {{Effect}} of {{Social Proof}} and {{Legitimization}} of {{Paltry Contributions}} in {{Donations}} to {{OSS}}},
  booktitle = {2019 {{IEEE}} 26th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Yukizawa, Ugo and Tsunoda, Masateru and Tahir, Amjed},
  date = {2019-02},
  pages = {609--613},
  issn = {1534-5351},
  doi = {10.1109/SANER.2019.8667974},
  abstract = {Open source communities have contributed widely to modern software development. The number of open source software (OSS) has increased rapidly in the past two decades. Most open source foundations (such as Eclipse, Mozilla and Apache) operate as non-profit; those foundations usually seek donations from users/developers to financially support their activities. Without such support, some projects might discontinue to develop, or even disappear. However, contributions to those foundations are usually solicited in a very simple and modest way, with no special promotions or attractions for such contributions. The aim of this study is to promote new strategies that can help to increase donations to OSS projects. We analyzed how existing donation pages are structured. We then introduce behavioral economics and psychological theories that have been used in other disciplines to promote donations in OSS. In particular, we used the social proof theory, i.e., where people tend to consider the actions of others in an attempt to reflect correct behavior when they choose their own actions, and legitimization of paltry contributions strategy i.e., using specific phrases such as “even a very small amount will help” to encourage donations. In this study, we conducted an experiment with University students to examine if those theories are effective in encouraging donations to OSS. Our initial results indicate that the two strategies were indeed effective in promoting donations, and showed that users were more open for donation compared to traditional methods. This is only a preliminary analysis - we aim to include more users in the future for a more comprehensive analysis. We anticipate that such techniques might help OSS projects to secure more donations in the future.},
  eventtitle = {2019 {{IEEE}} 26th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/55BZXNWD/Yukizawa et al. - 2019 - Please Help! A Preliminary Study on the Effect of .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/8E6CYMIR/8667974.html},
  keywords = {behavioral economics,compliance,Finance,fundraising,legitimization,legitimization of paltry contributions,Linux,open source communities,open source foundations,open source software,Organizations,OSS,OSS projects,paltry contributions strategy,psychological theories,psychology,Psychology,public domain software,Python,social proof,social proof theory,software development,software engineering,Web pages}
}

@inproceedings{yusop_reporting_2016,
  title = {Reporting Usability Defects: Do Reporters Report What Software Developers Need?},
  shorttitle = {Reporting Usability Defects},
  booktitle = {Proceedings of the 20th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Yusop, Nor Shahida Mohamad and Grundy, John and Vasa, Rajesh},
  date = {2016-06-01},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Limerick, Ireland}},
  doi = {10.1145/2915970.2915995},
  url = {https://doi.org/10.1145/2915970.2915995},
  urldate = {2020-04-22},
  abstract = {Reporting usability defects can be a challenging task, especially in convincing the software developers that the reported defect actually requires attention. Stronger evidence in the form of specific details is often needed. However, research to date in software defect reporting has not investigated the value of capturing different information based on defect type. We surveyed practitioners in both open source communities and industrial software organizations about their usability defect reporting practices to better understand information needs to address usability defect reporting issues. Our analysis of 147 responses show that reporters often provide observed result, expected result and steps to reproduce when describing usability defects, similar to the way other types of defects are reported. However, reporters rarely provide usability-related information. In fact, reporters ranked cause of the problem is the most difficult information to provide followed by usability principle, video recoding, UI event trace and title. Conversely, software developers consider cause of the problem as the most helpful information for them to fix usability defects. Our statistical analysis reveals a substantial gap between what reporters provide and what software developers need when fixing usability defects. We propose some remedies to resolve this gap.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9FYUMFC4/Yusop et al. - 2016 - Reporting usability defects do reporters report w.pdf},
  isbn = {978-1-4503-3691-8},
  keywords = {defect repository,software quality,usability defect reporting},
  series = {{{EASE}} '16}
}

@inproceedings{zaharov_use_2018,
  title = {Use of {{Open}}-{{Source Internet}} of {{Things Platform}} in {{Education Projects}}},
  booktitle = {2018 {{Global Smart Industry Conference}} ({{GloSIC}})},
  author = {Zaharov, Alexandr A. and Nissenbaum, Olga V. and Ponomarov, Kirill Y. and Shirokih, Andrey V.},
  date = {2018-11},
  pages = {1--6},
  doi = {10.1109/GloSIC.2018.8570071},
  abstract = {Recently, education is rapidly changing, moving away from the classroom system with libraries and expensive books towards an open e-learning. Knowledge is made more accessible through e-learning systems, online courses, wikis, blogs, vlogs, podcasts, p2p networks. The use of open platforms allows both the use of open source software to create their own projects and complement the platform's capabilities with its own developments: algorithms and protocols. In this article, we'll review the existing educational projects, based on the FIWARE platform, which are developed by different teams. We will also examine in detail the possibilities of IoT open platform usage and our experience in the following areas: implementation of practical, course and graduate work on Information Security (Cryptography, Network Security, Internet of Things), Programming Languages, Data Analysis, Big Data, Industrial Networks, Telemedicine Systems, Distributed Control Systems, etc.},
  eventtitle = {2018 {{Global Smart Industry Conference}} ({{GloSIC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QY2NGP5B/Zaharov et al. - 2018 - Use of Open-Source Internet of Things Platform in .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PH28GUDM/8570071.html},
  keywords = {Authentication,blogs,classroom system,Cloud computing,computer aided instruction,distributed control systems,e-learning systems,Education,education projects,educational projects,expensive books,FIWARE,FIWARE platform,graduate work,industrial networks,Industries,industry 4.0,information security,Internet of Things,IoT open platform usage,IT education,libraries,network security,online courses,open e-learning,open platform,open platforms,open source software,open-source internet of things platform,Packet Tracer,podcasts,public domain software,Software,student project,telemedicine systems,vlogs,Web sites,wikis}
}

@inproceedings{zaheer_eztrust_2019,
  title = {{{eZTrust}}: {{Network}}-{{Independent Zero}}-{{Trust Perimeterization}} for {{Microservices}}},
  shorttitle = {{{eZTrust}}},
  booktitle = {Proceedings of the 2019 {{ACM Symposium}} on {{SDN Research}}},
  author = {Zaheer, Zirak and Chang, Hyunseok and Mukherjee, Sarit and Van der Merwe, Jacobus},
  date = {2019-04-03},
  pages = {49--61},
  publisher = {{Association for Computing Machinery}},
  location = {{San Jose, CA, USA}},
  doi = {10.1145/3314148.3314349},
  url = {https://doi.org/10.1145/3314148.3314349},
  urldate = {2020-04-22},
  abstract = {Emerging microservices-based workloads introduce new security risks in today's data centers as attacks can propagate laterally within the data center relatively easily by exploiting cross-service dependencies. As countermeasures for such attacks, traditional perimeterization approaches, such as network-endpoint-based access control, do not fare well in highly dynamic microservices environments (especially considering the management complexity, scalability and policy granularity of these earlier approaches). In this paper, we propose eZTrust, a network-independent perimeterization approach for microservices. eZTrust allows data center tenants to express access control policies based on fine-grained workload identities, and enables data center operators to enforce such policies reliably and efficiently in a purely network-independent fashion. To this end, we leverage eBPF, the extended Berkeley Packet Filter, to trace authentic workload identities and apply per-packet tagging and verification. We demonstrate the feasibility of our approach through extensive evaluation of our proof-of-concept prototype implementation. We find that, when comparable policies are enforced, eZTrust incurs 2--5 times lower packet latency and 1.5--2.5 times lower CPU overhead than traditional perimeterization schemes.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/MX2YJ5JB/Zaheer et al. - 2019 - eZTrust Network-Independent Zero-Trust Perimeteri.pdf},
  isbn = {978-1-4503-6710-3},
  keywords = {Access control,Data center networks,eBPF,Microservices},
  series = {{{SOSR}} '19}
}

@article{zaidan_multi-criteria_2015,
  title = {Multi-Criteria Analysis for {{OS}}-{{EMR}} Software Selection Problem: {{A}} Comparative Study},
  shorttitle = {Multi-Criteria Analysis for {{OS}}-{{EMR}} Software Selection Problem},
  author = {Zaidan, A.A. and Zaidan, B.B. and Hussain, Muzammil and Haiqi, Ahmed and Mat Kiah, M.L. and Abdulnabi, Mohamed},
  date = {2015-10},
  journaltitle = {Decision Support Systems},
  volume = {78},
  pages = {15--27},
  issn = {01679236},
  doi = {10.1016/j.dss.2015.07.002},
  url = {http://linkinghub.elsevier.com/retrieve/pii/S0167923615001347},
  urldate = {2015-11-29},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/RUT7A4E9/1-s2.0-S0167923615001347-main.pdf},
  keywords = {nyílt forrás,quality},
  langid = {english}
}

@inproceedings{zaimi_empirical_2015,
  title = {An {{Empirical Study}} on the {{Reuse}} of {{Third}}-{{Party Libraries}} in {{Open}}-{{Source Software Development}}},
  author = {Zaimi, Asimina and Ampatzoglou, Apostolos and Triantafyllidou, Noni and Chatzigeorgiou, Alexander and Mavridis, Androklis and Chaikalis, Theodore and Deligiannis, Ignatios and Sfetsos, Panagiotis and Stamelos, Ioannis},
  date = {2015},
  pages = {1--8},
  publisher = {{ACM Press}},
  doi = {10.1145/2801081.2801087},
  url = {http://dl.acm.org/citation.cfm?doid=2801081.2801087},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/J272BH9G/a4-zaimi.pdf},
  isbn = {978-1-4503-3335-1},
  keywords = {_SMS_untagged,nyílt forrás},
  langid = {english}
}

@inproceedings{zerouali_empirical_2018,
  title = {An {{Empirical Analysis}} of {{Technical Lag}} in Npm {{Package Dependencies}}},
  booktitle = {New {{Opportunities}} for {{Software Reuse}}},
  author = {Zerouali, Ahmed and Constantinou, Eleni and Mens, Tom and Robles, Gregorio and González-Barahona, Jesús},
  date = {2018-05-21},
  pages = {95--110},
  publisher = {{Springer, Cham}},
  doi = {10.1007/978-3-319-90421-4_6},
  url = {https://link.springer.com/chapter/10.1007/978-3-319-90421-4_6},
  urldate = {2018-08-14},
  abstract = {Software library packages are constantly evolving and increasing in number. Not updating to the latest available release of dependent libraries may negatively affect software development by not benefiting from new functionality, vulnerability and bug fixes available in more recent versions. On the other hand, automatically updating to the latest release may introduce incompatibility issues. We introduce a technical lag metric for dependencies in package networks, in order to assess how outdated a software package is compared to the latest available releases of its dependencies. We empirically analyse the package update practices and technical lag for the npm distribution of JavaScript packages. Our results show a strong presence of technical lag caused by the specific use of dependency constraints, indicating a reluctance to update dependencies to avoid backward incompatible changes.},
  eventtitle = {International {{Conference}} on {{Software Reuse}}},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/I5N4T9ZA/Zerouali et al. - 2018 - An Empirical Analysis of Technical Lag in npm Pack.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/3RYVWWDW/978-3-319-90421-4_6.html},
  isbn = {978-3-319-90420-7 978-3-319-90421-4},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@incollection{zhai_citizen_2012,
  title = {Citizen {{Engineering}}: {{Evolving OSS Practices}} to {{Engineering Design}} and {{Analysis}}},
  shorttitle = {Citizen {{Engineering}}},
  booktitle = {Open {{Source Systems}}: {{Long}}-{{Term Sustainability}}},
  author = {Zhai, Zhi and Kijewski-Correa, Tracy and Kareem, Ashan and Hachen, David and Madey, Greg},
  date = {2012},
  pages = {61--77},
  publisher = {{Springer}},
  url = {http://link.springer.com/chapter/10.1007/978-3-642-33442-9_5},
  urldate = {2015-11-27},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5VA4C9U3/chp%3A10.1007%2F978-3-642-33442-9_5.pdf}
}

@article{zhang_file-level_2019,
  title = {File-Level Socio-Technical Congruence and Its Relationship with Bug Proneness in {{OSS}} Projects},
  author = {Zhang, Weiqiang and Cheung, Shing-Chi and Chen, Zhenyu and Zhou, Yuming and Luo, Bin},
  date = {2019-10-01},
  journaltitle = {Journal of Systems and Software},
  shortjournal = {Journal of Systems and Software},
  volume = {156},
  pages = {21--40},
  issn = {0164-1212},
  doi = {10.1016/j.jss.2019.05.030},
  url = {http://www.sciencedirect.com/science/article/pii/S0164121219301177},
  urldate = {2020-04-22},
  abstract = {Coordination is important in software development. Socio-Technical Congruence (STC) is proposed to measure the match between coordination requirements and actual coordination activities. The previous work of Cataldo et~al. computes STC in commercial projects and finds it related to software failures. In this paper, we study the relationship between file-level STC and bug proneness in Open Source Software (OSS) projects. We apply the fundamental STC framework to the OSS data setting and present a method of computing file-level STC based on our available data. We also propose a derivative STC metric called Missing Developer Links (MDL), which is to measure the amount of coordination breakdowns. In our empirical analysis on five OSS projects, we find that MDL is more related to bug proneness than STC. Furthermore, STC or MDL can be computed based on different types of file networks and developer networks, and we find out the best file network and the best developer network via an empirical study. We also evaluate the usefulness of STC or MDL metrics in bug prediction. This work is promising to help detect coordination issues in OSS projects.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Z77MYTIV/Zhang et al. - 2019 - File-level socio-technical congruence and its rela.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GW945SZD/S0164121219301177.html},
  keywords = {Coordination breakdown,Developer network,Open source software,Socio-technical congruence,Software quality},
  langid = {english}
}

@inproceedings{zhang_industry-wide_2018,
  title = {Industry-{{Wide Analysis}} of {{Open Source Security}}},
  booktitle = {2018 16th {{Annual Conference}} on {{Privacy}}, {{Security}} and {{Trust}} ({{PST}})},
  author = {Zhang, Yiming and Malhotra, Baljeet and Chen, Cheng},
  date = {2018-08},
  pages = {1--10},
  doi = {10.1109/PST.2018.8514185},
  abstract = {Open Source Software (OSS) has become de-facto industry standard for developing software solutions and services. Either it's Telecommunication industry or Aerospace or Health Care or Media and Entertainment, OSS is widely used because of its benefits and community based support. Regardless of the benefits, OSS continues to attract security vulnerabilities due to its inherent open nature. Because of the security vulnerabilities industries need to constantly evaluate security posture of OSS projects. Unfortunately, there are no readily available studies that have analyzed the security posture of various OSS projects with respect to various industries. This is the precise goal of this research, which not only analyzes the popularity of various OSS projects among various industries but also provides insights into the security vulnerabilities and their impact on various industries that consume those OSS projects. Toward that end this paper makes the following contributions. (1) We evaluated the OSS usage trends across various categories of industries, which has never been attempted before. (2) We proposed two metrics to quantify the impact of security vulnerabilities in OSS projects that are used by various categories of industries. (3) We conducted a detailed set of analysis using real datasets to evaluate the proposed metrics and their impact on various industries. We have concluded this paper with some future.},
  eventtitle = {2018 16th {{Annual Conference}} on {{Privacy}}, {{Security}} and {{Trust}} ({{PST}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DG88CC4Y/Zhang et al. - 2018 - Industry-Wide Analysis of Open Source Security.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/AVCXWD9R/8514185.html},
  keywords = {Analysis,Companies,de-facto industry standard,Finance,Industries,industry,industry-wide analysis,Insurance,open Source,open source security,open source software,OSS projects,public domain software,Security,security of data,security vulnerabilities industries,Software,software engineering,software services,software solutions,telecommunication industry,vulnerabilities}
}

@inproceedings{zhang_poster_2018,
  title = {Poster: {{Companies}}' {{Domination}} in {{FLOSS Development}} - {{An Empirical Study}} of {{OpenStack}}},
  shorttitle = {Poster},
  booktitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  author = {Zhang, Yuxia and Tan, Xin and Zhou, Minghui and Jin, Zhi},
  date = {2018-05},
  pages = {440--441},
  issn = {2574-1934},
  abstract = {Commercial participation continues to grow in free/libre open source software (FLOSS) projects. Companies may take the lead in developing FLOSS rather than volunteers, which may change the nature of FLOSS development and affect the FLOSS community. Despite substantial research on commercial participation, it remains unclear whether companies dominate FLOSS development, to what extent the domination exists and whether the domination affects the FLOSS community. We therefore conduct an empirical study on OpenStack with a focus on its four main projects (Nova, Swift, Glance, and Neutron) to explore the commercial domination. We employ the development data of the four projects to quantify companies' contributions from two aspects: the developers they provided and the commits made by those developers. We find that there are nearly half of the versions, in which the four projects are dominated by one company. The dominant companies change occasionally, but the number never exceeds three for any project. We found that the commercial domination is negatively associated with the participation of companies and contributors, while it is positively associated with the productivity of contributors and the quality of issue reports. Our study contributes to the understanding of commercial domination and its impact on FLOSS community. Our findings reveal the adverse consequences brought by commercial domination in addition to its benefits.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 40th {{International Conference}} on {{Software Engineering}}: {{Companion}} ({{ICSE}}-{{Companion}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WJT68Y3S/Zhang et al. - 2018 - Poster Companies' Domination in FLOSS Development.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/7WYNQU95/8449616.html},
  keywords = {cloud computing,commercial domination,commercial participation,Companies,companies domination,companies' domination,Correlation,development data,empirical study,Entropy,FLOSS community,FLOSS development,FLOSS project,free-libre open source software projects,main projects,Measurement,Open source software,openstack,public domain software,Software engineering}
}

@inproceedings{zhang_protecting_2017,
  title = {Protecting {{COTS Binaries}} from {{Disclosure}}-Guided {{Code Reuse Attacks}}},
  booktitle = {Proceedings of the 33rd {{Annual Computer Security Applications Conference}}},
  author = {Zhang, Mingwei and Polychronakis, Michalis and Sekar, R.},
  date = {2017-12-04},
  pages = {128--140},
  publisher = {{Association for Computing Machinery}},
  location = {{Orlando, FL, USA}},
  doi = {10.1145/3134600.3134634},
  url = {https://doi.org/10.1145/3134600.3134634},
  urldate = {2020-04-22},
  abstract = {Code diversification, combined with execute-only memory, provides an effective defense against just-in-time code reuse attacks. However, existing techniques for combining code diversification and hardware-assisted memory protections typically require compiler support, as well as the deployment or modification of a hypervisor. These requirements often cannot be met, either because source code is not available, or because the required hardware features may not be available on the target system. In this paper we present SECRET, a software hardening technique tailored to legacy and closed-source software that provides equivalent protection to execute-only memory without relying on hardware features or recompilation. This is achieved using two novel techniques, code space isolation and code pointer remapping, which prevent read accesses to the executable memory of the protected code. Furthermore, SECRET thwarts code pointer harvesting attacks on ELF files by remapping existing code pointers to use random values. SECRET has been implemented on 32-bit Linux systems. Our evaluation shows that it introduces just 2\% additional runtime overhead on top of a state-of-the-art CFI implementation, bringing the total average overhead to about 16\%. In addition, it achieves better protection coverage compared to compiler-based techniques, as it can handle low-level machine code such as inline assembly or extra code introduced by the linker and loader.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P7YDJTDS/Zhang et al. - 2017 - Protecting COTS Binaries from Disclosure-guided Co.pdf},
  isbn = {978-1-4503-5345-8},
  series = {{{ACSAC}} 2017}
}

@inproceedings{zhang_yingkui_justification_2010,
  title = {Justification of {{Free Software}} and Its {{Enlightenment}}},
  author = {{Zhang Yingkui} and {Zhang Jing} and {Wang Liye}},
  date = {2010-12},
  pages = {171--173},
  publisher = {{IEEE}},
  doi = {10.1109/WCSE.2010.47},
  url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5718371},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/Q7G8ZMT9/05718371.pdf},
  isbn = {978-1-4244-9287-9},
  keywords = {általános OSS,nyílt forrás}
}

@article{zhao_impact_2017,
  ids = {zhao\_impact\_2017-1},
  title = {Impact Evaluation of Open Source Software: An {{Altmetrics}} Perspective},
  shorttitle = {Impact Evaluation of Open Source Software},
  author = {Zhao, Rongying and Wei, Mingkun},
  date = {2017-02-01},
  journaltitle = {Scientometrics},
  shortjournal = {Scientometrics},
  volume = {110},
  pages = {1017--1033},
  issn = {0138-9130, 1588-2861},
  doi = {10.1007/s11192-016-2204-y},
  url = {https://link.springer.com/article/10.1007/s11192-016-2204-y},
  urldate = {2018-08-15},
  abstract = {With the emergence of Web 2.0, an online platform which encourages online creation of next generation tools, communication has become a nigh-indispensable tool for researchers. Allowing them to acquire, spread, and share research achievements, with a free flow of ideas online. At present, there are a growing number of studies on non-traditional evaluation indicators, but there is much fewer research focused on the software evaluation, especially for open source research software. What this research focuses on is; with the use of the open source project ‘Depsy’, this research evaluated and analyzed data collected from downloads made online through these open source software. Altmetrics cannot be confined to traditional measurable indicators. That the importance of the open source software used, and its position in the online community is itself a strong measure for academic impact and success, which is all too often overlooked in research. The research can also conclude that the multiplexing of software online, through the citation of a citation, ultimately leads to an online peered review system within the community, effectively developing and maintaining through open use software itself. Moreover, the benefits of such a system has only just begun to come to fruition, having a strong impact on academic research, and predicting research impact.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/CZ8PMAYM/Zhao and Wei - 2017 - Impact evaluation of open source software an Altm.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/P66DRFNL/Zhao and Wei - 2017 - Impact evaluation of open source software an Altm.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/NBL9XECX/s11192-016-2204-y.html},
  langid = {english},
  number = {2}
}

@article{zhao_quality_2003,
  title = {Quality Assurance under the Open Source Development Model},
  author = {Zhao, Luyin and Elbaum, Sebastian},
  date = {2003},
  journaltitle = {Journal of Systems and Software},
  volume = {66},
  pages = {65--75},
  url = {http://www.sciencedirect.com/science/article/pii/S016412120200064X},
  urldate = {2014-12-20},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DNN8W8M2/__jss-open-source-quality.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/WDTQBJ8S/jss-open-source-quality.pdf},
  number = {1}
}

@inproceedings{zheng_measuring_2018,
  title = {Measuring and {{Predicting}} the {{Relevance Ratings}} between {{FLOSS Projects}} Using {{Topic Features}}},
  booktitle = {Proceedings of the {{Tenth Asia}}-{{Pacific Symposium}} on {{Internetware}}},
  author = {Zheng, Zhiwen and Wang, Liang and Xu, Jingwei and Wu, Tianheng and Wu, Simeng and Tao, Xianping},
  date = {2018-09-16},
  pages = {1--10},
  publisher = {{Association for Computing Machinery}},
  location = {{Beijing, China}},
  doi = {10.1145/3275219.3275222},
  url = {https://doi.org/10.1145/3275219.3275222},
  urldate = {2020-04-22},
  abstract = {Understanding the relevance between the Free/Libra Open Source Software projects is important for developers to perform code and design reuse, discover and develop new features, keep their projects up-to-date, and etc. However, it is challenging to perform relevance ratings between the FLOSS projects mainly because: 1) beyond simple code similarity, there are complex aspects considered when measuring the relevance; and 2) the prohibitive large amount of FLOSS projects available. To address the problem, in this paper, we propose a method to measure and further predict the relevance ratings between FLOSS projects. Our method uses topic features extracted by the LDA topic model to describe the characteristics of a project. By using the topic features, multiple aspects of FLOSS projects such as the application domain, technology used, and programming language are extracted and further used to measure and predict their relevance ratings. Based on the topic features, our method uses matrix factorization to leverage the partially known relevance ratings between the projects to learn the mapping between different topic features to the relevance ratings. Finally, our method combines the topic modeling and matrix factorization technologies to predict the relevance ratings between software projects without human intervention, which is scalable to a large amount of projects. We evaluate the performance of the proposed method by applying our topic extraction and relevance modeling methods using 300 projects from GitHub. The result of topic extraction experiment shows that, for topic modeling, our LDA-based approach achieves the highest hit rate of 98.3\% and the highest average accuracy of 29.8\%. And the relevance modeling experiment shows that our relevance modeling approach achieves the minimum average predict error of 0.093, suggesting the effectiveness of applying the proposed method on real-world data sets.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/C9ILQL3E/Zheng et al. - 2018 - Measuring and Predicting the Relevance Ratings bet.pdf},
  isbn = {978-1-4503-6590-1},
  keywords = {FLOSS Projects,Matrix Factorization,Relevance Rating,Topic Modeling},
  series = {Internetware '18}
}

@misc{zhou_inflow_2016,
  title = {Inflow and {{Retention}} in {{OSS Communities}} with {{Commercial Involvement}}: {{A Case Study}} of {{Three Hybrid Projects}}},
  shorttitle = {Inflow and {{Retention}} in {{OSS Communities}} with {{Commercial Involvement}}},
  author = {Zhou, Minghui and Mockus, Audris and Ma, Xiujuan and Zhang, Lu and Mei, Hong},
  date = {2016-04-27},
  publisher = {{Association for Computing Machinery}},
  url = {https://doi.org/10.1145/2876443},
  urldate = {2020-04-22},
  abstract = {Motivation: Open-source projects are often supported by companies, but such involvement often affects the robust contributor inflow needed to sustain the project and sometimes prompts key contributors to leave. To capture user innovation and to maintain quality of software and productivity of teams, these projects need to attract and retain contributors. Aim: We want to understand and quantify how inflow and retention are shaped by policies and actions of companies in three application server projects. Method: We identified three hybrid projects implementing the same JavaEE specification and used published literature, online materials, and interviews to quantify actions and policies companies used to get involved. We collected project repository data, analyzed affiliation history of project participants, and used generalized linear models and survival analysis to measure contributor inflow and retention. Results: We identified coherent groups of policies and actions undertaken by sponsoring companies as three models of community involvement and quantified tradeoffs between the inflow and retention each model provides. We found that full control mechanisms and high intensity of commercial involvement were associated with a decrease of external inflow and with improved retention. However, a shared control mechanism was associated with increased external inflow contemporaneously with the increase of commercial involvement. Implications: Inspired by a natural experiment, our methods enabled us to quantify aspects of the balance between community and private interests in open- source software projects and provide clear implications for the structure of future open-source communities.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/5K2Y8MXX/Zhou et al. - 2016 - Inflow and Retention in OSS Communities with Comme.pdf},
  keywords = {commercial involvement,contributor inflow,contributor retention,extent and intensity of involvement,Hybrid project,natural experiment}
}

@incollection{zhou_onboarding_2019,
  title = {Onboarding and {{Retaining}} of {{Contributors}} in {{FLOSS Ecosystem}}},
  booktitle = {Towards {{Engineering Free}}/{{Libre Open Source Software}} ({{FLOSS}}) {{Ecosystems}} for {{Impact}} and {{Sustainability}}: {{Communications}} of {{NII Shonan Meetings}}},
  author = {Zhou, Minghui},
  editor = {Fitzgerald, Brian and Mockus, Audris and Zhou, Minghui},
  date = {2019},
  pages = {107--117},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-13-7099-1_7},
  url = {https://doi.org/10.1007/978-981-13-7099-1_7},
  urldate = {2020-04-21},
  abstract = {There is a saying that the type of developers that an ecosystem *wants* do not have trouble getting involved. They are good at finding tasks and issuing pull requests. The type of developers that needs hand-holding—you do not want them joining your project/ecosystem due to their lack of skill. This might be true for a popular project like the Linux kernel which never worried attracting new developers. The (difficult) process of working around to get (a patch) in for a contributor is a process of getting the right people for the community. However, many other projects/ecosystem, e.g., GNOME, do not have many people who desperately want to work for them. And they have many to-do tasks. Projects even as popular as the Linux kernel are often in the need of resources. Moreover, the tasks in an ecosystem are quite different, what if the community just wants people who are able to review English documents? We may be able to train them well with a good design. In summary, there might be something we could do to help people with willingness (and no right skills yet) to get to the right track needed by ecosystems.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/QVNWQM5V/Zhou - 2019 - Onboarding and Retaining of Contributors in FLOSS .pdf},
  isbn = {9789811370991},
  langid = {english}
}

@inproceedings{zhou_open_2005,
  title = {Open Source Software Reliability Model: An Empirical Approach},
  shorttitle = {Open Source Software Reliability Model},
  booktitle = {{{ACM SIGSOFT Software Engineering Notes}}},
  author = {Zhou, Ying and Davis, Joseph},
  date = {2005},
  volume = {30},
  pages = {1--6},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1083273},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/58AKD627/p15-zhou.pdf},
  keywords = {nyílt forrás,quality}
}

@inproceedings{zhou_recognizing_2018,
  title = {Recognizing {{Software Bug}}-{{Specific Named Entity}} in {{Software Bug Repository}}},
  booktitle = {2018 {{IEEE}}/{{ACM}} 26th {{International Conference}} on {{Program Comprehension}} ({{ICPC}})},
  author = {Zhou, Cheng and Li, Bin and Sun, Xiaobing and Guo, Hongjing},
  date = {2018-05},
  pages = {108--10811},
  issn = {2643-7171},
  abstract = {Software bug issues are unavoidable in software development and maintenance. In order to manage bugs effectively, bug tracking systems are developed to help to record, manage and track the bugs of each project. The rich information in the bug repository provides the possibility of establishment of entity-centric knowledge bases to help understand and fix the bugs. However, existing named entity recognition (NER) systems deal with text that is structured, formal, well written, with a good grammatical structure and few spelling errors, which cannot be directly used for bug-specific named entity recognition. For bug data, they are free-form texts, which include a mixed language studded with code, abbreviations and software-specific vocabularies. In this paper, we summarize the characteristics of bug entities, propose a classification method for bug entities, and build a baseline corpus on two open source projects (Mozilla and Eclipse). On this basis, we propose an approach for bug-specific entity recognition called BNER with the Conditional Random Fields (CRF) model and word embedding technique. An empirical study is conducted to evaluate the accuracy of our BNER technique, and the results show that the two designed baseline corpus are suitable for bug-specific named entity recognition, and our BNER approach is e?ective on cross-projects NER.},
  eventtitle = {2018 {{IEEE}}/{{ACM}} 26th {{International Conference}} on {{Program Comprehension}} ({{ICPC}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PXYF36WS/Zhou et al. - 2018 - Recognizing Software Bug-Specific Named Entity in .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/9MW5Z3JI/8973026.html},
  keywords = {bug data,bug entities,bug tracking systems,CRF model,data mining,entity-centric knowledge bases,maintenance,Named entity recognition,natural language processing,program debugging,public domain software,software bug,software bug corpus,software bug repository,software bug-specific named entity recognition,software development,software maintenance,software-specific vocabularies,text analysis,word embedding}
}

@inproceedings{zhu_detecting_2016,
  title = {Detecting {{Privilege Escalation Attacks}} through {{Instrumenting Web Application Source Code}}},
  booktitle = {Proceedings of the 21st {{ACM}} on {{Symposium}} on {{Access Control Models}} and {{Technologies}}},
  author = {Zhu, Jun and Chu, Bill and Lipford, Heather},
  date = {2016-06-06},
  pages = {73--80},
  publisher = {{Association for Computing Machinery}},
  location = {{Shanghai, China}},
  doi = {10.1145/2914642.2914661},
  url = {https://doi.org/10.1145/2914642.2914661},
  urldate = {2020-04-22},
  abstract = {Privilege Escalation is a common and serious type of security attack. Although experience shows that many applications are vulnerable to such attacks, attackers rarely succeed upon first trial. Their initial probing attempts often fail before a successful breach of access control is achieved. This paper presents an approach to automatically instrument application source code to report events of failed access attempts that may indicate privilege escalation attacks to a run time application protection mechanism. The focus of this paper is primarily on the problem of instrumenting web application source code to detect access control attack events. We evaluated false positives and negatives of our approach using two open source web applications.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TREQ6WJY/Zhu et al. - 2016 - Detecting Privilege Escalation Attacks through Ins.pdf},
  isbn = {978-1-4503-3802-8},
  keywords = {application sensors,privilege escalation,security.,unauthorized access},
  series = {{{SACMAT}} '16}
}

@inproceedings{zhu_effectiveness_2016,
  title = {Effectiveness of Code Contribution: From Patch-Based to Pull-Request-Based Tools},
  shorttitle = {Effectiveness of Code Contribution},
  booktitle = {Proceedings of the 2016 24th {{ACM SIGSOFT International Symposium}} on {{Foundations}} of {{Software Engineering}}},
  author = {Zhu, Jiaxin and Zhou, Minghui and Mockus, Audris},
  date = {2016-11-01},
  pages = {871--882},
  publisher = {{Association for Computing Machinery}},
  location = {{Seattle, WA, USA}},
  doi = {10.1145/2950290.2950364},
  url = {https://doi.org/10.1145/2950290.2950364},
  urldate = {2020-04-22},
  abstract = {Code contributions in Free/Libre and Open Source Software projects are controlled to maintain high-quality of software. Alternatives to patch-based code contribution tools such as mailing lists and issue trackers have been developed with the pull request systems being the most visible and widely available on GitHub. Is the code contribution process more effective with pull request systems? To answer that, we quantify the effectiveness via the rates contributions are accepted and ignored, via the time until the first response and final resolution and via the numbers of contributions. To control for the latent variables, our study includes a project that migrated from an issue tracker to the GitHub pull request system and a comparison between projects using mailing lists and pull request systems. Our results show pull request systems to be associated with reduced review times and larger numbers of contributions. However, not all the comparisons indicate substantially better accept or ignore rates in pull request systems. These variations may be most simply explained by the differences in contribution practices the projects employ and may be less affected by the type of tool. Our results clarify the importance of understanding the role of tools in effective management of the broad network of potential contributors and may lead to strategies and practices making the code contribution more satisfying and efficient from both contributors' and maintainers' perspectives.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/TYXV9GQT/Zhu et al. - 2016 - Effectiveness of code contribution from patch-bas.pdf},
  isbn = {978-1-4503-4218-6},
  keywords = {Code contribution,effectiveness,FLOSS,issue tracker,mailing list,pull request},
  series = {{{FSE}} 2016}
}

@inproceedings{zhu_enhancing_2019,
  title = {Enhancing {{Code Similarity Analysis}} for {{Effective Vulnerability Detection}}},
  booktitle = {Proceedings of the 2nd {{International Conference}} on {{Computer Science}} and {{Software Engineering}}},
  author = {Zhu, Chunlei and Tang, Yunshan and Wang, Qiang and Li, Mei},
  date = {2019-05-24},
  pages = {153--158},
  publisher = {{Association for Computing Machinery}},
  location = {{Xi\&apos;an, China}},
  doi = {10.1145/3339363.3339383},
  url = {https://doi.org/10.1145/3339363.3339383},
  urldate = {2020-04-22},
  abstract = {Vulnerabilities may spread through different software projects via code reusing. Therefore, it is important to identify the components of a project, to reveal vulnerabilities inside a component that may affect the project. Code similarity analysis is crucial for improving the recall of component identification. The local sensitive hashing (LSH) solves the problem that the traditional hash cannot record the difference information between similar files. Two files with nuances cannot be tested by the MD5 matching algorithm, but they can generate similar fingerprints with LSH. The similarity degree between files can be measured by calculating the Hamming distance between fingerprints. The Simhash algorithm can complement the file-level homology analysis algorithm based on MD5 matching. We can combine the Simhash algorithm and the MD5 matching algorithm, i.e., quickly find all the identical clone files through MD5 matching, and then find similar files with slight modifications through the similar hash algorithm, which makes the final analysis result more accurate. In the massive data set, the process of finding the fingerprint value that is similar (in this experiment, the Hamming distance {$<$}=3) to the Simhash fingerprint generated by the code to be tested has efficiency problems. In the process of optimizing query efficiency, we generally carry out time and space trade-offs. Therefore, we leverage the optimization method used by Gurmeet to make a compromise between time efficiency and space efficiency.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/GA2XXAHQ/Zhu et al. - 2019 - Enhancing Code Similarity Analysis for Effective V.pdf},
  isbn = {978-1-4503-7172-8},
  keywords = {File Similarity,Simhash,Vulnerability Analysis},
  series = {{{CSSE}} 2019}
}

@article{zhu_vulnerability_2017,
  title = {Vulnerability Severity Prediction and Risk Metric Modeling for Software},
  author = {Zhu, Xiaoling and Cao, Chenglong and Zhang, Jing},
  date = {2017-10-01},
  journaltitle = {Applied Intelligence},
  shortjournal = {Appl Intell},
  volume = {47},
  pages = {828--836},
  issn = {1573-7497},
  doi = {10.1007/s10489-017-0925-0},
  url = {https://doi.org/10.1007/s10489-017-0925-0},
  urldate = {2020-04-21},
  abstract = {As more users suffer serious security threats from software vulnerabilities, software security becomes increasingly important. Vulnerability prediction and risk evaluation are two of the most concerning issues in software security management. In this paper, we propose a prediction model for software vulnerability in which the probability and severity of vulnerability occurrence are determined by the logistic function and binomial distribution, respectively. Using the parameters obtained by prediction, we developed a new risk metric model. We provided some metrics, including mean time to vulnerability, local risk rate, mean risk rate, and overall risk value, from the viewpoint of time and probability. Experiments were conducted on real software vulnerability datasets. The results show that the prediction is effective and the evaluation is easy to operate. Our work has several features: (1) users can predict the vulnerability state in the future, in particular, vulnerability severity; (2) unlike traditional evaluation methods with expert scoring, our evaluation model is based on prediction and uses historical vulnerability data; and (3) the risk metric value can be used in risk assessment, security rating, and patch management.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/VDZHWBK2/Zhu et al. - 2017 - Vulnerability severity prediction and risk metric .pdf},
  langid = {english},
  number = {3}
}

@inproceedings{zilouchian_moghaddam_consensus_2012,
  title = {Consensus Building in Open Source User Interface Design Discussions},
  booktitle = {Proceedings of the {{SIGCHI Conference}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Zilouchian Moghaddam, Roshanak and Bailey, Brian and Fu, Wai-Tat},
  date = {2012},
  pages = {1491--1500},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=2208611},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/KNE3KQ3W/p1491-moghaddam.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{zilouchian_moghaddam_open_2011,
  title = {Open Source Interface Politics: Identity, Acceptance, Trust, and Lobbying},
  shorttitle = {Open Source Interface Politics},
  booktitle = {{{CHI}}'11 {{Extended Abstracts}} on {{Human Factors}} in {{Computing Systems}}},
  author = {Zilouchian Moghaddam, Roshanak and Twidale, Michael and Bongen, Kora},
  date = {2011},
  pages = {1723--1728},
  publisher = {{ACM}},
  url = {http://dl.acm.org/citation.cfm?id=1979835},
  urldate = {2015-11-24},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S2SFCU8F/p1723-moghaddam.pdf},
  keywords = {community,development,nyílt forrás}
}

@inproceedings{zimmermann_impact_2019,
  title = {Impact of {{Switching Bug Trackers}}: {{A Case Study}} on a {{Medium}}-{{Sized Open Source Project}}},
  shorttitle = {Impact of {{Switching Bug Trackers}}},
  booktitle = {2019 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  author = {Zimmermann, Théo and Casanueva Artís, Annalí},
  date = {2019-09},
  pages = {13--23},
  issn = {2576-3148},
  doi = {10.1109/ICSME.2019.00011},
  abstract = {For most software projects, the bug tracker is an essential tool. In open source development, this tool plays an even more central role as it is generally open to all users, who are encouraged to test the software and report bugs. Previous studies have highlighted the act of reporting a bug as a first step leading a user to become an active contributor. The impact of the bug reporting environment on the bug tracking activity is difficult to assess because of the lack of comparison points. In this paper, we take advantage of the switch, from Bugzilla to GitHub, of the bug tracker of Coq, a medium-sized open source project, to evaluate and interpret the impact that such a change can have. We first report on the switch itself, including the migration of preexisting issues. Then we analyze data from before and after the switch using a regression discontinuity design, an econometric methodology imported from quantitative policy analysis. We complete this quantitative analysis with qualitative data from interviews with developers. We show that the switch induces an increase in bug reporting, particularly from principal developers themselves, and more generally an increased engagement with the bug tracking platform, with more comments by developers and also more external commentators.},
  eventtitle = {2019 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}} ({{ICSME}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/PA4MWBGJ/Zimmermann and Casanueva Artís - 2019 - Impact of Switching Bug Trackers A Case Study on .pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/93RJUHH9/8919119.html},
  keywords = {bug report,bug reporting environment,bug tracker,bug tracking activity,bug tracking platform,Bugzilla,Computer bugs,data mining,econometrics,Econometrics,GitHub,interviews,Interviews,issue,medium-sized open source project,migration,open source,open source development,program debugging,public domain software,RDD,regression analysis,regression discontinuity design,Software,Software engineering,software projects,switch,Switches,Tools}
}

@inproceedings{zineddine_commercial_2017,
  title = {Commercial Software Companies and Open Source Community Reaction to Disclosed Vulnerabilities: {{Case}} of {{Windows Server}} 2008 and {{Linux}} Patching},
  shorttitle = {Commercial Software Companies and Open Source Community Reaction to Disclosed Vulnerabilities},
  booktitle = {2017 {{International Conference}} on {{Wireless Technologies}}, {{Embedded}} and {{Intelligent Systems}} ({{WITS}})},
  author = {Zineddine, Mhamed and Alaoui, Chakib and Saidou, Nourddin},
  date = {2017-04},
  pages = {1--4},
  doi = {10.1109/WITS.2017.7934677},
  abstract = {Open source and closed software security has been debated for decades, vulnerabilities reported for both types of software has been under scrutiny for years. In this study, a descriptive and correlation study for two selected systems is conducted using SPSS 19. The results show that the severity score average of Linux kernel vulnerabilities is lower by \%30 than the severity score average of vulnerabilities of windows server 2008, and the time required to patch published vulnerabilities is relatively faster for commercial than open source software. However, a positive correlation between Windows server 2008's variables reveal the irony that severity scores and patch delays are moving in the same direction. The contribution of this article is to shed light on the perception about the security divide between open source and closed software under study that is, although the commercial companies respond faster, however, not according to the severity of vulnerabilities disclosed.},
  eventtitle = {2017 {{International Conference}} on {{Wireless Technologies}}, {{Embedded}} and {{Intelligent Systems}} ({{WITS}})},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/84CD6ELS/Zineddine et al. - 2017 - Commercial software companies and open source comm.pdf;/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/S57YWDKX/7934677.html},
  keywords = {closed software,closed software security,commercial software companies,Correlation,Delays,disclosed vulnerabilities,Linux,Linux kernel vulnerabilities,Linux patching,Microsoft Windows (operating systems),open source community reaction,open source software,open source software security,operating system kernels,patch delays,public domain software,Security,security of data,Servers,severity scores,software selection,software update delay,SPSS 19,vulnerability severity,Windows Server 2008}
}

@article{zolotas_bridging_2020,
  title = {Bridging Proprietary Modelling and Open-Source Model Management Tools: The Case of {{PTC Integrity Modeller}} and {{Epsilon}}},
  shorttitle = {Bridging Proprietary Modelling and Open-Source Model Management Tools},
  author = {Zolotas, Athanasios and Hoyos Rodriguez, Horacio and Hutchesson, Stuart and Sanchez Pina, Beatriz and Grigg, Alan and Li, Mole and Kolovos, Dimitrios S. and Paige, Richard F.},
  date = {2020-01-01},
  journaltitle = {Software and Systems Modeling},
  shortjournal = {Softw Syst Model},
  volume = {19},
  pages = {17--38},
  issn = {1619-1374},
  doi = {10.1007/s10270-019-00732-1},
  url = {https://doi.org/10.1007/s10270-019-00732-1},
  urldate = {2020-04-21},
  abstract = {While the majority of research on Model-Based Software Engineering revolves around open-source modelling frameworks such as the Eclipse Modelling Framework, the use of commercial and closed-source modelling tools such as RSA, Rhapsody, MagicDraw and Enterprise Architect appears to be the norm in industry at present. This technical gap can prohibit industrial users from reaping the benefits of state-of-the-art research-based tools in their practice. In this paper, we discuss an attempt to bridge a proprietary UML modelling tool (PTC Integrity Modeller), which is used for model-based development of safety-critical systems at Rolls-Royce, with an open-source family of languages for automated model management (Epsilon). We present the architecture of our solution, the challenges we encountered in developing it, and a performance comparison against the tool’s built-in scripting interface. In addition, we use the bridge in a real-world industrial case study that involves the coordination with other bridges between proprietary tools and Epsilon.},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/DXDVPD4X/Zolotas et al. - 2020 - Bridging proprietary modelling and open-source mod.pdf},
  langid = {english},
  number = {1}
}

@article{zsolt_kritikus_2009,
  title = {A Kritikus Információs Infrastruktúrák Meghatározásának Módszertana},
  author = {Zsolt, Dr Haig and Béla, Hajnal and László, Dr Kovács and Lajos, Dr Muha and Nándor, Sik Zoltán},
  date = {2009},
  journaltitle = {ENO Avisory Kft},
  url = {http://www.enoadvisory.com/doc/A_kritikus_informacios_infrastrukturak_meghatarozasanak_modszertana_ENO_Advisory_vegleges.pdf},
  urldate = {2013-10-11},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/2JQGVG3H/06_Haig_Zsolt.pdf}
}

@article{zurbagiu_open_2009,
  title = {Open Source – {{Free Production}}},
  author = {Zurbagiu, Bogdan},
  date = {2009},
  journaltitle = {Open Source Science Journal},
  volume = {1},
  pages = {77--86},
  issn = {2066-740X},
  url = {http://www.opensourcejournal.ro/2009-Volume01/number01/paper005-fullpaper.pdf},
  file = {/home/monk/.zotero/zotero/o0zx3fdp.default/zotero/storage/N64SHATJ/OS_free_production.pdf},
  keywords = {life cycle,open source,production program,reuse,transparency},
  number = {1}
}


